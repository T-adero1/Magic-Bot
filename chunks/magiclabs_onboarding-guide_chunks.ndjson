{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block appears to be a configuration file for a linter or code formatter, specifically setting formatting rules such as:\n\n* Using single quotes\n* Indenting with 2 spaces per level.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": ".eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "The `.eslintrc.json` file configures ESLint settings, specifying:\n\n* Single quote usage\n* 2-space indentation levels"}
{"code": "# Intro to Magic - Onboarding Guide\n## Sections\n- [Dashboard Walkthrough](#dashboard-walkthrough)\n- [Enterprise Features](#enterprise-features)\n- [Documentation Index](#documentation-index)\n## Dashboard Walkthrough\n- [Team Management](#team-management)\n- [User Management](#user-management)\n- [Authentication Settings](#authentication-settings)\n- [Branding](#branding)\n- [Widget UI](#widget-ui)\n- [Security Settings](#security-settings)\n---\n### [TEAM MANAGEMENT](https://magic.link/docs/home/teams#managing-your-team)\n#### ADD MEMBERS TO TEAM\n- Invite collaborating team members\n- Team members have access to all features **EXCEPT**\n  - App deletion\n  - View billing history\n  - Update payment information\n  <img width=\"1111\" alt=\"teammanagement\" src=\"https://github.com/magiclabs/onboarding-guide/assets/84942969/d5d84959-95e3-4cf3-95e4-7a48a98abfb0\">\n---\n### USER MANAGEMENT\n#### END USERS\n- View user sign up date/time\n- Search for users by email address, phone number or sub ID (if own IdP)", "explanation": "**Summary:**\n\nThis block is an onboarding guide for Magic, a platform that provides enterprise features and tools. It serves as an introduction to the system's functionality and contains a dashboard walkthrough of various sections, including team management, user management, authentication settings, branding, widget UI, and security settings.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 1, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- [Disable MFA (if enabled and user activates)](#multi-factor-auth)\n- [Download CSV with info of all users (Pro Package Feature)](https://magic.link/docs/authentication/features/data-export)\n![users](https://github.com/magiclabs/onboarding-guide/assets/84942969/101abef3-ff88-436a-95d4-ec8cdcf9620b)\n#### [EMAIL LOGS](https://magic.link/docs/authentication/features/email-logs)\n- Event logs only available for email users\n- Track unique users and conversion rates\n- Search by email or IP address\n- Use as a customer support tool\n![emaillogs](https://github.com/magiclabs/onboarding-guide/assets/84942969/292effdc-ec30-409b-a3b0-9e111f6822c9)\n---\n### AUTHENTICATION SETTINGS\n#### PASSWORDLESS LOGINS\n- Email enabled by default\n- SMS and WebAuthn must be enabled from dashboard before client SDK methods will work\n![passwordlesslogins](https://github.com/magiclabs/onboarding-guide/assets/84942969/d764ebde-cc99-489f-a553-8ce94ea07f90)", "explanation": "Here is a concise summary:\n\n**This block provides access to various user management and authentication features:**\n\n* Disable MFA for users who request it\n* Download CSV with all user info (Pro Package Feature)\n* View email logs, including unique users, conversion rates, and search functionality\n* Configure passwordless logins, which are enabled by default for email but require additional setup for SMS and WebAuthn.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 2, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "#### [SOCIAL LOGINS](https://magic.link/docs/authentication/features/social-logins/oauth-implementation)\n- Social login requires configuration with each provider\n![sociallogins](https://github.com/magiclabs/onboarding-guide/assets/84942969/03033899-b4b6-432a-8fba-d3f28a53d784)\n#### [MULTI-FACTOR AUTH (Pro Package Feature)](https://magic.link/docs/authentication/features/mfa)\n- Enabling Mobile App MFA login gives user ability to set a 2nd factor on authentication through app on mobile device (i.e. Google Authenticator)\n- The setting is triggered when app calls on the `showSettings` method on the [Web SDK User Module](https://magic.link/docs/api/client-side-sdks/web#user-module)\n- End user's 2nd factor can be disabled by app owner in [USER section of dashboard](#user-management)\n![mfa](https://github.com/magiclabs/onboarding-guide/assets/84942969/82e545d9-0abc-4c8a-9960-b045deb46fa3)\n---\n### BRANDING\n#### MAGIC COMPONENTS\n- Add brand logo, select primary color and theme", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Social Logins**: Configurable feature that allows users to log in with social media accounts.\n\n**Multi-Factor Auth**: Feature (Pro Package only) that enables users to set an additional security factor through a mobile app, requiring a 2nd step for authentication.\n\n**Branding**: Customization options (components and theme) for adding a brand logo and selecting primary colors.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 3, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- Default email template (magic link and OTP)\n- Magic UI when calling auth methods\n- All Widget UI components\n- Device registration UI\n- User settings UI\n![branding](https://github.com/magiclabs/onboarding-guide/assets/84942969/218a160b-84b2-48d2-911d-0a335130c469)\n#### [CUSTOM EMAIL PROVIDER](https://magic.link/docs/authentication/customization/custom-smtp)\n- When configured properly, users will receive login emails from custom email domain when logging in via email magic link or OTP\n- Enabling this feature is a pre-requisite to [Custom Email Template](#custom-email-template)\n![customemailprovider](https://github.com/magiclabs/onboarding-guide/assets/84942969/4574b8c2-3807-41ef-85a6-3ed22cf33e44)\n---\n### WIDGET UI\nAvailable on 6 networks; Ethereum, Base, Polygon, Optimism, Arbitrum, and Flow\n#### WALLET VIEW\n- Default wallet view gives user token balance display and send/receive functionality\n- Enabling NFT UI gives user ability to view token images", "explanation": "Here is a concise summary:\n\nThis block enables customization of Magic's authentication methods and UI components, including:\n\n* Customizable email templates for login magic links and OTPs\n* Custom email providers with branded emails\n* Device registration and user settings UI\n* Widget UI components, available on 6 networks (Ethereum, Base, Polygon, Optimism, Arbitrum, and Flow), featuring wallet views and NFT image display.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 4, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- Enabling NFT Transfer gives user ability to send token\n- Enabling Fiat On-Ramps gives US users ability to purchase select token from providers\n- Fiat On-Ramps for non-USA users require KYB with provider\n#### SIGNATURE REQUEST UI\n- Enabling Signature Request UI displays Magic UI on each signing operation\n- UI displays transaction information for send transaction operations\n- UI displays message information for personal sign operations\n- When enabled, default behavior is for the Signature Request UI to render in same browser tab\n- Signature Request UI can be displayed in pop-up tab under Magic's domain by enabling [Sign Confirmation security setting](#sign-confirmation)\n![widgetui](https://github.com/magiclabs/onboarding-guide/assets/84942969/cbcff899-5c95-4a6b-b97a-f1a6a694f6a4)\n---\n### SECURITY SETTINGS\n#### ALLOWED ORIGINS & REDIRECTS", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Block Summary**\n\nThis block enables features for Magic users, including:\n\n* Token transfer and purchase (NFT Transfer and Fiat On-Ramps)\n* Signature Request UI with customizable display options\n* Security settings for managing allowed origins and redirects.\n\nNote: The text appears to be documentation or a guide rather than code.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 5, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- [Domain allowlist](https://magic.link/docs/authentication/security/allowlists/domain-allowlist) restricts which domains can use your Magic app publishable API key\n- Domain allowlist is enabled by default and localhost cannot be removed\n- Programmatic configuration of domain allowlist by API is possible\n- [Allow redirect based auth flows for OAuth and/or email magic link with redirect](https://magic.link/docs/authentication/security/allowlists/redirect-allowlist)\n- [Allow mobile apps to use Magic app publishable API key based on bundle ID (iOS) and/or package name (Android)](https://magic.link/docs/authentication/security/allowlists/mobile-access-allow-listing)\n#### [CONTENT SECURITY POLICY](https://magic.link/docs/wallets/security/content-security-policy)\n- Control which URLs are allowed by the browser's CSP when needing to load images or communicate with certain RPC URLs\n#### [DEVICE REGISTRATION](https://magic.link/docs/authentication/security/device-registration)", "explanation": "Here is a summary of the purpose and functionality:\n\nThis block enables security features for Magic app publishable API key, including:\n\n* Domain allowlist: restricts domains that can use the API key\n* Redirect-based auth flows: allows OAuth and email magic link with redirect\n* Mobile access: allows mobile apps to use the API key based on bundle ID (iOS) or package name (Android)\n* Content Security Policy: controls which URLs are allowed by the browser's CSP\n* Device Registration: secures device registration", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 6, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- This security feature is disabled by default\n- Enabling Device Registration will trigger additional security step (with Magic's UI/UX) during auth if browser/device is different from previous login\n- While enabled, this feature will never trigger on a user's initial sign up\n  ![allowlistcspndr](https://github.com/magiclabs/onboarding-guide/assets/84942969/0bb634cd-4312-4dfd-b553-1ab30db1d363)\n#### [SIGN CONFIRMATION](https://magic.link/docs/wallets/security/sign-confirmation)\n- Only relevant if [Signature Request UI is enabled in Widget UI section](#signature-request-ui)\n- Enabling Sign Confirmation will display transaction information or sign message in a pop-up\n#### [MAGIC LINK SECURITY CHECK](https://magic.link/docs/authentication/security/magic-link-security-check)\n- Only relevant if using [email magic link method and **NOT** passing in a redirect URI](https://magic.link/docs/api/client-side-sdks/web#loginwithmagiclink)", "explanation": "Here is a summary of the block:\n\nThis block discusses three security features: Device Registration, Sign Confirmation, and Magic Link Security Check. These features enhance user authentication and can be enabled or disabled as needed.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 7, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- Enabling this while user logs in via email magic link method will present the user with a 3-digit OTP which needs to be submitted after clicking the emailed magic link\n![signconfmagiclinkseccheck](https://github.com/magiclabs/onboarding-guide/assets/84942969/24b496ee-6019-45ff-bc60-8bd973a66d13)\n#### [SESSION MANAGEMENT](https://magic.link/docs/authentication/security/session-management)\n- Default session length is 7 days and persists session via third-party cookies\n- Session length can be increased up to 90 days when Auto Refresh is enabled (Pro Package Feature)\n- Enabling Auto Refresh persists session in first-party context through DPoP mechanism (Pro Package Feature)\n#### [ACCESS CONTROL](https://magic.link/docs/authentication/security/access-control)\n- Enabling Allow List is very restrictive, it **ONLY** allows those in that list to login via email auth methods or OAuth logins that have that email returned in scope", "explanation": "Here is a concise summary:\n\nThis block enables additional security features for Magic Link authentication:\n\n* Requires users to enter a 3-digit OTP after clicking an emailed link\n* Manages session length (default: 7 days, max: 90 days with Auto Refresh)\n* Controls access via Allow List feature, restricting logins to only listed email addresses.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 8, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- Enabling Block List blocks users in that list from login via email auth methods or Oauth logins that have that email returned in scope\n- Wildcarding is available on both lists\n- Programmatic add and update to list by API is possible\n![sessionmanagementaccesscontrol](https://github.com/magiclabs/onboarding-guide/assets/84942969/0ee91996-d2b7-4915-8bc5-e7d33a177120)\n---\n## Enterprise Features\nThe following features require an enterprise agreement and special enablement\n- [Account Recovery](#account-recovery)\n- [Custom Multi-Factor Authentication](#custom-multi-factor-authentication)\n- [Generalized DKMS](#generalized-dkms)\n- [Custom Email Template](#custom-email-template)\n- [Account Linking](#account-linking)\n- [Gas Subsidy](#gas-subsidy)\n- [NFT Minting and Delivery](#nft-minting-and-delivery)\n- [NFT Checkout](#nft-checkout)\n### [ACCOUNT RECOVERY](https://magic.link/docs/authentication/enterprise-features/account-recovery)", "explanation": "**Block List Block:**\n\nPurpose: Restrict login access for users on a block list using email authentication or OAuth logins.\n\nFunctionality: Blocks users with matching emails, allows wildcarding, and can be programmatically updated via API.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 9, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- Only available for users who have logged in via email methods (`loginWithMagicLink` and `loginWithEmailOTP`)\n- User can add phone number as recovery factor\n### [CUSTOM MULTI-FACTOR AUTHENTICATION](https://magic.link/docs/authentication/enterprise-features/advanced-mfa)\n- Integrate custom MFA provider to verify sessions\n- When enabled, all logins must have issued JWT be set in the custom authorization header via Magic SDK method\n### [GENERALIZED DKMS](https://magic.link/docs/wallets/enterprise-features/generalized-dkms)\n- Leverage Magic's DKMS and allow user to encrypt any data with their PK\n- Encrypted data is not stored by Magic\n### [CUSTOM EMAIL TEMPLATE](https://magic.link/docs/authentication/enterprise-features/custom-email-template)\n- [Custom Email Provider](#custom-email-provider) needs to be configured to use this feature\n- Create one or multiple custom email templates for a single Magic app", "explanation": "Here is a concise summary:\n\nThis block provides three features:\n\n1. **Recovery factor**: Allows users to add a phone number as a recovery factor.\n2. **Custom MFA**: Integrates a custom multi-factor authentication provider to verify sessions.\n3. **Generalized DKMS**: Leverages Magic's DKMS for user-specific encryption and stores no encrypted data.\n4. **Custom email template**: Creates customizable email templates for a single Magic app, requiring configuration of a custom email provider.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 10, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "![customemailtemplate](https://github.com/magiclabs/onboarding-guide/assets/84942969/5fc94f6b-0497-4810-b1bb-2163b4a10151)\n### [ACCOUNT LINKING](https://magic.link/docs/authentication/enterprise-features/account-linking)\n- Only available to Magic wallets and linking between users in the same Magic app\n- Account linking via REST API sets a primary and secondary wallet and requires a user to login to both accounts\n### [GAS SUBSIDY](https://magic.link/docs/wallets/enterprise-features/gas-subsidy)\n- Only available on Polygon, smart contract must inherit ERC-2771 context\n- Register smart contract and manage usage in Magic dashboard\n- User must initiate transaction via Magic SDK gasless transaction method\n![gassubsidy](https://github.com/magiclabs/onboarding-guide/assets/84942969/2247e817-95fb-405b-8760-1cb2c0c03fce)\n### [NFT MINTING AND DELIVERY](https://magic.link/docs/nfts/features/minting-and-delivery)", "explanation": "Here is a concise summary:\n\n**Purpose:** Provide features for Magic wallets, including account linking, gas subsidy, and NFT minting and delivery.\n\n**Functionality:**\n\n* Account Linking: connects users' accounts in the same Magic app via REST API.\n* Gas Subsidy: subsidizes gas fees on Polygon for smart contracts that inherit ERC-2771 context.\n* NFT Minting and Delivery: enables user-initiated, gasless transactions for minting and delivering NFTs.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 11, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- Only available on Polygon, smart contract must be ERC-721 or ERC-1155 and incorporate a minting function\n- Register smart contract with Customer Success\n- Call REST API endpoint to initiate mint and deliver (airdrop)\n### [NFT CHECKOUT](https://magic.link/docs/nfts/features/checkout)\n- Requires PayPal merchant account\n- Enables fiat-based NFT primary sales purchases via Magic SDK NFT module method\n---\n## Documentation Index\n### CLIENT-SIDE\n#### WEB SDK\n- [Getting started - import, construct and initialize magic](https://magic.link/docs/api/client-side-sdks/web#getting-started)\n- Authentication Methods\n  - [Auth Module - email and phone authentication methods](https://magic.link/docs/api/client-side-sdks/web#auth-module)\n  - [OpenID Module - bring your own identity provider](https://magic.link/docs/api/client-side-sdks/web#open-id-module)\n  - [OAuth Module - social provider login methods](https://magic.link/docs/api/client-side-sdks/web#o-auth-module)", "explanation": "Here is a concise summary:\n\n**NFT Checkout Block**\n\nPurpose: Facilitate fiat-based NFT primary sales purchases via PayPal on Polygon.\n\nFunctionality:\n\n1. Smart contract integration (ERC-721 or ERC-1155 with minting function)\n2. REST API call to initiate mint and deliver (airdrop)\n3. Requires PayPal merchant account\n\nNote: This block is only available on Polygon.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 12, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "  - [WebAuthn Module - biometric login methods](https://magic.link/docs/api/client-side-sdks/web#web-authn-module)\n- [Wallet Module - widget UI methods](https://magic.link/docs/api/client-side-sdks/web#wallet-module)\n- [NFT Module - NFT checkout and transfer methods](https://magic.link/docs/api/client-side-sdks/web#nft-module)\n- [User Module - generate did token, get user metadata, check login status, display user settings and logout](https://magic.link/docs/api/client-side-sdks/web#user-module)\n- [Response and Error Handling](https://magic.link/docs/api/client-side-sdks/web#response-and-error-handling)\n#### REACT NATIVE SDK (BARE & EXPO)\n- [Getting started - import, construct and initialize magic](https://magic.link/docs/api/client-side-sdks/react-native#getting-started)\n- [Relayer - facilitates events between the Magic iframe context and the RN app](https://magic.link/docs/api/client-side-sdks/react-native#relayer)\n- Authentication Methods", "explanation": "Here is a concise summary:\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications (React Native):\n\n* Modules: WebAuthn, Wallet, NFT, User, providing biometric login, widget UI, NFT checkout, user management, and token generation.\n* Error handling and response processing.\n* React Native SDK (Bare & Expo): getting started, importing Magic, initializing, and using the Relayer to facilitate event communication between Magic iframe and RN app.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 13, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "  - [Auth Module - email and phone authentication methods](https://magic.link/docs/api/client-side-sdks/react-native#auth-module)\n  - [OpenID Module - bring your own identity provider](https://magic.link/docs/api/client-side-sdks/react-native#open-id-module)\n  - [OAuth Module - social provider login methods](https://magic.link/docs/api/client-side-sdks/react-native#o-auth-module)\n- [Wallet Module - widget UI methods](https://magic.link/docs/api/client-side-sdks/react-native#wallet-module)\n- [NFT Module - NFT checkout and transfer methods](https://magic.link/docs/api/client-side-sdks/react-native#nft-module)\n- [User Module - generate did token, get user metadata, check login status, display user settings and logout](https://magic.link/docs/api/client-side-sdks/react-native#user-module)\n- [Response and Error Handling](https://magic.link/docs/api/client-side-sdks/react-native#response-and-error-handling)\n#### FLUTTER SDK", "explanation": "Here is a concise summary of the purpose and functionality of each block:\n\n* **Auth Module**: Handles email, phone, OpenID, and OAuth authentication methods.\n* **OpenID Module**: Allows users to bring their own identity provider (e.g. Google, Facebook).\n* **OAuth Module**: Provides social provider login methods.\n* **Wallet Module**: Offers widget UI methods for wallet-related functionality.\n* **NFT Module**: Enables NFT checkout and transfer methods.\n* **User Module**: Manages user authentication, metadata, login status, settings, and logout.\n* **Response and Error Handling**: Handles responses and errors from Magic API calls.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 14, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- [Getting started - import, construct and initialize magic](https://magic.link/docs/api/client-side-sdks/flutter#getting-started)\n- Authentication Methods\n  - [Auth Module - email and phone authentication methods](https://magic.link/docs/api/client-side-sdks/flutter#auth-module)\n  - [OpenID Module - bring your own identity provider](https://magic.link/docs/api/client-side-sdks/flutter#open-id-module)\n  - [OAuth Module - social provider login methods](https://magic.link/docs/api/client-side-sdks/flutter#o-auth-module)\n- [User Module - generate did token, get user metadata, check login status, display user settings and logout](https://magic.link/docs/api/client-side-sdks/flutter#user-module)\n#### ANDROID SDK\n- [Getting started - import, construct and initialize magic](https://magic.link/docs/api/client-side-sdks/android#getting-started)\n- Authentication Methods\n  - [Auth Module - email and phone authentication methods](https://magic.link/docs/api/client-side-sdks/android#auth-module)", "explanation": "This block appears to be documentation for the Magic SDK, a platform that enables user authentication and management.\n\n**Purpose:** Provide an overview of the Magic SDK's functionality and features.\n\n**Functionality:**\n\n* Authentication methods (email, phone, OpenID, OAuth)\n* User module for generating DID tokens, checking login status, etc.\n* SDKs available for both Flutter and Android platforms.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 15, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "  - [OpenID Module - bring your own identity provider](https://magic.link/docs/api/client-side-sdks/android#open-id-module)\n- [Wallet Module - widget UI methods](https://magic.link/docs/api/client-side-sdks/android#wallet-module)\n- [User Module - generate did token, get user metadata, check login status, display user settings and logout](https://magic.link/docs/api/client-side-sdks/android#user-module)\n#### iOS SDK\n- [Getting started - import, construct and initialize magic](https://magic.link/docs/api/client-side-sdks/ios#getting-started)\n- Authentication Methods\n  - [Auth Module - email and phone authentication methods](https://magic.link/docs/api/client-side-sdks/ios#auth-module)\n  - [OpenID Module - bring your own identity provider](https://magic.link/docs/api/client-side-sdks/ios#open-id-module)\n- [Wallet Module - widget UI methods](https://magic.link/docs/api/client-side-sdks/ios#wallet-module)", "explanation": "Here is a concise summary:\n\n**Magic Link SDK**\n\nThe Magic Link SDK provides several modules for authentication, wallet management, and user interaction.\n\n* **Authentication**: Email and phone authentication methods (Auth Module), OpenID module for bring-your-own identity provider.\n* **Wallet Management**: Wallet Module with widget UI methods.\n* **User Interaction**: User Module with functions to generate DID tokens, get user metadata, check login status, display settings, and logout.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 16, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- [User Module - generate did token, get user metadata, check login status, display user settings and logout](https://magic.link/docs/api/client-side-sdks/ios#user-module)\n- [Error Handling](https://magic.link/docs/api/client-side-sdks/ios#error-handling)\n#### UNITY SDK\n- [Getting started - import, construct and initialize magic](https://magic.link/docs/api/client-side-sdks/unity#getting-started)\n- [Auth Module - email and phone authentication methods](https://magic.link/docs/api/client-side-sdks/unity#auth-module)\n- [User Module - generate did token, get user metadata, check login status, display user settings and logout](https://magic.link/docs/api/client-side-sdks/unity#user-module)\n#### BRING YOUR OWN IDENTITY PROVIDER\n- [How to create and update your auth config](https://magic.link/docs/authentication/enterprise-features/idp)\n### BLOCKCHAINS\n- [Blockchain Integration](https://magic.link/docs/blockchains/overview)\n### SERVER-SIDE", "explanation": "Here is a concise summary:\n\nThis block contains documentation links for Magic Link's client-side SDKs, including:\n\n* Unity SDK: getting started, auth module, user module\n* iOS SDK: user module, error handling\n* General information on Bring Your Own Identity Provider and Blockchain Integration.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 17, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "- [NodeJS SDK](https://magic.link/docs/api/server-side-sdks/node)\n- [Python SDK](https://magic.link/docs/api/server-side-sdks/python)\n- [Go SDK](https://magic.link/docs/api/server-side-sdks/go)\n- [Ruby SDK](https://magic.link/docs/api/server-side-sdks/ruby)\n- [PHP SDK](https://magic.link/docs/api/server-side-sdks/php)\n- [Laravel SDK](https://magic.link/docs/api/server-side-sdks/laravel)\n", "explanation": "**Summary:** \n\nThis block appears to be a list of links to various programming language-specific Software Development Kits (SDKs) for the Magic.link API, allowing developers to integrate Magic.link's features into their server-side applications.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "README.md", "chunk_number": 18, "total_chunks": 18}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Platform Overview**\n\nThis document provides an introduction to Magic, a platform that offers enterprise features and tools for user authentication and management.\n\n**Key Features**\n\n* User management: team management, user management, authentication settings, branding\n* Social logins: configurable feature allowing users to log in with social media accounts\n* Multi-Factor Auth: enables users to set an additional security factor through a mobile app (Pro Package only)\n* Branded customization: options for adding a brand logo and selecting primary colors\n* Token transfer and purchase: features NFT transfer, fiat on-ramps, signature request UI\n* Security settings: manage allowed origins, redirects, domain allowlist, content security policy\n\n**Magic Link API Documentation**\n\nThis documentation outlines the purpose and functionality of various modules for integrating Magic Link into web and mobile applications.\n\n**Software Development Kits (SDKs)**\n\nLinks to client-side SDKs for Magic Link's features, including Unity, iOS, and general information on Bring Your Own Identity Provider and Blockchain Integration."}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "This block exports a configuration for CSS preprocessors TailwindCSS and Autoprefixer, enabling them to be used in a project.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and to-the-point summary:\n\n**postcss.config.js**: Configures TailwindCSS and Autoprefixer for use in a project."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "This is an SVG icon, which is a graphical representation of a \"Close\" button. Its purpose is to allow users to dismiss or exit a window, dialog, or other interface element. The icon consists of two shapes: a circle with an indentation, resembling a stylized X mark.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n`public/info.svg`: A close button SVG icon featuring a stylized X mark consisting of a circular shape with an indentation."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block appears to be an SVG (Scalable Vector Graphics) code snippet, which is likely used in web development or digital design.\n\nIn a concise manner, this block's purpose is to display an icon, probably a visual representation of something. Its functionality seems to be solely graphical, without any interactive elements or text content.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/link.svg':\n\nThe file \"link.svg\" is a graphical icon represented as an SVG path element with a blue color fill (#6851FF), designed to be displayed in digital contexts without interactive elements or text content."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block is a SVG path element that draws a shape, likely an icon or graphic, with a blue color fill (#6851FF). Its purpose is to display this visual representation in a digital context.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/link.svg':\n\nThe file \"link.svg\" is a graphical icon represented as an SVG path element with a blue color fill (#6851FF), designed to be displayed in digital contexts without interactive elements or text content."}
{"code": "</svg>\n", "explanation": "This block contains an SVG (Scalable Vector Graphics) image, which is a vector-based graphics format used for web design.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/link.svg':\n\nThe file \"link.svg\" is a graphical icon represented as an SVG path element with a blue color fill (#6851FF), designed to be displayed in digital contexts without interactive elements or text content."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block appears to be an SVG (Scalable Vector Graphics) element, specifically a icon or image. It has a defined width, height, and viewbox, indicating it is intended for graphical display purposes.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/link_white.svg':\n\nThe \"link_white.svg\" file is a Scalable Vector Graphics (SVG) icon that displays a complex white symbol, designed for graphical display purposes."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block is a SVG path element that defines a shape, likely an icon or symbol, with a complex geometry and multiple paths. It uses various commands (e.g., \"M\", \"C\", \"H\") to draw the shape's outline, which can be used as a visual representation in a graphical context.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/link_white.svg':\n\nThe \"link_white.svg\" file is a Scalable Vector Graphics (SVG) icon that displays a complex white symbol, designed for graphical display purposes."}
{"code": "</svg>", "explanation": "This is an SVG (Scalable Vector Graphics) file, which contains graphical data in XML format. Its purpose is likely to display a visual image or icon on a webpage or other digital platform.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/link_white.svg':\n\nThe \"link_white.svg\" file is a Scalable Vector Graphics (SVG) icon that displays a complex white symbol, designed for graphical display purposes."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "This block is an SVG (Scalable Vector Graphics) icon, containing two interlocking circles, used as a logo or favicon.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/logo.svg':\n\nThe \"logo.svg\" file contains a simple, scalable vector graphic logo consisting of two interlocking white circles."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This is an SVG (Scalable Vector Graphics) code block that defines a single white shape, likely a geometric figure, within a coordinate system.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'public/logo.svg':\n\nThe \"logo.svg\" file contains a simple, scalable vector graphic logo consisting of two interlocking white circles."}
{"code": "import React from 'react';\nimport WalletMethods from './cards/WalletMethodsCard';\nimport SendTransaction from './cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from './cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A React functional component that renders a dashboard with various cards and links.\n\n**Functionality:** Displays user information, send transaction options, wallet methods, and development links in a layout with a header and spacers for spacing.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/components/magic/Dashboard.tsx':\n\n**Summary:**\n\nThe `Dashboard` component is a React functional component that displays user-centric information and interactive features, including send transaction options, wallet methods, and development links, within a structured layout."}
{"code": "import classNames from 'classnames';\nimport Link from 'next/link';\n\nconst DevLinks = ({ primary = false, footer = false }: { primary?: boolean; footer?: boolean }) => (\n  <div className={`links ${footer ? 'footer-links' : ''}`}>\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://magic.link/docs/home/welcome\" target=\"_blank\" rel=\"noreferrer\">\n        Dev Docs\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://dashboard.magic.link/signup\" target=\"_blank\" rel=\"noreferrer\">\n        Dashboard\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://discord.gg/magiclabs\" target=\"_blank\" rel=\"noreferrer\">\n        Discord\n      </a>\n    </div>\n  </div>\n);\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Display a customizable set of links (Dev Docs, Dashboard, Discord) in a UI component.\n\n**Functionality:** Dynamically styles links based on `primary` and `footer` props, separating them with dividers.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/DevLinks.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/DevLinks.tsx':\n\n**Summary:** A customizable UI component displaying links (e.g., Dev Docs, Dashboard) with dynamic styling based on `primary` and `footer` props, exported as \"DevLinks\"."}
{"code": "export default DevLinks;\n", "explanation": "Exports a component named \"DevLinks\" by default.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/DevLinks.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/DevLinks.tsx':\n\n**Summary:** A customizable UI component displaying links (e.g., Dev Docs, Dashboard) with dynamic styling based on `primary` and `footer` props, exported as \"DevLinks\"."}
{"code": "import Image from 'next/image';\nimport Logo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <div className=\"flex flex-col gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "**Summary**\n\nThis is a React functional component named \"Header\". It renders a header section with:\n\n* A logo image\n* A title (\"Magic\") in bold font\n* A subtitle (\"Demo\") in normal font\n\nThe component also includes an instance of the \"DevLinks\" component, which is likely a navigation or external links menu.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n**src/components/magic/Header.tsx**\n\nA React header component that displays a logo, title (\"Magic\"), subtitle (\"Demo\"), and includes a \"DevLinks\" component for navigation or external links."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from './Header'\n\nimport EmailOTP from './auth/EmailOTP';\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-1 grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      \n      \n        <EmailOTP token={token} setToken={setToken} />      \n  \t\t\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "**Summary:**\n\nThis block defines a `Login` component that renders a login page with a header and an email OTP (One-Time Password) form, accepting a token and updating it via the `setToken` function.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/magic/Login.tsx':\n\n**Summary:** \nA `Login` component rendering an email OTP form that accepts a token and updates it using `setToken`."}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Redirects users to the Magic Dashboard signup page.\n\n**Functionality:** A React component that, when clicked, opens a new browser tab with the URL `https://dashboard.magic.link/signup`. The component displays a logo, title (\"Magic\"), and subtitle (\"Demo\") in a card-like format.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/components/magic/MagicDashboardRedirect.tsx':\n\nThis React component redirects users to the Magic Dashboard signup page when clicked. When not redirected, it displays instructions on how to set up the NEXT_PUBLIC_MAGIC_API_KEY environment variable, accompanied by a button to obtain API keys."}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** Inform user to set up NEXT_PUBLIC_MAGIC_API_KEY environment variable.\n**Functionality:** Display instruction text, accompanied by a button to get API keys.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/components/magic/MagicDashboardRedirect.tsx':\n\nThis React component redirects users to the Magic Dashboard signup page when clicked. When not redirected, it displays instructions on how to set up the NEXT_PUBLIC_MAGIC_API_KEY environment variable, accompanied by a button to obtain API keys."}
{"code": "import { getChainId, getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\nconst { Web3 } = require('web3');\n\nexport type Magic = MagicBase<OAuthExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n  web3: typeof Web3 | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n  web3: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n  const [web3, setWeb3] = useState<typeof Web3 | null>(null);\n\n  useEffect(() => {\n    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        network: {\n          rpcUrl: getNetworkUrl(),\n          chainId: getChainId(),\n        },", "explanation": "**Purpose:** Provides a context for authentication and web3 functionality using Magic and Web3 libraries.\n\n**Functionality:** \n\n* Creates a Magic instance with an API key and network configuration (chain ID and RPC URL).\n* Provides a Web3 instance.\n* Exposes these instances through a React Context, allowing components to access them using the `useMagic` hook.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/MagicProvider.tsx':\n\nProvides a React Context for authentication and web3 functionality using Magic API, exposing Magic and Web3 instances to child components via the `useMagic` hook."}
{"code": "        extensions: [new OAuthExtension()],\n      });\n\n      setMagic(magic);\n      setWeb3(new Web3((magic as any).rpcProvider));\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n      web3,\n    };\n  }, [magic, web3]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;\n", "explanation": "Here is a summary of the block:\n\n**Purpose:** Provides Web3 functionality using Magic API.\n\n**Functionality:** Creates a provider that wraps Magic's RPC provider with a Web3 instance, making it available to child components through a context.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/MagicProvider.tsx':\n\nProvides a React Context for authentication and web3 functionality using Magic API, exposing Magic and Web3 instances to child components via the `useMagic` hook."}
{"code": "import { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveUserInfo } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Log in with Email OTP (One-Time Password) using Magic SDK.\n\n**Functionality:** Validates user input, checks for valid email format, initiates login with email OTP via Magic SDK, displays a progress spinner during login, and saves user info upon successful login.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise holistic summary:\n\n**Purpose:** Handle Magic login flow via Email OTP.\n\n**Functionality:** Validates user input, initiates login with Magic SDK, saves user info upon success, displays error messages and progress spinner during login."}
{"code": "        const metadata = await magic?.user.getMetadata();\n\n        if (!token || !metadata?.publicAddress) {\n          throw new Error('Magic login failed');\n        }\n\n        setToken(token);\n        saveUserInfo(token, 'EMAIL', metadata?.publicAddress);\n        setEmail('');\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handle Magic login flow, verify user credentials, and update local state.\n\n**Functionality:**\n\n* Retrieves user metadata using Magic API\n* Verifies login success by checking for token and public address\n* Updates local state with new token and user info\n* Handles login errors, displays error messages to user, and resets login in-progress flag.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise holistic summary:\n\n**Purpose:** Handle Magic login flow via Email OTP.\n\n**Functionality:** Validates user input, initiates login with Magic SDK, saves user info upon success, displays error messages and progress spinner during login."}
{"code": "      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);\n            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "**Summary**\n\nThis block is a login form that allows users to input their email address and submit it for authentication using an OTP (One-Time Password) method. It displays error messages if the input email is invalid and shows a progress indicator while logging in.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise holistic summary:\n\n**Purpose:** Handle Magic login flow via Email OTP.\n\n**Functionality:** Validates user input, initiates login with Magic SDK, saves user info upon success, displays error messages and progress spinner during login."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { useMagic } from '../MagicProvider';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { getFaucetUrl, getNetworkToken } from '@/utils/network';\nimport showToast from '@/utils/showToast';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\n\nconst SendTransaction = () => {\n  const { web3 } = useMagic();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);\n  const [hash, setHash] = useState('');", "explanation": "**Block Purpose:**\n\nA React component for sending transactions.\n\n**Functionality:**\n\nHandles user input for transaction recipient (address) and amount, displays a form with input fields, buttons, and error messages, and enables/disables send button based on valid input.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\n**SendTransactionCard**\n\nA React component for sending cryptocurrency transactions, handling user input and validation for recipient address and amount using Web3 library. Displays a form with input fields, buttons, and error messages to facilitate secure transaction execution."}
{"code": "  const [toAddressError, setToAddressError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const sendTransaction = useCallback(() => {\n    if (!web3?.utils.isAddress(toAddress)) {\n      return setToAddressError(true);\n    }\n    if (isNaN(Number(amount))) {\n      return setAmountError(true);\n    }\n    setDisabled(true);\n    const txnParams = {\n      from: publicAddress,\n      to: toAddress,\n      value: web3.utils.toWei(amount, 'ether'),\n      gas: 21000,\n    };\n    web3.eth\n      .sendTransaction(txnParams as any)\n      .on('transactionHash', (txHash) => {\n        setHash(txHash);\n        console.log('Transaction hash:', txHash);\n      })\n      .then((receipt) => {\n        showToast({\n          message: 'Transaction Successful',\n          type: 'success',\n        });\n        setToAddress('');", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** Handle sending a transaction with user input (to address and amount) using Web3.\n\n**Functionality:** \n\n* Validates user input: checks if to address and amount are valid.\n* Sends transaction when both inputs are valid, displaying success message upon completion.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\n**SendTransactionCard**\n\nA React component for sending cryptocurrency transactions, handling user input and validation for recipient address and amount using Web3 library. Displays a form with input fields, buttons, and error messages to facilitate secure transaction execution."}
{"code": "        setAmount('');\n        console.log('Transaction receipt:', receipt);\n      })\n      .catch((error) => {\n        console.error(error);\n        setDisabled(false);\n      });\n  }, [web3, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      {getFaucetUrl() && (\n        <div>\n          <a href={getFaucetUrl()} target=\"_blank\" rel=\"noreferrer\">\n            <FormButton onClick={() => null} disabled={false}>\n              Get Test {getNetworkToken()}\n              <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n            </FormButton>\n          </a>\n          <Divider />\n        </div>\n      )}\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput\n        value={amount}\n        onChange={(e: any) => setAmount(e.target.value)}", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Send cryptocurrency transaction using Web3 library.\n\n**Functionality:** \n\n* Handles send transaction button click\n* Logs transaction receipt or error message\n* Updates disabled state based on success/failure\n* Displays receiving address input field and error handling", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\n**SendTransactionCard**\n\nA React component for sending cryptocurrency transactions, handling user input and validation for recipient address and amount using Web3 library. Displays a form with input fields, buttons, and error messages to facilitate secure transaction execution."}
{"code": "        placeholder={`Amount (${getNetworkToken()})`}\n      />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        Send Transaction\n      </FormButton>\n\n      {hash ? (\n        <>\n          <Spacer size={20} />\n          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "**Summary**\n\nThis block renders a form for sending a transaction, displaying:\n\n* A placeholder with the network token (e.g., \"Amount (ETH)\")\n* An error message if the amount is invalid\n* A submit button to send the transaction\n* Transaction history once the transaction has been sent and received a hash.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\n**SendTransactionCard**\n\nA React component for sending cryptocurrency transactions, handling user input and validation for recipient address and amount using Web3 library. Displays a form with input fields, buttons, and error messages to facilitate secure transaction execution."}
{"code": "import { useCallback, useEffect, useMemo, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport { logout } from '@/utils/common';\nimport { useMagic } from '../MagicProvider';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getNetworkName, getNetworkToken } from '@/utils/network';\n\nconst UserInfo = ({ token, setToken }: LoginProps) => {\n  const { magic, web3 } = useMagic();\n\n  const [balance, setBalance] = useState('...');\n  const [copied, setCopied] = useState('Copy');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const [publicAddress] = useState(localStorage.getItem('user'));\n\n  const getBalance = useCallback(async () => {\n    if (publicAddress && web3) {\n      const balance = await web3.eth.getBalance(publicAddress);\n      if (balance == BigInt(0)) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Display user information, including wallet balance, after login.\n\n**Functionality:**\n\n* Retrieves user public address from local storage.\n* Gets current network name and token.\n* Updates balance and refresh status state variables.\n* Displays wallet balance and allows copying it to clipboard.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/magic/cards/UserInfoCard.tsx':\n\nThis component displays user information, including wallet balance, after login, providing a connection status indicator and wallet management features such as balance updates, refresh, disconnect, and copy-to-clipboard functionality."}
{"code": "        setBalance('0');\n      } else {\n        setBalance(web3.utils.fromWei(balance, 'ether'));\n      }\n      console.log('BALANCE: ', balance);\n    }\n  }, [web3, publicAddress]);\n\n  const refresh = useCallback(async () => {\n    setIsRefreshing(true);\n    await getBalance();\n    setTimeout(() => {\n      setIsRefreshing(false);\n    }, 500);\n  }, [getBalance]);\n\n  useEffect(() => {\n    if (web3) {\n      refresh();\n    }\n  }, [web3, refresh]);\n\n  useEffect(() => {\n    setBalance('...');\n  }, [magic]);\n\n  const disconnect = useCallback(async () => {\n    if (magic) {\n      await logout(setToken, magic);\n    }\n  }, [magic, setToken]);\n\n  const copy = useCallback(() => {\n    if (publicAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(publicAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, publicAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"Wallet\">Wallet</CardHeader>", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** Manage wallet functionality (balance, refresh, disconnect) with Web3 integration.\n\n**Functionality:**\n\n* Updates balance display based on user's Ethereum account balance\n* Allows users to refresh their balance\n* Enables users to disconnect from the wallet and log out\n* Provides a copy-to-clipboard feature for the public address", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/magic/cards/UserInfoCard.tsx':\n\nThis component displays user information, including wallet balance, after login, providing a connection status indicator and wallet management features such as balance updates, refresh, disconnect, and copy-to-clipboard functionality."}
{"code": "      <CardLabel leftHeader=\"Status\" rightAction={<div onClick={disconnect}>Disconnect</div>} isDisconnect />\n      <div className=\"flex-row\">\n        <div className=\"green-dot\" />\n        <div className=\"connected\">Connected to {getNetworkName()}</div>\n      </div>\n      <Divider />\n      <CardLabel leftHeader=\"Address\" rightAction={!publicAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>} />\n      <div className=\"code\">{publicAddress?.length == 0 ? 'Fetching address..' : publicAddress}</div>\n      <Divider />\n      <CardLabel\n        leftHeader=\"Balance\"\n        rightAction={\n          isRefreshing ? (\n            <div className=\"loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            <div onClick={refresh}>Refresh</div>\n          )\n        }\n      />\n      <div className=\"code\">\n        {balance.substring(0, 7)} {getNetworkToken()}\n      </div>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Displays user's connection status and information.\n\n**Functionality:** Shows connection status (Connected/Disconnected), displays public address, balance, and network token, with optional refresh and copy actions.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/magic/cards/UserInfoCard.tsx':\n\nThis component displays user information, including wallet balance, after login, providing a connection status indicator and wallet management features such as balance updates, refresh, disconnect, and copy-to-clipboard functionality."}
{"code": "import React, { useState } from 'react';\nimport Disconnect from '../wallet-methods/Disconnect';\nimport GetIdToken from '../wallet-methods/GetIdToken';\nimport GetMetadata from '../wallet-methods/GetMetadata';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { LoginMethod } from '@/utils/common';\n\nimport UpdateEmail from '../wallet-methods/UpdateEmail'\n\nconst WalletMethods = ({ token, setToken }: LoginProps) => {\n  const [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n    localStorage.getItem('loginMethod') as LoginMethod,\n  );\n  return (\n    <Card>\n      <CardHeader id=\"methods\">User Methods</CardHeader>\n\t  \n\t  \t{loginMethod && loginMethod == 'EMAIL' && (\n\t\t\t<>\n\t\t\t\t<UpdateEmail />\n\t\t\t\t<Divider />\n\t\t\t</>\n\t\t)}\t  \n      <GetIdToken />\n      <Divider />\n      <GetMetadata />\n      <Divider />\n      <Disconnect token={token} setToken={setToken} />\n    </Card>\n  );\n};\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** A React component that displays wallet methods, allowing users to interact with their account.\n\n**Functionality:** The component renders a card with various wallet-related functions, including updating email, getting ID token, metadata, and disconnecting from the wallet. It uses state management (useState) to store the current login method and conditionally renders specific components based on that method.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Summary:** A React card component displaying wallet methods, enabling users to interact with their account through functions like email updates, ID token retrieval, metadata access, and wallet disconnection, using state management for conditional rendering."}
{"code": "export default WalletMethods;\n", "explanation": "Exports the `WalletMethods` component or class as the default export.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Summary:** A React card component displaying wallet methods, enabling users to interact with their account through functions like email updates, ID token retrieval, metadata access, and wallet disconnection, using state management for conditional rendering."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { logout } from '@/utils/common';\nimport { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst Disconnect = ({ setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const disconnect = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      await logout(setToken, magic);\n      setDisabled(false);\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic, setToken]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={disconnect} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[115px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'disconnect()'\n        )}\n      </button>", "explanation": "**Summary:**\n\nThis block is a React component named \"Disconnect\". Its purpose is to handle user disconnection from an application, presumably after logging out using a magic (likely Magic Authentication) system. It includes a button that, when clicked, triggers a logout process with loading animation, and updates the token state if successful or logs an error if not.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise summary:\n\n**File: Disconnect.tsx**\n\nA React component that handles user disconnection from an application after logging out, featuring a button to trigger logout with loading animation and updates token state upon success or logs error on failure."}
{"code": "      <div className=\"wallet-method-desc\">Disconnects user from dApp.</div>\n    </div>\n  );\n};\n\nexport default Disconnect;\n", "explanation": "This is a React component named \"Disconnect\". Its purpose is to disconnect a user from an application (dApp), displaying a descriptive message (\"Disconnects user from dApp.\") within a div element.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise summary:\n\n**File: Disconnect.tsx**\n\nA React component that handles user disconnection from an application after logging out, featuring a button to trigger logout with loading animation and updates token state upon success or logs error on failure."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetIdToken = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getWalletType = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const idToken = await magic.user.getIdToken();\n      setDisabled(false);\n      console.log('ID Token: ' + idToken);\n      showToast({\n        message: 'Please check console for the ID Token Log',\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getWalletType} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[86px]\">\n            <Spinner />\n          </div>\n        ) : (", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Get an ID token from the Magic Provider.\n\n**Functionality:** A button that, when clicked, retrieves an ID token using the Magic Provider's `magic.user.getIdToken()` method, displays a loading spinner while waiting for the response, and logs the result to the console.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n**GetIdToken.tsx:** Retrieves an ID token from the Magic Provider via its `magic.user.getIdToken()` method, displaying a loading spinner during the process."}
{"code": "          'getIdToken()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Generates a Decentralized Id Token which acts as a proof of authentication to resource servers.\n      </div>\n    </div>\n  );\n};\n\nexport default GetIdToken;\n", "explanation": "**Summary:**\n\nThe `getIdToken()` function generates a decentralized ID token, serving as proof of authentication for resource servers.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n**GetIdToken.tsx:** Retrieves an ID token from the Magic Provider via its `magic.user.getIdToken()` method, displaying a loading spinner during the process."}
{"code": "import React, { useCallback, useState } from 'react';\nimport showToast from '@/utils/showToast';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetMetadata = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getMetadata = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const userInfo = await magic.user.getInfo();\n      setDisabled(false);\n      showToast({\n        message: `Public Address: ${userInfo.publicAddress}`,\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getMetadata} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[220px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'getInfo()'\n        )}\n      </button>", "explanation": "**Summary:**\n\nThis block is a React component, `GetMetadata`, which retrieves user metadata from the Magic API when clicked. It displays a loading spinner while fetching data and shows a success message with the public address. If an error occurs, it logs the error but does not display anything to the user.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/wallet-methods/GetMetadata.tsx':\n\n**Summary:**\n`GetMetadata` is a React component that fetches user metadata from the Magic API, displaying a loading spinner, success message with public address, and logging errors while maintaining user anonymity."}
{"code": "      <div className=\"wallet-method-desc\">Retrieves information for the authenticated user.</div>\n    </div>\n  );\n};\n\nexport default GetMetadata;\n", "explanation": "This block retrieves metadata for an authenticated user.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/wallet-methods/GetMetadata.tsx':\n\n**Summary:**\n`GetMetadata` is a React component that fetches user metadata from the Magic API, displaying a loading spinner, success message with public address, and logging errors while maintaining user anonymity."}
{"code": "import React, { useCallback, useState } from 'react';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Spacer from '@/components/ui/Spacer';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\nimport FormInput from '@/components/ui/FormInput';\nimport showToast from '@/utils/showToast';\nimport { RPCError } from 'magic-sdk';\n\nconst UpdateEmail = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n\n  const updateEmail = useCallback(async () => {\n    if (!magic) return;\n    try {\n      if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n        setEmailError(true);\n        setDisabled(false);\n      } else {\n        setDisabled(true);\n        await magic.auth.updateEmailWithUI({ email, showUI: true });\n        showToast({ message: 'Email Updated!', type: 'success' });", "explanation": "Here is a concise summary:\n\n**Purpose:** Update user's email address using Magic authentication.\n\n**Functionality:** \n\n* User inputs new email in a form.\n* Form validation checks for valid email format.\n* If valid, updates user's email via Magic auth API.\n* Displays success toast message upon successful update.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n**Update Email Component:**\n\nHandles user's email address update using Magic authentication.\nValidates new email input, updates via API upon submission, and displays success toast or error message accordingly."}
{"code": "        setDisabled(false);\n        setEmail('');\n      }\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n      if (error instanceof RPCError) {\n        showToast({ message: error.message, type: 'error' });\n      } else {\n        showToast({ message: 'Update email failed', type: 'error' });\n      }\n    }\n  }, [magic, email]);\n\n  const handleEmailChange = (e: any) => {\n    setEmailError(false);\n    setEmail(e.target.value);\n  };\n\n  return (\n    <div className=\"wallet-method-container\">\n      <FormInput value={email} onChange={handleEmailChange} placeholder=\"New Email\" />\n      <button className=\"wallet-method\" onClick={updateEmail} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[76px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'updateEmail()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Initiates the update email flow that allows a user to change their email address.\n      </div>", "explanation": "**Block Purpose:** Handle update of user's email address.\n\n**Functionality:**\n\n* Retrieves current email and update status\n* Updates email upon form submission (via `updateEmail` function)\n* Handles errors, displays error message or toast notification\n* Enables/disables button based on update status.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n**Update Email Component:**\n\nHandles user's email address update using Magic authentication.\nValidates new email input, updates via API upon submission, and displays success toast or error message accordingly."}
{"code": "      {emailError ? (\n        <div className=\"mb-[-10px]\">\n          <Spacer size={20} />\n          <ErrorText>Enter a valid email!</ErrorText>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UpdateEmail;\n", "explanation": "This block displays an error message if the provided email is invalid.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n**Update Email Component:**\n\nHandles user's email address update using Magic authentication.\nValidates new email input, updates via API upon submission, and displays success toast or error message accordingly."}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "**Summary**\n\nThis block defines a reusable UI component called \"Card\" in React, which renders a simple `<div>` element with a class of \"card\". It takes any JSX content as a child and wraps it within this container.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and holistic summary:\n\n**Summary**\n\nThe `src/components/ui/Card.tsx` file defines a reusable React UI component called \"Card\", rendering a simple `<div>` with class \"card\" that wraps any JSX content provided as a child."}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "This block is a React component that renders an `<h1>` element with a unique `id` and displays its child content (e.g. text, other components).", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/ui/CardHeader.tsx':\n\n**CardHeader.tsx**\nA React component that renders an `<h1>` header with unique `id` and displays its child content."}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "**Summary:**\n\nThis block, `CardLabel`, is a reusable React component that displays two parts:\n\n1. A left header section (`leftHeader`)\n2. An optional right action button or label section (`rightAction`)\n\nIt also conditionally applies a class name based on the `isDisconnect` prop.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/ui/CardLabel.tsx':\n\n\"Reusable Card component with two sections: left header and optional right action button or label, with conditional styling based on `isDisconnect` prop.\""}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "This block is a React component named \"Divider\" that renders an HTML `<div>` element with a class name of \"divider\".", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/ui/Divider.tsx':\n\n**File Summary: Divider Component**\n\nA simple React component that renders a basic HTML `<div>` element with a predefined class name of \"divider\"."}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "This block is a reusable React component named \"ErrorText\" that displays its children elements within a styled div with a class of \"error\".", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise holistic summary:\n\nThe `src/components/ui/ErrorText.tsx` file defines a reusable React component called \"ErrorText\", which renders its child elements inside a styled \"error\" div."}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A reusable React button component for forms.\n\n**Functionality:** Renders a customizable button with clickable functionality, disabled state control, and children content display.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise holistic summary of the file 'src/components/ui/FormButton.tsx':\n\n\"A customizable React button component for forms, enabling clickable functionality, disabling, and child content display.\""}
{"code": "import React from 'react'\n\ninterface Props {\n\tvalue: string\n\tonChange: (e: any) => void\n\tplaceholder: string\n}\n\nconst FormInput = ({value, onChange, placeholder}: Props) => {\n  return (\n    <input\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A reusable React component for input fields in forms.\n\n**Functionality:** Displays an input field with a specified value, allows user input through onChange event, and accepts a placeholder text.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/components/ui/FormInput.tsx':\n\n**Summary:** A reusable React component for input fields in forms, displaying a value, allowing user editing, and accepting a placeholder."}
{"code": "import React from 'react'\n\nconst Spacer = ({ size }: { size: number }) => {\n  return <div style={{ height: `${size}px` }} />\n}\n\nexport default Spacer\n", "explanation": "This block is a reusable React component called `Spacer`. It takes a single prop `size` (a numerical value) and renders a `<div>` with that height, effectively creating a vertical spacer in its parent element.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise holistic summary of the file 'src/components/ui/Spacer.tsx':\n\n**File Summary:** Spacer.tsx\n**Component:** Reusable React component for creating a vertical spacer.\n**Purpose:** Renders a `<div>` with adjustable height (prop: `size`) to fill space in its parent element."}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component that displays a loading animation.\n**Functionality:** A spinning SVG icon with a blue fill color, used to indicate a loading or waiting state.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/ui/Spinner.tsx':\n\n**Summary:** A simple React Spinner component displaying a loading animation as an SVG icon, customizable via the `currentFill` prop, used to indicate a waiting or loading state."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "This block appears to be an SVG component, specifically a loading animation/spinner. It takes no props and uses a predefined path definition (`d`) with a fill color determined by the `currentFill` prop.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/ui/Spinner.tsx':\n\n**Summary:** A simple React Spinner component displaying a loading animation as an SVG icon, customizable via the `currentFill` prop, used to indicate a waiting or loading state."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component that displays a link to view transaction history.\n\n**Functionality:** Fetches user's public address from local storage, generates a link to a block explorer using the `getBlockExplorer` utility function, and returns an anchor tag with an icon.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a holistic summary of the file 'src/components/ui/TransactionHistory.tsx':\n\n**File Purpose:** Displays a link to view transaction history.\n\n**Key Functionality:**\n\n* Fetches user's public address from local storage\n* Generates a link to a block explorer using `getBlockExplorer` utility function\n* Returns an anchor tag with an icon for transaction history viewing."}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "**Purpose:** Next.js application entry point.\n\n**Functionality:** A basic wrapper component that renders a given React component with its props.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and to-the-point holistic summary:\n\n**Summary:** The `src/pages/_app.tsx` file serves as the entry point for a Next.js application, providing a basic wrapper component that renders a React component with its associated props."}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "This block is a Next.js document component, responsible for rendering HTML structure and scripts in a Next.js application.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and to-the-point summary:\n\n**\"HTML Document Component for Next.js Applications\"**\n\nThis file defines the HTML structure and script injection for a Next.js application, enabling proper page rendering."}
{"code": "import MagicProvider from '../components/magic/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from '@/components/magic/Login';\nimport Dashboard from '@/components/magic/Dashboard';\nimport MagicDashboardRedirect from '@/components/magic/MagicDashboardRedirect';\n\nexport default function Home() {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    setToken(localStorage.getItem('token') ?? '');\n  }, [setToken]);\n\n  return (\n    <MagicProvider>\n      <ToastContainer />\n      {process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n        token.length > 0 ? (\n          <Dashboard token={token} setToken={setToken} />\n        ) : (\n          <Login token={token} setToken={setToken} />\n        )\n      ) : (\n        <MagicDashboardRedirect />\n      )}\n    </MagicProvider>\n  );\n}\n", "explanation": "This block is a React component (Home) that:\n\n* Checks for an authentication token in local storage\n* Renders either a login form or dashboard based on the presence of a valid token\n* Uses a Magic provider to connect to the Magic API\n* Displays toast notifications using react-toastify", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n**src/pages/index.tsx**: The Home component checks for an authentication token, rendering a login form or dashboard accordingly. It also connects to the Magic API via a provider and enables toast notifications."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "**Summary**\n\nThis block is a CSS configuration file that:\n\n* Imports fonts from Google Fonts\n* Configures tailwindcss functionality (base, components, utilities)\n* Defines custom variables for color scheme adaptation\n* Styles HTML elements with TailwindCSS utility classes\n* Sets up typography and layout for the application.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "Here is a summary of the block:\n\n**Block Summary**\n\nThis block defines CSS styles for various HTML elements, including layout settings, margins, typography, colors, and hover/active effects. It appears to be part of a user interface design, specifically related to network dropdown options and magic logo display.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px] bg-no-repeat;\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 transition-[0.1s] text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {", "explanation": "Here is a concise summary:\n\n**CSS Block Summary**\n\nThis block defines styles for various HTML elements, including typography, layout, colors, and interactions. It sets up font families, sizes, and weights; defines container layouts (e.g., `flex`, `grid`); and specifies visual effects like hover, active states, and disabled button appearance.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": "  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {\n  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Stylesheet Block**\n\nThis block defines styles for various HTML elements using Tailwind CSS classes. It includes rules for layout, typography, colors, and interactions (e.g., hover, active states). The styles apply to different components such as links, footer links, wallet methods, and more.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": "}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {\n  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n", "explanation": "This block appears to be CSS code, defining styles for various UI components:\n\n* `.wallet-method-desc`: a container with gray text\n* `.form-input`: a form input field with white background, black text, and rounded corners\n* `.form-button`: a button component with blue text and a hover effect\n* `.loading-container` and `.loading`: a loading indicator with an animated spinning icon", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": "@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];", "explanation": "Here is a concise summary:\n\n**Block Purpose:** Defines CSS styles for various HTML elements.\n\n**Key Functions:**\n\n* Animates rotation of an element using `@keyframes`.\n* Styles a card component with its header, label container, and labels.\n* Defines styles for a toast notification bar.\n* Specifies hover and active effects for action and disconnect buttons.\n* Styles a code snippet.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": "  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {\n  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {", "explanation": "This appears to be a CSS block containing styles for various elements on a website. \n\n**Summary:**\n\nThis block defines styles for layout, typography, colors, and backgrounds for different HTML elements, including headers, containers, cards, and buttons. It uses Tailwind CSS syntax.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": "  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {\n  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "Here is a concise summary:\n\nThis block defines CSS styles for two types of buttons: `.social-login-button` and `.api-button`. It sets various properties such as colors, font sizes, borders, and effects like hover, active, and disabled states.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here's a concise and holistic summary of the file 'src/styles/globals.css':\n\nThis block defines CSS styles for a web application using Tailwind CSS classes, setting up layout, typography, colors, and interactions for various HTML elements, including headers, containers, cards, buttons, and more. It imports fonts from Google Fonts, configures custom variables, and styles UI components such as links, wallet methods, and loading indicators with animations. The block also defines specific styles for button components, toast notifications, and other interactive elements."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveUserInfo = (token: string, loginMethod: LoginMethod, userAddress: string) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n  localStorage.setItem('user', userAddress);\n};\n", "explanation": "Here is a summary of the block:\n\n**Purpose:** Manage user authentication and logout functionality.\n\n**Functionality:**\n\n* `logout`: Logs out current user, clears local storage, and updates token.\n* `saveUserInfo`: Saves user information (token, login method, and user address) to local storage.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and to-the-point summary of the file 'src/utils/common.ts':\n\n**Summary:** Manages user authentication by logging out users, saving user info, and updating tokens, utilizing local storage."}
{"code": "export enum Network {\n  POLYGON_AMOY = 'polygon-amoy',\n  POLYGON = 'polygon',\n  ETHEREUM_SEPOLIA = 'ethereum-sepolia',\n  ETHEREUM = 'ethereum',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'https://polygon-rpc.com/';\n    case Network.POLYGON_AMOY:\n      return 'https://rpc-amoy.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'https://eth-sepolia.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    case Network.ETHEREUM:\n      return 'https://eth-mainnet.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    default:\n      throw new Error('Network not supported');\n  }\n};\n\nexport const getChainId = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 137;\n    case Network.POLYGON_AMOY:\n      return 80002;\n    case Network.ETHEREUM_SEPOLIA:\n      return 11155111;\n    case Network.ETHEREUM:\n      return 1;\n  }\n};\n\nexport const getNetworkToken = () => {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Define network configurations for blockchain interactions.\n\n**Functionality:**\n\n* Enum `Network` defines constants for different blockchain networks (e.g., Polygon, Ethereum).\n* `getNetworkUrl()` function returns the RPC URL for the specified network based on environment variables.\n* `getChainId()` function returns the chain ID for the specified network based on environment variables.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/utils/network.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/utils/network.ts':\n\n**Network Configurations**\n\nThis module defines constants and functions for interacting with different blockchain networks. It uses environment variables to determine the active network and returns relevant configuration information such as RPC URLs, chain IDs, faucet URLs, full network names, and block explorer URLs."}
{"code": "  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n    case Network.POLYGON:\n      return 'MATIC';\n    case Network.ETHEREUM:\n    case Network.ETHEREUM_SEPOLIA:\n      return 'ETH';\n  }\n};\n\nexport const getFaucetUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return 'https://faucet.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'https://sepoliafaucet.com/';\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'Polygon (Mainnet)';\n    case Network.POLYGON_AMOY:\n      return 'Polygon (Amoy)';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'Ethereum (Sepolia)';\n    case Network.ETHEREUM:\n      return 'Ethereum (Mainnet)';\n  }\n};\n\nexport const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:", "explanation": "Here is a concise summary:\n\n**This block of code serves as a network selector**, providing functionality based on the blockchain network environment variable `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`. It returns:\n\n* A string representing the network name (e.g., \"MATIC\", \"ETH\")\n* The faucet URL for the current network\n* The full network name with chain identifier (e.g., \"Polygon (Mainnet)\", \"Ethereum (Sepolia)\")\n* The block explorer URL for a given address", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/utils/network.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/utils/network.ts':\n\n**Network Configurations**\n\nThis module defines constants and functions for interacting with different blockchain networks. It uses environment variables to determine the active network and returns relevant configuration information such as RPC URLs, chain IDs, faucet URLs, full network names, and block explorer URLs."}
{"code": "      return `https://polygonscan.com/address/${address}`;\n    case Network.POLYGON_AMOY:\n      return `https://www.oklink.com/amoy/address/${address}`;\n    case Network.ETHEREUM:\n      return `https://etherscan.io/address/${address}`;\n    case Network.ETHEREUM_SEPOLIA:\n      return `https://sepolia.etherscan.io/address/${address}`;\n  }\n};\n", "explanation": "This block appears to be a switch statement that returns different URLs for blockchain explorer websites based on the specified network. It takes an \"address\" as input and returns a URL for the corresponding network (e.g., Ethereum, Polygon, etc.).", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/utils/network.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'src/utils/network.ts':\n\n**Network Configurations**\n\nThis module defines constants and functions for interacting with different blockchain networks. It uses environment variables to determine the active network and returns relevant configuration information such as RPC URLs, chain IDs, faucet URLs, full network names, and block explorer URLs."}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "**Summary:**\n\nThis block is a custom function `showToast` that displays a toast notification using the `react-toastify` library. It takes an object with `message` and `type` properties, where `type` can be one of four predefined types (`success`, `error`, `info`, or `warning`). The function uses a switch statement to configure the toast notification based on the selected type and displays it at the top center of the screen.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n`showToast.ts`: A custom function that displays toast notifications using `react-toastify`, configurable by message type (`info`, `success`, `error`) and position, duration, and theme settings."}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "This block is a toast notification function, used to display alerts or errors on a webpage. It accepts a message type ('info', 'success', 'error') and displays a corresponding notification with customizable settings (position, duration, theme, etc.).", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary:\n\n`showToast.ts`: A custom function that displays toast notifications using `react-toastify`, configurable by message type (`info`, `success`, `error`) and position, duration, and theme settings."}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "Here is a summary of the block:\n\n**Purpose:** Define props for a login component.\n\n**Functionality:** Provides an interface for passing token data and setting token state in a React application.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise and to-the-point holistic summary of the file 'src/utils/types.ts':\n\nDefines types for managing token data in a React application, providing interfaces for passing and storing tokens."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "This block is a Tailwind CSS configuration file, specifying:\n\n* The source files for content scanning\n* Custom theme extensions (e.g., radial and conic gradients)\n* No additional plugins are enabled.", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the `tailwind.config.js` file:\n\n\"Configures Tailwind CSS with custom theme extensions and specifies source files for content scanning.\""}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "This block is a configuration object for a TypeScript compiler setup, specifying:\n\n* Compilation options (e.g. target environment, libraries)\n* File inclusion/exclusion rules\n* Module resolution settings", "metadata": {"repo": "magiclabs/onboarding-guide", "file": "tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository contains a guide for new employees joining Magic Labs, likely outlining company culture, policies, and procedures for onboarding purposes.", "file_summary": "Here is a concise summary of the file 'tsconfig.json':\n\n`tsconfig.json`: TypeScript compiler configuration file, containing compilation settings for target environments, library inclusions, file inclusion/exclusion rules, and module resolution."}
