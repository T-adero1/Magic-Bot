{"code": "# Magic Dedicated Wallet Discord Social Login\n\nPlease [click here](https://magic.link/docs/authentication/features/social-logins/social-providers/discord) for full implementation instructions\n", "explanation": "This block enables users to login to a Magic wallet using their Discord account credentials.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "README.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "The 'README.md' file outlines essential information for users. This includes a section that provides authentication functionality, allowing users to log in to a Magic wallet using their existing Discord account credentials."}
{"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will", "explanation": "This block is a basic HTML template, specifically for a Create React App project. It:\n\n- Sets up the document and language\n- Specifies meta tags for character encoding, mobile optimization, and theme color\n- Links to the app's favicon, Apple touch icon, and manifest file\n- Provides a description of the web app for search engine results.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "public/index.html", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here's a concise and to-the-point summary of the file 'public/index.html':\n\n\"This file provides a basic HTML template for a web application, setting up essential documents, metadata, and links to support build and optimization processes, ultimately serving as a container for the app.\""}
{"code": "      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <title>Magic + Discord</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n  </body>\n</html>\n", "explanation": "This block is a basic HTML template for a web application. Its purpose is to provide a container for the app, which can be generated and populated by a build process (e.g., via `npm run build` or `yarn build`).", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "public/index.html", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here's a concise and to-the-point summary of the file 'public/index.html':\n\n\"This file provides a basic HTML template for a web application, setting up essential documents, metadata, and links to support build and optimization processes, ultimately serving as a container for the app.\""}
{"code": "{\n  \"short_name\": \"React App\",\n  \"name\": \"Create React App Sample\",\n  \"icons\": [\n    {\n      \"src\": \"favicon.ico\",\n      \"sizes\": \"64x64 32x32 24x24 16x16\",\n      \"type\": \"image/x-icon\"\n    }\n  ],\n  \"start_url\": \".\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n", "explanation": "This block is an Apple PWA (Progressive Web App) manifest file, configuring metadata for a web application. It provides settings for appearance, icons, and browser behavior.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "public/manifest.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "This file, 'public/manifest.json', is the Apple PWA manifest for a web application, hosting metadata such as icons, appearance settings, and configuration for browser behavior."}
{"code": "import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n", "explanation": "**Summary:**\n\nThis block defines a basic routing system for a React application using React Router. It sets up two routes:\n\n1. '/' (root) redirects to a Login page.\n2. '/dashboard' displays a Dashboard page.\n\nThe App function acts as the main entry point of the application and renders the routing system.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/App.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "The `src/App.js` file sets up a basic routing system for a React application using React Router, redirecting users to a Login page on the root route ('/') and displaying a Dashboard page on the '/dashboard' route."}
{"code": "@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800&display=swap\");\n\nhtml {\n  font-size: 62.5%;\n}\n\nbody {\n  margin: 0;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-size: 1.6rem;\n}\n\n.App {\n  text-align: center;\n  font-family: \"Inter\", sans-serif;\n  margin-top: 7rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nh1 {\n  font-size: 4rem;\n  font-weight: 800;\n  margin-bottom: 50px;\n}\n\nbutton {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #7289da;\n  color: white;\n  font-family: \"Inter\", sans-serif;\n  border-radius: 300px;\n  cursor: pointer;\n  border: none;\n  padding: 12px 30px;\n  font-weight: 600;\n  font-size: 1.8rem;\n  width: 280px;\n  height: 48px;\n  line-height: 0;\n}\n\n.loading {\n  font-size: 3rem;\n  margin: 30px;\n  font-style: italic;\n}\n\n.logout-button {\n  width: 200px;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.user-info {\n  width: 800px;\n  text-align: left;", "explanation": "This block is a CSS stylesheet that defines styles for an HTML document. \n\nIts main functionality is to:\n\n- Set up font styles and sizes for the entire document\n- Style specific HTML elements, such as the body, headers, buttons, and sections, with attributes like margin, padding, color, and font family.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/index.css", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here's a concise summary of the file 'src/index.css':\n\nThis CSS stylesheet defines global font styles and sizes, and applies various styles to specific HTML elements such as body, headers, buttons, and sections, with attributes like margin, padding, color, and font family."}
{"code": "  background: #f0f0f0;\n  margin: 50px;\n  padding: 25px;\n  border-radius: 10px;\n  overflow-x: scroll;\n}\n", "explanation": "This block defines a CSS style (likely for a container element), setting its background color, margins, padding, border, and horizontal scroll behavior.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/index.css", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here's a concise summary of the file 'src/index.css':\n\nThis CSS stylesheet defines global font styles and sizes, and applies various styles to specific HTML elements such as body, headers, buttons, and sections, with attributes like margin, padding, color, and font family."}
{"code": "import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n", "explanation": "This block of code sets up a basic React application.\n\n**Purpose:** Initialize a React application and render its main component to the HTML element with the id \"root\".\n\n**Functionality:**\n\n1. Imports necessary modules (React and ReactDOM).\n2. Creates a root element for the React application.\n3. Renders the main application component (App) within a \"Strict Mode\" wrapper.\n4. Displays the rendered component in the HTML element with the id \"root\".", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here is a concise summary of the file 'src/index.js':\n\nInitializing a React application, rendering the main component (App) to the HTML element with the id \"root\" in a \"Strict Mode\" wrapper."}
{"code": "import { Magic } from \"magic-sdk\";\nimport { OAuthExtension } from \"@magic-ext/oauth\";\n\nconst createMagic = (key) => {\n  return (\n    typeof window !== \"undefined\" &&\n    new Magic(key, {\n      extensions: [new OAuthExtension()],\n    })\n  );\n};\n\nexport const magic = createMagic(\"pk_live_3EFC32B01A29985C\");\n", "explanation": "The purpose of this block is to initialize the Magic SDK for authentication, using an API key to create an instance of the Magic object with OAuth extension support.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/lib/magic.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here is a concise and to the point holistic summary of the file 'src/lib/magic.js':\n\nThis file initializes the Magic SDK for authentication, creating an instance of the Magic object with OAuth extension support, utilizing an API key for seamless integration."}
{"code": "import { useEffect, useState } from \"react\";\nimport { magic } from \"../lib/magic\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const [user, setUser] = useState();\n  const navigate = useNavigate();\n\n  const finishSocialLogin = async () => {\n    try {\n      const result = await magic.oauth.getRedirectResult();\n      setUser(result);\n      console.log(result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    finishSocialLogin();\n  }, []);\n\n  const logout = async () => {\n    try {\n      await magic.user.logout();\n      navigate(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {!user && <div className=\"loading\">Loading...</div>}\n\n      {user && (\n        <div>\n          <h1>Data returned:</h1>\n          <pre className=\"user-info\">{JSON.stringify(user, null, 3)}</pre>\n        </div>\n      )}\n      <button className=\"logout-button\" onClick={logout}>\n        Logout\n      </button>\n    </div>\n  );\n};\n", "explanation": "**Purpose:** \nThe block is a React functional component named `Dashboard` designed to display user data after a social login and provide a logout functionality.\n\n**Functionality:**\n\n- It initializes a state variable `user` using React's `useState` hook to store the data returned from the social login.\n- Upon rendering the component, it calls the `finishSocialLogin` function to retrieve the social login result using the `Magic` library.\n- When the user is logged in, it displays the user data as a JSON string; otherwise, it shows a \"Loading...\" message.\n- It includes a logout button, which calls the `logout` function to log the user out and redirect them to the root route (`\"/\"`) when clicked.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/pages/Dashboard.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here is a concise and to-the-point summary of the 'src/pages/Dashboard.js' file:\n\n**Dashboard.jsSummary:**\n\nThe `Dashboard` component displays user data after a social login and provides a logout functionality using React's `useState` hook and the `Magic` library. It fetches social login result, displays user data as JSON or a \"Loading...\" message, and includes a logout button to direct users to the root route upon logout."}
{"code": "export default Dashboard;\n", "explanation": "This block exports the Dashboard component by default, making it available for use in other parts of the application.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/pages/Dashboard.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here is a concise and to-the-point summary of the 'src/pages/Dashboard.js' file:\n\n**Dashboard.jsSummary:**\n\nThe `Dashboard` component displays user data after a social login and provides a logout functionality using React's `useState` hook and the `Magic` library. It fetches social login result, displays user data as JSON or a \"Loading...\" message, and includes a logout button to direct users to the root route upon logout."}
{"code": "import { magic } from \"../lib/magic\";\nimport { FaDiscord } from \"react-icons/fa\";\n\nconst Login = () => {\n  const handleSocialLogin = async () => {\n    try {\n      await magic.oauth.loginWithRedirect({\n        provider: \"discord\",\n        redirectURI: new URL(\"/dashboard\", window.location.origin).href,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Magic + Discord</h1>\n      <button onClick={handleSocialLogin}>\n        <FaDiscord size={\"2.5rem\"} />\n        Log in with Discord\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n", "explanation": "**Summary:**\n\nThis block is a React functional component named `Login` that enables user login with Discord using the Magic API. It provides a button to initiate the login process with Discord, which redirects the user to the Magic authentication page and then back to the application's dashboard after a successful login.", "metadata": {"repo": "magiclabs/discord-oauth-demo", "file": "src/pages/Login.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/discord-oauth-demo` repository is a public demonstration of Discord's OAuth workflow. \n\nHere's a concise breakdown:\n\n**Purpose:** Showcases how to securely authenticate users using Discord OAuth.\n\n**Content:**\n\n* `README.md`: Instructions and information about the repository.\n* `index.html`: A simple web page that demonstrates the OAuth flow.\n* `Server-side implementation:` Not included in this repository, but provides a setup guide to create an OAuth 2.0 server that will authenticate users.\n\nThis repository is a basic example to help developers understand and implement the Discord OAuth flow in their applications.", "file_summary": "Here's a concise holistic summary of the file 'src/pages/Login.js':\n\nThe `Login` component is a React functional component that facilitates user login with Discord using the Magic API, initiating a seamless login flow with a redirection to the Magic authentication page and back to the application's dashboard upon successful login."}
