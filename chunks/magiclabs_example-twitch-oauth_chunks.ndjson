{"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Magic / Twitch OAuth Demo</title>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/styles/default.min.css\"\n    />\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/highlight.min.js\"></script>\n    <script src=\"https://auth.magic.link/sdk\"></script>\n    <script src=\"https://auth.magic.link/sdk/extension/oauth\"></script>\n    <script>\n      const MAGIC_API_KEY = \"pk_live_78EABCE90112A046\";\n\n      const magic = new Magic(MAGIC_API_KEY, {\n        extensions: [new MagicOAuthExtension()],\n      });\n\n      const render = async () => {\n        let html = ``;\n\n        if (window.location.pathname === \"/callback\") {\n          try {\n            const result = await magic.oauth.getRedirectResult();", "explanation": "Here is a concise summary:\n\n**Purpose:** Authenticate users with Magic/Twitch OAuth integration.\n\n**Functionality:** Redirects users to authenticate with Magic, then retrieves authentication results using the `magic.oauth.getRedirectResult()` function.", "metadata": {"repo": "magiclabs/example-twitch-oauth", "file": "index.html", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"example-twitch-oauth\" hosted by Magic Labs. \n\n**Purpose:** Example implementation of Twitch OAuth flow.\n\n**Content:** A code example showcasing how to authenticate with Twitch using their OAuth protocol, likely providing guidance on handling authorization requests, accessing user data, and refreshing access tokens.", "file_summary": "Here is a concise summary of the file 'index.html':\n\nThe **index.html** file authenticates users with Magic/Twitch OAuth integration, handling user authentication via OAuth 2.0, displaying user profiles or login forms based on authentication results, and initiating login processes using Magic OAuth."}
{"code": "            const profile = JSON.stringify(result.oauth.userInfo, undefined, 2);\n\n            html = `\n                <h1>It Worked! \ud83c\udf89</h1>\n                <h2>Your User Profile:</h2>\n                <pre><code class=\"json tomorrow\">${profile}</code></pre>\n              `;\n          } catch {\n            window.location.href = window.location.origin;\n          }\n        } else {\n          html = `\n              <h2>Please sign up or log in</h2>\n              <form onsubmit=\"handleLogin(event)\">\n                <button id=\"btn-send\" class=\"twitch\" type=\"submit\">\n                  <img src=\"./login-with-twitch.png\" />\n                </button>\n              </form>\n            `;\n        }\n\n        document.getElementById(\"app\").innerHTML = html;\n        document.querySelectorAll(\"pre code\").forEach((block) => {\n          hljs.highlightBlock(block);\n        });\n      };\n\n      /**\n       * Starts the OAuth 2.0 login flow.\n       */\n      const handleLogin = async (e) => {\n        e.preventDefault();\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Handle user authentication via OAuth 2.0 and display user profile or login form.\n\n**Functionality:**\n\n* Uses JSON.stringify to format user profile data.\n* Updates HTML content based on authentication result:\n\t+ If authenticated, displays formatted user profile in a code block.\n\t+ If not authenticated, shows a login form.\n* Highlights the code block using a code highlighting library.", "metadata": {"repo": "magiclabs/example-twitch-oauth", "file": "index.html", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"example-twitch-oauth\" hosted by Magic Labs. \n\n**Purpose:** Example implementation of Twitch OAuth flow.\n\n**Content:** A code example showcasing how to authenticate with Twitch using their OAuth protocol, likely providing guidance on handling authorization requests, accessing user data, and refreshing access tokens.", "file_summary": "Here is a concise summary of the file 'index.html':\n\nThe **index.html** file authenticates users with Magic/Twitch OAuth integration, handling user authentication via OAuth 2.0, displaying user profiles or login forms based on authentication results, and initiating login processes using Magic OAuth."}
{"code": "        // Render a button \"pending\" state.\n        const btnSend = document.getElementById(\"btn-send\");\n        btnSend.disabled = true;\n        btnSend.innerText = \"Logging in...\";\n\n        // Start the Twitch OAuth 2.0 flow!\n        const didToken = await magic.oauth.loginWithRedirect({\n          provider: \"twitch\",\n          redirectURI: `${window.location.origin}/callback`\n        });\n      };\n    </script>\n  </head>\n  <body onload=\"render()\">\n    <div id=\"app\">Loading...</div>\n  </body>\n</html>\n", "explanation": "Here is a summary of the block:\n\n**Purpose:** Render a button with a \"pending\" state while starting the Twitch OAuth login flow.\n\n**Functionality:** Disables a button, changes its text to \"Logging in...\", and initiates the login process using Magic OAuth 2.0.", "metadata": {"repo": "magiclabs/example-twitch-oauth", "file": "index.html", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"example-twitch-oauth\" hosted by Magic Labs. \n\n**Purpose:** Example implementation of Twitch OAuth flow.\n\n**Content:** A code example showcasing how to authenticate with Twitch using their OAuth protocol, likely providing guidance on handling authorization requests, accessing user data, and refreshing access tokens.", "file_summary": "Here is a concise summary of the file 'index.html':\n\nThe **index.html** file authenticates users with Magic/Twitch OAuth integration, handling user authentication via OAuth 2.0, displaying user profiles or login forms based on authentication results, and initiating login processes using Magic OAuth."}
{"code": "https://uploads.codesandbox.io/uploads/user/30bd6445-cf81-4997-828a-e5d6bc01e594/ZkUO-login-with-twitch.png", "explanation": "This block appears to be a login interface for Twitch, allowing users to authenticate with their Twitch account credentials.", "metadata": {"repo": "magiclabs/example-twitch-oauth", "file": "login-with-twitch.png", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"example-twitch-oauth\" hosted by Magic Labs. \n\n**Purpose:** Example implementation of Twitch OAuth flow.\n\n**Content:** A code example showcasing how to authenticate with Twitch using their OAuth protocol, likely providing guidance on handling authorization requests, accessing user data, and refreshing access tokens.", "file_summary": "Here is a concise and holistic summary:\n\n`login-with-twitch.png`: A login interface for authenticating with a Twitch account using username and password credentials."}
{"code": "{\n  \"infiniteLoopProtection\": true,\n  \"hardReloadOnChange\": true,\n  \"view\": \"browser\",\n  \"template\": \"static\"\n}\n", "explanation": "This block appears to be a configuration settings object, likely in JSON format.\n\n**Purpose:** Configure application settings for development or debugging purposes.\n\n**Functionality:**\n\n* Enable infinite loop protection\n* Force hard reload on change\n* Set the view mode to browser\n* Use static template rendering", "metadata": {"repo": "magiclabs/example-twitch-oauth", "file": "sandbox.config.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"example-twitch-oauth\" hosted by Magic Labs. \n\n**Purpose:** Example implementation of Twitch OAuth flow.\n\n**Content:** A code example showcasing how to authenticate with Twitch using their OAuth protocol, likely providing guidance on handling authorization requests, accessing user data, and refreshing access tokens.", "file_summary": "Here is a concise summary of the file 'sandbox.config.json':\n\n`Sandbox configuration settings for development/debugging purposes, enabling infinite loop protection, forcing hard reloads, setting view mode to browser, and using static templates.`"}
{"code": "body {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  height: 100vh;\n  display: grid;\n  font-size: 18px;\n}\n\n#app {\n  align-self: center;\n  justify-self: center;\n  text-align: center;\n  width: 500px;\n  padding: 27px 18px;\n}\n\nh1 {\n  margin: 0;\n  padding-bottom: 1.5rem;\n  font-size: 36px;\n}\n\nh2 {\n  margin: 0;\n  padding-bottom: 18px;\n  font-size: 18px;\n}\n\ninput,\nbutton:not(.twitch) {\n  padding: 9px;\n  font-size: 18px;\n  margin-bottom: 9px;\n}\n\nbutton.twitch {\n  cursor: pointer;\n  border: none;\n  background: transparent;\n  padding: 0;\n}\n\nbutton.twitch img {\n  max-height: 50px;\n  height: 100%;\n}\n\npre {\n  text-align: left;\n  background: #f0f0f0;\n  padding: 25px;\n  border-radius: 10px;\n  overflow-x: scroll;\n}\n", "explanation": "**Summary**\n\nThis block is a CSS stylesheet that defines styles for HTML elements, including:\n\n* Global body styles (font family, height, display)\n* Styles for an element with ID \"app\" (alignment, text alignment, width)\n* Styles for headings (h1 and h2) and input/button elements\n* Specific styles for buttons with class \".twitch\"\n* Style for a preformatted text block\n\nIn essence, it sets up a basic layout and visual hierarchy for an HTML page.", "metadata": {"repo": "magiclabs/example-twitch-oauth", "file": "styles.css", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"example-twitch-oauth\" hosted by Magic Labs. \n\n**Purpose:** Example implementation of Twitch OAuth flow.\n\n**Content:** A code example showcasing how to authenticate with Twitch using their OAuth protocol, likely providing guidance on handling authorization requests, accessing user data, and refreshing access tokens.", "file_summary": "Here is a concise summary of the file 'styles.css':\n\n**Summary**\n\nThis CSS stylesheet establishes a basic layout and visual hierarchy for an HTML page, setting styles for body elements, headings, input/buttons, buttons with class \".twitch\", and preformatted text blocks."}
