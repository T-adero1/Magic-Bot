{"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Magic / GitHub OAuth Demo</title>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/styles/default.min.css\"\n    />\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/highlight.min.js\"></script>\n    <script src=\"https://auth.magic.link/sdk\"></script>\n    <script src=\"https://auth.magic.link/sdk/extension/oauth\"></script>\n    <script>\n      const MAGIC_API_KEY = \"pk_live_DFA64C3051ACD9CE\";\n\n      const magic = new Magic(MAGIC_API_KEY, {\n        extensions: [new MagicOAuthExtension()]\n      });\n\n      const render = async () => {\n        let html = ``;\n\n        if (window.location.pathname === \"/callback\") {\n          try {\n            const result = await magic.oauth.getRedirectResult();", "explanation": "**Summary**\n\nThis block appears to be an HTML file that serves as a GitHub OAuth demo for Magic, a authentication service. It loads necessary scripts and stylesheets, initializes the Magic SDK with an API key, and defines a `render` function to handle the OAuth flow on the `/callback` page.", "metadata": {"repo": "magiclabs/example-github-oauth", "file": "index.html", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This repository provides a basic example for GitHub OAuth authentication in Magic Labs applications. It demonstrates how to authenticate users using their GitHub credentials and includes an API endpoint for handling GitHub authorization codes.", "file_summary": "Here is a concise holistic summary of the file 'index.html':\n\n**Summary**: This HTML file serves as a GitHub OAuth demo for Magic authentication service, enabling user login and profile display via OAuth 2.0 flow."}
{"code": "            const profile = JSON.stringify(result.oauth.userInfo, undefined, 2);\n\n            html = `\n                <h1>Your User Profile:</h1>\n                <pre><code class=\"json tomorrow\">${profile}</code></pre>\n              `;\n          } catch {\n            window.location.href = window.location.origin;\n          }\n        } else {\n          html = `\n              <h1>Please sign up or log in</h1>\n              <form onsubmit=\"handleLogin(event)\">\n                <button id=\"btn-send\" class=\"github\" type=\"submit\">\n                  <img src=\"./github-mark.png\" />\n                  <span>Sign in with GitHub</span>\n                </button>\n              </form>\n            `;\n        }\n\n        document.getElementById(\"app\").innerHTML = html;\n        document.querySelectorAll(\"pre code\").forEach((block) => {\n          hljs.highlightBlock(block);\n        });\n      };\n\n      /**\n       * Starts the OAuth 2.0 login flow.\n       */\n      const handleLogin = async (e) => {\n        e.preventDefault();\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Display user profile information or authentication form based on OAuth 2.0 login success/failure.\n\n**Functionality:**\n\n* If login successful, display formatted JSON user profile in an HTML page.\n* If login fails, redirect to home page.\n* If login is not required (e.g., no session), display a sign-up/login form with GitHub login button.\n* Use Prism.js for code highlighting.", "metadata": {"repo": "magiclabs/example-github-oauth", "file": "index.html", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This repository provides a basic example for GitHub OAuth authentication in Magic Labs applications. It demonstrates how to authenticate users using their GitHub credentials and includes an API endpoint for handling GitHub authorization codes.", "file_summary": "Here is a concise holistic summary of the file 'index.html':\n\n**Summary**: This HTML file serves as a GitHub OAuth demo for Magic authentication service, enabling user login and profile display via OAuth 2.0 flow."}
{"code": "        // Render a button \"pending\" state.\n        const btnSend = document.getElementById(\"btn-send\");\n        btnSend.disabled = true;\n        btnSend.innerText = \"Logging in...\";\n\n        // Start the GitHub OAuth 2.0 flow!\n        const didToken = await magic.oauth.loginWithRedirect({\n          provider: \"github\",\n          redirectURI: `${window.location.origin}/callback`\n        });\n      };\n    </script>\n  </head>\n\n  <body onload=\"render()\">\n    <div id=\"app\">Loading...</div>\n  </body>\n\n</html>\n", "explanation": "**Purpose:** Enables GitHub OAuth login flow.\n\n**Functionality:**\n\n* Disables a button with ID \"btn-send\" and changes its text to \"Logging in...\".\n* Initiates a GitHub login redirect using Magic's OAuth 2.0 API, redirecting to a callback page upon completion.", "metadata": {"repo": "magiclabs/example-github-oauth", "file": "index.html", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This repository provides a basic example for GitHub OAuth authentication in Magic Labs applications. It demonstrates how to authenticate users using their GitHub credentials and includes an API endpoint for handling GitHub authorization codes.", "file_summary": "Here is a concise holistic summary of the file 'index.html':\n\n**Summary**: This HTML file serves as a GitHub OAuth demo for Magic authentication service, enabling user login and profile display via OAuth 2.0 flow."}
{"code": "{\n  \"infiniteLoopProtection\": true,\n  \"hardReloadOnChange\": true,\n  \"view\": \"browser\",\n  \"template\": \"static\"\n}\n", "explanation": "This block configures settings for a web development environment, specifying:\n\n* Infinite loop protection\n* Automatic hard reload on code changes\n* View mode (set to \"browser\")\n* Template type (set to \"static\")", "metadata": {"repo": "magiclabs/example-github-oauth", "file": "sandbox.config.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository provides a basic example for GitHub OAuth authentication in Magic Labs applications. It demonstrates how to authenticate users using their GitHub credentials and includes an API endpoint for handling GitHub authorization codes.", "file_summary": "Here is a concise and holistic summary of the file 'sandbox.config.json':\n\n\"Configures a web development environment with infinite loop protection, automatic hard reloads on code changes, and views in browser mode with static templates.\""}
{"code": "body {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  height: 100vh;\n  display: grid;\n  font-size: 18px;\n}\n\n#app {\n  align-self: center;\n  justify-self: center;\n  text-align: center;\n  width: 500px;\n  padding: 27px 18px;\n}\n\nh1 {\n  margin: 0;\n  padding-bottom: 18px;\n  font-size: 18px;\n}\n\ninput,\nbutton:not(.github) {\n  padding: 9px;\n  font-size: 18px;\n  margin-bottom: 9px;\n}\n\nbutton.github {\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  background: black;\n  padding: 10px 20px;\n  border-radius: 5px;\n  color: white;\n  font-size: 16px;\n}\n\nbutton.github img {\n  height: 25px;\n  margin-right: 10px;\n}\n\npre {\n  text-align: left;\n  background: #f0f0f0;\n  padding: 25px;\n  border-radius: 10px;\n  overflow-x: scroll;\n}\n", "explanation": "**Summary**\n\nThis block defines CSS styles for a web page layout, including:\n\n* Global styles (font family, height, font size)\n* Styles for the main app container (#app)\n* Styles for headings (h1), input fields, and buttons\n* Custom styles for a GitHub-style button", "metadata": {"repo": "magiclabs/example-github-oauth", "file": "styles.css", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository provides a basic example for GitHub OAuth authentication in Magic Labs applications. It demonstrates how to authenticate users using their GitHub credentials and includes an API endpoint for handling GitHub authorization codes.", "file_summary": "Here is a concise summary of the file 'styles.css':\n\nDefines CSS styles for a web page layout, including global styles, app container styling, and custom UI element styles such as headings, inputs, buttons, and a GitHub-style button."}
