{"code": "/scaffolds/*/template/\n/bin.js\n/compiled\n/dist\n.eslintrc.js\n", "explanation": "This appears to be a directory structure for a project.\n\n**Summary:**\n\nA directory containing scaffolding templates, executable code (`bin.js`), ESLint configuration file, compiled files, and distribution folder.", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".eslintignore", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `.eslintignore` file:\n\n\"ESLint ignore configurations for a project.\""}
{"code": "module.exports = {\n  root: true,\n\n  extends: [\n    'eslint:recommended',\n    'plugin:react/recommended',\n    'plugin:react-hooks/recommended',\n    'airbnb-typescript',\n    'plugin:@typescript-eslint/recommended',\n    'plugin:jsx-a11y/recommended',\n    'plugin:prettier/recommended',\n  ],\n\n  parser: '@typescript-eslint/parser',\n\n  parserOptions: {\n    project: ['./tsconfig.json'],\n  },\n\n  plugins: ['react', 'react-hooks', '@typescript-eslint', 'jsx-a11y', 'prettier'],\n\n  rules: {\n    // Import rules\n    'import/extensions': 0,\n    'import/no-extraneous-dependencies': 0,\n\n    // TypeScript rules\n    '@typescript-eslint/no-explicit-any': 0,\n    '@typescript-eslint/no-use-before-define': 0,\n    '@typescript-eslint/no-namespace': 0,\n    '@typescript-eslint/ban-types': 0,\n  },\n\n  settings: {\n    'import/resolver': {\n      typescript: {\n        project: ['./tsconfig.json'],\n      },\n    },\n  },\n};\n", "explanation": "This block is a configuration file for ESLint, a JavaScript linter. It extends various rulesets and plugins to provide a comprehensive set of rules for enforcing coding standards in TypeScript projects, including React and JSX.", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".eslintrc.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and to-the-point summary:\n\n`.eslintrc.js` configures ESLint with extended rulesets and plugins for TypeScript, React, and JSX projects."}
{"code": "---\nname: Bug Report\nabout: Use this template to report a bug.\ntitle: \"[DESCRIPTIVE BUG NAME]\"\nlabels: \ud83d\udc1b Bug Report, \ud83d\udd0d Needs Triage\n---\n\n### \u2705 Prerequisites\n\n- [ ] Did you perform a cursory search of open issues? Is this bug already reported elsewhere?\n- [ ] Are you running the latest SDK version?\n- [ ] Are you reporting to the correct repository (`make-magic-app`)?\n\n### \ud83d\udc1b Description\n\n[Description of the bug.]\n\n### \ud83e\udde9 Steps to Reproduce\n\n1. [First Step]\n2. [Second Step]\n3. [and so on...]\n\n### \ud83e\udd14 Expected behavior\n\n[What you expected to happen?]\n\n### \ud83d\ude2e Actual behavior\n\n[What actually happened? Please include any error stack traces you encounter.]\n\n### \ud83d\udcbb Code Sample\n\n[If possible, please provide a code repository, gist, code snippet or sample files to reproduce the issue.]\n\n### \ud83c\udf0e Environment\n\n| Software            | Version(s) |\n| ------------------- | ---------- |\n| `make-magic-app`    |\n| Node                |\n| `yarn`              |\n| Operating System    |\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A template for reporting bugs, guiding users to provide essential information for triage.\n\n**Functionality:** It prompts users to search for existing issues, ensure they're using the latest SDK version, and report to the correct repository. It then collects detailed information about the bug, including steps to reproduce, expected and actual behavior, code sample (if applicable), and environment details.", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".github/ISSUE_TEMPLATE/bug_report.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file '.github/ISSUE_TEMPLATE/bug_report.md':\n\n**Summary:** A template for reporting bugs that guides users to provide essential information for efficient triage by prompting them to search existing issues, verify SDK version, and report detailed bug specifics."}
{"code": "---\nname: Feature Request\nabout: Use this template to request a new feature.\ntitle: \"[DESCRIPTIVE FEATURE NAME]\"\nlabels: \u2728Feature Request\n---\n\n### \u2705 Prerequisites\n\n- [ ] Did you perform a cursory search of open issues? Is this feature already requested elsewhere?\n- [ ] Are you reporting to the correct repository (`make-magic-app`)?\n\n### \u2728 Feature Request\n\n[Description of the feature.]\n\n## \ud83e\udde9 Context\n\n[Explain any additional context or rationale for this feature. What are you trying to accomplish?]\n\n## \ud83d\udcbb Examples\n\n[Do you have any example(s) for the requested feature? If so, describe/demonstrate your example(s) here.]\n", "explanation": "**Purpose:** To facilitate a structured process for submitting feature requests.\n\n**Functionality:** A template that guides users in proposing new features by:\n\n1. Ensuring they've searched for existing issues.\n2. Providing a description of the proposed feature, its context, and examples (if applicable).", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".github/ISSUE_TEMPLATE/feature_request.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point holistic summary of the file '.github/ISSUE_TEMPLATE/feature_request.md':\n\n**Feature Request Template**\n\nA structured template for submitting new feature proposals, ensuring users search for existing issues and provide clear descriptions, context, and examples."}
{"code": "---\nname: Question\nabout: Use this template to request help or ask a question.\ntitle: \"[WHAT'S YOUR QUESTION?]\"\nlabels: \u2753Question\n---\n\n### \u2705 Prerequisites\n\n- [ ] Did you perform a cursory search of open issues? Is this question already asked elsewhere?\n- [ ] Are you reporting to the correct repository (`make-magic-app`)?\n\n### \u2753 Question\n\n[Ask your question here, please be as detailed as possible!]\n\n### \ud83c\udf0e Environment\n\n| Software         | Version(s) |\n| ---------------- | ---------- |\n| `make-magic-app` |\n| Node             |\n| `yarn`           |\n| Operating System |\n", "explanation": "**Purpose:** A template for users to request help or ask a question.\n\n**Functionality:** Allows users to:\n\n1. Check prerequisites (search existing issues, report to correct repository)\n2. Ask a detailed question\n3. Provide environment information (software versions, etc.)", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".github/ISSUE_TEMPLATE/question.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the '.github/ISSUE_TEMPLATE/question.md' file:\n\n**Purpose:** A template for users to request help or ask questions.\n\n**Functionality:** Allows users to provide detailed context and information when requesting assistance."}
{"code": "### \ud83d\udce6 Pull Request\n\n[Provide a general summary of the pull request here.]\n\n### \u2705 Fixed Issues\n\n- [List any fixed issues here like: Fixes #XXXX]\n\n### \ud83d\udea8 Test instructions\n\n[Describe any additional context required to test the PR/feature/bug fix.]\n\n### \u26a0\ufe0f Don't forget to add a [semver](https://semver.org/) label!\n\n- `patch`: Bug Fix?\n- `minor`: New Feature?\n- `major`: Breaking Change?\n- `skip-release`: It's unnecessary to publish this change.\n", "explanation": "This block appears to be documentation for a pull request, summarizing:\n\n* A brief summary of the request\n* Fixed issues (with corresponding issue numbers)\n* Test instructions for verification\n* Semver label guidance (patch, minor, major, skip-release)", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".github/PULL_REQUEST_TEMPLATE.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file '.github/PULL_REQUEST_TEMPLATE.md':\n\n**Pull Request Template:**\n\nA template for contributors to create pull requests that are thoroughly reviewed and verified.\n\n**Key Components:**\n\n1. Brief Summary: A short description of the changes made.\n2. Fixed Issues: Lists issues addressed with corresponding issue numbers.\n3. Test Instructions: Detailed steps for verifying the changes.\n4. Semver Label Guidance: Guidelines on choosing the correct Semver label (patch, minor, major, skip-release)."}
{"code": "name: Publish\non:\n  push:\n    branches:\n      - 'master'\n      - 'staging'\n\nenv:\n  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n\njobs:\n  publish:\n    runs-on: ubuntu-20.04\n    name: Publish\n    environment: production\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Prepare repository\n        run: git fetch --unshallow --tags\n\n      - name: Setup node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 20\n          cache: 'yarn'\n\n      - name: Install dependencies\n        run: |\n          yarn -v\n          yarn install --immutable\n\n      - name: Build\n        run: yarn run build\n\n      - name: Create Release\n        run: yarn auto shipit -v\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Publish code changes on GitHub.\n\n**Functionality:** Triggers on push events to master or staging branches, checks out code, installs dependencies, builds project, and creates a new release using specific commands.", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".github/workflows/publish.yml", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and holistic summary of the file '.github/workflows/publish.yml':\n\n**Summary:** Automates publishing code changes on GitHub by triggering on push events to master or staging branches, building the project, and creating releases through automated workflows."}
{"code": "name: Tests\nconcurrency:\n  group: tests-${{ github.ref }}\n  cancel-in-progress: true\non:\n  push:\n    branches:\n      - \"master\"\n  pull_request:\n\njobs:\n  lint:\n    runs-on: ubuntu-20.04\n    name: Run linter and package audit\n    container:\n      image: node:20-slim\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 20\n          cache: 'yarn'\n      - run: |\n          yarn -v\n          yarn\n\n      - name: Lint\n        run: |\n          yarn run lint\n\n      - name: Audit Production Dependencies\n        run: yarn audit --groups dependencies\n\n  test:\n    runs-on: ubuntu-20.04\n    name: Run tests\n    container:\n      image: node:20-slim\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 20\n          cache: 'yarn'\n      - run: |\n          yarn -v\n          yarn\n\n      - name: Test\n        run: yarn run test\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Run automated tests for a Node.js project on GitHub.\n\n**Functionality:** \n\n* On push to master or pull request, run two jobs:\n\t1. **Lint**: Check code formatting and dependencies.\n\t2. **Test**: Run unit tests using `yarn test`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".github/workflows/test.yml", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file '.github/workflows/test.yml':\n\n**Purpose:** Automate testing for a Node.js project on GitHub.\n\n**Functionality:** Run two jobs on push: Lint code formatting & dependencies, then run unit tests with `yarn test`."}
{"code": "yarn lint-staged\n", "explanation": "This command runs linter checks on staged files using yarn.", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".husky/pre-commit-1123", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`.husky/pre-commit-1123`: Runs linter checks on staged files using `yarn`."}
{"code": "{\n  \"*.{ts,tsx}\": [\n    \"eslint --fix\"\n  ]\n}\n", "explanation": "This is a configuration block for ESLint, a JavaScript linter.\n\n**Purpose:** Run ESLint with auto-fixing on TypeScript and TypeScriptX files.\n\n**Functionality:** Automatically fix linting errors in `.ts` and `.tsx` files using ESLint's built-in `--fix` option.", "metadata": {"repo": "magiclabs/make-magic-app", "file": ".lintstagedrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file '.lintstagedrc.json':\n\n\"Lints JavaScript with auto-fixing enabled for TypeScript files (.ts, .tsx).\""}
{"code": "# v5.1.3 (Tue Sep 03 2024)\n\n#### \ud83d\udc1b Bug Fix\n\n- update links and CLI prompt [#8](https://github.com/magiclabs/make-magic-app/pull/8) ([@PBillingsby](https://github.com/PBillingsby))\n\n#### Authors: 1\n\n- pbillingsby ([@PBillingsby](https://github.com/PBillingsby))\n\n---\n\n# v5.1.2 (Tue Aug 20 2024)\n\n#### \ud83d\udc1b Bug Fix\n\n- fix: update versioning [#7](https://github.com/magiclabs/make-magic-app/pull/7) ([@trystendsmyth](https://github.com/trystendsmyth))\n\n#### Authors: 1\n\n- Tristan Smith ([@trystendsmyth](https://github.com/trystendsmyth))\n\n---\n\n# v5.1.1 (Mon Aug 7 2024)\n\n- Updates name, packages, paths and linting\n\n#### \ud83d\ude80 Enhancement\n\n- Adds etherlink mainnet\n\n# v5.1.0 (Mon Aug 7 2024)\n\n#### \ud83d\ude80 Enhancement\n\n- Adds etherlink mainnet\n\n# v5.0.3 (Mon Jul 29 2024)\n\n#### \ud83d\udca5 Breaking Change\n\n- Removes Universal support with associated flags, prompts, and templates\n- Adds architectural updates to EVM templates\n\n#### Authors: 1\n\n- pbillingsby ([@PBillingsby](https://github.com/PBillingsby))\n\n# v4.13.0 (Fri Apr 12 2024)\n\n#### \ud83d\ude80 Enhancement\n", "explanation": "**Summary:** This block appears to be a changelog for a software project, detailing bug fixes, enhancements, and breaking changes across various versions (v5.1.x to v4.13.0).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 1, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Adds Etherlink support\n\n#### Authors: 1\n\n- Hunter Cote ([@hcote](https://github.com/hcote))\n\n# v4.12.0 (Mon Mar 11 2024)\n\n#### \ud83d\ude80 Enhancement\n\n- Adds zkSync support\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- pbillingsby ([@PBillingsby](https://github.com/PBillingsby))\n\n# v4.4.2 (Wed Sep 27 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Removes dependency on Zombi\n- Fixes issue caused by web3.js update\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.4.1 (Wed Sep 27 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Remove Universal option from prompts (it remains available in flags)\n\n---\n\n# v4.4.0 (Wed Sep 27 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Updates the UI design of the templates\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.3.1 (Fri Sep 15 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Enables anonymous usage tracking with a command to opt out", "explanation": "Here is a concise summary:\n\n**Purpose:** This block enhances functionality, specifically in versions 4.12.0 and 4.4.2.\n\n**Functionality:** It adds Etherlink support (v4.12.0) and zkSync support, removes Zombi dependency, fixes web3.js update issues, updates UI design, and enables anonymous usage tracking with an opt-out option (various versions).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 2, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Updates Quickstart to use Dedicated Wallet\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.2.2 (Tue Sep 12 2023)\n\n#### \ud83d\udc1b Bug Fix\n\n- Fix bug where network isn't always added into template configuration\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.2.0 (Mon Sep 11 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Adds support for Solana and Flow\n- Minor updates to UI in templates\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.0.0 (Fri Aug 11 2023)\n\n#### \ud83d\udca5 Breaking Change\n\n- Major CLI tool overhaul [#89](https://github.com/magiclabs/create-magic-app/pull/89) ([@jamesrp13](https://github.com/jamesrp13))\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))", "explanation": "**Summary:** This block appears to be a GitHub release note, detailing changes made to the \"create-magic-app\" project. It mentions updates to the Quickstart feature to use Dedicated Wallets, bug fixes, and enhancements for Solana and Flow support. The purpose is to inform users of these changes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 3, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v3.2.1 (Thu Jan 13 2022)\n\n#### \ud83d\udc1b Bug Fix\n\n- Remove 'colors' as a transitive dep by updating 'tsc-alias' [#70](https://github.com/magiclabs/create-magic-app/pull/70) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.2.0 (Tue Oct 26 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- New template: `plug-and-play` [#67](https://github.com/magiclabs/create-magic-app/pull/67) ([@smithki](https://github.com/smithki))\n- add magic sms template [#65](https://github.com/magiclabs/create-magic-app/pull/65) ([@dgerrellsMagic](https://github.com/dgerrellsMagic))\n\n#### Authors: 2\n\n- [@dgerrellsMagic](https://github.com/dgerrellsMagic)\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.3 (Fri Aug 27 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update 'zombi' [#64](https://github.com/magiclabs/create-magic-app/pull/64) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n", "explanation": "This block appears to be a GitHub release note for the `create-magic-app` project. The purpose is to summarize changes made in each version, including bug fixes and enhancements. The functionality allows users to view the history of updates and changes made by various authors.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 4, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.2 (Fri Aug 27 2021)\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Fix typo in post-shutdown logs ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.1 (Fri Aug 27 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Graceful Shutdown [#63](https://github.com/magiclabs/create-magic-app/pull/63) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.0 (Sat Aug 14 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- - Add microsoft OAuth login [#59](https://github.com/magiclabs/create-magic-app/pull/59) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v3.0.2 (Wed Aug 11 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Replace existing Hasura scaffold with a new and updated one [#62](https://github.com/magiclabs/create-magic-app/pull/62) ([@seemcat](https://github.com/seemcat))\n\n#### Authors: 1\n", "explanation": "**Summary**\n\nThis block appears to be a GitHub commit history, listing changes made to a repository over time. It summarizes the purpose and functionality of specific commits, including bug fixes, enhancements, and code updates, along with the authors responsible for each change.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 5, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Maricris ([@seemcat](https://github.com/seemcat))\n\n---\n\n# v3.0.1 (Mon Aug 09 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update templates to include `auth.magic.link/sdk` CDN references [#61](https://github.com/magiclabs/create-magic-app/pull/61) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.0.0 (Mon Aug 09 2021)\n\n#### \ud83d\udca5 Breaking Change\n\n- Add NodeJS-compatible interface [#54](https://github.com/magiclabs/create-magic-app/pull/54) ([@smithki](https://github.com/smithki))\n\n#### \ud83d\udc1b Bug Fix\n\n- Chore: remove cfonts dependency [#55](https://github.com/magiclabs/create-magic-app/pull/55) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.11.0 (Mon Aug 02 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- [Hold merge]Add Twitch OAuth to the \"hello-world-social-login\" template [#58](https://github.com/magiclabs/create-magic-app/pull/58) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n", "explanation": "Here is a concise summary:\n\n**Release Notes**\n\nThis block appears to be release notes for a GitHub project, \"create-magic-app\", with versions v3.0.1, v3.0.0, and v2.11.0. It lists bug fixes, enhancements, and breaking changes made by specific contributors, along with links to related pull requests.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 6, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.10.0 (Fri Jul 09 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Svelte Template [#57](https://github.com/magiclabs/create-magic-app/pull/57) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.9.0 (Thu Jun 24 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Gatsby Template [#56](https://github.com/magiclabs/create-magic-app/pull/56) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.8.0 (Mon Jun 07 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Discord OAuth to the `\"hello-world-social-login\"` template [#53](https://github.com/magiclabs/create-magic-app/pull/53) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.7.1 (Tue May 25 2021)\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "**Summary**\n\nThis block appears to be a GitHub changelog for the `create-magic-app` repository, highlighting enhancements and bug fixes in various releases. It lists release versions, corresponding changes, authors, and links to relevant pull requests.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 7, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- - change success page link from referral to quickstart [#52](https://github.com/magiclabs/create-magic-app/pull/52) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.7.0 (Tue May 25 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- use redirection in quickstart template [#51](https://github.com/magiclabs/create-magic-app/pull/51) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.6.3 (Mon May 24 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update `zombi` dependency and re-compile NCC dependencies [#50](https://github.com/magiclabs/create-magic-app/pull/50) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.6.2 (Fri May 21 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Detect invalid Social Login provider input in the interactive flow [#49](https://github.com/magiclabs/create-magic-app/pull/49) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n", "explanation": "This block appears to be a changelog or release note from GitHub, summarizing updates to a project called \"create-magic-app\". The purpose is to document the changes made in specific versions (v2.7.0, v2.6.3, and v2.6.2) of the project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 8, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.6.1 (Thu May 20 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- NIT for the quickstart template [#48](https://github.com/magiclabs/create-magic-app/pull/48) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.6.0 (Wed May 19 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Jerryliu ch33208 create hello world template for magic dashboard [#45](https://github.com/magiclabs/create-magic-app/pull/45) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.5.0 (Wed May 05 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add template and scaffold for ExpressJS APIs [#44](https://github.com/magiclabs/create-magic-app/pull/44) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.4.2 (Fri Apr 30 2021)\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "**Summary**\n\nThis block is a GitHub release note for a package named \"create-magic-app\". It lists bug fixes, enhancements, and authors for specific versions of the package.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 9, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Nuxt Template minor update [#43](https://github.com/magiclabs/create-magic-app/pull/43) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.4.1 (Fri Apr 30 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Updated Nuxt Template [#42](https://github.com/magiclabs/create-magic-app/pull/42) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.4.0 (Thu Apr 29 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add template and scaffold for Nuxt JS [#41](https://github.com/magiclabs/create-magic-app/pull/41) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.3.1 (Mon Apr 26 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- add template and scaffold for vue and magic guide [#40](https://github.com/magiclabs/create-magic-app/pull/40) ([@dgerrellsMagic](https://github.com/dgerrellsMagic))\n\n#### Authors: 1\n", "explanation": "**Purpose:** Update Nuxt template functionality in a project.\n\n**Functionality:** Fix bugs and enhance features for creating Magic Apps with Nuxt JS, including adding templates and scaffolding.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 10, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- [@dgerrellsMagic](https://github.com/dgerrellsMagic)\n\n---\n\n# v2.3.0 (Fri Apr 23 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- ch37324 add magic stripe scaffold [#39](https://github.com/magiclabs/create-magic-app/pull/39) ([@dgerrellsMagic](https://github.com/dgerrellsMagic))\n\n#### Authors: 1\n\n- [@dgerrellsMagic](https://github.com/dgerrellsMagic)\n\n---\n\n# v2.2.2 (Tue Apr 06 2021)\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Normalize file paths when downloading templates from repo ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.2.1 (Tue Apr 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Rename script files to obey Windows pathing conventions [#38](https://github.com/magiclabs/create-magic-app/pull/38) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.2.0 (Thu Mar 25 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- auto jwt gen for hasura template [#37](https://github.com/magiclabs/create-magic-app/pull/37) ([@hcote](https://github.com/hcote))\n", "explanation": "This appears to be a GitHub release note block, possibly in Markdown format.\n\n**Summary:**\n\nThis block displays release notes for different versions of the `create-magic-app` repository. It shows enhancements, bug fixes, and other updates contributed by various authors, with links to their GitHub profiles and PRs.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 11, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "#### Authors: 1\n\n- Hunter Cote ([@hcote](https://github.com/hcote))\n\n---\n\n# v2.1.1 (Wed Feb 24 2021)\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Document Twitter in social login help flags ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.1.0 (Wed Feb 24 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Twitter OAuth to Social Logins scaffold [#36](https://github.com/magiclabs/create-magic-app/pull/36) ([@smithki](https://github.com/smithki))\n- added nextjs, hasura templates. updated react template to include env\u2026 [#35](https://github.com/magiclabs/create-magic-app/pull/35) ([@hcote](https://github.com/hcote))\n\n#### Authors: 2\n\n- Hunter Cote ([@hcote](https://github.com/hcote))\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.0.3 (Fri Feb 12 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update dependencies [#34](https://github.com/magiclabs/create-magic-app/pull/34) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n", "explanation": "**Summary:**\n\nThis is a GitHub release log for `create-magic-app`, a project by Magic Labs. It contains version history, including updates to social login features, bug fixes, and dependencies. The purpose of this block is to document and showcase the development progress of the project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 12, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "# v2.0.2 (Fri Feb 12 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Add 'zombi', 'react', and 'react-is' as NCC dependencies [#32](https://github.com/magiclabs/create-magic-app/pull/32) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.0.1 (Wed Feb 10 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Updated BSC nomenclature with link to testnet faucet [#31](https://github.com/magiclabs/create-magic-app/pull/31) ([@seanli](https://github.com/seanli))\n\n#### Authors: 1\n\n- Sean Li ([@seanli](https://github.com/seanli))\n\n---\n\n# v2.0.0 (Mon Feb 08 2021)\n\n#### \ud83d\udca5 Breaking Change\n\n- Change '--public-api-key' to '--publishable-api-key' [#30](https://github.com/magiclabs/create-magic-app/pull/30) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.5 (Sun Feb 07 2021)\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "**Change Log Summary**\n\nThis block is a change log for a software release, likely related to \"create-magic-app\". It lists updates from version 2.0.2 to 1.3.5, including bug fixes and breaking changes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 13, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Remove 'meow' dependency, parse flags with 'yargs-parser' [#29](https://github.com/magiclabs/create-magic-app/pull/29) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.4 (Sat Feb 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Fix 'decamelize' usage [#28](https://github.com/magiclabs/create-magic-app/pull/28) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.3 (Sat Feb 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Use exit code 0 upon --help or --version [#27](https://github.com/magiclabs/create-magic-app/pull/27) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.2 (Sat Feb 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update NCC dependencies [#26](https://github.com/magiclabs/create-magic-app/pull/26) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.1 (Sat Feb 06 2021)\n", "explanation": "This block appears to be a changelog for a GitHub repository, specifically the `create-magic-app` project. It lists several bug fixes and updates for versions v1.3.4 to v1.3.1, all of which were made by Ian K Smith (@smithki).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 14, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "#### \ud83d\udc1b Bug Fix\n\n- Add `--help` call-to-action upon reaching any validation message [#25](https://github.com/magiclabs/create-magic-app/pull/25) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.0 (Sat Feb 06 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add validation for template data provided as CLI flags [#24](https://github.com/magiclabs/create-magic-app/pull/24) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.2.1 (Fri Feb 05 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Fix broken template interpolation in `hello-world-social-logins` [#23](https://github.com/magiclabs/create-magic-app/pull/23) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.2.0 (Fri Feb 05 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add social logins template [#22](https://github.com/magiclabs/create-magic-app/pull/22) ([@smithki](https://github.com/smithki))", "explanation": "Here is a concise summary:\n\n**Block Summary**\n\nThis block appears to be a changelog or release notes section for a software project, specifically \"create-magic-app\". It lists updates (bug fixes, enhancements) with corresponding pull requests, authors, and version numbers (#v1.3.0, #v1.2.1, etc.).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 15, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Added Binance Smart Chain scaffold [#20](https://github.com/magiclabs/create-magic-app/pull/20) ([@seanli](https://github.com/seanli))\n\n#### \ud83d\udc1b Bug Fix\n\n- Included gas to allow contract deploy [#21](https://github.com/magiclabs/create-magic-app/pull/21) ([@seanli](https://github.com/seanli))\n\n#### Authors: 2\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n- Sean Li ([@seanli](https://github.com/seanli))\n\n---\n\n# v1.1.1 (Thu Feb 04 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Small template updates [#19](https://github.com/magiclabs/create-magic-app/pull/19) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.1.0 (Thu Feb 04 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add \"Hello world (React)\" template [#18](https://github.com/magiclabs/create-magic-app/pull/18) ([@smithki](https://github.com/smithki))\n- Document individual template options [#17](https://github.com/magiclabs/create-magic-app/pull/17) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n", "explanation": "**Summary**\n\nThis is a changelog for an app generator tool, \"create-magic-app\". It lists bug fixes and enhancements made in versions v1.1.1 and v1.1.0, including updates to templates and documentation.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 16, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.0.1 (Tue Feb 02 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Use `localhost` as the address for Hello World server [#16](https://github.com/magiclabs/create-magic-app/pull/16) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.0.0 (Tue Feb 02 2021)\n\n#### \ud83d\udca5 Breaking Change\n\n- Road to v1 [#9](https://github.com/magiclabs/create-magic-app/pull/9) ([@smithki](https://github.com/smithki))\n\n#### \ud83d\ude80 Enhancement\n\n- Add basic hello world template [#13](https://github.com/magiclabs/create-magic-app/pull/13) ([@smithki](https://github.com/smithki))\n\n#### \ud83d\udc1b Bug Fix\n\n- Add option to change which branch templates are sourced from [#12](https://github.com/magiclabs/create-magic-app/pull/12) ([@smithki](https://github.com/smithki))\n- Remove 'pkg-up' dependency [#11](https://github.com/magiclabs/create-magic-app/pull/11) ([@smithki](https://github.com/smithki))", "explanation": "This appears to be a GitHub release note or changelog for version 1.0.1 of the \"create-magic-app\" project. The purpose is to document changes, bug fixes, enhancements, and breaking changes made to the project.\n\nFunctionality-wise, it lists specific commits and pull requests that contributed to this version, including bug fixes, feature additions, and a breaking change, along with details on what was changed or added.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 17, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Fix NPM tarball omitting dist [#10](https://github.com/magiclabs/create-magic-app/pull/10) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.4 (Tue Feb 02 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Add 'react' and 'react-is' dependencies [#14](https://github.com/magiclabs/create-magic-app/pull/14) ([@smithki](https://github.com/smithki))\n\n#### \ud83c\udfe0 Internal\n\n- Introduce the new package name: `make-magic` [#8](https://github.com/magiclabs/create-magic-app/pull/8) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.3 (Mon Dec 28 2020)\n\n#### \ud83d\udc1b Bug Fix\n\n- Make NPM client customizable [#7](https://github.com/magiclabs/create-magic-app/pull/7) ([@smithki](https://github.com/smithki))\n\n#### \ud83c\udfe0 Internal\n\n- Remove 'templates.zip' from 'package.json#files' [#5](https://github.com/magiclabs/create-magic-app/pull/5) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n", "explanation": "This appears to be a GitHub release note for a package named `create-magic-app`. The summary is:\n\n**Release Note:** A minor update (v0.1.4) that fixes a bug related to NPM tarball omission and introduces customizable NPM client functionality.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 18, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.2 (Tue Dec 22 2020)\n\n#### \ud83d\udc1b Bug Fix\n\n- Add template ENV files [#4](https://github.com/magiclabs/create-magic-app/pull/4) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.1 (Tue Dec 22 2020)\n\n#### \ud83d\udc1b Bug Fix\n\n- Fix bug where incorrect CWD was chosen during `yarn install` and `yarn dev`/`yarn start` effects [#3](https://github.com/magiclabs/create-magic-app/pull/3) ([@smithki](https://github.com/smithki))\n- Update README to reflect change in package name [#1](https://github.com/magiclabs/create-magic-app/pull/1) ([@smithki](https://github.com/smithki))\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Update package.json; simplify 'bin' field ([@smithki](https://github.com/smithki))\n- Change package name, 'create-magic-app' is unavailable for now ([@smithki](https://github.com/smithki))\n- Adjust CircleCI for this repo's specific use-case ([@smithki](https://github.com/smithki))", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Release Notes**\n\nThis block documents version history and bug fixes for a package named \"create-magic-app\", with updates made by Ian K Smith. It lists changes, authors, and GitHub links.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 19, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "- Initial commit ([@smithki](https://github.com/smithki))\n\n#### \ud83d\udcdd Documentation\n\n- Add CHANGELOG.md [#2](https://github.com/magiclabs/create-magic-app/pull/2) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n", "explanation": "This block appears to be a GitHub commit history entry, likely from a Git repository.\n\n**Purpose:** Displaying information about a specific commit in a GitHub repository.\n**Functionality:** Shows the initial commit message, added documentation (CHANGELOG.md), and authorship by Ian K Smith (@smithki).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CHANGELOG.md", "chunk_number": 20, "total_chunks": 20}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CHANGELOG.md':\n\nThis changelog document summarizes updates to the \"create-magic-app\" project, detailing bug fixes, enhancements, breaking changes, and release notes across various versions. It lists specific commits, pull requests, authors, and version numbers for each update, with links to related GitHub profiles and PRs. The purpose is to document the development progress of the project, showcasing updates to social login features, Nuxt template functionality, and other improvements made by various contributors."}
{"code": "# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via an **issue**. This can be a feature request or a bug report. After a maintainer has triaged your issue, you are welcome to collaborate on a pull request. If your change is small or uncomplicated, you are welcome to open an issue and pull request simultaneously.\n\nPlease note we have a **code of conduct**, please follow it in all your interactions with the project.\n\n## Setting up for Local Development\n\n1. Fork this repository.\n2. Clone your fork.\n3. Create a new branch in your local repository with the following pattern:\n\n- For bug fixes: `bug/[issue_number]/[descriptive_bug_name]`\n- For features: `feature/[issue_number]/[descriptive_feature_name]`\n- For chores/the rest: `chore/[descriptive_chore_name]`\n\n4. Install dependencies with Yarn: `yarn install`\n5. Add `./node_modules/.bin` to your system's [`PATH`](<https://en.wikipedia.org/wiki/PATH_(variable)>), if it's not already listed.", "explanation": "Here is a concise summary:\n\n**Purpose:** Establish guidelines for contributing to the repository, including discussing changes via issues and collaborating on pull requests.\n\n**Functionality:**\n\n1. Instructions for setting up local development environment\n\t* Forking, cloning, and creating a new branch with specific naming conventions\n\t* Installing dependencies with Yarn", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 1, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "6. Start building for development: `yarn dev`\n\n### Development Scripts\n\n| NPM Script          | Description                                     |\n| --------------------| ------------------------------------------------|\n| `yarn dev`          | Start building the CLI tool in development mode.|\n| `yarn build`        | Build the CLI tool for production.              |\n| `yarn clean`        | Run cleaning scripts.                           |\n| `yarn lint`         | Run the linter.                                 |\n| `yarn test`         | Run unit tests.                                 |\n| `yarn template-dev` | Run development command for a specific template. Most changes will hot-reload|\n\n## Opening a Pull Request\n\n1. Open a pull request from your fork/branch to the upstream `master` branch of _this_ repository.\n2. Add a label for the [semver](https://semver.org/) update corresponding to your changes: `patch`, `minor`, or `major`.", "explanation": "**Purpose:** Define development scripts and provide instructions on how to open a pull request.\n\n**Functionality:**\n\n* List of development scripts for a CLI tool:\n\t+ `yarn dev`: Start building in development mode.\n\t+ `yarn build`: Build for production.\n\t+ `yarn clean`, `yarn lint`, `yarn test`: Run cleaning, linter, and unit tests respectively.\n\t+ `yarn template-dev`: Run hot-reload command for a specific template.\n* Instructions on how to open a pull request from a forked branch.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 2, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "3. A maintainer will review your code changes and offer feedback or suggestions if necessary. Once your changes are approved, a maintainer will merge the pull request for you and publish a release.\n\n## Cutting a release\n\nWe use [`auto`](https://github.com/intuit/auto) as our continuous delivery tool. Cutting a release is just a matter of merging to `master`. For pre-releases, you can create a `next` branch as the base for your experimental/W.I.P. feature. Please familiarize yourself with the [documentation for `auto`](https://intuit.github.io/auto/docs) if you are in a position to cut a release.\n\n## Community Templates\n\n### Adding a new template\n\n1. Fork the repository.\n2. Create a new branch `feat/<template_name>`.\n3. Create a new directory under `scaffolds` named `<template_name>`.\n4. Under that, create a `<template>` directory which will contain the source code.\n5. Create a `scaffold.ts` as well under the `<template_name>` directory.", "explanation": "Here is a concise summary:\n\n**Purpose:** Guide for contributors on submitting code changes and creating releases.\n\n**Functionality:**\n\n* Code review and feedback by maintainers\n* Release process using `auto` tool\n* Template addition guide for new community templates, including forking repository, creating a new branch, directory, and files.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 3, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "6. Modify `core/utils/templateMappings.ts` accordingly to include the new template.\n7. If your project uses `.env`, make sure it is named as `.env.example`\n\n### Updating existing template\n\n1. If there are changes in the template source itself, edit the template from `scaffolds/<template_name>/template`.\n2. If there are changes in the scaffold declaration, edit the `scaffolds/<template_name>/scaffold.ts`.\n3. Change `core/utils/templateMappings.ts` accordingly to incorporate new changes.\n\n### Adding / Updating prompts\n\nMagic CLI uses `enquirer` package to create prompts for the templates.\n\n#### Adding a new prompt\n\n1. Create the `<PromptNamespace>` in `scaffolds/prompts.ts`\n2. Make sure your prompt includes an exported type named `Data` and `flags` object. This will be used to show `--help` for the template specific options.\n3. If your prompt needs questions, export those questions in respective functions.\n\nHere's an example:\n\n```ts\nexport namespace GreetingPrompt {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Update templates and prompts for Magic CLI scaffolding system.\n\n**Functionality:**\n\n1. Modify template mappings in `core/utils/templateMappings.ts`.\n2. Edit template source, scaffold declaration, and prompt definitions as needed.\n3. Add or update prompts using `enquirer` package by creating a namespace in `scaffolds/prompts.ts`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 4, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "  //This type will be used in `scaffold.ts` to determine the type of data on which the template depends on\n  export type Data = {\n    Name: string;\n  };\n\n  //This prompt will be called if the data is not provided in flag arguments when calling the CLI\n  export const askName = async () =>\n    new Input({\n      name: 'Name',\n      message: 'What is your name?',\n      initial: 'John Doe',\n    }).run();\n\n  //Used for declaring flags, their aliases and providing help description\n  export const flags: Flags<Partial<Data>> = {\n    Name: {\n      type: String,\n      description: 'Your name.',\n    },\n  };\n}\n```\n\n#### Updating a prompt\n\nEdit the `scaffolds/prompts.ts` to update the desired prompt.\n\n> Update the `scaffolds/<template_name>/scaffold.ts` files which depend on the newly added / edited templates appropriately. Also, make necessary changes to `core/utils/templateMappings.ts`.\n\n### EJS Templates\n", "explanation": "**Summary**\n\nThis block defines a data type (`Data`) with a single property `Name`, and two functions:\n\n* `askName`: prompts the user for their name if not provided via CLI flags.\n* `flags`: declares a CLI flag for `Name` with a description.\n\nThis block is likely used in a CLI or terminal-based application to gather user input.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 5, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "Magic CLI uses `ejs` package to embed Javascript templates in the code which needs to change dynamically based on CLI inputs. If your template uses EJS embedding, make sure to add default values for your template in the `scaffolds/dev-data.ts` file. Make sure that the properties in the default valies matches that of the flags on which your template depends on.\n\nYou can run and test the template with `npm run template-dev <template-name>` script to make sure that the template is working as expected.\n\n## Contributor Covenant Code of Conduct\n\n### Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Explain how to use Magic CLI's EJS templating with dynamic code changes based on CLI inputs.\n\n**Functionality:** \n\n1. Use `ejs` package for template embedding.\n2. Add default values in `scaffolds/dev-data.ts` file that match template flags.\n3. Run `npm run template-dev <template-name>` to test templates.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 6, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "We pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n### Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without their explicit permission", "explanation": "**Community Guidelines**\n\nThis block outlines the expected behavior for community members, promoting:\n\n* Respectful interactions\n* Empathy and kindness\n* Constructive feedback and accountability\n\nIt also specifies unacceptable behaviors, including:\n\n* Harassment or derogatory comments\n* Sharing private information without permission\n* Inappropriate language or imagery", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 7, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n### Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n### Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n### Enforcement\n", "explanation": "**Summary:**\n\nThis block outlines a Code of Conduct that defines acceptable behavior in a professional setting. It specifies responsibilities for community leaders to enforce this code, including removing content deemed inappropriate, threatening, or offensive. The scope applies to all community spaces and public events where individuals are representing the community.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 8, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "Instances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at [support@magic.link](mailto:support@magic.link).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n### Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n#### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n#### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n", "explanation": "Here is a concise summary:\n\nThis block outlines the process for reporting abusive behavior in a community, including guidelines for enforcement and consequences for unacceptable actions.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 9, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n#### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n#### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community", "explanation": "Here is a concise summary:\n\nThis block outlines consequences for violating community standards, including:\n\n* Temporary bans (3) for serious infractions, restricting interaction with the community for a set period.\n* Permanent ban (4) for persistent or severe behavior, prohibiting all future interaction.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 10, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "standards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org),\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n", "explanation": "This block outlines a Code of Conduct that aims to prevent sustained inappropriate behavior, harassment, or disparagement within a community. The consequence for violating this code is a permanent ban from all public interaction within the community.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 11, "total_chunks": 11}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'CONTRIBUTING.md':\n\n**Summary**\n\nThis file outlines guidelines for contributing to the repository, including submitting code changes and creating releases. It covers setting up a local development environment, opening pull requests, running development scripts, and following community guidelines.\n\nThe document also provides instructions on updating templates and prompts for Magic CLI's scaffolding system, using EJS templating with dynamic code changes based on CLI inputs, and reporting abusive behavior within the community.\n\n**Key Points**\n\n* Guidelines for contributing to the repository\n* Setting up local development environment and running development scripts\n* Opening pull requests and submitting code changes\n* Updating templates and prompts for Magic CLI's scaffolding system\n* Using EJS templating with dynamic code changes based on CLI inputs\n* Reporting abusive behavior within the community\n* Consequences for violating community standards, including temporary and permanent bans."}
{"code": "# \ud83e\ude84 `make-magic-app`\n\n> A tool for quickly scaffolding an app with Magic baked-in!\n\n<p align=\"center\">\n  <a href=\"https://github.com/magiclabs/make-magic-app/blob/master/LICENSE\">License</a> \u00b7\n  <a href=\"https://github.com/magiclabs/make-magic-app/blob/master/CONTRIBUTING.md\">Contributing Guide</a>\n</p>\n\n## \ud83d\ude80 Usage\n\nGetting started with the interactive scaffolding tool is easy. Just run the following command in your preferred shell:\n\n```zsh\nnpx make-magic-app\n```\n\nFollow the interactive prompts to customize your project. Done! \u2728\n\n### Programmatic API\n\n`make-magic-app` also supports a programmatic API, so you can generate boilerplate codes with Magic built-in from your own NodeJS scripts.\n\n```ts\nimport makeMagicApp from 'make-magic-app';\n\nawait makeMagicApp({\n  template: 'hello-world', // Same as --template, -t\n  projectName: 'my-app',   // Same as --project-name, -p\n  branch: 'master',        // Same as --branch, -b\n\n  // The same, arbitrary data you can pass to a template via CLI flags.\n  data: {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A tool for scaffolding an app with Magic baked-in.\n\n**Functionality:** \n\n* Provides an interactive command-line interface (CLI) for generating boilerplate code.\n* Supports a programmatic API for generating code programmatically from NodeJS scripts.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "README.md", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'README.md':\n\n**README.md Summary**\n\nThis is a configuration object for the \"make-magic-app\" CLI tool, which provides a way to scaffold an app with Magic baked-in using either an interactive command-line interface or programmatically from NodeJS scripts."}
{"code": "    publishableApiKey: 'pk_live_...',\n    npmClient: 'yarn',\n  }\n})\n```\n\nSee `npx make-magic-app --help` for information about the available options. In general, most CLI flags map to camel-cased properties in the configuration given to `makeMagicApp({ ... })`.\n\nFor more information, you can print help text including template-specific options using `npx make-magic-app --help --template [i.e.: hello-world]`\n", "explanation": "**Summary**\n\nThis block is a configuration object for the \"make-magic-app\" CLI tool. It contains settings such as an API key (`publishableApiKey`) and an NPM client (`npmClient`).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "README.md", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'README.md':\n\n**README.md Summary**\n\nThis is a configuration object for the \"make-magic-app\" CLI tool, which provides a way to scaffold an app with Magic baked-in using either an interactive command-line interface or programmatically from NodeJS scripts."}
{"code": "#!/usr/bin/env node\nrequire('./dist/core/cli.js');\n", "explanation": "This block is a Node.js interpreter script, which runs another JavaScript file (`cli.js`) from the `./dist/core` directory when executed.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "bin.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'bin.js':\n\n**bin.js: Runs CLI Script**\n\nThis Node.js interpreter script executes the `cli.js` file in the `./dist/core` directory upon execution, providing an entry point for command-line functionality."}
{"code": "(()=>{var e={734:(e,t,n)=>{\"use strict\";e=n.nmd(e);const wrapAnsi16=(e,t)=>(...n)=>{const r=e(...n);return`\u001b[${r+t}m`};const wrapAnsi256=(e,t)=>(...n)=>{const r=e(...n);return`\u001b[${38+t};5;${r}m`};const wrapAnsi16m=(e,t)=>(...n)=>{const r=e(...n);return`\u001b[${38+t};2;${r[0]};${r[1]};${r[2]}m`};const ansi2ansi=e=>e;const rgb2rgb=(e,t,n)=>[e,t,n];const setLazyProperty=(e,t,n)=>{Object.defineProperty(e,t,{get:()=>{const r=n();Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true});return r},enumerable:true,configurable:true})};let r;const makeDynamicStyles=(e,t,s,o)=>{if(r===undefined){r=n(931)}const l=o?10:0;const c={};for(const[n,o]of Object.entries(r)){const r=n===\"ansi16\"?\"ansi\":n;if(n===t){c[r]=e(s,l)}else if(typeof o===\"object\"){c[r]=e(o[t],l)}}return c};function assembleStyles(){const e=new Map;const t={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};t.color.gray=t.color.blackBright;t.bgColor.bgGray=t.bgColor.bgBlackBright;t.color.grey=t.color.blackBright;t.bgColor.bgGrey=t.bgColor.bgBlackBright;for(const[n,r]of Object.entries(t)){for(const[n,s]of Object.entries(r)){t[n]={open:`\u001b[${s[0]}m`,close:`\u001b[${s[1]}m`};r[n]=t[n];e.set(s[0],s[1])}Object.defineProperty(t,n,{value:r,enumerable:false})}Object.defineProperty(t,\"codes\",{value:e,enumerable:false});t.color.close=\"\u001b[39m\";t.bgColor.close=\"\u001b[49m\";setLazyProperty(t.color,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,false)));setLazyProperty(t.color,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,false)));setLazyProperty(t.color,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,false)));setLazyProperty(t.bgColor,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,true)));setLazyProperty(t.bgColor,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,true)));setLazyProperty(t.bgColor,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,true)));return t}Object.defineProperty(e,\"exports\",{enumerable:true,get:assembleStyles})},818:(e,t,n)=>{\"use strict\";const r=n(734);const{stdout:s,stderr:o}=n(318);const{stringReplaceAll:l,stringEncaseCRLFWithFirstIndex:c}=n(415);const{isArray:i}=Array;const a=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"];const u=Object.create(null);const applyOptions=(e,t={})=>{if(t.level&&!(Number.isInteger(t.level)&&t.level>=0&&t.level<=3)){throw new Error(\"The `level` option should be an integer from 0 to 3\")}const n=s?s.level:0;e.level=t.level===undefined?n:t.level};class ChalkClass{constructor(e){return chalkFactory(e)}}const chalkFactory=e=>{const t={};applyOptions(t,e);t.template=(...e)=>chalkTag(t.template,...e);Object.setPrototypeOf(t,Chalk.prototype);Object.setPrototypeOf(t.template,t);t.template.constructor=()=>{throw new Error(\"`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.\")};t.template.Instance=ChalkClass;return t.template};function Chalk(e){return chalkFactory(e)}for(const[e,t]of Object.entries(r)){u[e]={get(){const n=createBuilder(this,createStyler(t.open,t.close,this._styler),this._isEmpty);Object.defineProperty(this,e,{value:n});return n}}}u.visible={get(){const e=createBuilder(this,this._styler,true);Object.defineProperty(this,\"visible\",{value:e});return e}};const h=[\"rgb\",\"hex\",\"keyword\",\"hsl\",\"hsv\",\"hwb\",\"ansi\",\"ansi256\"];for(const e of h){u[e]={get(){const{level:t}=this;return function(...n){const s=createStyler(r.color[a[t]][e](...n),r.color.close,this._styler);return createBuilder(this,s,this._isEmpty)}}}}for(const e of h){const t=\"bg\"+e[0].toUpperCase()+e.slice(1);u[t]={get(){const{level:t}=this;return function(...n){const s=createStyler(r.bgColor[a[t]][e](...n),r.bgColor.close,this._styler);return createBuilder(this,s,this._isEmpty)}}}}const f=Object.defineProperties((()=>{}),{...u,level:{enumerable:true,get(){return this._generator.level},set(e){this._generator.level=e}}});const createStyler=(e,t,n)=>{let r;let s;if(n===undefined){r=e;s=t}else{r=n.openAll+e;s=t+n.closeAll}return{open:e,close:t,openAll:r,closeAll:s,parent:n}};const createBuilder=(e,t,n)=>{const builder=(...e)=>{if(i(e[0])&&i(e[0].raw)){return applyStyle(builder,chalkTag(builder,...e))}return applyStyle(builder,e.length===1?\"\"+e[0]:e.join(\" \"))};Object.setPrototypeOf(builder,f);builder._generator=e;builder._styler=t;builder._isEmpty=n;return builder};const applyStyle=(e,t)=>{if(e.level<=0||!t){return e._isEmpty?\"\":t}let n=e._styler;if(n===undefined){return t}const{openAll:r,closeAll:s}=n;if(t.indexOf(\"\u001b\")!==-1){while(n!==undefined){t=l(t,n.close,n.open);n=n.parent}}const o=t.indexOf(\"\\n\");if(o!==-1){t=c(t,s,r,o)}return r+t+s};let g;const chalkTag=(e,...t)=>{const[r]=t;if(!i(r)||!i(r.raw)){return t.join(\" \")}const s=t.slice(1);const o=[r.raw[0]];for(let e=1;e<r.length;e++){o.push(String(s[e-1]).replace(/[{}\\\\]/g,\"\\\\$&\"),String(r.raw[e]))}if(g===undefined){g=n(500)}return g(e,o.join(\"\"))};Object.defineProperties(Chalk.prototype,u);const b=Chalk();b.supportsColor=s;b.stderr=Chalk({level:o?o.level:0});b.stderr.supportsColor=o;e.exports=b},500:e=>{\"use strict\";const t=/(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;const n=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;const r=/^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;const s=/\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;const o=new Map([[\"n\",\"\\n\"],[\"r\",\"\\r\"],[\"t\",\"\\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\u001b\"],[\"a\",\"\u0007\"]]);function unescape(e){const t=e[0]===\"u\";const n=e[1]===\"{\";if(t&&!n&&e.length===5||e[0]===\"x\"&&e.length===3){return String.fromCharCode(parseInt(e.slice(1),16))}if(t&&n){return String.fromCodePoint(parseInt(e.slice(2,-1),16))}return o.get(e)||e}function parseArguments(e,t){const n=[];const o=t.trim().split(/\\s*,\\s*/g);let l;for(const t of o){const o=Number(t);if(!Number.isNaN(o)){n.push(o)}else if(l=t.match(r)){n.push(l[2].replace(s,((e,t,n)=>t?unescape(t):n)))}else{throw new Error(`Invalid Chalk template style argument: ${t} (in style '${e}')`)}}return n}function parseStyle(e){n.lastIndex=0;const t=[];let r;while((r=n.exec(e))!==null){const e=r[1];if(r[2]){const n=parseArguments(e,r[2]);t.push([e].concat(n))}else{t.push([e])}}return t}function buildStyle(e,t){const n={};for(const e of t){for(const t of e.styles){n[t[0]]=e.inverse?null:t.slice(1)}}let r=e;for(const[e,t]of Object.entries(n)){if(!Array.isArray(t)){continue}if(!(e in r)){throw new Error(`Unknown Chalk style: ${e}`)}r=t.length>0?r[e](...t):r[e]}return r}e.exports=(e,n)=>{const r=[];const s=[];let o=[];n.replace(t,((t,n,l,c,i,a)=>{if(n){o.push(unescape(n))}else if(c){const t=o.join(\"\");o=[];s.push(r.length===0?t:buildStyle(e,r)(t));r.push({inverse:l,styles:parseStyle(c)})}else if(i){if(r.length===0){throw new Error(\"Found extraneous } in Chalk template literal\")}s.push(buildStyle(e,r)(o.join(\"\")));o=[];r.pop()}else{o.push(a)}}));s.push(o.join(\"\"));if(r.length>0){const e=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(e)}return s.join(\"\")}},415:e=>{\"use strict\";const stringReplaceAll=(e,t,n)=>{let r=e.indexOf(t);if(r===-1){return e}const s=t.length;let o=0;let l=\"\";do{l+=e.substr(o,r-o)+t+n;o=r+s;r=e.indexOf(t,o)}while(r!==-1);l+=e.substr(o);return l};const stringEncaseCRLFWithFirstIndex=(e,t,n,r)=>{let s=0;let o=\"\";do{const l=e[r-1]===\"\\r\";o+=e.substr(s,(l?r-1:r)-s)+t+(l?\"\\r\\n\":\"\\n\")+n;s=r+1;r=e.indexOf(\"\\n\",s)}while(r!==-1);o+=e.substr(s);return o};e.exports={stringReplaceAll:stringReplaceAll,stringEncaseCRLFWithFirstIndex:stringEncaseCRLFWithFirstIndex}},391:(e,t,n)=>{const r=n(510);const s={};for(const e of Object.keys(r)){s[r[e]]=e}const o={rgb:{channels:3,labels:\"rgb\"},hsl:{channels:3,labels:\"hsl\"},hsv:{channels:3,labels:\"hsv\"},hwb:{channels:3,labels:\"hwb\"},cmyk:{channels:4,labels:\"cmyk\"},xyz:{channels:3,labels:\"xyz\"},lab:{channels:3,labels:\"lab\"},lch:{channels:3,labels:\"lch\"},hex:{channels:1,labels:[\"hex\"]},keyword:{channels:1,labels:[\"keyword\"]},ansi16:{channels:1,labels:[\"ansi16\"]},ansi256:{channels:1,labels:[\"ansi256\"]},hcg:{channels:3,labels:[\"h\",\"c\",\"g\"]},apple:{channels:3,labels:[\"r16\",\"g16\",\"b16\"]},gray:{channels:1,labels:[\"gray\"]}};e.exports=o;for(const e of Object.keys(o)){if(!(\"channels\"in o[e])){throw new Error(\"missing channels property: \"+e)}if(!(\"labels\"in o[e])){throw new Error(\"missing channel labels property: \"+e)}if(o[e].labels.length!==o[e].channels){throw new Error(\"channel and label counts mismatch: \"+e)}const{channels:t,labels:n}=o[e];delete o[e].channels;delete o[e].labels;Object.defineProperty(o[e],\"channels\",{value:t});Object.defineProperty(o[e],\"labels\",{value:n})}o.rgb.hsl=function(e){const t=e[0]/255;const n=e[1]/255;const r=e[2]/255;const s=Math.min(t,n,r);const o=Math.max(t,n,r);const l=o-s;let c;let i;if(o===s){c=0}else if(t===o){c=(n-r)/l}else if(n===o){c=2+(r-t)/l}else if(r===o){c=4+(t-n)/l}c=Math.min(c*60,360);if(c<0){c+=360}const a=(s+o)/2;if(o===s){i=0}else if(a<=.5){i=l/(o+s)}else{i=l/(2-o-s)}return[c,i*100,a*100]};o.rgb.hsv=function(e){let t;let n;let r;let s;let o;const l=e[0]/255;const c=e[1]/255;const i=e[2]/255;const a=Math.max(l,c,i);const u=a-Math.min(l,c,i);const diffc=function(e){return(a-e)/6/u+1/2};if(u===0){s=0;o=0}else{o=u/a;t=diffc(l);n=diffc(c);r=diffc(i);if(l===a){s=r-n}else if(c===a){s=1/3+t-r}else if(i===a){s=2/3+n-t}if(s<0){s+=1}else if(s>1){s-=1}}return[s*360,o*100,a*100]};o.rgb.hwb=function(e){const t=e[0];const n=e[1];let r=e[2];const s=o.rgb.hsl(e)[0];const l=1/255*Math.min(t,Math.min(n,r));r=1-1/255*Math.max(t,Math.max(n,r));return[s,l*100,r*100]};o.rgb.cmyk=function(e){const t=e[0]/255;const n=e[1]/255;const r=e[2]/255;const s=Math.min(1-t,1-n,1-r);const o=(1-t-s)/(1-s)||0;const l=(1-n-s)/(1-s)||0;const c=(1-r-s)/(1-s)||0;return[o*100,l*100,c*100,s*100]};function comparativeDistance(e,t){return(e[0]-t[0])**2+(e[1]-t[1])**2+(e[2]-t[2])**2}o.rgb.keyword=function(e){const t=s[e];if(t){return t}let n=Infinity;let o;for(const t of Object.keys(r)){const s=r[t];const l=comparativeDistance(e,s);if(l<n){n=l;o=t}}return o};o.keyword.rgb=function(e){return r[e]};o.rgb.xyz=function(e){let t=e[0]/255;let n=e[1]/255;let r=e[2]/255;t=t>.04045?((t+.055)/1.055)**2.4:t/12.92;n=n>.04045?((n+.055)/1.055)**2.4:n/12.92;r=r>.04045?((r+.055)/1.055)**2.4:r/12.92;const s=t*.4124+n*.3576+r*.1805;const o=t*.2126+n*.7152+r*.0722;const l=t*.0193+n*.1192+r*.9505;return[s*100,o*100,l*100]};o.rgb.lab=function(e){const t=o.rgb.xyz(e);let n=t[0];let r=t[1];let s=t[2];n/=95.047;r/=100;s/=108.883;n=n>.008856?n**(1/3):7.787*n+16/116;r=r>.008856?r**(1/3):7.787*r+16/116;s=s>.008856?s**(1/3):7.787*s+16/116;const l=116*r-16;const c=500*(n-r);const i=200*(r-s);return[l,c,i]};o.hsl.rgb=function(e){const t=e[0]/360;const n=e[1]/100;const r=e[2]/100;let s;let o;let l;if(n===0){l=r*255;return[l,l,l]}if(r<.5){s=r*(1+n)}else{s=r+n-r*n}const c=2*r-s;const i=[0,0,0];for(let e=0;e<3;e++){o=t+1/3*-(e-1);if(o<0){o++}if(o>1){o--}if(6*o<1){l=c+(s-c)*6*o}else if(2*o<1){l=s}else if(3*o<2){l=c+(s-c)*(2/3-o)*6}else{l=c}i[e]=l*255}return i};o.hsl.hsv=function(e){const t=e[0];let n=e[1]/100;let r=e[2]/100;let s=n;const o=Math.max(r,.01);r*=2;n*=r<=1?r:2-r;s*=o<=1?o:2-o;const l=(r+n)/2;const c=r===0?2*s/(o+s):2*n/(r+n);return[t,c*100,l*100]};o.hsv.rgb=function(e){const t=e[0]/60;const n=e[1]/100;let r=e[2]/100;const s=Math.floor(t)%6;const o=t-Math.floor(t);const l=255*r*(1-n);const c=255*r*(1-n*o);const i=255*r*(1-n*(1-o));r*=255;switch(s){case 0:return[r,i,l];case 1:return[c,r,l];case 2:return[l,r,i];case 3:return[l,c,r];case 4:return[i,l,r];case 5:return[r,l,c]}};o.hsv.hsl=function(e){const t=e[0];const n=e[1]/100;const r=e[2]/100;const s=Math.max(r,.01);let o;let l;l=(2-n)*r;const c=(2-n)*s;o=n*s;o/=c<=1?c:2-c;o=o||0;l/=2;return[t,o*100,l*100]};o.hwb.rgb=function(e){const t=e[0]/360;let n=e[1]/100;let r=e[2]/100;const s=n+r;let o;if(s>1){n/=s;r/=s}const l=Math.floor(6*t);const c=1-r;o=6*t-l;if((l&1)!==0){o=1-o}const i=n+o*(c-n);let a;let u;let h;switch(l){default:case 6:case 0:a=c;u=i;h=n;break;case 1:a=i;u=c;h=n;break;case 2:a=n;u=c;h=i;break;case 3:a=n;u=i;h=c;break;case 4:a=i;u=n;h=c;break;case 5:a=c;u=n;h=i;break}return[a*255,u*255,h*255]};o.cmyk.rgb=function(e){const t=e[0]/100;const n=e[1]/100;const r=e[2]/100;const s=e[3]/100;const o=1-Math.min(1,t*(1-s)+s);const l=1-Math.min(1,n*(1-s)+s);const c=1-Math.min(1,r*(1-s)+s);return[o*255,l*255,c*255]};o.xyz.rgb=function(e){const t=e[0]/100;const n=e[1]/100;const r=e[2]/100;let s;let o;let l;s=t*3.2406+n*-1.5372+r*-.4986;o=t*-.9689+n*1.8758+r*.0415;l=t*.0557+n*-.204+r*1.057;s=s>.0031308?1.055*s**(1/2.4)-.055:s*12.92;o=o>.0031308?1.055*o**(1/2.4)-.055:o*12.92;l=l>.0031308?1.055*l**(1/2.4)-.055:l*12.92;s=Math.min(Math.max(0,s),1);o=Math.min(Math.max(0,o),1);l=Math.min(Math.max(0,l),1);return[s*255,o*255,l*255]};o.xyz.lab=function(e){let t=e[0];let n=e[1];let r=e[2];t/=95.047;n/=100;r/=108.883;t=t>.008856?t**(1/3):7.787*t+16/116;n=n>.008856?n**(1/3):7.787*n+16/116;r=r>.008856?r**(1/3):7.787*r+16/116;const s=116*n-16;const o=500*(t-n);const l=200*(n-r);return[s,o,l]};o.lab.xyz=function(e){const t=e[0];const n=e[1];const r=e[2];let s;let o;let l;o=(t+16)/116;s=n/500+o;l=o-r/200;const c=o**3;const i=s**3;const a=l**3;o=c>.008856?c:(o-16/116)/7.787;s=i>.008856?i:(s-16/116)/7.787;l=a>.008856?a:(l-16/116)/7.787;s*=95.047;o*=100;l*=108.883;return[s,o,l]};o.lab.lch=function(e){const t=e[0];const n=e[1];const r=e[2];let s;const o=Math.atan2(r,n);s=o*360/2/Math.PI;if(s<0){s+=360}const l=Math.sqrt(n*n+r*r);return[t,l,s]};o.lch.lab=function(e){const t=e[0];const n=e[1];const r=e[2];const s=r/360*2*Math.PI;const o=n*Math.cos(s);const l=n*Math.sin(s);return[t,o,l]};o.rgb.ansi16=function(e,t=null){const[n,r,s]=e;let l=t===null?o.rgb.hsv(e)[2]:t;l=Math.round(l/50);if(l===0){return 30}let c=30+(Math.round(s/255)<<2|Math.round(r/255)<<1|Math.round(n/255));if(l===2){c+=60}return c};o.hsv.ansi16=function(e){return o.rgb.ansi16(o.hsv.rgb(e),e[2])};o.rgb.ansi256=function(e){const t=e[0];const n=e[1];const r=e[2];if(t===n&&n===r){if(t<8){return 16}if(t>248){return 231}return Math.round((t-8)/247*24)+232}const s=16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5);return s};o.ansi16.rgb=function(e){let t=e%10;if(t===0||t===7){if(e>50){t+=3.5}t=t/10.5*255;return[t,t,t]}const n=(~~(e>50)+1)*.5;const r=(t&1)*n*255;const s=(t>>1&1)*n*255;const o=(t>>2&1)*n*255;return[r,s,o]};o.ansi256.rgb=function(e){if(e>=232){const t=(e-232)*10+8;return[t,t,t]}e-=16;let t;const n=Math.floor(e/36)/5*255;const r=Math.floor((t=e%36)/6)/5*255;const s=t%6/5*255;return[n,r,s]};o.rgb.hex=function(e){const t=((Math.round(e[0])&255)<<16)+((Math.round(e[1])&255)<<8)+(Math.round(e[2])&255);const n=t.toString(16).toUpperCase();return\"000000\".substring(n.length)+n};o.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t){return[0,0,0]}let n=t[0];if(t[0].length===3){n=n.split(\"\").map((e=>e+e)).join(\"\")}const r=parseInt(n,16);const s=r>>16&255;const o=r>>8&255;const l=r&255;return[s,o,l]};o.rgb.hcg=function(e){const t=e[0]/255;const n=e[1]/255;const r=e[2]/255;const s=Math.max(Math.max(t,n),r);const o=Math.min(Math.min(t,n),r);const l=s-o;let c;let i;if(l<1){c=o/(1-l)}else{c=0}if(l<=0){i=0}else if(s===t){i=(n-r)/l%6}else if(s===n){i=2+(r-t)/l}else{i=4+(t-n)/l}i/=6;i%=1;return[i*360,l*100,c*100]};o.hsl.hcg=function(e){const t=e[1]/100;const n=e[2]/100;const r=n<.5?2*t*n:2*t*(1-n);let s=0;if(r<1){s=(n-.5*r)/(1-r)}return[e[0],r*100,s*100]};o.hsv.hcg=function(e){const t=e[1]/100;const n=e[2]/100;const r=t*n;let s=0;if(r<1){s=(n-r)/(1-r)}return[e[0],r*100,s*100]};o.hcg.rgb=function(e){const t=e[0]/360;const n=e[1]/100;const r=e[2]/100;if(n===0){return[r*255,r*255,r*255]}const s=[0,0,0];const o=t%1*6;const l=o%1;const c=1-l;let i=0;switch(Math.floor(o)){case 0:s[0]=1;s[1]=l;s[2]=0;break;case 1:s[0]=c;s[1]=1;s[2]=0;break;case 2:s[0]=0;s[1]=1;s[2]=l;break;case 3:s[0]=0;s[1]=c;s[2]=1;break;case 4:s[0]=l;s[1]=0;s[2]=1;break;default:s[0]=1;s[1]=0;s[2]=c}i=(1-n)*r;return[(n*s[0]+i)*255,(n*s[1]+i)*255,(n*s[2]+i)*255]};o.hcg.hsv=function(e){const t=e[1]/100;const n=e[2]/100;const r=t+n*(1-t);let s=0;if(r>0){s=t/r}return[e[0],s*100,r*100]};o.hcg.hsl=function(e){const t=e[1]/100;const n=e[2]/100;const r=n*(1-t)+.5*t;let s=0;if(r>0&&r<.5){s=t/(2*r)}else if(r>=.5&&r<1){s=t/(2*(1-r))}return[e[0],s*100,r*100]};o.hcg.hwb=function(e){const t=e[1]/100;const n=e[2]/100;const r=t+n*(1-t);return[e[0],(r-t)*100,(1-r)*100]};o.hwb.hcg=function(e){const t=e[1]/100;const n=e[2]/100;const r=1-n;const s=r-t;let o=0;if(s<1){o=(r-s)/(1-s)}return[e[0],s*100,o*100]};o.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]};o.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]};o.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]};o.gray.hsl=function(e){return[0,0,e[0]]};o.gray.hsv=o.gray.hsl;o.gray.hwb=function(e){return[0,100,e[0]]};o.gray.cmyk=function(e){return[0,0,0,e[0]]};o.gray.lab=function(e){return[e[0],0,0]};o.gray.hex=function(e){const t=Math.round(e[0]/100*255)&255;const n=(t<<16)+(t<<8)+t;const r=n.toString(16).toUpperCase();return\"000000\".substring(r.length)+r};o.rgb.gray=function(e){const t=(e[0]+e[1]+e[2])/3;return[t/255*100]}},931:(e,t,n)=>{const r=n(391);const s=n(880);const o={};const l=Object.keys(r);function wrapRaw(e){const wrappedFn=function(...t){const n=t[0];if(n===undefined||n===null){return n}if(n.length>1){t=n}return e(t)};if(\"conversion\"in e){wrappedFn.conversion=e.conversion}return wrappedFn}function wrapRounded(e){const wrappedFn=function(...t){const n=t[0];if(n===undefined||n===null){return n}if(n.length>1){t=n}const r=e(t);if(typeof r===\"object\"){for(let e=r.length,t=0;t<e;t++){r[t]=Math.round(r[t])}}return r};if(\"conversion\"in e){wrappedFn.conversion=e.conversion}return wrappedFn}l.forEach((e=>{o[e]={};Object.defineProperty(o[e],\"channels\",{value:r[e].channels});Object.defineProperty(o[e],\"labels\",{value:r[e].labels});const t=s(e);const n=Object.keys(t);n.forEach((n=>{const r=t[n];o[e][n]=wrapRounded(r);o[e][n].raw=wrapRaw(r)}))}));e.exports=o},880:(e,t,n)=>{const r=n(391);function buildGraph(){const e={};const t=Object.keys(r);for(let n=t.length,r=0;r<n;r++){e[t[r]]={distance:-1,parent:null}}return e}function deriveBFS(e){const t=buildGraph();const n=[e];t[e].distance=0;while(n.length){const e=n.pop();const s=Object.keys(r[e]);for(let r=s.length,o=0;o<r;o++){const r=s[o];const l=t[r];if(l.distance===-1){l.distance=t[e].distance+1;l.parent=e;n.unshift(r)}}}return t}function link(e,t){return function(n){return t(e(n))}}function wrapConversion(e,t){const n=[t[e].parent,e];let s=r[t[e].parent][e];let o=t[e].parent;while(t[o].parent){n.unshift(t[o].parent);s=link(r[t[o].parent][o],s);o=t[o].parent}s.conversion=n;return s}e.exports=function(e){const t=deriveBFS(e);const n={};const r=Object.keys(t);for(let e=r.length,s=0;s<e;s++){const e=r[s];const o=t[e];if(o.parent===null){continue}n[e]=wrapConversion(e,t)}return n}},510:e=>{\"use strict\";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},621:e=>{\"use strict\";e.exports=(e,t=process.argv)=>{const n=e.startsWith(\"-\")?\"\":e.length===1?\"-\":\"--\";const r=t.indexOf(n+e);const s=t.indexOf(\"--\");return r!==-1&&(s===-1||r<s)}},318:(e,t,n)=>{\"use strict\";const r=n(37);const s=n(224);const o=n(621);const{env:l}=process;let c;if(o(\"no-color\")||o(\"no-colors\")||o(\"color=false\")||o(\"color=never\")){c=0}else if(o(\"color\")||o(\"colors\")||o(\"color=true\")||o(\"color=always\")){c=1}if(\"FORCE_COLOR\"in l){if(l.FORCE_COLOR===\"true\"){c=1}else if(l.FORCE_COLOR===\"false\"){c=0}else{c=l.FORCE_COLOR.length===0?1:Math.min(parseInt(l.FORCE_COLOR,10),3)}}function translateLevel(e){if(e===0){return false}return{level:e,hasBasic:true,has256:e>=2,has16m:e>=3}}function supportsColor(e,t){if(c===0){return 0}if(o(\"color=16m\")||o(\"color=full\")||o(\"color=truecolor\")){return 3}if(o(\"color=256\")){return 2}if(e&&!t&&c===undefined){return 0}const n=c||0;if(l.TERM===\"dumb\"){return n}if(process.platform===\"win32\"){const e=r.release().split(\".\");if(Number(e[0])>=10&&Number(e[2])>=10586){return Number(e[2])>=14931?3:2}return 1}if(\"CI\"in l){if([\"TRAVIS\",\"CIRCLECI\",\"APPVEYOR\",\"GITLAB_CI\",\"GITHUB_ACTIONS\",\"BUILDKITE\"].some((e=>e in l))||l.CI_NAME===\"codeship\"){return 1}return n}if(\"TEAMCITY_VERSION\"in l){return/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(l.TEAMCITY_VERSION)?1:0}if(l.COLORTERM===\"truecolor\"){return 3}if(\"TERM_PROGRAM\"in l){const e=parseInt((l.TERM_PROGRAM_VERSION||\"\").split(\".\")[0],10);switch(l.TERM_PROGRAM){case\"iTerm.app\":return e>=3?3:2;case\"Apple_Terminal\":return 2}}if(/-256(color)?$/i.test(l.TERM)){return 2}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(l.TERM)){return 1}if(\"COLORTERM\"in l){return 1}return n}function getSupportLevel(e){const t=supportsColor(e,e&&e.isTTY);return translateLevel(t)}e.exports={supportsColor:getSupportLevel,stdout:translateLevel(supportsColor(true,s.isatty(1))),stderr:translateLevel(supportsColor(true,s.isatty(2)))}},37:e=>{\"use strict\";e.exports=require(\"os\")},224:e=>{\"use strict\";e.exports=require(\"tty\")}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var s=t[n]={id:n,loaded:false,exports:{}};var o=true;try{e[n](s,s.exports,__nccwpck_require__);o=false}finally{if(o)delete t[n]}s.loaded=true;return s.exports}(()=>{__nccwpck_require__.nmd=e=>{e.paths=[];if(!e.children)e.children=[];return e}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n=__nccwpck_require__(818);module.exports=n})();", "explanation": "It seems like you're trying to write a JavaScript file, but it's getting truncated. I'll assume what you want to do is create a function that maps colors from a color name to its RGB value.\n\nHere's a simplified version of your code with only the color mapping part:\n\n```javascript\nfunction getColor(name) {\n  const colors = {\n    aliceblue: [240, 248, 255],\n    // add more colors here...\n  };\n  \n  return colors[name.toLowerCase()] || [255, 255];\n}\n\n// Example usage:\nconst r = getColor('aliceblue');\nconsole.log(r); // Output: [240, 248, 255]\n```\n\nIf you're trying to create a more complex function with lots of colors, I can help you organize it better.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/chalk/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'compiled/chalk/index.js':\n\nThe `getColor` function maps color names (e.g. \"aliceblue\") to their corresponding RGB values, returning a default value `[255, 255]` if the name is not found in the predefined color list."}
{"code": "// List NPM dependencies here which are to be pre-compiled and saved in the Git\n// repository. This enables us to deliver a tool that has \"zero dependencies\"\n// and vastly improves download performance via `npx`.\n\n[\n  \"chalk\",\n  \"decamelize\",\n  \"execa\",\n  \"got\",\n  \"react\",\n  \"react-is\",\n  \"tar\",\n  \"wrap-ansi\",\n  \"yargs-parser\"\n]\n", "explanation": "This block lists dependencies for pre-compilation and Git repository storage, enabling a zero-dependency tool with improved download performance via `npx`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/config.jsonc", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to the point summary:\n\n**'compiled/config.jsonc' Summary**\n\nConfigures a zero-dependency tool with optimized download performance using `npx`, listing dependencies for pre-compilation and Git repository storage."}
{"code": "(()=>{\"use strict\";var e={159:e=>{const handlePreserveConsecutiveUppercase=(e,r)=>{e=e.replace(/((?<![\\p{Uppercase_Letter}\\d])[\\p{Uppercase_Letter}\\d](?![\\p{Uppercase_Letter}\\d]))/gu,(e=>e.toLowerCase()));return e.replace(/(\\p{Uppercase_Letter}+)(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu,((e,t,p)=>t+r+p.toLowerCase()))};e.exports=(e,{separator:r=\"_\",preserveConsecutiveUppercase:t=false}={})=>{if(!(typeof e===\"string\"&&typeof r===\"string\")){throw new TypeError(\"The `text` and `separator` arguments should be of type `string`\")}if(e.length<2){return t?e:e.toLowerCase()}const p=`$1${r}$2`;const a=e.replace(/([\\p{Lowercase_Letter}\\d])(\\p{Uppercase_Letter})/gu,p);if(t){return handlePreserveConsecutiveUppercase(a,r)}return a.replace(/(\\p{Uppercase_Letter})(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu,p).toLowerCase()}}};var r={};function __nccwpck_require__(t){var p=r[t];if(p!==undefined){return p.exports}var a=r[t]={exports:{}};var _=true;try{e[t](a,a.exports,__nccwpck_require__);_=false}finally{if(_)delete r[t]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(159);module.exports=t})();", "explanation": "This is a JavaScript module that exports a single function. The purpose of this function is to format a given string by inserting a separator between consecutive uppercase letters, preserving the original case if requested.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/decamelize/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary:\n\nThe `decamelize` module exports a function to insert separators between uppercase letters in a given string, while preserving original case if desired."}
{"code": "(()=>{var e={746:(e,t,n)=>{\"use strict\";const r=n(81);const o=n(855);const s=n(101);function spawn(e,t,n){const i=o(e,t,n);const a=r.spawn(i.command,i.args,i.options);s.hookChildProcess(a,i);return a}function spawnSync(e,t,n){const i=o(e,t,n);const a=r.spawnSync(i.command,i.args,i.options);a.error=a.error||s.verifyENOENTSync(a.status,i);return a}e.exports=spawn;e.exports.spawn=spawn;e.exports.sync=spawnSync;e.exports._parse=o;e.exports._enoent=s},101:e=>{\"use strict\";const t=process.platform===\"win32\";function notFoundError(e,t){return Object.assign(new Error(`${t} ${e.command} ENOENT`),{code:\"ENOENT\",errno:\"ENOENT\",syscall:`${t} ${e.command}`,path:e.command,spawnargs:e.args})}function hookChildProcess(e,n){if(!t){return}const r=e.emit;e.emit=function(t,o){if(t===\"exit\"){const t=verifyENOENT(o,n,\"spawn\");if(t){return r.call(e,\"error\",t)}}return r.apply(e,arguments)}}function verifyENOENT(e,n){if(t&&e===1&&!n.file){return notFoundError(n.original,\"spawn\")}return null}function verifyENOENTSync(e,n){if(t&&e===1&&!n.file){return notFoundError(n.original,\"spawnSync\")}return null}e.exports={hookChildProcess:hookChildProcess,verifyENOENT:verifyENOENT,verifyENOENTSync:verifyENOENTSync,notFoundError:notFoundError}},855:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(274);const s=n(48);const i=n(252);const a=process.platform===\"win32\";const c=/\\.(?:com|exe)$/i;const d=/node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;function detectShebang(e){e.file=o(e);const t=e.file&&i(e.file);if(t){e.args.unshift(e.file);e.command=t;return o(e)}return e.file}function parseNonShell(e){if(!a){return e}const t=detectShebang(e);const n=!c.test(t);if(e.options.forceShell||n){const n=d.test(t);e.command=r.normalize(e.command);e.command=s.command(e.command);e.args=e.args.map((e=>s.argument(e,n)));const o=[e.command].concat(e.args).join(\" \");e.args=[\"/d\",\"/s\",\"/c\",`\"${o}\"`];e.command=process.env.comspec||\"cmd.exe\";e.options.windowsVerbatimArguments=true}return e}function parse(e,t,n){if(t&&!Array.isArray(t)){n=t;t=null}t=t?t.slice(0):[];n=Object.assign({},n);const r={command:e,args:t,options:n,file:undefined,original:{command:e,args:t}};return n.shell?r:parseNonShell(r)}e.exports=parse},48:e=>{\"use strict\";const t=/([()\\][%!^\"`<>&|;, *?])/g;function escapeCommand(e){e=e.replace(t,\"^$1\");return e}function escapeArgument(e,n){e=`${e}`;e=e.replace(/(\\\\*)\"/g,'$1$1\\\\\"');e=e.replace(/(\\\\*)$/,\"$1$1\");e=`\"${e}\"`;e=e.replace(t,\"^$1\");if(n){e=e.replace(t,\"^$1\")}return e}e.exports.command=escapeCommand;e.exports.argument=escapeArgument},252:(e,t,n)=>{\"use strict\";const r=n(147);const o=n(32);function readShebang(e){const t=150;const n=Buffer.alloc(t);let s;try{s=r.openSync(e,\"r\");r.readSync(s,n,0,t,0);r.closeSync(s)}catch(e){}return o(n.toString())}e.exports=readShebang},274:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(207);const s=n(539);function resolveCommandAttempt(e,t){const n=e.options.env||process.env;const i=process.cwd();const a=e.options.cwd!=null;const c=a&&process.chdir!==undefined&&!process.chdir.disabled;if(c){try{process.chdir(e.options.cwd)}catch(e){}}let d;try{d=o.sync(e.command,{path:n[s({env:n})],pathExt:t?r.delimiter:undefined})}catch(e){}finally{if(c){process.chdir(i)}}if(d){d=r.resolve(a?e.options.cwd:\"\",d)}return d}function resolveCommand(e){return resolveCommandAttempt(e)||resolveCommandAttempt(e,true)}e.exports=resolveCommand},447:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(81);const s=n(746);const i=n(174);const a=n(502);const c=n(82);const d=n(187);const u=n(166);const{spawnedKill:l,spawnedCancel:f,setupTimeout:p,validateTimeout:m,setExitHandler:g}=n(819);const{handleInput:x,getSpawnedResult:h,makeAllStream:y,validateInputSync:b}=n(592);const{mergePromise:S,getSpawnedPromise:v}=n(814);const{joinCommand:w,parseCommand:E,getEscapedCommand:I}=n(286);const T=1e3*1e3*100;const getEnv=({env:e,extendEnv:t,preferLocal:n,localDir:r,execPath:o})=>{const s=t?{...process.env,...e}:e;if(n){return a.env({env:s,cwd:r,execPath:o})}return s};const handleArguments=(e,t,n={})=>{const o=s._parse(e,t,n);e=o.command;t=o.args;n=o.options;n={maxBuffer:T,buffer:true,stripFinalNewline:true,extendEnv:true,preferLocal:false,localDir:n.cwd||process.cwd(),execPath:process.execPath,encoding:\"utf8\",reject:true,cleanup:true,all:false,windowsHide:true,...n};n.env=getEnv(n);n.stdio=u(n);if(process.platform===\"win32\"&&r.basename(e,\".exe\")===\"cmd\"){t.unshift(\"/q\")}return{file:e,args:t,options:n,parsed:o}};const handleOutput=(e,t,n)=>{if(typeof t!==\"string\"&&!Buffer.isBuffer(t)){return n===undefined?undefined:\"\"}if(e.stripFinalNewline){return i(t)}return t};const execa=(e,t,n)=>{const r=handleArguments(e,t,n);const s=w(e,t);const i=I(e,t);m(r.options);let a;try{a=o.spawn(r.file,r.args,r.options)}catch(e){const t=new o.ChildProcess;const n=Promise.reject(d({error:e,stdout:\"\",stderr:\"\",all:\"\",command:s,escapedCommand:i,parsed:r,timedOut:false,isCanceled:false,killed:false}));return S(t,n)}const u=v(a);const b=p(a,r.options,u);const E=g(a,r.options,b);const T={isCanceled:false};a.kill=l.bind(null,a.kill.bind(a));a.cancel=f.bind(null,a,T);const handlePromise=async()=>{const[{error:e,exitCode:t,signal:n,timedOut:o},c,u,l]=await h(a,r.options,E);const f=handleOutput(r.options,c);const p=handleOutput(r.options,u);const m=handleOutput(r.options,l);if(e||t!==0||n!==null){const c=d({error:e,exitCode:t,signal:n,stdout:f,stderr:p,all:m,command:s,escapedCommand:i,parsed:r,timedOut:o,isCanceled:T.isCanceled,killed:a.killed});if(!r.options.reject){return c}throw c}return{command:s,escapedCommand:i,exitCode:0,stdout:f,stderr:p,all:m,failed:false,timedOut:false,isCanceled:false,killed:false}};const C=c(handlePromise);x(a,r.options.input);a.all=y(a,r.options);return S(a,C)};e.exports=execa;e.exports.sync=(e,t,n)=>{const r=handleArguments(e,t,n);const s=w(e,t);const i=I(e,t);b(r.options);let a;try{a=o.spawnSync(r.file,r.args,r.options)}catch(e){throw d({error:e,stdout:\"\",stderr:\"\",all:\"\",command:s,escapedCommand:i,parsed:r,timedOut:false,isCanceled:false,killed:false})}const c=handleOutput(r.options,a.stdout,a.error);const u=handleOutput(r.options,a.stderr,a.error);if(a.error||a.status!==0||a.signal!==null){const e=d({stdout:c,stderr:u,error:a.error,signal:a.signal,exitCode:a.status,command:s,escapedCommand:i,parsed:r,timedOut:a.error&&a.error.code===\"ETIMEDOUT\",isCanceled:false,killed:a.signal!==null});if(!r.options.reject){return e}throw e}return{command:s,escapedCommand:i,exitCode:0,stdout:c,stderr:u,failed:false,timedOut:false,isCanceled:false,killed:false}};e.exports.command=(e,t)=>{const[n,...r]=E(e);return execa(n,r,t)};e.exports.commandSync=(e,t)=>{const[n,...r]=E(e);return execa.sync(n,r,t)};e.exports.node=(e,t,n={})=>{if(t&&!Array.isArray(t)&&typeof t===\"object\"){n=t;t=[]}const r=u.node(n);const o=process.execArgv.filter((e=>!e.startsWith(\"--inspect\")));const{nodePath:s=process.execPath,nodeOptions:i=o}=n;return execa(s,[...i,e,...Array.isArray(t)?t:[]],{...n,stdin:undefined,stdout:undefined,stderr:undefined,stdio:r,shell:false})}},286:e=>{\"use strict\";const normalizeArgs=(e,t=[])=>{if(!Array.isArray(t)){return[e]}return[e,...t]};const t=/^[\\w.-]+$/;const n=/\"/g;const escapeArg=e=>{if(typeof e!==\"string\"||t.test(e)){return e}return`\"${e.replace(n,'\\\\\"')}\"`};const joinCommand=(e,t)=>normalizeArgs(e,t).join(\" \");const getEscapedCommand=(e,t)=>normalizeArgs(e,t).map((e=>escapeArg(e))).join(\" \");const r=/ +/g;const parseCommand=e=>{const t=[];for(const n of e.trim().split(r)){const e=t[t.length-1];if(e&&e.endsWith(\"\\\\\")){t[t.length-1]=`${e.slice(0,-1)} ${n}`}else{t.push(n)}}return t};e.exports={joinCommand:joinCommand,getEscapedCommand:getEscapedCommand,parseCommand:parseCommand}},187:(e,t,n)=>{\"use strict\";const{signalsByName:r}=n(779);const getErrorPrefix=({timedOut:e,timeout:t,errorCode:n,signal:r,signalDescription:o,exitCode:s,isCanceled:i})=>{if(e){return`timed out after ${t} milliseconds`}if(i){return\"was canceled\"}if(n!==undefined){return`failed with ${n}`}if(r!==undefined){return`was killed with ${r} (${o})`}if(s!==undefined){return`failed with exit code ${s}`}return\"failed\"};const makeError=({stdout:e,stderr:t,all:n,error:o,signal:s,exitCode:i,command:a,escapedCommand:c,timedOut:d,isCanceled:u,killed:l,parsed:{options:{timeout:f}}})=>{i=i===null?undefined:i;s=s===null?undefined:s;const p=s===undefined?undefined:r[s].description;const m=o&&o.code;const g=getErrorPrefix({timedOut:d,timeout:f,errorCode:m,signal:s,signalDescription:p,exitCode:i,isCanceled:u});const x=`Command ${g}: ${a}`;const h=Object.prototype.toString.call(o)===\"[object Error]\";const y=h?`${x}\\n${o.message}`:x;const b=[y,t,e].filter(Boolean).join(\"\\n\");if(h){o.originalMessage=o.message;o.message=b}else{o=new Error(b)}o.shortMessage=y;o.command=a;o.escapedCommand=c;o.exitCode=i;o.signal=s;o.signalDescription=p;o.stdout=e;o.stderr=t;if(n!==undefined){o.all=n}if(\"bufferedData\"in o){delete o.bufferedData}o.failed=true;o.timedOut=Boolean(d);o.isCanceled=u;o.killed=l&&!d;return o};e.exports=makeError},819:(e,t,n)=>{\"use strict\";const r=n(37);const o=n(856);const s=1e3*5;const spawnedKill=(e,t=\"SIGTERM\",n={})=>{const r=e(t);setKillTimeout(e,t,n,r);return r};const setKillTimeout=(e,t,n,r)=>{if(!shouldForceKill(t,n,r)){return}const o=getForceKillAfterTimeout(n);const s=setTimeout((()=>{e(\"SIGKILL\")}),o);if(s.unref){s.unref()}};const shouldForceKill=(e,{forceKillAfterTimeout:t},n)=>isSigterm(e)&&t!==false&&n;const isSigterm=e=>e===r.constants.signals.SIGTERM||typeof e===\"string\"&&e.toUpperCase()===\"SIGTERM\";const getForceKillAfterTimeout=({forceKillAfterTimeout:e=true})=>{if(e===true){return s}if(!Number.isFinite(e)||e<0){throw new TypeError(`Expected the \\`forceKillAfterTimeout\\` option to be a non-negative integer, got \\`${e}\\` (${typeof e})`)}return e};const spawnedCancel=(e,t)=>{const n=e.kill();if(n){t.isCanceled=true}};const timeoutKill=(e,t,n)=>{e.kill(t);n(Object.assign(new Error(\"Timed out\"),{timedOut:true,signal:t}))};const setupTimeout=(e,{timeout:t,killSignal:n=\"SIGTERM\"},r)=>{if(t===0||t===undefined){return r}let o;const s=new Promise(((r,s)=>{o=setTimeout((()=>{timeoutKill(e,n,s)}),t)}));const i=r.finally((()=>{clearTimeout(o)}));return Promise.race([s,i])};const validateTimeout=({timeout:e})=>{if(e!==undefined&&(!Number.isFinite(e)||e<0)){throw new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${e}\\` (${typeof e})`)}};const setExitHandler=async(e,{cleanup:t,detached:n},r)=>{if(!t||n){return r}const s=o((()=>{e.kill()}));return r.finally((()=>{s()}))};e.exports={spawnedKill:spawnedKill,spawnedCancel:spawnedCancel,setupTimeout:setupTimeout,validateTimeout:validateTimeout,setExitHandler:setExitHandler}},814:e=>{\"use strict\";const t=(async()=>{})().constructor.prototype;const n=[\"then\",\"catch\",\"finally\"].map((e=>[e,Reflect.getOwnPropertyDescriptor(t,e)]));const mergePromise=(e,t)=>{for(const[r,o]of n){const n=typeof t===\"function\"?(...e)=>Reflect.apply(o.value,t(),e):o.value.bind(t);Reflect.defineProperty(e,r,{...o,value:n})}return e};const getSpawnedPromise=e=>new Promise(((t,n)=>{e.on(\"exit\",((e,n)=>{t({exitCode:e,signal:n})}));e.on(\"error\",(e=>{n(e)}));if(e.stdin){e.stdin.on(\"error\",(e=>{n(e)}))}}));e.exports={mergePromise:mergePromise,getSpawnedPromise:getSpawnedPromise}},166:e=>{\"use strict\";const t=[\"stdin\",\"stdout\",\"stderr\"];const hasAlias=e=>t.some((t=>e[t]!==undefined));const normalizeStdio=e=>{if(!e){return}const{stdio:n}=e;if(n===undefined){return t.map((t=>e[t]))}if(hasAlias(e)){throw new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${t.map((e=>`\\`${e}\\``)).join(\", \")}`)}if(typeof n===\"string\"){return n}if(!Array.isArray(n)){throw new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof n}\\``)}const r=Math.max(n.length,t.length);return Array.from({length:r},((e,t)=>n[t]))};e.exports=normalizeStdio;e.exports.node=e=>{const t=normalizeStdio(e);if(t===\"ipc\"){return\"ipc\"}if(t===undefined||typeof t===\"string\"){return[t,t,t,\"ipc\"]}if(t.includes(\"ipc\")){return t}return[...t,\"ipc\"]}},592:(e,t,n)=>{\"use strict\";const r=n(554);const o=n(766);const s=n(621);const handleInput=(e,t)=>{if(t===undefined||e.stdin===undefined){return}if(r(t)){t.pipe(e.stdin)}else{e.stdin.end(t)}};const makeAllStream=(e,{all:t})=>{if(!t||!e.stdout&&!e.stderr){return}const n=s();if(e.stdout){n.add(e.stdout)}if(e.stderr){n.add(e.stderr)}return n};const getBufferedData=async(e,t)=>{if(!e){return}e.destroy();try{return await t}catch(e){return e.bufferedData}};const getStreamPromise=(e,{encoding:t,buffer:n,maxBuffer:r})=>{if(!e||!n){return}if(t){return o(e,{encoding:t,maxBuffer:r})}return o.buffer(e,{maxBuffer:r})};const getSpawnedResult=async({stdout:e,stderr:t,all:n},{encoding:r,buffer:o,maxBuffer:s},i)=>{const a=getStreamPromise(e,{encoding:r,buffer:o,maxBuffer:s});const c=getStreamPromise(t,{encoding:r,buffer:o,maxBuffer:s});const d=getStreamPromise(n,{encoding:r,buffer:o,maxBuffer:s*2});try{return await Promise.all([i,a,c,d])}catch(r){return Promise.all([{error:r,signal:r.signal,timedOut:r.timedOut},getBufferedData(e,a),getBufferedData(t,c),getBufferedData(n,d)])}};const validateInputSync=({input:e})=>{if(r(e)){throw new TypeError(\"The `input` option cannot be a stream in sync mode\")}};e.exports={handleInput:handleInput,makeAllStream:makeAllStream,getSpawnedResult:getSpawnedResult,validateInputSync:validateInputSync}},856:(e,t,n)=>{var r=global.process;const processOk=function(e){return e&&typeof e===\"object\"&&typeof e.removeListener===\"function\"&&typeof e.emit===\"function\"&&typeof e.reallyExit===\"function\"&&typeof e.listeners===\"function\"&&typeof e.kill===\"function\"&&typeof e.pid===\"number\"&&typeof e.on===\"function\"};if(!processOk(r)){e.exports=function(){return function(){}}}else{var o=n(491);var s=n(624);var i=/^win/i.test(r.platform);var a=n(361);if(typeof a!==\"function\"){a=a.EventEmitter}var c;if(r.__signal_exit_emitter__){c=r.__signal_exit_emitter__}else{c=r.__signal_exit_emitter__=new a;c.count=0;c.emitted={}}if(!c.infinite){c.setMaxListeners(Infinity);c.infinite=true}e.exports=function(e,t){if(!processOk(global.process)){return function(){}}o.equal(typeof e,\"function\",\"a callback must be provided for exit handler\");if(f===false){p()}var n=\"exit\";if(t&&t.alwaysLast){n=\"afterexit\"}var remove=function(){c.removeListener(n,e);if(c.listeners(\"exit\").length===0&&c.listeners(\"afterexit\").length===0){d()}};c.on(n,e);return remove};var d=function unload(){if(!f||!processOk(global.process)){return}f=false;s.forEach((function(e){try{r.removeListener(e,l[e])}catch(e){}}));r.emit=x;r.reallyExit=m;c.count-=1};e.exports.unload=d;var u=function emit(e,t,n){if(c.emitted[e]){return}c.emitted[e]=true;c.emit(e,t,n)};var l={};s.forEach((function(e){l[e]=function listener(){if(!processOk(global.process)){return}var t=r.listeners(e);if(t.length===c.count){d();u(\"exit\",null,e);u(\"afterexit\",null,e);if(i&&e===\"SIGHUP\"){e=\"SIGINT\"}r.kill(r.pid,e)}}}));e.exports.signals=function(){return s};var f=false;var p=function load(){if(f||!processOk(global.process)){return}f=true;c.count+=1;s=s.filter((function(e){try{r.on(e,l[e]);return true}catch(e){return false}}));r.emit=h;r.reallyExit=g};e.exports.load=p;var m=r.reallyExit;var g=function processReallyExit(e){if(!processOk(global.process)){return}r.exitCode=e||0;u(\"exit\",r.exitCode,null);u(\"afterexit\",r.exitCode,null);m.call(r,r.exitCode)};var x=r.emit;var h=function processEmit(e,t){if(e===\"exit\"&&processOk(global.process)){if(t!==undefined){r.exitCode=t}var n=x.apply(this,arguments);u(\"exit\",r.exitCode,null);u(\"afterexit\",r.exitCode,null);return n}else{return x.apply(this,arguments)}}}},624:e=>{e.exports=[\"SIGABRT\",\"SIGALRM\",\"SIGHUP\",\"SIGINT\",\"SIGTERM\"];if(process.platform!==\"win32\"){e.exports.push(\"SIGVTALRM\",\"SIGXCPU\",\"SIGXFSZ\",\"SIGUSR2\",\"SIGTRAP\",\"SIGSYS\",\"SIGQUIT\",\"SIGIOT\")}if(process.platform===\"linux\"){e.exports.push(\"SIGIO\",\"SIGPOLL\",\"SIGPWR\",\"SIGSTKFLT\",\"SIGUNUSED\")}},585:(e,t,n)=>{\"use strict\";const{PassThrough:r}=n(781);e.exports=e=>{e={...e};const{array:t}=e;let{encoding:n}=e;const o=n===\"buffer\";let s=false;if(t){s=!(n||o)}else{n=n||\"utf8\"}if(o){n=null}const i=new r({objectMode:s});if(n){i.setEncoding(n)}let a=0;const c=[];i.on(\"data\",(e=>{c.push(e);if(s){a=c.length}else{a+=e.length}}));i.getBufferedValue=()=>{if(t){return c}return o?Buffer.concat(c,a):c.join(\"\")};i.getBufferedLength=()=>a;return i}},766:(e,t,n)=>{\"use strict\";const{constants:r}=n(300);const o=n(781);const{promisify:s}=n(837);const i=n(585);const a=s(o.pipeline);class MaxBufferError extends Error{constructor(){super(\"maxBuffer exceeded\");this.name=\"MaxBufferError\"}}async function getStream(e,t){if(!e){throw new Error(\"Expected a stream\")}t={maxBuffer:Infinity,...t};const{maxBuffer:n}=t;const o=i(t);await new Promise(((t,s)=>{const rejectPromise=e=>{if(e&&o.getBufferedLength()<=r.MAX_LENGTH){e.bufferedData=o.getBufferedValue()}s(e)};(async()=>{try{await a(e,o);t()}catch(e){rejectPromise(e)}})();o.on(\"data\",(()=>{if(o.getBufferedLength()>n){rejectPromise(new MaxBufferError)}}))}));return o.getBufferedValue()}e.exports=getStream;e.exports.buffer=(e,t)=>getStream(e,{...t,encoding:\"buffer\"});e.exports.array=(e,t)=>getStream(e,{...t,array:true});e.exports.MaxBufferError=MaxBufferError},213:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.SIGNALS=void 0;const n=[{name:\"SIGHUP\",number:1,action:\"terminate\",description:\"Terminal closed\",standard:\"posix\"},{name:\"SIGINT\",number:2,action:\"terminate\",description:\"User interruption with CTRL-C\",standard:\"ansi\"},{name:\"SIGQUIT\",number:3,action:\"core\",description:\"User interruption with CTRL-\\\\\",standard:\"posix\"},{name:\"SIGILL\",number:4,action:\"core\",description:\"Invalid machine instruction\",standard:\"ansi\"},{name:\"SIGTRAP\",number:5,action:\"core\",description:\"Debugger breakpoint\",standard:\"posix\"},{name:\"SIGABRT\",number:6,action:\"core\",description:\"Aborted\",standard:\"ansi\"},{name:\"SIGIOT\",number:6,action:\"core\",description:\"Aborted\",standard:\"bsd\"},{name:\"SIGBUS\",number:7,action:\"core\",description:\"Bus error due to misaligned, non-existing address or paging error\",standard:\"bsd\"},{name:\"SIGEMT\",number:7,action:\"terminate\",description:\"Command should be emulated but is not implemented\",standard:\"other\"},{name:\"SIGFPE\",number:8,action:\"core\",description:\"Floating point arithmetic error\",standard:\"ansi\"},{name:\"SIGKILL\",number:9,action:\"terminate\",description:\"Forced termination\",standard:\"posix\",forced:true},{name:\"SIGUSR1\",number:10,action:\"terminate\",description:\"Application-specific signal\",standard:\"posix\"},{name:\"SIGSEGV\",number:11,action:\"core\",description:\"Segmentation fault\",standard:\"ansi\"},{name:\"SIGUSR2\",number:12,action:\"terminate\",description:\"Application-specific signal\",standard:\"posix\"},{name:\"SIGPIPE\",number:13,action:\"terminate\",description:\"Broken pipe or socket\",standard:\"posix\"},{name:\"SIGALRM\",number:14,action:\"terminate\",description:\"Timeout or timer\",standard:\"posix\"},{name:\"SIGTERM\",number:15,action:\"terminate\",description:\"Termination\",standard:\"ansi\"},{name:\"SIGSTKFLT\",number:16,action:\"terminate\",description:\"Stack is empty or overflowed\",standard:\"other\"},{name:\"SIGCHLD\",number:17,action:\"ignore\",description:\"Child process terminated, paused or unpaused\",standard:\"posix\"},{name:\"SIGCLD\",number:17,action:\"ignore\",description:\"Child process terminated, paused or unpaused\",standard:\"other\"},{name:\"SIGCONT\",number:18,action:\"unpause\",description:\"Unpaused\",standard:\"posix\",forced:true},{name:\"SIGSTOP\",number:19,action:\"pause\",description:\"Paused\",standard:\"posix\",forced:true},{name:\"SIGTSTP\",number:20,action:\"pause\",description:'Paused using CTRL-Z or \"suspend\"',standard:\"posix\"},{name:\"SIGTTIN\",number:21,action:\"pause\",description:\"Background process cannot read terminal input\",standard:\"posix\"},{name:\"SIGBREAK\",number:21,action:\"terminate\",description:\"User interruption with CTRL-BREAK\",standard:\"other\"},{name:\"SIGTTOU\",number:22,action:\"pause\",description:\"Background process cannot write to terminal output\",standard:\"posix\"},{name:\"SIGURG\",number:23,action:\"ignore\",description:\"Socket received out-of-band data\",standard:\"bsd\"},{name:\"SIGXCPU\",number:24,action:\"core\",description:\"Process timed out\",standard:\"bsd\"},{name:\"SIGXFSZ\",number:25,action:\"core\",description:\"File too big\",standard:\"bsd\"},{name:\"SIGVTALRM\",number:26,action:\"terminate\",description:\"Timeout or timer\",standard:\"bsd\"},{name:\"SIGPROF\",number:27,action:\"terminate\",description:\"Timeout or timer\",standard:\"bsd\"},{name:\"SIGWINCH\",number:28,action:\"ignore\",description:\"Terminal window size changed\",standard:\"bsd\"},{name:\"SIGIO\",number:29,action:\"terminate\",description:\"I/O is available\",standard:\"other\"},{name:\"SIGPOLL\",number:29,action:\"terminate\",description:\"Watched event\",standard:\"other\"},{name:\"SIGINFO\",number:29,action:\"ignore\",description:\"Request for process information\",standard:\"other\"},{name:\"SIGPWR\",number:30,action:\"terminate\",description:\"Device running out of power\",standard:\"systemv\"},{name:\"SIGSYS\",number:31,action:\"core\",description:\"Invalid system call\",standard:\"other\"},{name:\"SIGUNUSED\",number:31,action:\"terminate\",description:\"Invalid system call\",standard:\"other\"}];t.SIGNALS=n},779:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.signalsByNumber=t.signalsByName=void 0;var r=n(37);var o=n(435);var s=n(295);const getSignalsByName=function(){const e=(0,o.getSignals)();return e.reduce(getSignalByName,{})};const getSignalByName=function(e,{name:t,number:n,description:r,supported:o,action:s,forced:i,standard:a}){return{...e,[t]:{name:t,number:n,description:r,supported:o,action:s,forced:i,standard:a}}};const i=getSignalsByName();t.signalsByName=i;const getSignalsByNumber=function(){const e=(0,o.getSignals)();const t=s.SIGRTMAX+1;const n=Array.from({length:t},((t,n)=>getSignalByNumber(n,e)));return Object.assign({},...n)};const getSignalByNumber=function(e,t){const n=findSignalByNumber(e,t);if(n===undefined){return{}}const{name:r,description:o,supported:s,action:i,forced:a,standard:c}=n;return{[e]:{name:r,number:e,description:o,supported:s,action:i,forced:a,standard:c}}};const findSignalByNumber=function(e,t){const n=t.find((({name:t})=>r.constants.signals[t]===e));if(n!==undefined){return n}return t.find((t=>t.number===e))};const a=getSignalsByNumber();t.signalsByNumber=a},295:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.SIGRTMAX=t.getRealtimeSignals=void 0;const getRealtimeSignals=function(){const e=r-n+1;return Array.from({length:e},getRealtimeSignal)};t.getRealtimeSignals=getRealtimeSignals;const getRealtimeSignal=function(e,t){return{name:`SIGRT${t+1}`,number:n+t,action:\"terminate\",description:\"Application-specific signal (realtime)\",standard:\"posix\"}};const n=34;const r=64;t.SIGRTMAX=r},435:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.getSignals=void 0;var r=n(37);var o=n(213);var s=n(295);const getSignals=function(){const e=(0,s.getRealtimeSignals)();const t=[...o.SIGNALS,...e].map(normalizeSignal);return t};t.getSignals=getSignals;const normalizeSignal=function({name:e,number:t,description:n,action:o,forced:s=false,standard:i}){const{signals:{[e]:a}}=r.constants;const c=a!==undefined;const d=c?a:t;return{name:e,number:d,description:n,supported:c,action:o,forced:s,standard:i}}},554:e=>{\"use strict\";const isStream=e=>e!==null&&typeof e===\"object\"&&typeof e.pipe===\"function\";isStream.writable=e=>isStream(e)&&e.writable!==false&&typeof e._write===\"function\"&&typeof e._writableState===\"object\";isStream.readable=e=>isStream(e)&&e.readable!==false&&typeof e._read===\"function\"&&typeof e._readableState===\"object\";isStream.duplex=e=>isStream.writable(e)&&isStream.readable(e);isStream.transform=e=>isStream.duplex(e)&&typeof e._transform===\"function\";e.exports=isStream},126:(e,t,n)=>{var r=n(147);var o;if(process.platform===\"win32\"||global.TESTING_WINDOWS){o=n(1)}else{o=n(728)}e.exports=isexe;isexe.sync=sync;function isexe(e,t,n){if(typeof t===\"function\"){n=t;t={}}if(!n){if(typeof Promise!==\"function\"){throw new TypeError(\"callback not provided\")}return new Promise((function(n,r){isexe(e,t||{},(function(e,t){if(e){r(e)}else{n(t)}}))}))}o(e,t||{},(function(e,r){if(e){if(e.code===\"EACCES\"||t&&t.ignoreErrors){e=null;r=false}}n(e,r)}))}function sync(e,t){try{return o.sync(e,t||{})}catch(e){if(t&&t.ignoreErrors||e.code===\"EACCES\"){return false}else{throw e}}}},728:(e,t,n)=>{e.exports=isexe;isexe.sync=sync;var r=n(147);function isexe(e,t,n){r.stat(e,(function(e,r){n(e,e?false:checkStat(r,t))}))}function sync(e,t){return checkStat(r.statSync(e),t)}function checkStat(e,t){return e.isFile()&&checkMode(e,t)}function checkMode(e,t){var n=e.mode;var r=e.uid;var o=e.gid;var s=t.uid!==undefined?t.uid:process.getuid&&process.getuid();var i=t.gid!==undefined?t.gid:process.getgid&&process.getgid();var a=parseInt(\"100\",8);var c=parseInt(\"010\",8);var d=parseInt(\"001\",8);var u=a|c;var l=n&d||n&c&&o===i||n&a&&r===s||n&u&&s===0;return l}},1:(e,t,n)=>{e.exports=isexe;isexe.sync=sync;var r=n(147);function checkPathExt(e,t){var n=t.pathExt!==undefined?t.pathExt:process.env.PATHEXT;if(!n){return true}n=n.split(\";\");if(n.indexOf(\"\")!==-1){return true}for(var r=0;r<n.length;r++){var o=n[r].toLowerCase();if(o&&e.substr(-o.length).toLowerCase()===o){return true}}return false}function checkStat(e,t,n){if(!e.isSymbolicLink()&&!e.isFile()){return false}return checkPathExt(t,n)}function isexe(e,t,n){r.stat(e,(function(r,o){n(r,r?false:checkStat(o,e,t))}))}function sync(e,t){return checkStat(r.statSync(e),e,t)}},621:(e,t,n)=>{\"use strict\";const{PassThrough:r}=n(781);e.exports=function(){var e=[];var t=new r({objectMode:true});t.setMaxListeners(0);t.add=add;t.isEmpty=isEmpty;t.on(\"unpipe\",remove);Array.prototype.slice.call(arguments).forEach(add);return t;function add(n){if(Array.isArray(n)){n.forEach(add);return this}e.push(n);n.once(\"end\",remove.bind(null,n));n.once(\"error\",t.emit.bind(t,\"error\"));n.pipe(t,{end:false});return this}function isEmpty(){return e.length==0}function remove(n){e=e.filter((function(e){return e!==n}));if(!e.length&&t.readable){t.end()}}}},47:e=>{\"use strict\";const mimicFn=(e,t)=>{for(const n of Reflect.ownKeys(t)){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}return e};e.exports=mimicFn;e.exports[\"default\"]=mimicFn},502:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(539);const npmRunPath=e=>{e={cwd:process.cwd(),path:process.env[o()],execPath:process.execPath,...e};let t;let n=r.resolve(e.cwd);const s=[];while(t!==n){s.push(r.join(n,\"node_modules/.bin\"));t=n;n=r.resolve(n,\"..\")}const i=r.resolve(e.cwd,e.execPath,\"..\");s.push(i);return s.concat(e.path).join(r.delimiter)};e.exports=npmRunPath;e.exports[\"default\"]=npmRunPath;e.exports.env=t=>{t={env:process.env,...t};const n={...t.env};const r=o({env:n});t.path=n[r];n[r]=e.exports(t);return n}},82:(e,t,n)=>{\"use strict\";const r=n(47);const o=new WeakMap;const onetime=(e,t={})=>{if(typeof e!==\"function\"){throw new TypeError(\"Expected a function\")}let n;let s=0;const i=e.displayName||e.name||\"<anonymous>\";const onetime=function(...r){o.set(onetime,++s);if(s===1){n=e.apply(this,r);e=null}else if(t.throw===true){throw new Error(`Function \\`${i}\\` can only be called once`)}return n};r(onetime,e);o.set(onetime,s);return onetime};e.exports=onetime;e.exports[\"default\"]=onetime;e.exports.callCount=e=>{if(!o.has(e)){throw new Error(`The given function \\`${e.name}\\` is not wrapped by the \\`onetime\\` package`)}return o.get(e)}},539:e=>{\"use strict\";const pathKey=(e={})=>{const t=e.env||process.env;const n=e.platform||process.platform;if(n!==\"win32\"){return\"PATH\"}return Object.keys(t).reverse().find((e=>e.toUpperCase()===\"PATH\"))||\"Path\"};e.exports=pathKey;e.exports[\"default\"]=pathKey},32:(e,t,n)=>{\"use strict\";const r=n(638);e.exports=(e=\"\")=>{const t=e.match(r);if(!t){return null}const[n,o]=t[0].replace(/#! ?/,\"\").split(\" \");const s=n.split(\"/\").pop();if(s===\"env\"){return o}return o?`${s} ${o}`:s}},638:e=>{\"use strict\";e.exports=/^#!(.*)/},174:e=>{\"use strict\";e.exports=e=>{const t=typeof e===\"string\"?\"\\n\":\"\\n\".charCodeAt();const n=typeof e===\"string\"?\"\\r\":\"\\r\".charCodeAt();if(e[e.length-1]===t){e=e.slice(0,e.length-1)}if(e[e.length-1]===n){e=e.slice(0,e.length-1)}return e}},207:(e,t,n)=>{const r=process.platform===\"win32\"||process.env.OSTYPE===\"cygwin\"||process.env.OSTYPE===\"msys\";const o=n(17);const s=r?\";\":\":\";const i=n(126);const getNotFoundError=e=>Object.assign(new Error(`not found: ${e}`),{code:\"ENOENT\"});const getPathInfo=(e,t)=>{const n=t.colon||s;const o=e.match(/\\//)||r&&e.match(/\\\\/)?[\"\"]:[...r?[process.cwd()]:[],...(t.path||process.env.PATH||\"\").split(n)];const i=r?t.pathExt||process.env.PATHEXT||\".EXE;.CMD;.BAT;.COM\":\"\";const a=r?i.split(n):[\"\"];if(r){if(e.indexOf(\".\")!==-1&&a[0]!==\"\")a.unshift(\"\")}return{pathEnv:o,pathExt:a,pathExtExe:i}};const which=(e,t,n)=>{if(typeof t===\"function\"){n=t;t={}}if(!t)t={};const{pathEnv:r,pathExt:s,pathExtExe:a}=getPathInfo(e,t);const c=[];const step=n=>new Promise(((s,i)=>{if(n===r.length)return t.all&&c.length?s(c):i(getNotFoundError(e));const a=r[n];const d=/^\".*\"$/.test(a)?a.slice(1,-1):a;const u=o.join(d,e);const l=!d&&/^\\.[\\\\\\/]/.test(e)?e.slice(0,2)+u:u;s(subStep(l,n,0))}));const subStep=(e,n,r)=>new Promise(((o,d)=>{if(r===s.length)return o(step(n+1));const u=s[r];i(e+u,{pathExt:a},((s,i)=>{if(!s&&i){if(t.all)c.push(e+u);else return o(e+u)}return o(subStep(e,n,r+1))}))}));return n?step(0).then((e=>n(null,e)),n):step(0)};const whichSync=(e,t)=>{t=t||{};const{pathEnv:n,pathExt:r,pathExtExe:s}=getPathInfo(e,t);const a=[];for(let c=0;c<n.length;c++){const d=n[c];const u=/^\".*\"$/.test(d)?d.slice(1,-1):d;const l=o.join(u,e);const f=!u&&/^\\.[\\\\\\/]/.test(e)?e.slice(0,2)+l:l;for(let e=0;e<r.length;e++){const n=f+r[e];try{const e=i.sync(n,{pathExt:s});if(e){if(t.all)a.push(n);else return n}}catch(e){}}}if(t.all&&a.length)return a;if(t.nothrow)return null;throw getNotFoundError(e)};e.exports=which;which.sync=whichSync},491:e=>{\"use strict\";e.exports=require(\"assert\")},300:e=>{\"use strict\";e.exports=require(\"buffer\")},81:e=>{\"use strict\";e.exports=require(\"child_process\")},361:e=>{\"use strict\";e.exports=require(\"events\")},147:e=>{\"use strict\";e.exports=require(\"fs\")},37:e=>{\"use strict\";e.exports=require(\"os\")},17:e=>{\"use strict\";e.exports=require(\"path\")},781:e=>{\"use strict\";e.exports=require(\"stream\")},837:e=>{\"use strict\";e.exports=require(\"util\")}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n=__nccwpck_require__(447);module.exports=n})();", "explanation": "It appears you've provided a code snippet in a specific format, likely for Node.js package compilation. I'll provide a generic answer as the code doesn't seem to relate to any particular question.\n\nIf you're experiencing issues with this code, please specify what the problem is (e.g., errors, unexpected behavior). I can try to help you troubleshoot or provide guidance on how to improve it. \n\nHowever, if you meant to ask a specific question about the `onetime` function from the provided code, here's a brief explanation:\n\nThe `onetime` function is a utility that wraps another function to prevent it from being called more than once. It achieves this by setting a flag in a WeakMap and checking it on subsequent calls. If the flag is set, it throws an error indicating the function can only be called once.\n\nPlease provide more context or clarify your question for a more detailed answer!", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/execa/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "There is no code provided, so I'll assume you're asking about the file 'compiled/execa/index.js'. Unfortunately, without access to the actual file, I can only provide a generic summary:\n\nThe 'compiled/execa/index.js' file appears to be part of a Node.js package compilation process. Its contents are not specified, but it likely contains code related to task execution and management using the `execa` library."}
{"code": "(()=>{var e={7678:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const r=[\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Uint16Array\",\"Int32Array\",\"Uint32Array\",\"Float32Array\",\"Float64Array\",\"BigInt64Array\",\"BigUint64Array\"];function isTypedArrayName(e){return r.includes(e)}const s=[\"Function\",\"Generator\",\"AsyncGenerator\",\"GeneratorFunction\",\"AsyncGeneratorFunction\",\"AsyncFunction\",\"Observable\",\"Array\",\"Buffer\",\"Blob\",\"Object\",\"RegExp\",\"Date\",\"Error\",\"Map\",\"Set\",\"WeakMap\",\"WeakSet\",\"ArrayBuffer\",\"SharedArrayBuffer\",\"DataView\",\"Promise\",\"URL\",\"FormData\",\"URLSearchParams\",\"HTMLElement\",...r];function isObjectTypeName(e){return s.includes(e)}const o=[\"null\",\"undefined\",\"string\",\"number\",\"bigint\",\"boolean\",\"symbol\"];function isPrimitiveTypeName(e){return o.includes(e)}function isOfType(e){return t=>typeof t===e}const{toString:n}=Object.prototype;const getObjectType=e=>{const t=n.call(e).slice(8,-1);if(/HTML\\w+Element/.test(t)&&is.domElement(e)){return\"HTMLElement\"}if(isObjectTypeName(t)){return t}return undefined};const isObjectOfType=e=>t=>getObjectType(t)===e;function is(e){if(e===null){return\"null\"}switch(typeof e){case\"undefined\":return\"undefined\";case\"string\":return\"string\";case\"number\":return\"number\";case\"boolean\":return\"boolean\";case\"function\":return\"Function\";case\"bigint\":return\"bigint\";case\"symbol\":return\"symbol\";default:}if(is.observable(e)){return\"Observable\"}if(is.array(e)){return\"Array\"}if(is.buffer(e)){return\"Buffer\"}const t=getObjectType(e);if(t){return t}if(e instanceof String||e instanceof Boolean||e instanceof Number){throw new TypeError(\"Please don't use object wrappers for primitive types\")}return\"Object\"}is.undefined=isOfType(\"undefined\");is.string=isOfType(\"string\");const i=isOfType(\"number\");is.number=e=>i(e)&&!is.nan(e);is.bigint=isOfType(\"bigint\");is.function_=isOfType(\"function\");is.null_=e=>e===null;is.class_=e=>is.function_(e)&&e.toString().startsWith(\"class \");is.boolean=e=>e===true||e===false;is.symbol=isOfType(\"symbol\");is.numericString=e=>is.string(e)&&!is.emptyStringOrWhitespace(e)&&!Number.isNaN(Number(e));is.array=(e,t)=>{if(!Array.isArray(e)){return false}if(!is.function_(t)){return true}return e.every(t)};is.buffer=e=>{var t,r,s,o;return(o=(s=(r=(t=e)===null||t===void 0?void 0:t.constructor)===null||r===void 0?void 0:r.isBuffer)===null||s===void 0?void 0:s.call(r,e))!==null&&o!==void 0?o:false};is.blob=e=>isObjectOfType(\"Blob\")(e);is.nullOrUndefined=e=>is.null_(e)||is.undefined(e);is.object=e=>!is.null_(e)&&(typeof e===\"object\"||is.function_(e));is.iterable=e=>{var t;return is.function_((t=e)===null||t===void 0?void 0:t[Symbol.iterator])};is.asyncIterable=e=>{var t;return is.function_((t=e)===null||t===void 0?void 0:t[Symbol.asyncIterator])};is.generator=e=>{var t,r;return is.iterable(e)&&is.function_((t=e)===null||t===void 0?void 0:t.next)&&is.function_((r=e)===null||r===void 0?void 0:r.throw)};is.asyncGenerator=e=>is.asyncIterable(e)&&is.function_(e.next)&&is.function_(e.throw);is.nativePromise=e=>isObjectOfType(\"Promise\")(e);const hasPromiseAPI=e=>{var t,r;return is.function_((t=e)===null||t===void 0?void 0:t.then)&&is.function_((r=e)===null||r===void 0?void 0:r.catch)};is.promise=e=>is.nativePromise(e)||hasPromiseAPI(e);is.generatorFunction=isObjectOfType(\"GeneratorFunction\");is.asyncGeneratorFunction=e=>getObjectType(e)===\"AsyncGeneratorFunction\";is.asyncFunction=e=>getObjectType(e)===\"AsyncFunction\";is.boundFunction=e=>is.function_(e)&&!e.hasOwnProperty(\"prototype\");is.regExp=isObjectOfType(\"RegExp\");is.date=isObjectOfType(\"Date\");is.error=isObjectOfType(\"Error\");is.map=e=>isObjectOfType(\"Map\")(e);is.set=e=>isObjectOfType(\"Set\")(e);is.weakMap=e=>isObjectOfType(\"WeakMap\")(e);is.weakSet=e=>isObjectOfType(\"WeakSet\")(e);is.int8Array=isObjectOfType(\"Int8Array\");is.uint8Array=isObjectOfType(\"Uint8Array\");is.uint8ClampedArray=isObjectOfType(\"Uint8ClampedArray\");is.int16Array=isObjectOfType(\"Int16Array\");is.uint16Array=isObjectOfType(\"Uint16Array\");is.int32Array=isObjectOfType(\"Int32Array\");is.uint32Array=isObjectOfType(\"Uint32Array\");is.float32Array=isObjectOfType(\"Float32Array\");is.float64Array=isObjectOfType(\"Float64Array\");is.bigInt64Array=isObjectOfType(\"BigInt64Array\");is.bigUint64Array=isObjectOfType(\"BigUint64Array\");is.arrayBuffer=isObjectOfType(\"ArrayBuffer\");is.sharedArrayBuffer=isObjectOfType(\"SharedArrayBuffer\");is.dataView=isObjectOfType(\"DataView\");is.enumCase=(e,t)=>Object.values(t).includes(e);is.directInstanceOf=(e,t)=>Object.getPrototypeOf(e)===t.prototype;is.urlInstance=e=>isObjectOfType(\"URL\")(e);is.urlString=e=>{if(!is.string(e)){return false}try{new URL(e);return true}catch(e){return false}};is.truthy=e=>Boolean(e);is.falsy=e=>!e;is.nan=e=>Number.isNaN(e);is.primitive=e=>is.null_(e)||isPrimitiveTypeName(typeof e);is.integer=e=>Number.isInteger(e);is.safeInteger=e=>Number.isSafeInteger(e);is.plainObject=e=>{if(n.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.getPrototypeOf({})};is.typedArray=e=>isTypedArrayName(getObjectType(e));const isValidLength=e=>is.safeInteger(e)&&e>=0;is.arrayLike=e=>!is.nullOrUndefined(e)&&!is.function_(e)&&isValidLength(e.length);is.inRange=(e,t)=>{if(is.number(t)){return e>=Math.min(0,t)&&e<=Math.max(t,0)}if(is.array(t)&&t.length===2){return e>=Math.min(...t)&&e<=Math.max(...t)}throw new TypeError(`Invalid range: ${JSON.stringify(t)}`)};const a=1;const c=[\"innerHTML\",\"ownerDocument\",\"style\",\"attributes\",\"nodeValue\"];is.domElement=e=>is.object(e)&&e.nodeType===a&&is.string(e.nodeName)&&!is.plainObject(e)&&c.every((t=>t in e));is.observable=e=>{var t,r,s,o;if(!e){return false}if(e===((r=(t=e)[Symbol.observable])===null||r===void 0?void 0:r.call(t))){return true}if(e===((o=(s=e)[\"@@observable\"])===null||o===void 0?void 0:o.call(s))){return true}return false};is.nodeStream=e=>is.object(e)&&is.function_(e.pipe)&&!is.observable(e);is.infinite=e=>e===Infinity||e===-Infinity;const isAbsoluteMod2=e=>t=>is.integer(t)&&Math.abs(t%2)===e;is.evenInteger=isAbsoluteMod2(0);is.oddInteger=isAbsoluteMod2(1);is.emptyArray=e=>is.array(e)&&e.length===0;is.nonEmptyArray=e=>is.array(e)&&e.length>0;is.emptyString=e=>is.string(e)&&e.length===0;const isWhiteSpaceString=e=>is.string(e)&&!/\\S/.test(e);is.emptyStringOrWhitespace=e=>is.emptyString(e)||isWhiteSpaceString(e);is.nonEmptyString=e=>is.string(e)&&e.length>0;is.nonEmptyStringAndNotWhitespace=e=>is.string(e)&&!is.emptyStringOrWhitespace(e);is.emptyObject=e=>is.object(e)&&!is.map(e)&&!is.set(e)&&Object.keys(e).length===0;is.nonEmptyObject=e=>is.object(e)&&!is.map(e)&&!is.set(e)&&Object.keys(e).length>0;is.emptySet=e=>is.set(e)&&e.size===0;is.nonEmptySet=e=>is.set(e)&&e.size>0;is.emptyMap=e=>is.map(e)&&e.size===0;is.nonEmptyMap=e=>is.map(e)&&e.size>0;is.propertyKey=e=>is.any([is.string,is.number,is.symbol],e);is.formData=e=>isObjectOfType(\"FormData\")(e);is.urlSearchParams=e=>isObjectOfType(\"URLSearchParams\")(e);const predicateOnArray=(e,t,r)=>{if(!is.function_(t)){throw new TypeError(`Invalid predicate: ${JSON.stringify(t)}`)}if(r.length===0){throw new TypeError(\"Invalid number of values\")}return e.call(r,t)};is.any=(e,...t)=>{const r=is.array(e)?e:[e];return r.some((e=>predicateOnArray(Array.prototype.some,e,t)))};is.all=(e,...t)=>predicateOnArray(Array.prototype.every,e,t);const assertType=(e,t,r,s={})=>{if(!e){const{multipleValues:e}=s;const o=e?`received values of types ${[...new Set(r.map((e=>`\\`${is(e)}\\``)))].join(\", \")}`:`received value of type \\`${is(r)}\\``;throw new TypeError(`Expected value which is \\`${t}\\`, ${o}.`)}};t.assert={undefined:e=>assertType(is.undefined(e),\"undefined\",e),string:e=>assertType(is.string(e),\"string\",e),number:e=>assertType(is.number(e),\"number\",e),bigint:e=>assertType(is.bigint(e),\"bigint\",e),function_:e=>assertType(is.function_(e),\"Function\",e),null_:e=>assertType(is.null_(e),\"null\",e),class_:e=>assertType(is.class_(e),\"Class\",e),boolean:e=>assertType(is.boolean(e),\"boolean\",e),symbol:e=>assertType(is.symbol(e),\"symbol\",e),numericString:e=>assertType(is.numericString(e),\"string with a number\",e),array:(e,t)=>{const r=assertType;r(is.array(e),\"Array\",e);if(t){e.forEach(t)}},buffer:e=>assertType(is.buffer(e),\"Buffer\",e),blob:e=>assertType(is.blob(e),\"Blob\",e),nullOrUndefined:e=>assertType(is.nullOrUndefined(e),\"null or undefined\",e),object:e=>assertType(is.object(e),\"Object\",e),iterable:e=>assertType(is.iterable(e),\"Iterable\",e),asyncIterable:e=>assertType(is.asyncIterable(e),\"AsyncIterable\",e),generator:e=>assertType(is.generator(e),\"Generator\",e),asyncGenerator:e=>assertType(is.asyncGenerator(e),\"AsyncGenerator\",e),nativePromise:e=>assertType(is.nativePromise(e),\"native Promise\",e),promise:e=>assertType(is.promise(e),\"Promise\",e),generatorFunction:e=>assertType(is.generatorFunction(e),\"GeneratorFunction\",e),asyncGeneratorFunction:e=>assertType(is.asyncGeneratorFunction(e),\"AsyncGeneratorFunction\",e),asyncFunction:e=>assertType(is.asyncFunction(e),\"AsyncFunction\",e),boundFunction:e=>assertType(is.boundFunction(e),\"Function\",e),regExp:e=>assertType(is.regExp(e),\"RegExp\",e),date:e=>assertType(is.date(e),\"Date\",e),error:e=>assertType(is.error(e),\"Error\",e),map:e=>assertType(is.map(e),\"Map\",e),set:e=>assertType(is.set(e),\"Set\",e),weakMap:e=>assertType(is.weakMap(e),\"WeakMap\",e),weakSet:e=>assertType(is.weakSet(e),\"WeakSet\",e),int8Array:e=>assertType(is.int8Array(e),\"Int8Array\",e),uint8Array:e=>assertType(is.uint8Array(e),\"Uint8Array\",e),uint8ClampedArray:e=>assertType(is.uint8ClampedArray(e),\"Uint8ClampedArray\",e),int16Array:e=>assertType(is.int16Array(e),\"Int16Array\",e),uint16Array:e=>assertType(is.uint16Array(e),\"Uint16Array\",e),int32Array:e=>assertType(is.int32Array(e),\"Int32Array\",e),uint32Array:e=>assertType(is.uint32Array(e),\"Uint32Array\",e),float32Array:e=>assertType(is.float32Array(e),\"Float32Array\",e),float64Array:e=>assertType(is.float64Array(e),\"Float64Array\",e),bigInt64Array:e=>assertType(is.bigInt64Array(e),\"BigInt64Array\",e),bigUint64Array:e=>assertType(is.bigUint64Array(e),\"BigUint64Array\",e),arrayBuffer:e=>assertType(is.arrayBuffer(e),\"ArrayBuffer\",e),sharedArrayBuffer:e=>assertType(is.sharedArrayBuffer(e),\"SharedArrayBuffer\",e),dataView:e=>assertType(is.dataView(e),\"DataView\",e),enumCase:(e,t)=>assertType(is.enumCase(e,t),\"EnumCase\",e),urlInstance:e=>assertType(is.urlInstance(e),\"URL\",e),urlString:e=>assertType(is.urlString(e),\"string with a URL\",e),truthy:e=>assertType(is.truthy(e),\"truthy\",e),falsy:e=>assertType(is.falsy(e),\"falsy\",e),nan:e=>assertType(is.nan(e),\"NaN\",e),primitive:e=>assertType(is.primitive(e),\"primitive\",e),integer:e=>assertType(is.integer(e),\"integer\",e),safeInteger:e=>assertType(is.safeInteger(e),\"integer\",e),plainObject:e=>assertType(is.plainObject(e),\"plain object\",e),typedArray:e=>assertType(is.typedArray(e),\"TypedArray\",e),arrayLike:e=>assertType(is.arrayLike(e),\"array-like\",e),domElement:e=>assertType(is.domElement(e),\"HTMLElement\",e),observable:e=>assertType(is.observable(e),\"Observable\",e),nodeStream:e=>assertType(is.nodeStream(e),\"Node.js Stream\",e),infinite:e=>assertType(is.infinite(e),\"infinite number\",e),emptyArray:e=>assertType(is.emptyArray(e),\"empty array\",e),nonEmptyArray:e=>assertType(is.nonEmptyArray(e),\"non-empty array\",e),emptyString:e=>assertType(is.emptyString(e),\"empty string\",e),emptyStringOrWhitespace:e=>assertType(is.emptyStringOrWhitespace(e),\"empty string or whitespace\",e),nonEmptyString:e=>assertType(is.nonEmptyString(e),\"non-empty string\",e),nonEmptyStringAndNotWhitespace:e=>assertType(is.nonEmptyStringAndNotWhitespace(e),\"non-empty string and not whitespace\",e),emptyObject:e=>assertType(is.emptyObject(e),\"empty object\",e),nonEmptyObject:e=>assertType(is.nonEmptyObject(e),\"non-empty object\",e),emptySet:e=>assertType(is.emptySet(e),\"empty set\",e),nonEmptySet:e=>assertType(is.nonEmptySet(e),\"non-empty set\",e),emptyMap:e=>assertType(is.emptyMap(e),\"empty map\",e),nonEmptyMap:e=>assertType(is.nonEmptyMap(e),\"non-empty map\",e),propertyKey:e=>assertType(is.propertyKey(e),\"PropertyKey\",e),formData:e=>assertType(is.formData(e),\"FormData\",e),urlSearchParams:e=>assertType(is.urlSearchParams(e),\"URLSearchParams\",e),evenInteger:e=>assertType(is.evenInteger(e),\"even integer\",e),oddInteger:e=>assertType(is.oddInteger(e),\"odd integer\",e),directInstanceOf:(e,t)=>assertType(is.directInstanceOf(e,t),\"T\",e),inRange:(e,t)=>assertType(is.inRange(e,t),\"in range\",e),any:(e,...t)=>assertType(is.any(e,...t),\"predicate returns truthy for any value\",t,{multipleValues:true}),all:(e,...t)=>assertType(is.all(e,...t),\"predicate returns truthy for all values\",t,{multipleValues:true})};Object.defineProperties(is,{class:{value:is.class_},function:{value:is.function_},null:{value:is.null_}});Object.defineProperties(t.assert,{class:{value:t.assert.class_},function:{value:t.assert.function_},null:{value:t.assert.null_}});t[\"default\"]=is;e.exports=is;e.exports[\"default\"]=is;e.exports.assert=t.assert},8097:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(6214);const o=r(3837);const n=Number(process.versions.node.split(\".\")[0]);const timer=e=>{if(e.timings){return e.timings}const t={start:Date.now(),socket:undefined,lookup:undefined,connect:undefined,secureConnect:undefined,upload:undefined,response:undefined,end:undefined,error:undefined,abort:undefined,phases:{wait:undefined,dns:undefined,tcp:undefined,tls:undefined,request:undefined,firstByte:undefined,download:undefined,total:undefined}};e.timings=t;const handleError=e=>{const r=e.emit.bind(e);e.emit=(s,...o)=>{if(s===\"error\"){t.error=Date.now();t.phases.total=t.error-t.start;e.emit=r}return r(s,...o)}};handleError(e);const onAbort=()=>{t.abort=Date.now();if(!t.response||n>=13){t.phases.total=Date.now()-t.start}};e.prependOnceListener(\"abort\",onAbort);const onSocket=e=>{t.socket=Date.now();t.phases.wait=t.socket-t.start;if(o.types.isProxy(e)){return}const lookupListener=()=>{t.lookup=Date.now();t.phases.dns=t.lookup-t.socket};e.prependOnceListener(\"lookup\",lookupListener);s.default(e,{connect:()=>{t.connect=Date.now();if(t.lookup===undefined){e.removeListener(\"lookup\",lookupListener);t.lookup=t.connect;t.phases.dns=t.lookup-t.socket}t.phases.tcp=t.connect-t.lookup},secureConnect:()=>{t.secureConnect=Date.now();t.phases.tls=t.secureConnect-t.connect}})};if(e.socket){onSocket(e.socket)}else{e.prependOnceListener(\"socket\",onSocket)}const onUpload=()=>{var e;t.upload=Date.now();t.phases.request=t.upload-((e=t.secureConnect)!==null&&e!==void 0?e:t.connect)};const writableFinished=()=>{if(typeof e.writableFinished===\"boolean\"){return e.writableFinished}return e.finished&&e.outputSize===0&&(!e.socket||e.socket.writableLength===0)};if(writableFinished()){onUpload()}else{e.prependOnceListener(\"finish\",onUpload)}e.prependOnceListener(\"response\",(e=>{t.response=Date.now();t.phases.firstByte=t.response-t.upload;e.timings=t;handleError(e);e.prependOnceListener(\"end\",(()=>{t.end=Date.now();t.phases.download=t.end-t.response;t.phases.total=t.end-t.start}));e.prependOnceListener(\"aborted\",onAbort)}));return t};t[\"default\"]=timer;e.exports=timer;e.exports[\"default\"]=timer},2286:(e,t,r)=>{\"use strict\";const{V4MAPPED:s,ADDRCONFIG:o,ALL:n,promises:{Resolver:i},lookup:a}=r(9523);const{promisify:c}=r(3837);const u=r(2037);const l=Symbol(\"cacheableLookupCreateConnection\");const h=Symbol(\"cacheableLookupInstance\");const d=Symbol(\"expires\");const p=typeof n===\"number\";const verifyAgent=e=>{if(!(e&&typeof e.createConnection===\"function\")){throw new Error(\"Expected an Agent instance as the first argument\")}};const map4to6=e=>{for(const t of e){if(t.family===6){continue}t.address=`::ffff:${t.address}`;t.family=6}};const getIfaceInfo=()=>{let e=false;let t=false;for(const r of Object.values(u.networkInterfaces())){for(const s of r){if(s.internal){continue}if(s.family===\"IPv6\"){t=true}else{e=true}if(e&&t){return{has4:e,has6:t}}}}return{has4:e,has6:t}};const isIterable=e=>Symbol.iterator in e;const m={ttl:true};const y={all:true};class CacheableLookup{constructor({cache:e=new Map,maxTtl:t=Infinity,fallbackDuration:r=3600,errorTtl:s=.15,resolver:o=new i,lookup:n=a}={}){this.maxTtl=t;this.errorTtl=s;this._cache=e;this._resolver=o;this._dnsLookup=c(n);if(this._resolver instanceof i){this._resolve4=this._resolver.resolve4.bind(this._resolver);this._resolve6=this._resolver.resolve6.bind(this._resolver)}else{this._resolve4=c(this._resolver.resolve4.bind(this._resolver));this._resolve6=c(this._resolver.resolve6.bind(this._resolver))}this._iface=getIfaceInfo();this._pending={};this._nextRemovalTime=false;this._hostnamesToFallback=new Set;if(r<1){this._fallback=false}else{this._fallback=true;const e=setInterval((()=>{this._hostnamesToFallback.clear()}),r*1e3);if(e.unref){e.unref()}}this.lookup=this.lookup.bind(this);this.lookupAsync=this.lookupAsync.bind(this)}set servers(e){this.clear();this._resolver.setServers(e)}get servers(){return this._resolver.getServers()}lookup(e,t,r){if(typeof t===\"function\"){r=t;t={}}else if(typeof t===\"number\"){t={family:t}}if(!r){throw new Error(\"Callback must be a function.\")}this.lookupAsync(e,t).then((e=>{if(t.all){r(null,e)}else{r(null,e.address,e.family,e.expires,e.ttl)}}),r)}async lookupAsync(e,t={}){if(typeof t===\"number\"){t={family:t}}let r=await this.query(e);if(t.family===6){const e=r.filter((e=>e.family===6));if(t.hints&s){if(p&&t.hints&n||e.length===0){map4to6(r)}else{r=e}}else{r=e}}else if(t.family===4){r=r.filter((e=>e.family===4))}if(t.hints&o){const{_iface:e}=this;r=r.filter((t=>t.family===6?e.has6:e.has4))}if(r.length===0){const t=new Error(`cacheableLookup ENOTFOUND ${e}`);t.code=\"ENOTFOUND\";t.hostname=e;throw t}if(t.all){return r}return r[0]}async query(e){let t=await this._cache.get(e);if(!t){const r=this._pending[e];if(r){t=await r}else{const r=this.queryAndCache(e);this._pending[e]=r;try{t=await r}finally{delete this._pending[e]}}}t=t.map((e=>({...e})));return t}async _resolve(e){const wrap=async e=>{try{return await e}catch(e){if(e.code===\"ENODATA\"||e.code===\"ENOTFOUND\"){return[]}throw e}};const[t,r]=await Promise.all([this._resolve4(e,m),this._resolve6(e,m)].map((e=>wrap(e))));let s=0;let o=0;let n=0;const i=Date.now();for(const e of t){e.family=4;e.expires=i+e.ttl*1e3;s=Math.max(s,e.ttl)}for(const e of r){e.family=6;e.expires=i+e.ttl*1e3;o=Math.max(o,e.ttl)}if(t.length>0){if(r.length>0){n=Math.min(s,o)}else{n=s}}else{n=o}return{entries:[...t,...r],cacheTtl:n}}async _lookup(e){try{const t=await this._dnsLookup(e,{all:true});return{entries:t,cacheTtl:0}}catch(e){return{entries:[],cacheTtl:0}}}async _set(e,t,r){if(this.maxTtl>0&&r>0){r=Math.min(r,this.maxTtl)*1e3;t[d]=Date.now()+r;try{await this._cache.set(e,t,r)}catch(e){this.lookupAsync=async()=>{const t=new Error(\"Cache Error. Please recreate the CacheableLookup instance.\");t.cause=e;throw t}}if(isIterable(this._cache)){this._tick(r)}}}async queryAndCache(e){if(this._hostnamesToFallback.has(e)){return this._dnsLookup(e,y)}let t=await this._resolve(e);if(t.entries.length===0&&this._fallback){t=await this._lookup(e);if(t.entries.length!==0){this._hostnamesToFallback.add(e)}}const r=t.entries.length===0?this.errorTtl:t.cacheTtl;await this._set(e,t.entries,r);return t.entries}_tick(e){const t=this._nextRemovalTime;if(!t||e<t){clearTimeout(this._removalTimeout);this._nextRemovalTime=e;this._removalTimeout=setTimeout((()=>{this._nextRemovalTime=false;let e=Infinity;const t=Date.now();for(const[r,s]of this._cache){const o=s[d];if(t>=o){this._cache.delete(r)}else if(o<e){e=o}}if(e!==Infinity){this._tick(e-t)}}),e);if(this._removalTimeout.unref){this._removalTimeout.unref()}}}install(e){verifyAgent(e);if(l in e){throw new Error(\"CacheableLookup has been already installed\")}e[l]=e.createConnection;e[h]=this;e.createConnection=(t,r)=>{if(!(\"lookup\"in t)){t.lookup=this.lookup}return e[l](t,r)}}uninstall(e){verifyAgent(e);if(e[l]){if(e[h]!==this){throw new Error(\"The agent is not owned by this CacheableLookup instance\")}e.createConnection=e[l];delete e[l];delete e[h]}}updateInterfaceInfo(){const{_iface:e}=this;this._iface=getIfaceInfo();if(e.has4&&!this._iface.has4||e.has6&&!this._iface.has6){this._cache.clear()}}clear(e){if(e){this._cache.delete(e);return}this._cache.clear()}}e.exports=CacheableLookup;e.exports[\"default\"]=CacheableLookup},4340:(e,t,r)=>{\"use strict\";const{PassThrough:s}=r(2781);e.exports=e=>{e={...e};const{array:t}=e;let{encoding:r}=e;const o=r===\"buffer\";let n=false;if(t){n=!(r||o)}else{r=r||\"utf8\"}if(o){r=null}const i=new s({objectMode:n});if(r){i.setEncoding(r)}let a=0;const c=[];i.on(\"data\",(e=>{c.push(e);if(n){a=c.length}else{a+=e.length}}));i.getBufferedValue=()=>{if(t){return c}return o?Buffer.concat(c,a):c.join(\"\")};i.getBufferedLength=()=>a;return i}},7040:(e,t,r)=>{\"use strict\";const{constants:s}=r(4300);const o=r(8341);const n=r(4340);class MaxBufferError extends Error{constructor(){super(\"maxBuffer exceeded\");this.name=\"MaxBufferError\"}}async function getStream(e,t){if(!e){return Promise.reject(new Error(\"Expected a stream\"))}t={maxBuffer:Infinity,...t};const{maxBuffer:r}=t;let i;await new Promise(((a,c)=>{const rejectPromise=e=>{if(e&&i.getBufferedLength()<=s.MAX_LENGTH){e.bufferedData=i.getBufferedValue()}c(e)};i=o(e,n(t),(e=>{if(e){rejectPromise(e);return}a()}));i.on(\"data\",(()=>{if(i.getBufferedLength()>r){rejectPromise(new MaxBufferError)}}))}));return i.getBufferedValue()}e.exports=getStream;e.exports[\"default\"]=getStream;e.exports.buffer=(e,t)=>getStream(e,{...t,encoding:\"buffer\"});e.exports.array=(e,t)=>getStream(e,{...t,array:true});e.exports.MaxBufferError=MaxBufferError},8116:(e,t,r)=>{\"use strict\";const s=r(2361);const o=r(7310);const n=r(7952);const i=r(7040);const a=r(1002);const c=r(9004);const u=r(9662);const l=r(1312);const h=r(1531);class CacheableRequest{constructor(e,t){if(typeof e!==\"function\"){throw new TypeError(\"Parameter `request` must be a function\")}this.cache=new h({uri:typeof t===\"string\"&&t,store:typeof t!==\"string\"&&t,namespace:\"cacheable-request\"});return this.createCacheableRequest(e)}createCacheableRequest(e){return(t,r)=>{let h;if(typeof t===\"string\"){h=normalizeUrlObject(o.parse(t));t={}}else if(t instanceof o.URL){h=normalizeUrlObject(o.parse(t.toString()));t={}}else{const[e,...r]=(t.path||\"\").split(\"?\");const s=r.length>0?`?${r.join(\"?\")}`:\"\";h=normalizeUrlObject({...t,pathname:e,search:s})}t={headers:{},method:\"GET\",cache:true,strictTtl:false,automaticFailover:false,...t,...urlObjectToRequestOptions(h)};t.headers=u(t.headers);const d=new s;const p=n(o.format(h),{stripWWW:false,removeTrailingSlash:false,stripAuthentication:false});const m=`${t.method}:${p}`;let y=false;let g=false;const makeRequest=t=>{g=true;let s=false;let o;const n=new Promise((e=>{o=()=>{if(!s){s=true;e()}}}));const handler=e=>{if(y&&!t.forceRefresh){e.status=e.statusCode;const r=a.fromObject(y.cachePolicy).revalidatedPolicy(t,e);if(!r.modified){const t=r.policy.responseHeaders();e=new c(y.statusCode,t,y.body,y.url);e.cachePolicy=r.policy;e.fromCache=true}}if(!e.fromCache){e.cachePolicy=new a(t,e,t);e.fromCache=false}let o;if(t.cache&&e.cachePolicy.storable()){o=l(e);(async()=>{try{const r=i.buffer(e);await Promise.race([n,new Promise((t=>e.once(\"end\",t)))]);if(s){return}const o=await r;const a={cachePolicy:e.cachePolicy.toObject(),url:e.url,statusCode:e.fromCache?y.statusCode:e.statusCode,body:o};let c=t.strictTtl?e.cachePolicy.timeToLive():undefined;if(t.maxTtl){c=c?Math.min(c,t.maxTtl):t.maxTtl}await this.cache.set(m,a,c)}catch(e){d.emit(\"error\",new CacheableRequest.CacheError(e))}})()}else if(t.cache&&y){(async()=>{try{await this.cache.delete(m)}catch(e){d.emit(\"error\",new CacheableRequest.CacheError(e))}})()}d.emit(\"response\",o||e);if(typeof r===\"function\"){r(o||e)}};try{const r=e(t,handler);r.once(\"error\",o);r.once(\"abort\",o);d.emit(\"request\",r)}catch(e){d.emit(\"error\",new CacheableRequest.RequestError(e))}};(async()=>{const get=async e=>{await Promise.resolve();const t=e.cache?await this.cache.get(m):undefined;if(typeof t===\"undefined\"){return makeRequest(e)}const s=a.fromObject(t.cachePolicy);if(s.satisfiesWithoutRevalidation(e)&&!e.forceRefresh){const e=s.responseHeaders();const o=new c(t.statusCode,e,t.body,t.url);o.cachePolicy=s;o.fromCache=true;d.emit(\"response\",o);if(typeof r===\"function\"){r(o)}}else{y=t;e.headers=s.revalidationHeaders(e);makeRequest(e)}};const errorHandler=e=>d.emit(\"error\",new CacheableRequest.CacheError(e));this.cache.once(\"error\",errorHandler);d.on(\"response\",(()=>this.cache.removeListener(\"error\",errorHandler)));try{await get(t)}catch(e){if(t.automaticFailover&&!g){makeRequest(t)}d.emit(\"error\",new CacheableRequest.CacheError(e))}})();return d}}}function urlObjectToRequestOptions(e){const t={...e};t.path=`${e.pathname||\"/\"}${e.search||\"\"}`;delete t.pathname;delete t.search;return t}function normalizeUrlObject(e){return{protocol:e.protocol,auth:e.auth,hostname:e.hostname||e.host||\"localhost\",port:e.port,pathname:e.pathname,search:e.search}}CacheableRequest.RequestError=class extends Error{constructor(e){super(e.message);this.name=\"RequestError\";Object.assign(this,e)}};CacheableRequest.CacheError=class extends Error{constructor(e){super(e.message);this.name=\"CacheError\";Object.assign(this,e)}};e.exports=CacheableRequest},9372:e=>{\"use strict\";const t=[\"destroy\",\"setTimeout\",\"socket\",\"headers\",\"trailers\",\"rawHeaders\",\"statusCode\",\"httpVersion\",\"httpVersionMinor\",\"httpVersionMajor\",\"rawTrailers\",\"statusMessage\"];e.exports=(e,r)=>{const s=new Set(Object.keys(e).concat(t));for(const t of s){if(t in r){continue}r[t]=typeof e[t]===\"function\"?e[t].bind(e):e[t]}}},1312:(e,t,r)=>{\"use strict\";const s=r(2781).PassThrough;const o=r(9372);const cloneResponse=e=>{if(!(e&&e.pipe)){throw new TypeError(\"Parameter `response` must be a response stream.\")}const t=new s;o(e,t);return e.pipe(t)};e.exports=cloneResponse},2391:(e,t,r)=>{\"use strict\";const{Transform:s,PassThrough:o}=r(2781);const n=r(9796);const i=r(2610);e.exports=e=>{const t=(e.headers[\"content-encoding\"]||\"\").toLowerCase();if(![\"gzip\",\"deflate\",\"br\"].includes(t)){return e}const r=t===\"br\";if(r&&typeof n.createBrotliDecompress!==\"function\"){e.destroy(new Error(\"Brotli is not supported on Node.js < 12\"));return e}let a=true;const c=new s({transform(e,t,r){a=false;r(null,e)},flush(e){e()}});const u=new o({autoDestroy:false,destroy(t,r){e.destroy();r(t)}});const l=r?n.createBrotliDecompress():n.createUnzip();l.once(\"error\",(t=>{if(a&&!e.readable){u.end();return}u.destroy(t)}));i(e,u);e.pipe(c).pipe(l).pipe(u);return u}},6214:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});function isTLSSocket(e){return e.encrypted}const deferToConnect=(e,t)=>{let r;if(typeof t===\"function\"){const e=t;r={connect:e}}else{r=t}const s=typeof r.connect===\"function\";const o=typeof r.secureConnect===\"function\";const n=typeof r.close===\"function\";const onConnect=()=>{if(s){r.connect()}if(isTLSSocket(e)&&o){if(e.authorized){r.secureConnect()}else if(!e.authorizationError){e.once(\"secureConnect\",r.secureConnect)}}if(n){e.once(\"close\",r.close)}};if(e.writable&&!e.connecting){onConnect()}else if(e.connecting){e.once(\"connect\",onConnect)}else if(e.destroyed&&n){r.close(e._hadError)}};t[\"default\"]=deferToConnect;e.exports=deferToConnect;e.exports[\"default\"]=deferToConnect},1205:(e,t,r)=>{var s=r(1223);var noop=function(){};var isRequest=function(e){return e.setHeader&&typeof e.abort===\"function\"};var isChildProcess=function(e){return e.stdio&&Array.isArray(e.stdio)&&e.stdio.length===3};var eos=function(e,t,r){if(typeof t===\"function\")return eos(e,null,t);if(!t)t={};r=s(r||noop);var o=e._writableState;var n=e._readableState;var i=t.readable||t.readable!==false&&e.readable;var a=t.writable||t.writable!==false&&e.writable;var c=false;var onlegacyfinish=function(){if(!e.writable)onfinish()};var onfinish=function(){a=false;if(!i)r.call(e)};var onend=function(){i=false;if(!a)r.call(e)};var onexit=function(t){r.call(e,t?new Error(\"exited with error code: \"+t):null)};var onerror=function(t){r.call(e,t)};var onclose=function(){process.nextTick(onclosenexttick)};var onclosenexttick=function(){if(c)return;if(i&&!(n&&(n.ended&&!n.destroyed)))return r.call(e,new Error(\"premature close\"));if(a&&!(o&&(o.ended&&!o.destroyed)))return r.call(e,new Error(\"premature close\"))};var onrequest=function(){e.req.on(\"finish\",onfinish)};if(isRequest(e)){e.on(\"complete\",onfinish);e.on(\"abort\",onclose);if(e.req)onrequest();else e.on(\"request\",onrequest)}else if(a&&!o){e.on(\"end\",onlegacyfinish);e.on(\"close\",onlegacyfinish)}if(isChildProcess(e))e.on(\"exit\",onexit);e.on(\"end\",onend);e.on(\"finish\",onfinish);if(t.error!==false)e.on(\"error\",onerror);e.on(\"close\",onclose);return function(){c=true;e.removeListener(\"complete\",onfinish);e.removeListener(\"abort\",onclose);e.removeListener(\"request\",onrequest);if(e.req)e.req.removeListener(\"finish\",onfinish);e.removeListener(\"end\",onlegacyfinish);e.removeListener(\"close\",onlegacyfinish);e.removeListener(\"finish\",onfinish);e.removeListener(\"exit\",onexit);e.removeListener(\"end\",onend);e.removeListener(\"error\",onerror);e.removeListener(\"close\",onclose)}};e.exports=eos},6457:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(4597);function createRejection(e,...t){const r=(async()=>{if(e instanceof s.RequestError){try{for(const r of t){if(r){for(const t of r){e=await t(e)}}}}catch(t){e=t}}throw e})();const returnPromise=()=>r;r.json=returnPromise;r.text=returnPromise;r.buffer=returnPromise;r.on=returnPromise;return r}t[\"default\"]=createRejection},6056:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});const n=r(2361);const i=r(7678);const a=r(9072);const c=r(4597);const u=r(8220);const l=r(94);const h=r(3021);const d=r(4500);const p=r(9298);const m=[\"request\",\"response\",\"redirect\",\"uploadProgress\",\"downloadProgress\"];function asPromise(e){let t;let r;const s=new n.EventEmitter;const o=new a(((n,a,y)=>{const makeRequest=g=>{const b=new l.default(undefined,e);b.retryCount=g;b._noPipe=true;y((()=>b.destroy()));y.shouldReject=false;y((()=>a(new c.CancelError(b))));t=b;b.once(\"response\",(async e=>{var t;e.retryCount=g;if(e.request.aborted){return}let s;try{s=await d.default(b);e.rawBody=s}catch(e){return}if(b._isAboutToError){return}const o=((t=e.headers[\"content-encoding\"])!==null&&t!==void 0?t:\"\").toLowerCase();const i=[\"gzip\",\"deflate\",\"br\"].includes(o);const{options:a}=b;if(i&&!a.decompress){e.body=s}else{try{e.body=u.default(e,a.responseType,a.parseJson,a.encoding)}catch(t){e.body=s.toString();if(p.isResponseOk(e)){b._beforeError(t);return}}}try{for(const[t,r]of a.hooks.afterResponse.entries()){e=await r(e,(async e=>{const r=l.default.normalizeArguments(undefined,{...e,retry:{calculateDelay:()=>0},throwHttpErrors:false,resolveBodyOnly:false},a);r.hooks.afterResponse=r.hooks.afterResponse.slice(0,t);for(const e of r.hooks.beforeRetry){await e(r)}const s=asPromise(r);y((()=>{s.catch((()=>{}));s.cancel()}));return s}))}}catch(e){b._beforeError(new c.RequestError(e.message,e,b));return}r=e;if(!p.isResponseOk(e)){b._beforeError(new c.HTTPError(e));return}b.destroy();n(b.options.resolveBodyOnly?e.body:e)}));const onError=e=>{if(o.isCanceled){return}const{options:t}=b;if(e instanceof c.HTTPError&&!t.throwHttpErrors){const{response:t}=e;n(b.options.resolveBodyOnly?t.body:t);return}a(e)};b.once(\"error\",onError);const _=b.options.body;b.once(\"retry\",((e,t)=>{var r,s;if(_===((r=t.request)===null||r===void 0?void 0:r.options.body)&&i.default.nodeStream((s=t.request)===null||s===void 0?void 0:s.options.body)){onError(t);return}makeRequest(e)}));h.default(b,s,m)};makeRequest(0)}));o.on=(e,t)=>{s.on(e,t);return o};const shortcut=e=>{const t=(async()=>{await o;const{options:t}=r.request;return u.default(r,e,t.parseJson,t.encoding)})();Object.defineProperties(t,Object.getOwnPropertyDescriptors(o));return t};o.json=()=>{const{headers:e}=t.options;if(!t.writableFinished&&e.accept===undefined){e.accept=\"application/json\"}return shortcut(\"json\")};o.buffer=()=>shortcut(\"buffer\");o.text=()=>shortcut(\"text\");return o}t[\"default\"]=asPromise;o(r(4597),t)},1048:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);const normalizeArguments=(e,t)=>{if(s.default.null_(e.encoding)){throw new TypeError(\"To get a Buffer, set `options.responseType` to `buffer` instead\")}s.assert.any([s.default.string,s.default.undefined],e.encoding);s.assert.any([s.default.boolean,s.default.undefined],e.resolveBodyOnly);s.assert.any([s.default.boolean,s.default.undefined],e.methodRewriting);s.assert.any([s.default.boolean,s.default.undefined],e.isStream);s.assert.any([s.default.string,s.default.undefined],e.responseType);if(e.responseType===undefined){e.responseType=\"text\"}const{retry:r}=e;if(t){e.retry={...t.retry}}else{e.retry={calculateDelay:e=>e.computedValue,limit:0,methods:[],statusCodes:[],errorCodes:[],maxRetryAfter:undefined}}if(s.default.object(r)){e.retry={...e.retry,...r};e.retry.methods=[...new Set(e.retry.methods.map((e=>e.toUpperCase())))];e.retry.statusCodes=[...new Set(e.retry.statusCodes)];e.retry.errorCodes=[...new Set(e.retry.errorCodes)]}else if(s.default.number(r)){e.retry.limit=r}if(s.default.undefined(e.retry.maxRetryAfter)){e.retry.maxRetryAfter=Math.min(...[e.timeout.request,e.timeout.connect].filter(s.default.number))}if(s.default.object(e.pagination)){if(t){e.pagination={...t.pagination,...e.pagination}}const{pagination:r}=e;if(!s.default.function_(r.transform)){throw new Error(\"`options.pagination.transform` must be implemented\")}if(!s.default.function_(r.shouldContinue)){throw new Error(\"`options.pagination.shouldContinue` must be implemented\")}if(!s.default.function_(r.filter)){throw new TypeError(\"`options.pagination.filter` must be implemented\")}if(!s.default.function_(r.paginate)){throw new Error(\"`options.pagination.paginate` must be implemented\")}}if(e.responseType===\"json\"&&e.headers.accept===undefined){e.headers.accept=\"application/json\"}return e};t[\"default\"]=normalizeArguments},8220:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(4597);const parseBody=(e,t,r,o)=>{const{rawBody:n}=e;try{if(t===\"text\"){return n.toString(o)}if(t===\"json\"){return n.length===0?\"\":r(n.toString())}if(t===\"buffer\"){return n}throw new s.ParseError({message:`Unknown body type '${t}'`,name:\"Error\"},e)}catch(t){throw new s.ParseError(t,e)}};t[\"default\"]=parseBody},4597:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});t.CancelError=t.ParseError=void 0;const n=r(94);class ParseError extends n.RequestError{constructor(e,t){const{options:r}=t.request;super(`${e.message} in \"${r.url.toString()}\"`,e,t.request);this.name=\"ParseError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_BODY_PARSE_FAILURE\":this.code}}t.ParseError=ParseError;class CancelError extends n.RequestError{constructor(e){super(\"Promise was canceled\",{},e);this.name=\"CancelError\";this.code=\"ERR_CANCELED\"}get isCanceled(){return true}}t.CancelError=CancelError;o(r(94),t)},3462:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.retryAfterStatusCodes=void 0;t.retryAfterStatusCodes=new Set([413,429,503]);const calculateRetryDelay=({attemptCount:e,retryOptions:t,error:r,retryAfter:s})=>{if(e>t.limit){return 0}const o=t.methods.includes(r.options.method);const n=t.errorCodes.includes(r.code);const i=r.response&&t.statusCodes.includes(r.response.statusCode);if(!o||!n&&!i){return 0}if(r.response){if(s){if(t.maxRetryAfter===undefined||s>t.maxRetryAfter){return 0}return s}if(r.response.statusCode===413){return 0}}const a=Math.random()*100;return 2**(e-1)*1e3+a};t[\"default\"]=calculateRetryDelay},94:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.UnsupportedProtocolError=t.ReadError=t.TimeoutError=t.UploadError=t.CacheError=t.HTTPError=t.MaxRedirectsError=t.RequestError=t.setNonEnumerableProperties=t.knownHookEvents=t.withoutBody=t.kIsNormalizedAlready=void 0;const s=r(3837);const o=r(2781);const n=r(7147);const i=r(7310);const a=r(3685);const c=r(3685);const u=r(5687);const l=r(8097);const h=r(2286);const d=r(8116);const p=r(2391);const m=r(4645);const y=r(9662);const g=r(7678);const b=r(4564);const _=r(40);const w=r(3021);const v=r(2454);const E=r(8026);const S=r(9219);const x=r(7288);const R=r(4500);const k=r(4993);const T=r(9298);const P=r(397);const C=r(1048);const A=r(3462);let O;const j=Symbol(\"request\");const q=Symbol(\"response\");const H=Symbol(\"responseSize\");const L=Symbol(\"downloadedSize\");const I=Symbol(\"bodySize\");const U=Symbol(\"uploadedSize\");const M=Symbol(\"serverResponsesPiped\");const N=Symbol(\"unproxyEvents\");const D=Symbol(\"isFromCache\");const z=Symbol(\"cancelTimeouts\");const $=Symbol(\"startedReading\");const B=Symbol(\"stopReading\");const F=Symbol(\"triggerRead\");const W=Symbol(\"body\");const V=Symbol(\"jobs\");const G=Symbol(\"originalResponse\");const J=Symbol(\"retryTimeout\");t.kIsNormalizedAlready=Symbol(\"isNormalizedAlready\");const K=g.default.string(process.versions.brotli);t.withoutBody=new Set([\"GET\",\"HEAD\"]);t.knownHookEvents=[\"init\",\"beforeRequest\",\"beforeRedirect\",\"beforeError\",\"beforeRetry\",\"afterResponse\"];function validateSearchParameters(e){for(const t in e){const r=e[t];if(!g.default.string(r)&&!g.default.number(r)&&!g.default.boolean(r)&&!g.default.null_(r)&&!g.default.undefined(r)){throw new TypeError(`The \\`searchParams\\` value '${String(r)}' must be a string, number, boolean or null`)}}}function isClientRequest(e){return g.default.object(e)&&!(\"statusCode\"in e)}const Q=new x.default;const waitForOpenFile=async e=>new Promise(((t,r)=>{const onError=e=>{r(e)};if(!e.pending){t()}e.once(\"error\",onError);e.once(\"ready\",(()=>{e.off(\"error\",onError);t()}))}));const Z=new Set([300,301,302,303,304,307,308]);const X=[\"context\",\"body\",\"json\",\"form\"];t.setNonEnumerableProperties=(e,t)=>{const r={};for(const t of e){if(!t){continue}for(const e of X){if(!(e in t)){continue}r[e]={writable:true,configurable:true,enumerable:false,value:t[e]}}}Object.defineProperties(t,r)};class RequestError extends Error{constructor(e,t,r){var s,o;super(e);Error.captureStackTrace(this,this.constructor);this.name=\"RequestError\";this.code=(s=t.code)!==null&&s!==void 0?s:\"ERR_GOT_REQUEST_ERROR\";if(r instanceof Request){Object.defineProperty(this,\"request\",{enumerable:false,value:r});Object.defineProperty(this,\"response\",{enumerable:false,value:r[q]});Object.defineProperty(this,\"options\",{enumerable:false,value:r.options})}else{Object.defineProperty(this,\"options\",{enumerable:false,value:r})}this.timings=(o=this.request)===null||o===void 0?void 0:o.timings;if(g.default.string(t.stack)&&g.default.string(this.stack)){const e=this.stack.indexOf(this.message)+this.message.length;const r=this.stack.slice(e).split(\"\\n\").reverse();const s=t.stack.slice(t.stack.indexOf(t.message)+t.message.length).split(\"\\n\").reverse();while(s.length!==0&&s[0]===r[0]){r.shift()}this.stack=`${this.stack.slice(0,e)}${r.reverse().join(\"\\n\")}${s.reverse().join(\"\\n\")}`}}}t.RequestError=RequestError;class MaxRedirectsError extends RequestError{constructor(e){super(`Redirected ${e.options.maxRedirects} times. Aborting.`,{},e);this.name=\"MaxRedirectsError\";this.code=\"ERR_TOO_MANY_REDIRECTS\"}}t.MaxRedirectsError=MaxRedirectsError;class HTTPError extends RequestError{constructor(e){super(`Response code ${e.statusCode} (${e.statusMessage})`,{},e.request);this.name=\"HTTPError\";this.code=\"ERR_NON_2XX_3XX_RESPONSE\"}}t.HTTPError=HTTPError;class CacheError extends RequestError{constructor(e,t){super(e.message,e,t);this.name=\"CacheError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_CACHE_ACCESS\":this.code}}t.CacheError=CacheError;class UploadError extends RequestError{constructor(e,t){super(e.message,e,t);this.name=\"UploadError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_UPLOAD\":this.code}}t.UploadError=UploadError;class TimeoutError extends RequestError{constructor(e,t,r){super(e.message,e,r);this.name=\"TimeoutError\";this.event=e.event;this.timings=t}}t.TimeoutError=TimeoutError;class ReadError extends RequestError{constructor(e,t){super(e.message,e,t);this.name=\"ReadError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_READING_RESPONSE_STREAM\":this.code}}t.ReadError=ReadError;class UnsupportedProtocolError extends RequestError{constructor(e){super(`Unsupported protocol \"${e.url.protocol}\"`,{},e);this.name=\"UnsupportedProtocolError\";this.code=\"ERR_UNSUPPORTED_PROTOCOL\"}}t.UnsupportedProtocolError=UnsupportedProtocolError;const Y=[\"socket\",\"connect\",\"continue\",\"information\",\"upgrade\",\"timeout\"];class Request extends o.Duplex{constructor(e,r={},s){super({autoDestroy:false,highWaterMark:0});this[L]=0;this[U]=0;this.requestInitialized=false;this[M]=new Set;this.redirects=[];this[B]=false;this[F]=false;this[V]=[];this.retryCount=0;this._progressCallbacks=[];const unlockWrite=()=>this._unlockWrite();const lockWrite=()=>this._lockWrite();this.on(\"pipe\",(e=>{e.prependListener(\"data\",unlockWrite);e.on(\"data\",lockWrite);e.prependListener(\"end\",unlockWrite);e.on(\"end\",lockWrite)}));this.on(\"unpipe\",(e=>{e.off(\"data\",unlockWrite);e.off(\"data\",lockWrite);e.off(\"end\",unlockWrite);e.off(\"end\",lockWrite)}));this.on(\"pipe\",(e=>{if(e instanceof c.IncomingMessage){this.options.headers={...e.headers,...this.options.headers}}}));const{json:o,body:i,form:a}=r;if(o||i||a){this._lockWrite()}if(t.kIsNormalizedAlready in r){this.options=r}else{try{this.options=this.constructor.normalizeArguments(e,r,s)}catch(e){if(g.default.nodeStream(r.body)){r.body.destroy()}this.destroy(e);return}}(async()=>{var e;try{if(this.options.body instanceof n.ReadStream){await waitForOpenFile(this.options.body)}const{url:t}=this.options;if(!t){throw new TypeError(\"Missing `url` property\")}this.requestUrl=t.toString();decodeURI(this.requestUrl);await this._finalizeBody();await this._makeRequest();if(this.destroyed){(e=this[j])===null||e===void 0?void 0:e.destroy();return}for(const e of this[V]){e()}this[V].length=0;this.requestInitialized=true}catch(e){if(e instanceof RequestError){this._beforeError(e);return}if(!this.destroyed){this.destroy(e)}}})()}static normalizeArguments(e,r,o){var n,a,c,u,l;const p=r;if(g.default.object(e)&&!g.default.urlInstance(e)){r={...o,...e,...r}}else{if(e&&r&&r.url!==undefined){throw new TypeError(\"The `url` option is mutually exclusive with the `input` argument\")}r={...o,...r};if(e!==undefined){r.url=e}if(g.default.urlInstance(r.url)){r.url=new i.URL(r.url.toString())}}if(r.cache===false){r.cache=undefined}if(r.dnsCache===false){r.dnsCache=undefined}g.assert.any([g.default.string,g.default.undefined],r.method);g.assert.any([g.default.object,g.default.undefined],r.headers);g.assert.any([g.default.string,g.default.urlInstance,g.default.undefined],r.prefixUrl);g.assert.any([g.default.object,g.default.undefined],r.cookieJar);g.assert.any([g.default.object,g.default.string,g.default.undefined],r.searchParams);g.assert.any([g.default.object,g.default.string,g.default.undefined],r.cache);g.assert.any([g.default.object,g.default.number,g.default.undefined],r.timeout);g.assert.any([g.default.object,g.default.undefined],r.context);g.assert.any([g.default.object,g.default.undefined],r.hooks);g.assert.any([g.default.boolean,g.default.undefined],r.decompress);g.assert.any([g.default.boolean,g.default.undefined],r.ignoreInvalidCookies);g.assert.any([g.default.boolean,g.default.undefined],r.followRedirect);g.assert.any([g.default.number,g.default.undefined],r.maxRedirects);g.assert.any([g.default.boolean,g.default.undefined],r.throwHttpErrors);g.assert.any([g.default.boolean,g.default.undefined],r.http2);g.assert.any([g.default.boolean,g.default.undefined],r.allowGetBody);g.assert.any([g.default.string,g.default.undefined],r.localAddress);g.assert.any([k.isDnsLookupIpVersion,g.default.undefined],r.dnsLookupIpVersion);g.assert.any([g.default.object,g.default.undefined],r.https);g.assert.any([g.default.boolean,g.default.undefined],r.rejectUnauthorized);if(r.https){g.assert.any([g.default.boolean,g.default.undefined],r.https.rejectUnauthorized);g.assert.any([g.default.function_,g.default.undefined],r.https.checkServerIdentity);g.assert.any([g.default.string,g.default.object,g.default.array,g.default.undefined],r.https.certificateAuthority);g.assert.any([g.default.string,g.default.object,g.default.array,g.default.undefined],r.https.key);g.assert.any([g.default.string,g.default.object,g.default.array,g.default.undefined],r.https.certificate);g.assert.any([g.default.string,g.default.undefined],r.https.passphrase);g.assert.any([g.default.string,g.default.buffer,g.default.array,g.default.undefined],r.https.pfx)}g.assert.any([g.default.object,g.default.undefined],r.cacheOptions);if(g.default.string(r.method)){r.method=r.method.toUpperCase()}else{r.method=\"GET\"}if(r.headers===(o===null||o===void 0?void 0:o.headers)){r.headers={...r.headers}}else{r.headers=y({...o===null||o===void 0?void 0:o.headers,...r.headers})}if(\"slashes\"in r){throw new TypeError(\"The legacy `url.Url` has been deprecated. Use `URL` instead.\")}if(\"auth\"in r){throw new TypeError(\"Parameter `auth` is deprecated. Use `username` / `password` instead.\")}if(\"searchParams\"in r){if(r.searchParams&&r.searchParams!==(o===null||o===void 0?void 0:o.searchParams)){let e;if(g.default.string(r.searchParams)||r.searchParams instanceof i.URLSearchParams){e=new i.URLSearchParams(r.searchParams)}else{validateSearchParameters(r.searchParams);e=new i.URLSearchParams;for(const t in r.searchParams){const s=r.searchParams[t];if(s===null){e.append(t,\"\")}else if(s!==undefined){e.append(t,s)}}}(n=o===null||o===void 0?void 0:o.searchParams)===null||n===void 0?void 0:n.forEach(((t,r)=>{if(!e.has(r)){e.append(r,t)}}));r.searchParams=e}}r.username=(a=r.username)!==null&&a!==void 0?a:\"\";r.password=(c=r.password)!==null&&c!==void 0?c:\"\";if(g.default.undefined(r.prefixUrl)){r.prefixUrl=(u=o===null||o===void 0?void 0:o.prefixUrl)!==null&&u!==void 0?u:\"\"}else{r.prefixUrl=r.prefixUrl.toString();if(r.prefixUrl!==\"\"&&!r.prefixUrl.endsWith(\"/\")){r.prefixUrl+=\"/\"}}if(g.default.string(r.url)){if(r.url.startsWith(\"/\")){throw new Error(\"`input` must not start with a slash when using `prefixUrl`\")}r.url=S.default(r.prefixUrl+r.url,r)}else if(g.default.undefined(r.url)&&r.prefixUrl!==\"\"||r.protocol){r.url=S.default(r.prefixUrl,r)}if(r.url){if(\"port\"in r){delete r.port}let{prefixUrl:e}=r;Object.defineProperty(r,\"prefixUrl\",{set:t=>{const s=r.url;if(!s.href.startsWith(t)){throw new Error(`Cannot change \\`prefixUrl\\` from ${e} to ${t}: ${s.href}`)}r.url=new i.URL(t+s.href.slice(e.length));e=t},get:()=>e});let{protocol:t}=r.url;if(t===\"unix:\"){t=\"http:\";r.url=new i.URL(`http://unix${r.url.pathname}${r.url.search}`)}if(r.searchParams){r.url.search=r.searchParams.toString()}if(t!==\"http:\"&&t!==\"https:\"){throw new UnsupportedProtocolError(r)}if(r.username===\"\"){r.username=r.url.username}else{r.url.username=r.username}if(r.password===\"\"){r.password=r.url.password}else{r.url.password=r.password}}const{cookieJar:m}=r;if(m){let{setCookie:e,getCookieString:t}=m;g.assert.function_(e);g.assert.function_(t);if(e.length===4&&t.length===0){e=s.promisify(e.bind(r.cookieJar));t=s.promisify(t.bind(r.cookieJar));r.cookieJar={setCookie:e,getCookieString:t}}}const{cache:b}=r;if(b){if(!Q.has(b)){Q.set(b,new d(((e,t)=>{const r=e[j](e,t);if(g.default.promise(r)){r.once=(e,t)=>{if(e===\"error\"){r.catch(t)}else if(e===\"abort\"){(async()=>{try{const e=await r;e.once(\"abort\",t)}catch(e){}})()}else{throw new Error(`Unknown HTTP2 promise event: ${e}`)}return r}}return r}),b))}}r.cacheOptions={...r.cacheOptions};if(r.dnsCache===true){if(!O){O=new h.default}r.dnsCache=O}else if(!g.default.undefined(r.dnsCache)&&!r.dnsCache.lookup){throw new TypeError(`Parameter \\`dnsCache\\` must be a CacheableLookup instance or a boolean, got ${g.default(r.dnsCache)}`)}if(g.default.number(r.timeout)){r.timeout={request:r.timeout}}else if(o&&r.timeout!==o.timeout){r.timeout={...o.timeout,...r.timeout}}else{r.timeout={...r.timeout}}if(!r.context){r.context={}}const _=r.hooks===(o===null||o===void 0?void 0:o.hooks);r.hooks={...r.hooks};for(const e of t.knownHookEvents){if(e in r.hooks){if(g.default.array(r.hooks[e])){r.hooks[e]=[...r.hooks[e]]}else{throw new TypeError(`Parameter \\`${e}\\` must be an Array, got ${g.default(r.hooks[e])}`)}}else{r.hooks[e]=[]}}if(o&&!_){for(const e of t.knownHookEvents){const t=o.hooks[e];if(t.length>0){r.hooks[e]=[...o.hooks[e],...r.hooks[e]]}}}if(\"family\"in r){P.default('\"options.family\" was never documented, please use \"options.dnsLookupIpVersion\"')}if(o===null||o===void 0?void 0:o.https){r.https={...o.https,...r.https}}if(\"rejectUnauthorized\"in r){P.default('\"options.rejectUnauthorized\" is now deprecated, please use \"options.https.rejectUnauthorized\"')}if(\"checkServerIdentity\"in r){P.default('\"options.checkServerIdentity\" was never documented, please use \"options.https.checkServerIdentity\"')}if(\"ca\"in r){P.default('\"options.ca\" was never documented, please use \"options.https.certificateAuthority\"')}if(\"key\"in r){P.default('\"options.key\" was never documented, please use \"options.https.key\"')}if(\"cert\"in r){P.default('\"options.cert\" was never documented, please use \"options.https.certificate\"')}if(\"passphrase\"in r){P.default('\"options.passphrase\" was never documented, please use \"options.https.passphrase\"')}if(\"pfx\"in r){P.default('\"options.pfx\" was never documented, please use \"options.https.pfx\"')}if(\"followRedirects\"in r){throw new TypeError(\"The `followRedirects` option does not exist. Use `followRedirect` instead.\")}if(r.agent){for(const e in r.agent){if(e!==\"http\"&&e!==\"https\"&&e!==\"http2\"){throw new TypeError(`Expected the \\`options.agent\\` properties to be \\`http\\`, \\`https\\` or \\`http2\\`, got \\`${e}\\``)}}}r.maxRedirects=(l=r.maxRedirects)!==null&&l!==void 0?l:0;t.setNonEnumerableProperties([o,p],r);return C.default(r,o)}_lockWrite(){const onLockedWrite=()=>{throw new TypeError(\"The payload has been already provided\")};this.write=onLockedWrite;this.end=onLockedWrite}_unlockWrite(){this.write=super.write;this.end=super.end}async _finalizeBody(){const{options:e}=this;const{headers:r}=e;const s=!g.default.undefined(e.form);const n=!g.default.undefined(e.json);const a=!g.default.undefined(e.body);const c=s||n||a;const u=t.withoutBody.has(e.method)&&!(e.method===\"GET\"&&e.allowGetBody);this._cannotHaveBody=u;if(c){if(u){throw new TypeError(`The \\`${e.method}\\` method cannot be used with a body`)}if([a,s,n].filter((e=>e)).length>1){throw new TypeError(\"The `body`, `json` and `form` options are mutually exclusive\")}if(a&&!(e.body instanceof o.Readable)&&!g.default.string(e.body)&&!g.default.buffer(e.body)&&!_.default(e.body)){throw new TypeError(\"The `body` option must be a stream.Readable, string or Buffer\")}if(s&&!g.default.object(e.form)){throw new TypeError(\"The `form` option must be an Object\")}{const t=!g.default.string(r[\"content-type\"]);if(a){if(_.default(e.body)&&t){r[\"content-type\"]=`multipart/form-data; boundary=${e.body.getBoundary()}`}this[W]=e.body}else if(s){if(t){r[\"content-type\"]=\"application/x-www-form-urlencoded\"}this[W]=new i.URLSearchParams(e.form).toString()}else{if(t){r[\"content-type\"]=\"application/json\"}this[W]=e.stringifyJson(e.json)}const o=await b.default(this[W],e.headers);if(g.default.undefined(r[\"content-length\"])&&g.default.undefined(r[\"transfer-encoding\"])){if(!u&&!g.default.undefined(o)){r[\"content-length\"]=String(o)}}}}else if(u){this._lockWrite()}else{this._unlockWrite()}this[I]=Number(r[\"content-length\"])||undefined}async _onResponseBase(e){const{options:t}=this;const{url:r}=t;this[G]=e;if(t.decompress){e=p(e)}const s=e.statusCode;const o=e;o.statusMessage=o.statusMessage?o.statusMessage:a.STATUS_CODES[s];o.url=t.url.toString();o.requestUrl=this.requestUrl;o.redirectUrls=this.redirects;o.request=this;o.isFromCache=e.fromCache||false;o.ip=this.ip;o.retryCount=this.retryCount;this[D]=o.isFromCache;this[H]=Number(e.headers[\"content-length\"])||undefined;this[q]=e;e.once(\"end\",(()=>{this[H]=this[L];this.emit(\"downloadProgress\",this.downloadProgress)}));e.once(\"error\",(t=>{e.destroy();this._beforeError(new ReadError(t,this))}));e.once(\"aborted\",(()=>{this._beforeError(new ReadError({name:\"Error\",message:\"The server aborted pending request\",code:\"ECONNRESET\"},this))}));this.emit(\"downloadProgress\",this.downloadProgress);const n=e.headers[\"set-cookie\"];if(g.default.object(t.cookieJar)&&n){let c=n.map((async e=>t.cookieJar.setCookie(e,r.toString())));if(t.ignoreInvalidCookies){c=c.map((async e=>e.catch((()=>{}))))}try{await Promise.all(c)}catch(u){this._beforeError(u);return}}if(t.followRedirect&&e.headers.location&&Z.has(s)){e.resume();if(this[j]){this[z]();delete this[j];this[N]()}const l=s===303&&t.method!==\"GET\"&&t.method!==\"HEAD\";if(l||!t.methodRewriting){t.method=\"GET\";if(\"body\"in t){delete t.body}if(\"json\"in t){delete t.json}if(\"form\"in t){delete t.form}this[W]=undefined;delete t.headers[\"content-length\"]}if(this.redirects.length>=t.maxRedirects){this._beforeError(new MaxRedirectsError(this));return}try{const h=Buffer.from(e.headers.location,\"binary\").toString();const d=new i.URL(h,r);const m=d.toString();decodeURI(m);function isUnixSocketURL(e){return e.protocol===\"unix:\"||e.hostname===\"unix\"}if(!isUnixSocketURL(r)&&isUnixSocketURL(d)){this._beforeError(new RequestError(\"Cannot redirect to UNIX socket\",{},this));return}if(d.hostname!==r.hostname||d.port!==r.port){if(\"host\"in t.headers){delete t.headers.host}if(\"cookie\"in t.headers){delete t.headers.cookie}if(\"authorization\"in t.headers){delete t.headers.authorization}if(t.username||t.password){t.username=\"\";t.password=\"\"}}else{d.username=t.username;d.password=t.password}this.redirects.push(m);t.url=d;for(const y of t.hooks.beforeRedirect){await y(t,o)}this.emit(\"redirect\",o,t);await this._makeRequest()}catch(b){this._beforeError(b);return}return}if(t.isStream&&t.throwHttpErrors&&!T.isResponseOk(o)){this._beforeError(new HTTPError(o));return}e.on(\"readable\",(()=>{if(this[F]){this._read()}}));this.on(\"resume\",(()=>{e.resume()}));this.on(\"pause\",(()=>{e.pause()}));e.once(\"end\",(()=>{this.push(null)}));this.emit(\"response\",e);for(const _ of this[M]){if(_.headersSent){continue}for(const w in e.headers){const v=t.decompress?w!==\"content-encoding\":true;const E=e.headers[w];if(v){_.setHeader(w,E)}}_.statusCode=s}}async _onResponse(e){try{await this._onResponseBase(e)}catch(e){this._beforeError(e)}}_onRequest(e){const{options:t}=this;const{timeout:r,url:s}=t;l.default(e);this[z]=v.default(e,r,s);const o=t.cache?\"cacheableResponse\":\"response\";e.once(o,(e=>{void this._onResponse(e)}));e.once(\"error\",(t=>{var r;e.destroy();(r=e.res)===null||r===void 0?void 0:r.removeAllListeners(\"end\");t=t instanceof v.TimeoutError?new TimeoutError(t,this.timings,this):new RequestError(t.message,t,this);this._beforeError(t)}));this[N]=w.default(e,this,Y);this[j]=e;this.emit(\"uploadProgress\",this.uploadProgress);const n=this[W];const i=this.redirects.length===0?this:e;if(g.default.nodeStream(n)){n.pipe(i);n.once(\"error\",(e=>{this._beforeError(new UploadError(e,this))}))}else{this._unlockWrite();if(!g.default.undefined(n)){this._writeRequest(n,undefined,(()=>{}));i.end();this._lockWrite()}else if(this._cannotHaveBody||this._noPipe){i.end();this._lockWrite()}}this.emit(\"request\",e)}async _createCacheableRequest(e,t){return new Promise(((r,s)=>{Object.assign(t,E.default(e));delete t.url;let o;const n=Q.get(t.cache)(t,(async e=>{e._readableState.autoDestroy=false;if(o){(await o).emit(\"cacheableResponse\",e)}r(e)}));t.url=e;n.once(\"error\",s);n.once(\"request\",(async e=>{o=e;r(o)}))}))}async _makeRequest(){var e,t,r,s,o;const{options:n}=this;const{headers:i}=n;for(const e in i){if(g.default.undefined(i[e])){delete i[e]}else if(g.default.null_(i[e])){throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${e}\\` header`)}}if(n.decompress&&g.default.undefined(i[\"accept-encoding\"])){i[\"accept-encoding\"]=K?\"gzip, deflate, br\":\"gzip, deflate\"}if(n.cookieJar){const e=await n.cookieJar.getCookieString(n.url.toString());if(g.default.nonEmptyString(e)){n.headers.cookie=e}}for(const e of n.hooks.beforeRequest){const t=await e(n);if(!g.default.undefined(t)){n.request=()=>t;break}}if(n.body&&this[W]!==n.body){this[W]=n.body}const{agent:c,request:l,timeout:h,url:p}=n;if(n.dnsCache&&!(\"lookup\"in n)){n.lookup=n.dnsCache.lookup}if(p.hostname===\"unix\"){const e=/(?<socketPath>.+?):(?<path>.+)/.exec(`${p.pathname}${p.search}`);if(e===null||e===void 0?void 0:e.groups){const{socketPath:t,path:r}=e.groups;Object.assign(n,{socketPath:t,path:r,host:\"\"})}}const y=p.protocol===\"https:\";let b;if(n.http2){b=m.auto}else{b=y?u.request:a.request}const _=(e=n.request)!==null&&e!==void 0?e:b;const w=n.cache?this._createCacheableRequest:_;if(c&&!n.http2){n.agent=c[y?\"https\":\"http\"]}n[j]=_;delete n.request;delete n.timeout;const v=n;v.shared=(t=n.cacheOptions)===null||t===void 0?void 0:t.shared;v.cacheHeuristic=(r=n.cacheOptions)===null||r===void 0?void 0:r.cacheHeuristic;v.immutableMinTimeToLive=(s=n.cacheOptions)===null||s===void 0?void 0:s.immutableMinTimeToLive;v.ignoreCargoCult=(o=n.cacheOptions)===null||o===void 0?void 0:o.ignoreCargoCult;if(n.dnsLookupIpVersion!==undefined){try{v.family=k.dnsLookupIpVersionToFamily(n.dnsLookupIpVersion)}catch(e){throw new Error(\"Invalid `dnsLookupIpVersion` option value\")}}if(n.https){if(\"rejectUnauthorized\"in n.https){v.rejectUnauthorized=n.https.rejectUnauthorized}if(n.https.checkServerIdentity){v.checkServerIdentity=n.https.checkServerIdentity}if(n.https.certificateAuthority){v.ca=n.https.certificateAuthority}if(n.https.certificate){v.cert=n.https.certificate}if(n.https.key){v.key=n.https.key}if(n.https.passphrase){v.passphrase=n.https.passphrase}if(n.https.pfx){v.pfx=n.https.pfx}}try{let e=await w(p,v);if(g.default.undefined(e)){e=b(p,v)}n.request=l;n.timeout=h;n.agent=c;if(n.https){if(\"rejectUnauthorized\"in n.https){delete v.rejectUnauthorized}if(n.https.checkServerIdentity){delete v.checkServerIdentity}if(n.https.certificateAuthority){delete v.ca}if(n.https.certificate){delete v.cert}if(n.https.key){delete v.key}if(n.https.passphrase){delete v.passphrase}if(n.https.pfx){delete v.pfx}}if(isClientRequest(e)){this._onRequest(e)}else if(this.writable){this.once(\"finish\",(()=>{void this._onResponse(e)}));this._unlockWrite();this.end();this._lockWrite()}else{void this._onResponse(e)}}catch(e){if(e instanceof d.CacheError){throw new CacheError(e,this)}throw new RequestError(e.message,e,this)}}async _error(e){try{for(const t of this.options.hooks.beforeError){e=await t(e)}}catch(t){e=new RequestError(t.message,t,this)}this.destroy(e)}_beforeError(e){if(this[B]){return}const{options:t}=this;const r=this.retryCount+1;this[B]=true;if(!(e instanceof RequestError)){e=new RequestError(e.message,e,this)}const s=e;const{response:o}=s;void(async()=>{if(o&&!o.body){o.setEncoding(this._readableState.encoding);try{o.rawBody=await R.default(o);o.body=o.rawBody.toString()}catch(e){}}if(this.listenerCount(\"retry\")!==0){let n;try{let e;if(o&&\"retry-after\"in o.headers){e=Number(o.headers[\"retry-after\"]);if(Number.isNaN(e)){e=Date.parse(o.headers[\"retry-after\"])-Date.now();if(e<=0){e=1}}else{e*=1e3}}n=await t.retry.calculateDelay({attemptCount:r,retryOptions:t.retry,error:s,retryAfter:e,computedValue:A.default({attemptCount:r,retryOptions:t.retry,error:s,retryAfter:e,computedValue:0})})}catch(e){void this._error(new RequestError(e.message,e,this));return}if(n){const retry=async()=>{try{for(const e of this.options.hooks.beforeRetry){await e(this.options,s,r)}}catch(t){void this._error(new RequestError(t.message,e,this));return}if(this.destroyed){return}this.destroy();this.emit(\"retry\",r,e)};this[J]=setTimeout(retry,n);return}}void this._error(s)})()}_read(){this[F]=true;const e=this[q];if(e&&!this[B]){if(e.readableLength){this[F]=false}let t;while((t=e.read())!==null){this[L]+=t.length;this[$]=true;const e=this.downloadProgress;if(e.percent<1){this.emit(\"downloadProgress\",e)}this.push(t)}}}_write(e,t,r){const write=()=>{this._writeRequest(e,t,r)};if(this.requestInitialized){write()}else{this[V].push(write)}}_writeRequest(e,t,r){if(this[j].destroyed){return}this._progressCallbacks.push((()=>{this[U]+=Buffer.byteLength(e,t);const r=this.uploadProgress;if(r.percent<1){this.emit(\"uploadProgress\",r)}}));this[j].write(e,t,(e=>{if(!e&&this._progressCallbacks.length>0){this._progressCallbacks.shift()()}r(e)}))}_final(e){const endRequest=()=>{while(this._progressCallbacks.length!==0){this._progressCallbacks.shift()()}if(!(j in this)){e();return}if(this[j].destroyed){e();return}this[j].end((t=>{if(!t){this[I]=this[U];this.emit(\"uploadProgress\",this.uploadProgress);this[j].emit(\"upload-complete\")}e(t)}))};if(this.requestInitialized){endRequest()}else{this[V].push(endRequest)}}_destroy(e,t){var r;this[B]=true;clearTimeout(this[J]);if(j in this){this[z]();if(!((r=this[q])===null||r===void 0?void 0:r.complete)){this[j].destroy()}}if(e!==null&&!g.default.undefined(e)&&!(e instanceof RequestError)){e=new RequestError(e.message,e,this)}t(e)}get _isAboutToError(){return this[B]}get ip(){var e;return(e=this.socket)===null||e===void 0?void 0:e.remoteAddress}get aborted(){var e,t,r;return((t=(e=this[j])===null||e===void 0?void 0:e.destroyed)!==null&&t!==void 0?t:this.destroyed)&&!((r=this[G])===null||r===void 0?void 0:r.complete)}get socket(){var e,t;return(t=(e=this[j])===null||e===void 0?void 0:e.socket)!==null&&t!==void 0?t:undefined}get downloadProgress(){let e;if(this[H]){e=this[L]/this[H]}else if(this[H]===this[L]){e=1}else{e=0}return{percent:e,transferred:this[L],total:this[H]}}get uploadProgress(){let e;if(this[I]){e=this[U]/this[I]}else if(this[I]===this[U]){e=1}else{e=0}return{percent:e,transferred:this[U],total:this[I]}}get timings(){var e;return(e=this[j])===null||e===void 0?void 0:e.timings}get isFromCache(){return this[D]}pipe(e,t){if(this[$]){throw new Error(\"Failed to pipe. The response has been emitted already.\")}if(e instanceof c.ServerResponse){this[M].add(e)}return super.pipe(e,t)}unpipe(e){if(e instanceof c.ServerResponse){this[M].delete(e)}super.unpipe(e);return this}}t[\"default\"]=Request},4993:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.dnsLookupIpVersionToFamily=t.isDnsLookupIpVersion=void 0;const r={auto:0,ipv4:4,ipv6:6};t.isDnsLookupIpVersion=e=>e in r;t.dnsLookupIpVersionToFamily=e=>{if(t.isDnsLookupIpVersion(e)){return r[e]}throw new Error(\"Invalid DNS lookup IP version\")}},4564:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7147);const o=r(3837);const n=r(7678);const i=r(40);const a=o.promisify(s.stat);t[\"default\"]=async(e,t)=>{if(t&&\"content-length\"in t){return Number(t[\"content-length\"])}if(!e){return 0}if(n.default.string(e)){return Buffer.byteLength(e)}if(n.default.buffer(e)){return e.length}if(i.default(e)){return o.promisify(e.getLength.bind(e))()}if(e instanceof s.ReadStream){const{size:t}=await a(e.path);if(t===0){return undefined}return t}return undefined}},4500:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const getBuffer=async e=>{const t=[];let r=0;for await(const s of e){t.push(s);r+=Buffer.byteLength(s)}if(Buffer.isBuffer(t[0])){return Buffer.concat(t,r)}return Buffer.from(t.join(\"\"))};t[\"default\"]=getBuffer},40:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);t[\"default\"]=e=>s.default.nodeStream(e)&&s.default.function_(e.getBoundary)},9298:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.isResponseOk=void 0;t.isResponseOk=e=>{const{statusCode:t}=e;const r=e.request.options.followRedirect?299:399;return t>=200&&t<=r||t===304}},9219:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7310);const o=[\"protocol\",\"host\",\"hostname\",\"port\",\"pathname\",\"search\"];t[\"default\"]=(e,t)=>{var r,n;if(t.path){if(t.pathname){throw new TypeError(\"Parameters `path` and `pathname` are mutually exclusive.\")}if(t.search){throw new TypeError(\"Parameters `path` and `search` are mutually exclusive.\")}if(t.searchParams){throw new TypeError(\"Parameters `path` and `searchParams` are mutually exclusive.\")}}if(t.search&&t.searchParams){throw new TypeError(\"Parameters `search` and `searchParams` are mutually exclusive.\")}if(!e){if(!t.protocol){throw new TypeError(\"No URL protocol specified\")}e=`${t.protocol}//${(n=(r=t.hostname)!==null&&r!==void 0?r:t.host)!==null&&n!==void 0?n:\"\"}`}const i=new s.URL(e);if(t.path){const e=t.path.indexOf(\"?\");if(e===-1){t.pathname=t.path}else{t.pathname=t.path.slice(0,e);t.search=t.path.slice(e+1)}delete t.path}for(const e of o){if(t[e]){i[e]=t[e].toString()}}return i}},3021:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});function default_1(e,t,r){const s={};for(const o of r){s[o]=(...e)=>{t.emit(o,...e)};e.on(o,s[o])}return()=>{for(const t of r){e.off(t,s[t])}}}t[\"default\"]=default_1},2454:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.TimeoutError=void 0;const s=r(1808);const o=r(1593);const n=Symbol(\"reentry\");const noop=()=>{};class TimeoutError extends Error{constructor(e,t){super(`Timeout awaiting '${t}' for ${e}ms`);this.event=t;this.name=\"TimeoutError\";this.code=\"ETIMEDOUT\"}}t.TimeoutError=TimeoutError;t[\"default\"]=(e,t,r)=>{if(n in e){return noop}e[n]=true;const i=[];const{once:a,unhandleAll:c}=o.default();const addTimeout=(e,t,r)=>{var s;const o=setTimeout(t,e,e,r);(s=o.unref)===null||s===void 0?void 0:s.call(o);const cancel=()=>{clearTimeout(o)};i.push(cancel);return cancel};const{host:u,hostname:l}=r;const timeoutHandler=(t,r)=>{e.destroy(new TimeoutError(t,r))};const cancelTimeouts=()=>{for(const e of i){e()}c()};e.once(\"error\",(t=>{cancelTimeouts();if(e.listenerCount(\"error\")===0){throw t}}));e.once(\"close\",cancelTimeouts);a(e,\"response\",(e=>{a(e,\"end\",cancelTimeouts)}));if(typeof t.request!==\"undefined\"){addTimeout(t.request,timeoutHandler,\"request\")}if(typeof t.socket!==\"undefined\"){const socketTimeoutHandler=()=>{timeoutHandler(t.socket,\"socket\")};e.setTimeout(t.socket,socketTimeoutHandler);i.push((()=>{e.removeListener(\"timeout\",socketTimeoutHandler)}))}a(e,\"socket\",(o=>{var n;const{socketPath:i}=e;if(o.connecting){const e=Boolean(i!==null&&i!==void 0?i:s.isIP((n=l!==null&&l!==void 0?l:u)!==null&&n!==void 0?n:\"\")!==0);if(typeof t.lookup!==\"undefined\"&&!e&&typeof o.address().address===\"undefined\"){const e=addTimeout(t.lookup,timeoutHandler,\"lookup\");a(o,\"lookup\",e)}if(typeof t.connect!==\"undefined\"){const timeConnect=()=>addTimeout(t.connect,timeoutHandler,\"connect\");if(e){a(o,\"connect\",timeConnect())}else{a(o,\"lookup\",(e=>{if(e===null){a(o,\"connect\",timeConnect())}}))}}if(typeof t.secureConnect!==\"undefined\"&&r.protocol===\"https:\"){a(o,\"connect\",(()=>{const e=addTimeout(t.secureConnect,timeoutHandler,\"secureConnect\");a(o,\"secureConnect\",e)}))}}if(typeof t.send!==\"undefined\"){const timeRequest=()=>addTimeout(t.send,timeoutHandler,\"send\");if(o.connecting){a(o,\"connect\",(()=>{a(e,\"upload-complete\",timeRequest())}))}else{a(e,\"upload-complete\",timeRequest())}}}));if(typeof t.response!==\"undefined\"){a(e,\"upload-complete\",(()=>{const r=addTimeout(t.response,timeoutHandler,\"response\");a(e,\"response\",r)}))}return cancelTimeouts}},1593:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t[\"default\"]=()=>{const e=[];return{once(t,r,s){t.once(r,s);e.push({origin:t,event:r,fn:s})},unhandleAll(){for(const t of e){const{origin:e,event:r,fn:s}=t;e.removeListener(r,s)}e.length=0}}}},8026:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);t[\"default\"]=e=>{e=e;const t={protocol:e.protocol,hostname:s.default.string(e.hostname)&&e.hostname.startsWith(\"[\")?e.hostname.slice(1,-1):e.hostname,host:e.host,hash:e.hash,search:e.search,pathname:e.pathname,href:e.href,path:`${e.pathname||\"\"}${e.search||\"\"}`};if(s.default.string(e.port)&&e.port.length>0){t.port=Number(e.port)}if(e.username||e.password){t.auth=`${e.username||\"\"}:${e.password||\"\"}`}return t}},7288:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});class WeakableMap{constructor(){this.weakMap=new WeakMap;this.map=new Map}set(e,t){if(typeof e===\"object\"){this.weakMap.set(e,t)}else{this.map.set(e,t)}}get(e){if(typeof e===\"object\"){return this.weakMap.get(e)}return this.map.get(e)}has(e){if(typeof e===\"object\"){return this.weakMap.has(e)}return this.map.has(e)}}t[\"default\"]=WeakableMap},4337:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});t.defaultHandler=void 0;const n=r(7678);const i=r(6056);const a=r(6457);const c=r(94);const u=r(285);const l={RequestError:i.RequestError,CacheError:i.CacheError,ReadError:i.ReadError,HTTPError:i.HTTPError,MaxRedirectsError:i.MaxRedirectsError,TimeoutError:i.TimeoutError,ParseError:i.ParseError,CancelError:i.CancelError,UnsupportedProtocolError:i.UnsupportedProtocolError,UploadError:i.UploadError};const delay=async e=>new Promise((t=>{setTimeout(t,e)}));const{normalizeArguments:h}=c.default;const mergeOptions=(...e)=>{let t;for(const r of e){t=h(undefined,r,t)}return t};const getPromiseOrStream=e=>e.isStream?new c.default(undefined,e):i.default(e);const isGotInstance=e=>\"defaults\"in e&&\"options\"in e.defaults;const d=[\"get\",\"post\",\"put\",\"patch\",\"head\",\"delete\"];t.defaultHandler=(e,t)=>t(e);const callInitHooks=(e,t)=>{if(e){for(const r of e){r(t)}}};const create=e=>{e._rawHandlers=e.handlers;e.handlers=e.handlers.map((e=>(t,r)=>{let s;const o=e(t,(e=>{s=r(e);return s}));if(o!==s&&!t.isStream&&s){const e=o;const{then:t,catch:r,finally:n}=e;Object.setPrototypeOf(e,Object.getPrototypeOf(s));Object.defineProperties(e,Object.getOwnPropertyDescriptors(s));e.then=t;e.catch=r;e.finally=n}return o}));const got=(t,r={},s)=>{var o,u;let l=0;const iterateHandlers=t=>e.handlers[l++](t,l===e.handlers.length?getPromiseOrStream:iterateHandlers);if(n.default.plainObject(t)){const e={...t,...r};c.setNonEnumerableProperties([t,r],e);r=e;t=undefined}try{let n;try{callInitHooks(e.options.hooks.init,r);callInitHooks((o=r.hooks)===null||o===void 0?void 0:o.init,r)}catch(e){n=e}const a=h(t,r,s!==null&&s!==void 0?s:e.options);a[c.kIsNormalizedAlready]=true;if(n){throw new i.RequestError(n.message,n,a)}return iterateHandlers(a)}catch(t){if(r.isStream){throw t}else{return a.default(t,e.options.hooks.beforeError,(u=r.hooks)===null||u===void 0?void 0:u.beforeError)}}};got.extend=(...r)=>{const s=[e.options];let o=[...e._rawHandlers];let n;for(const e of r){if(isGotInstance(e)){s.push(e.defaults.options);o.push(...e.defaults._rawHandlers);n=e.defaults.mutableDefaults}else{s.push(e);if(\"handlers\"in e){o.push(...e.handlers)}n=e.mutableDefaults}}o=o.filter((e=>e!==t.defaultHandler));if(o.length===0){o.push(t.defaultHandler)}return create({options:mergeOptions(...s),handlers:o,mutableDefaults:Boolean(n)})};const paginateEach=async function*(t,r){let s=h(t,r,e.options);s.resolveBodyOnly=false;const o=s.pagination;if(!n.default.object(o)){throw new TypeError(\"`options.pagination` must be implemented\")}const i=[];let{countLimit:a}=o;let c=0;while(c<o.requestLimit){if(c!==0){await delay(o.backoff)}const e=await got(undefined,undefined,s);const t=await o.transform(e);const r=[];for(const e of t){if(o.filter(e,i,r)){if(!o.shouldContinue(e,i,r)){return}yield e;if(o.stackAllItems){i.push(e)}r.push(e);if(--a<=0){return}}}const n=o.paginate(e,i,r);if(n===false){return}if(n===e.request.options){s=e.request.options}else if(n!==undefined){s=h(undefined,n,s)}c++}};got.paginate=paginateEach;got.paginate.all=async(e,t)=>{const r=[];for await(const s of paginateEach(e,t)){r.push(s)}return r};got.paginate.each=paginateEach;got.stream=(e,t)=>got(e,{...t,isStream:true});for(const e of d){got[e]=(t,r)=>got(t,{...r,method:e});got.stream[e]=(t,r)=>got(t,{...r,method:e,isStream:true})}Object.assign(got,l);Object.defineProperty(got,\"defaults\",{value:e.mutableDefaults?e:u.default(e),writable:e.mutableDefaults,configurable:e.mutableDefaults,enumerable:true});got.mergeOptions=mergeOptions;return got};t[\"default\"]=create;o(r(2613),t)},3061:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});const n=r(7310);const i=r(4337);const a={options:{method:\"GET\",retry:{limit:2,methods:[\"GET\",\"PUT\",\"HEAD\",\"DELETE\",\"OPTIONS\",\"TRACE\"],statusCodes:[408,413,429,500,502,503,504,521,522,524],errorCodes:[\"ETIMEDOUT\",\"ECONNRESET\",\"EADDRINUSE\",\"ECONNREFUSED\",\"EPIPE\",\"ENOTFOUND\",\"ENETUNREACH\",\"EAI_AGAIN\"],maxRetryAfter:undefined,calculateDelay:({computedValue:e})=>e},timeout:{},headers:{\"user-agent\":\"got (https://github.com/sindresorhus/got)\"},hooks:{init:[],beforeRequest:[],beforeRedirect:[],beforeRetry:[],beforeError:[],afterResponse:[]},cache:undefined,dnsCache:undefined,decompress:true,throwHttpErrors:true,followRedirect:true,isStream:false,responseType:\"text\",resolveBodyOnly:false,maxRedirects:10,prefixUrl:\"\",methodRewriting:true,ignoreInvalidCookies:false,context:{},http2:false,allowGetBody:false,https:undefined,pagination:{transform:e=>{if(e.request.options.responseType===\"json\"){return e.body}return JSON.parse(e.body)},paginate:e=>{if(!Reflect.has(e.headers,\"link\")){return false}const t=e.headers.link.split(\",\");let r;for(const e of t){const t=e.split(\";\");if(t[1].includes(\"next\")){r=t[0].trimStart().trim();r=r.slice(1,-1);break}}if(r){const e={url:new n.URL(r)};return e}return false},filter:()=>true,shouldContinue:()=>true,countLimit:Infinity,backoff:0,requestLimit:1e4,stackAllItems:true},parseJson:e=>JSON.parse(e),stringifyJson:e=>JSON.stringify(e),cacheOptions:{}},handlers:[i.defaultHandler],mutableDefaults:false};const c=i.default(a);t[\"default\"]=c;e.exports=c;e.exports[\"default\"]=c;e.exports.__esModule=true;o(r(4337),t);o(r(6056),t)},2613:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true})},285:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);function deepFreeze(e){for(const t of Object.values(e)){if(s.default.plainObject(t)||s.default.array(t)){deepFreeze(t)}}return Object.freeze(e)}t[\"default\"]=deepFreeze},397:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const r=new Set;t[\"default\"]=e=>{if(r.has(e)){return}r.add(e);process.emitWarning(`Got: ${e}`,{type:\"DeprecationWarning\"})}},1002:e=>{\"use strict\";const t=new Set([200,203,204,206,300,301,308,404,405,410,414,501]);const r=new Set([200,203,204,300,301,302,303,307,308,404,405,410,414,501]);const s=new Set([500,502,503,504]);const o={date:true,connection:true,\"keep-alive\":true,\"proxy-authenticate\":true,\"proxy-authorization\":true,te:true,trailer:true,\"transfer-encoding\":true,upgrade:true};const n={\"content-length\":true,\"content-encoding\":true,\"transfer-encoding\":true,\"content-range\":true};function toNumberOrZero(e){const t=parseInt(e,10);return isFinite(t)?t:0}function isErrorResponse(e){if(!e){return true}return s.has(e.status)}function parseCacheControl(e){const t={};if(!e)return t;const r=e.trim().split(/,/);for(const e of r){const[r,s]=e.split(/=/,2);t[r.trim()]=s===undefined?true:s.trim().replace(/^\"|\"$/g,\"\")}return t}function formatCacheControl(e){let t=[];for(const r in e){const s=e[r];t.push(s===true?r:r+\"=\"+s)}if(!t.length){return undefined}return t.join(\", \")}e.exports=class CachePolicy{constructor(e,t,{shared:r,cacheHeuristic:s,immutableMinTimeToLive:o,ignoreCargoCult:n,_fromObject:i}={}){if(i){this._fromObject(i);return}if(!t||!t.headers){throw Error(\"Response headers missing\")}this._assertRequestHasHeaders(e);this._responseTime=this.now();this._isShared=r!==false;this._cacheHeuristic=undefined!==s?s:.1;this._immutableMinTtl=undefined!==o?o:24*3600*1e3;this._status=\"status\"in t?t.status:200;this._resHeaders=t.headers;this._rescc=parseCacheControl(t.headers[\"cache-control\"]);this._method=\"method\"in e?e.method:\"GET\";this._url=e.url;this._host=e.headers.host;this._noAuthorization=!e.headers.authorization;this._reqHeaders=t.headers.vary?e.headers:null;this._reqcc=parseCacheControl(e.headers[\"cache-control\"]);if(n&&\"pre-check\"in this._rescc&&\"post-check\"in this._rescc){delete this._rescc[\"pre-check\"];delete this._rescc[\"post-check\"];delete this._rescc[\"no-cache\"];delete this._rescc[\"no-store\"];delete this._rescc[\"must-revalidate\"];this._resHeaders=Object.assign({},this._resHeaders,{\"cache-control\":formatCacheControl(this._rescc)});delete this._resHeaders.expires;delete this._resHeaders.pragma}if(t.headers[\"cache-control\"]==null&&/no-cache/.test(t.headers.pragma)){this._rescc[\"no-cache\"]=true}}now(){return Date.now()}storable(){return!!(!this._reqcc[\"no-store\"]&&(\"GET\"===this._method||\"HEAD\"===this._method||\"POST\"===this._method&&this._hasExplicitExpiration())&&r.has(this._status)&&!this._rescc[\"no-store\"]&&(!this._isShared||!this._rescc.private)&&(!this._isShared||this._noAuthorization||this._allowsStoringAuthenticated())&&(this._resHeaders.expires||this._rescc[\"max-age\"]||this._isShared&&this._rescc[\"s-maxage\"]||this._rescc.public||t.has(this._status)))}_hasExplicitExpiration(){return this._isShared&&this._rescc[\"s-maxage\"]||this._rescc[\"max-age\"]||this._resHeaders.expires}_assertRequestHasHeaders(e){if(!e||!e.headers){throw Error(\"Request headers missing\")}}satisfiesWithoutRevalidation(e){this._assertRequestHasHeaders(e);const t=parseCacheControl(e.headers[\"cache-control\"]);if(t[\"no-cache\"]||/no-cache/.test(e.headers.pragma)){return false}if(t[\"max-age\"]&&this.age()>t[\"max-age\"]){return false}if(t[\"min-fresh\"]&&this.timeToLive()<1e3*t[\"min-fresh\"]){return false}if(this.stale()){const e=t[\"max-stale\"]&&!this._rescc[\"must-revalidate\"]&&(true===t[\"max-stale\"]||t[\"max-stale\"]>this.age()-this.maxAge());if(!e){return false}}return this._requestMatches(e,false)}_requestMatches(e,t){return(!this._url||this._url===e.url)&&this._host===e.headers.host&&(!e.method||this._method===e.method||t&&\"HEAD\"===e.method)&&this._varyMatches(e)}_allowsStoringAuthenticated(){return this._rescc[\"must-revalidate\"]||this._rescc.public||this._rescc[\"s-maxage\"]}_varyMatches(e){if(!this._resHeaders.vary){return true}if(this._resHeaders.vary===\"*\"){return false}const t=this._resHeaders.vary.trim().toLowerCase().split(/\\s*,\\s*/);for(const r of t){if(e.headers[r]!==this._reqHeaders[r])return false}return true}_copyWithoutHopByHopHeaders(e){const t={};for(const r in e){if(o[r])continue;t[r]=e[r]}if(e.connection){const r=e.connection.trim().split(/\\s*,\\s*/);for(const e of r){delete t[e]}}if(t.warning){const e=t.warning.split(/,/).filter((e=>!/^\\s*1[0-9][0-9]/.test(e)));if(!e.length){delete t.warning}else{t.warning=e.join(\",\").trim()}}return t}responseHeaders(){const e=this._copyWithoutHopByHopHeaders(this._resHeaders);const t=this.age();if(t>3600*24&&!this._hasExplicitExpiration()&&this.maxAge()>3600*24){e.warning=(e.warning?`${e.warning}, `:\"\")+'113 - \"rfc7234 5.5.4\"'}e.age=`${Math.round(t)}`;e.date=new Date(this.now()).toUTCString();return e}date(){const e=Date.parse(this._resHeaders.date);if(isFinite(e)){return e}return this._responseTime}age(){let e=this._ageValue();const t=(this.now()-this._responseTime)/1e3;return e+t}_ageValue(){return toNumberOrZero(this._resHeaders.age)}maxAge(){if(!this.storable()||this._rescc[\"no-cache\"]){return 0}if(this._isShared&&(this._resHeaders[\"set-cookie\"]&&!this._rescc.public&&!this._rescc.immutable)){return 0}if(this._resHeaders.vary===\"*\"){return 0}if(this._isShared){if(this._rescc[\"proxy-revalidate\"]){return 0}if(this._rescc[\"s-maxage\"]){return toNumberOrZero(this._rescc[\"s-maxage\"])}}if(this._rescc[\"max-age\"]){return toNumberOrZero(this._rescc[\"max-age\"])}const e=this._rescc.immutable?this._immutableMinTtl:0;const t=this.date();if(this._resHeaders.expires){const r=Date.parse(this._resHeaders.expires);if(Number.isNaN(r)||r<t){return 0}return Math.max(e,(r-t)/1e3)}if(this._resHeaders[\"last-modified\"]){const r=Date.parse(this._resHeaders[\"last-modified\"]);if(isFinite(r)&&t>r){return Math.max(e,(t-r)/1e3*this._cacheHeuristic)}}return e}timeToLive(){const e=this.maxAge()-this.age();const t=e+toNumberOrZero(this._rescc[\"stale-if-error\"]);const r=e+toNumberOrZero(this._rescc[\"stale-while-revalidate\"]);return Math.max(0,e,t,r)*1e3}stale(){return this.maxAge()<=this.age()}_useStaleIfError(){return this.maxAge()+toNumberOrZero(this._rescc[\"stale-if-error\"])>this.age()}useStaleWhileRevalidate(){return this.maxAge()+toNumberOrZero(this._rescc[\"stale-while-revalidate\"])>this.age()}static fromObject(e){return new this(undefined,undefined,{_fromObject:e})}_fromObject(e){if(this._responseTime)throw Error(\"Reinitialized\");if(!e||e.v!==1)throw Error(\"Invalid serialization\");this._responseTime=e.t;this._isShared=e.sh;this._cacheHeuristic=e.ch;this._immutableMinTtl=e.imm!==undefined?e.imm:24*3600*1e3;this._status=e.st;this._resHeaders=e.resh;this._rescc=e.rescc;this._method=e.m;this._url=e.u;this._host=e.h;this._noAuthorization=e.a;this._reqHeaders=e.reqh;this._reqcc=e.reqcc}toObject(){return{v:1,t:this._responseTime,sh:this._isShared,ch:this._cacheHeuristic,imm:this._immutableMinTtl,st:this._status,resh:this._resHeaders,rescc:this._rescc,m:this._method,u:this._url,h:this._host,a:this._noAuthorization,reqh:this._reqHeaders,reqcc:this._reqcc}}revalidationHeaders(e){this._assertRequestHasHeaders(e);const t=this._copyWithoutHopByHopHeaders(e.headers);delete t[\"if-range\"];if(!this._requestMatches(e,true)||!this.storable()){delete t[\"if-none-match\"];delete t[\"if-modified-since\"];return t}if(this._resHeaders.etag){t[\"if-none-match\"]=t[\"if-none-match\"]?`${t[\"if-none-match\"]}, ${this._resHeaders.etag}`:this._resHeaders.etag}const r=t[\"accept-ranges\"]||t[\"if-match\"]||t[\"if-unmodified-since\"]||this._method&&this._method!=\"GET\";if(r){delete t[\"if-modified-since\"];if(t[\"if-none-match\"]){const e=t[\"if-none-match\"].split(/,/).filter((e=>!/^\\s*W\\//.test(e)));if(!e.length){delete t[\"if-none-match\"]}else{t[\"if-none-match\"]=e.join(\",\").trim()}}}else if(this._resHeaders[\"last-modified\"]&&!t[\"if-modified-since\"]){t[\"if-modified-since\"]=this._resHeaders[\"last-modified\"]}return t}revalidatedPolicy(e,t){this._assertRequestHasHeaders(e);if(this._useStaleIfError()&&isErrorResponse(t)){return{modified:false,matches:false,policy:this}}if(!t||!t.headers){throw Error(\"Response headers missing\")}let r=false;if(t.status!==undefined&&t.status!=304){r=false}else if(t.headers.etag&&!/^\\s*W\\//.test(t.headers.etag)){r=this._resHeaders.etag&&this._resHeaders.etag.replace(/^\\s*W\\//,\"\")===t.headers.etag}else if(this._resHeaders.etag&&t.headers.etag){r=this._resHeaders.etag.replace(/^\\s*W\\//,\"\")===t.headers.etag.replace(/^\\s*W\\//,\"\")}else if(this._resHeaders[\"last-modified\"]){r=this._resHeaders[\"last-modified\"]===t.headers[\"last-modified\"]}else{if(!this._resHeaders.etag&&!this._resHeaders[\"last-modified\"]&&!t.headers.etag&&!t.headers[\"last-modified\"]){r=true}}if(!r){return{policy:new this.constructor(e,t),modified:t.status!=304,matches:false}}const s={};for(const e in this._resHeaders){s[e]=e in t.headers&&!n[e]?t.headers[e]:this._resHeaders[e]}const o=Object.assign({},t,{status:this._status,method:this._method,headers:s});return{policy:new this.constructor(e,o,{shared:this._isShared,cacheHeuristic:this._cacheHeuristic,immutableMinTimeToLive:this._immutableMinTtl}),modified:false,matches:true}}}},9898:(e,t,r)=>{\"use strict\";const s=r(2361);const o=r(4404);const n=r(5158);const i=r(9273);const a=Symbol(\"currentStreamsCount\");const c=Symbol(\"request\");const u=Symbol(\"cachedOriginSet\");const l=Symbol(\"gracefullyClosing\");const h=[\"maxDeflateDynamicTableSize\",\"maxSessionMemory\",\"maxHeaderListPairs\",\"maxOutstandingPings\",\"maxReservedRemoteStreams\",\"maxSendHeaderBlockLength\",\"paddingStrategy\",\"localAddress\",\"path\",\"rejectUnauthorized\",\"minDHSize\",\"ca\",\"cert\",\"clientCertEngine\",\"ciphers\",\"key\",\"pfx\",\"servername\",\"minVersion\",\"maxVersion\",\"secureProtocol\",\"crl\",\"honorCipherOrder\",\"ecdhCurve\",\"dhparam\",\"secureOptions\",\"sessionIdContext\"];const getSortedIndex=(e,t,r)=>{let s=0;let o=e.length;while(s<o){const n=s+o>>>1;if(r(e[n],t)){s=n+1}else{o=n}}return s};const compareSessions=(e,t)=>e.remoteSettings.maxConcurrentStreams>t.remoteSettings.maxConcurrentStreams;const closeCoveredSessions=(e,t)=>{for(const r of e){if(r[u].length<t[u].length&&r[u].every((e=>t[u].includes(e)))&&r[a]+t[a]<=t.remoteSettings.maxConcurrentStreams){gracefullyClose(r)}}};const closeSessionIfCovered=(e,t)=>{for(const r of e){if(t[u].length<r[u].length&&t[u].every((e=>r[u].includes(e)))&&t[a]+r[a]<=r.remoteSettings.maxConcurrentStreams){gracefullyClose(t)}}};const getSessions=({agent:e,isFree:t})=>{const r={};for(const s in e.sessions){const o=e.sessions[s];const n=o.filter((e=>{const r=e[Agent.kCurrentStreamsCount]<e.remoteSettings.maxConcurrentStreams;return t?r:!r}));if(n.length!==0){r[s]=n}}return r};const gracefullyClose=e=>{e[l]=true;if(e[a]===0){e.close()}};class Agent extends s{constructor({timeout:e=6e4,maxSessions:t=Infinity,maxFreeSessions:r=10,maxCachedTlsSessions:s=100}={}){super();this.sessions={};this.queue={};this.timeout=e;this.maxSessions=t;this.maxFreeSessions=r;this._freeSessionsCount=0;this._sessionsCount=0;this.settings={enablePush:false};this.tlsSessionCache=new i({maxSize:s})}static normalizeOrigin(e,t){if(typeof e===\"string\"){e=new URL(e)}if(t&&e.hostname!==t){e.hostname=t}return e.origin}normalizeOptions(e){let t=\"\";if(e){for(const r of h){if(e[r]){t+=`:${e[r]}`}}}return t}_tryToCreateNewSession(e,t){if(!(e in this.queue)||!(t in this.queue[e])){return}const r=this.queue[e][t];if(this._sessionsCount<this.maxSessions&&!r.completed){r.completed=true;r()}}getSession(e,t,r){return new Promise(((s,o)=>{if(Array.isArray(r)){r=[...r];s()}else{r=[{resolve:s,reject:o}]}const i=this.normalizeOptions(t);const h=Agent.normalizeOrigin(e,t&&t.servername);if(h===undefined){for(const{reject:e}of r){e(new TypeError(\"The `origin` argument needs to be a string or an URL object\"))}return}if(i in this.sessions){const e=this.sessions[i];let t=-1;let s=-1;let o;for(const r of e){const e=r.remoteSettings.maxConcurrentStreams;if(e<t){break}if(r[u].includes(h)){const n=r[a];if(n>=e||r[l]||r.destroyed){continue}if(!o){t=e}if(n>s){o=r;s=n}}}if(o){if(r.length!==1){for(const{reject:e}of r){const t=new Error(`Expected the length of listeners to be 1, got ${r.length}.\\n`+\"Please report this to https://github.com/szmarczak/http2-wrapper/\");e(t)}return}r[0].resolve(o);return}}if(i in this.queue){if(h in this.queue[i]){this.queue[i][h].listeners.push(...r);this._tryToCreateNewSession(i,h);return}}else{this.queue[i]={}}const removeFromQueue=()=>{if(i in this.queue&&this.queue[i][h]===entry){delete this.queue[i][h];if(Object.keys(this.queue[i]).length===0){delete this.queue[i]}}};const entry=()=>{const s=`${h}:${i}`;let o=false;try{const d=n.connect(e,{createConnection:this.createConnection,settings:this.settings,session:this.tlsSessionCache.get(s),...t});d[a]=0;d[l]=false;const isFree=()=>d[a]<d.remoteSettings.maxConcurrentStreams;let p=true;d.socket.once(\"session\",(e=>{this.tlsSessionCache.set(s,e)}));d.once(\"error\",(e=>{for(const{reject:t}of r){t(e)}this.tlsSessionCache.delete(s)}));d.setTimeout(this.timeout,(()=>{d.destroy()}));d.once(\"close\",(()=>{if(o){if(p){this._freeSessionsCount--}this._sessionsCount--;const e=this.sessions[i];e.splice(e.indexOf(d),1);if(e.length===0){delete this.sessions[i]}}else{const e=new Error(\"Session closed without receiving a SETTINGS frame\");e.code=\"HTTP2WRAPPER_NOSETTINGS\";for(const{reject:t}of r){t(e)}removeFromQueue()}this._tryToCreateNewSession(i,h)}));const processListeners=()=>{if(!(i in this.queue)||!isFree()){return}for(const e of d[u]){if(e in this.queue[i]){const{listeners:t}=this.queue[i][e];while(t.length!==0&&isFree()){t.shift().resolve(d)}const r=this.queue[i];if(r[e].listeners.length===0){delete r[e];if(Object.keys(r).length===0){delete this.queue[i];break}}if(!isFree()){break}}}};d.on(\"origin\",(()=>{d[u]=d.originSet;if(!isFree()){return}processListeners();closeCoveredSessions(this.sessions[i],d)}));d.once(\"remoteSettings\",(()=>{d.ref();d.unref();this._sessionsCount++;if(entry.destroyed){const e=new Error(\"Agent has been destroyed\");for(const t of r){t.reject(e)}d.destroy();return}d[u]=d.originSet;{const e=this.sessions;if(i in e){const t=e[i];t.splice(getSortedIndex(t,d,compareSessions),0,d)}else{e[i]=[d]}}this._freeSessionsCount+=1;o=true;this.emit(\"session\",d);processListeners();removeFromQueue();if(d[a]===0&&this._freeSessionsCount>this.maxFreeSessions){d.close()}if(r.length!==0){this.getSession(h,t,r);r.length=0}d.on(\"remoteSettings\",(()=>{processListeners();closeCoveredSessions(this.sessions[i],d)}))}));d[c]=d.request;d.request=(e,t)=>{if(d[l]){throw new Error(\"The session is gracefully closing. No new streams are allowed.\")}const r=d[c](e,t);d.ref();++d[a];if(d[a]===d.remoteSettings.maxConcurrentStreams){this._freeSessionsCount--}r.once(\"close\",(()=>{p=isFree();--d[a];if(!d.destroyed&&!d.closed){closeSessionIfCovered(this.sessions[i],d);if(isFree()&&!d.closed){if(!p){this._freeSessionsCount++;p=true}const e=d[a]===0;if(e){d.unref()}if(e&&(this._freeSessionsCount>this.maxFreeSessions||d[l])){d.close()}else{closeCoveredSessions(this.sessions[i],d);processListeners()}}}}));return r}}catch(e){for(const t of r){t.reject(e)}removeFromQueue()}};entry.listeners=r;entry.completed=false;entry.destroyed=false;this.queue[i][h]=entry;this._tryToCreateNewSession(i,h)}))}request(e,t,r,s){return new Promise(((o,n)=>{this.getSession(e,t,[{reject:n,resolve:e=>{try{o(e.request(r,s))}catch(e){n(e)}}}])}))}createConnection(e,t){return Agent.connect(e,t)}static connect(e,t){t.ALPNProtocols=[\"h2\"];const r=e.port||443;const s=e.hostname||e.host;if(typeof t.servername===\"undefined\"){t.servername=s}return o.connect(r,s,t)}closeFreeSessions(){for(const e of Object.values(this.sessions)){for(const t of e){if(t[a]===0){t.close()}}}}destroy(e){for(const t of Object.values(this.sessions)){for(const r of t){r.destroy(e)}}for(const e of Object.values(this.queue)){for(const t of Object.values(e)){t.destroyed=true}}this.queue={}}get freeSessions(){return getSessions({agent:this,isFree:true})}get busySessions(){return getSessions({agent:this,isFree:false})}}Agent.kCurrentStreamsCount=a;Agent.kGracefullyClosing=l;e.exports={Agent:Agent,globalAgent:new Agent}},7167:(e,t,r)=>{\"use strict\";const s=r(3685);const o=r(5687);const n=r(6624);const i=r(9273);const a=r(9632);const c=r(1982);const u=r(2686);const l=new i({maxSize:100});const h=new Map;const installSocket=(e,t,r)=>{t._httpMessage={shouldKeepAlive:true};const onFree=()=>{e.emit(\"free\",t,r)};t.on(\"free\",onFree);const onClose=()=>{e.removeSocket(t,r)};t.on(\"close\",onClose);const onRemove=()=>{e.removeSocket(t,r);t.off(\"close\",onClose);t.off(\"free\",onFree);t.off(\"agentRemove\",onRemove)};t.on(\"agentRemove\",onRemove);e.emit(\"free\",t,r)};const resolveProtocol=async e=>{const t=`${e.host}:${e.port}:${e.ALPNProtocols.sort()}`;if(!l.has(t)){if(h.has(t)){const e=await h.get(t);return e.alpnProtocol}const{path:r,agent:s}=e;e.path=e.socketPath;const i=n(e);h.set(t,i);try{const{socket:n,alpnProtocol:a}=await i;l.set(t,a);e.path=r;if(a===\"h2\"){n.destroy()}else{const{globalAgent:t}=o;const r=o.Agent.prototype.createConnection;if(s){if(s.createConnection===r){installSocket(s,n,e)}else{n.destroy()}}else if(t.createConnection===r){installSocket(t,n,e)}else{n.destroy()}}h.delete(t);return a}catch(e){h.delete(t);throw e}}return l.get(t)};e.exports=async(e,t,r)=>{if(typeof e===\"string\"||e instanceof URL){e=u(new URL(e))}if(typeof t===\"function\"){r=t;t=undefined}t={ALPNProtocols:[\"h2\",\"http/1.1\"],...e,...t,resolveSocket:true};if(!Array.isArray(t.ALPNProtocols)||t.ALPNProtocols.length===0){throw new Error(\"The `ALPNProtocols` option must be an Array with at least one entry\")}t.protocol=t.protocol||\"https:\";const n=t.protocol===\"https:\";t.host=t.hostname||t.host||\"localhost\";t.session=t.tlsSession;t.servername=t.servername||c(t);t.port=t.port||(n?443:80);t._defaultAgent=n?o.globalAgent:s.globalAgent;const i=t.agent;if(i){if(i.addRequest){throw new Error(\"The `options.agent` object can contain only `http`, `https` or `http2` properties\")}t.agent=i[n?\"https\":\"http\"]}if(n){const e=await resolveProtocol(t);if(e===\"h2\"){if(i){t.agent=i.http2}return new a(t,r)}}return s.request(t,r)};e.exports.protocolCache=l},9632:(e,t,r)=>{\"use strict\";const s=r(5158);const{Writable:o}=r(2781);const{Agent:n,globalAgent:i}=r(9898);const a=r(2575);const c=r(2686);const u=r(1818);const l=r(1199);const{ERR_INVALID_ARG_TYPE:h,ERR_INVALID_PROTOCOL:d,ERR_HTTP_HEADERS_SENT:p,ERR_INVALID_HTTP_TOKEN:m,ERR_HTTP_INVALID_HEADER_VALUE:y,ERR_INVALID_CHAR:g}=r(7087);const{HTTP2_HEADER_STATUS:b,HTTP2_HEADER_METHOD:_,HTTP2_HEADER_PATH:w,HTTP2_METHOD_CONNECT:v}=s.constants;const E=Symbol(\"headers\");const S=Symbol(\"origin\");const x=Symbol(\"session\");const R=Symbol(\"options\");const k=Symbol(\"flushedHeaders\");const T=Symbol(\"jobs\");const P=/^[\\^`\\-\\w!#$%&*+.|~]+$/;const C=/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/;class ClientRequest extends o{constructor(e,t,r){super({autoDestroy:false});const s=typeof e===\"string\"||e instanceof URL;if(s){e=c(e instanceof URL?e:new URL(e))}if(typeof t===\"function\"||t===undefined){r=t;t=s?e:{...e}}else{t={...e,...t}}if(t.h2session){this[x]=t.h2session}else if(t.agent===false){this.agent=new n({maxFreeSessions:0})}else if(typeof t.agent===\"undefined\"||t.agent===null){if(typeof t.createConnection===\"function\"){this.agent=new n({maxFreeSessions:0});this.agent.createConnection=t.createConnection}else{this.agent=i}}else if(typeof t.agent.request===\"function\"){this.agent=t.agent}else{throw new h(\"options.agent\",[\"Agent-like Object\",\"undefined\",\"false\"],t.agent)}if(t.protocol&&t.protocol!==\"https:\"){throw new d(t.protocol,\"https:\")}const o=t.port||t.defaultPort||this.agent&&this.agent.defaultPort||443;const a=t.hostname||t.host||\"localhost\";delete t.hostname;delete t.host;delete t.port;const{timeout:u}=t;t.timeout=undefined;this[E]=Object.create(null);this[T]=[];this.socket=null;this.connection=null;this.method=t.method||\"GET\";this.path=t.path;this.res=null;this.aborted=false;this.reusedSocket=false;if(t.headers){for(const[e,r]of Object.entries(t.headers)){this.setHeader(e,r)}}if(t.auth&&!(\"authorization\"in this[E])){this[E].authorization=\"Basic \"+Buffer.from(t.auth).toString(\"base64\")}t.session=t.tlsSession;t.path=t.socketPath;this[R]=t;if(o===443){this[S]=`https://${a}`;if(!(\":authority\"in this[E])){this[E][\":authority\"]=a}}else{this[S]=`https://${a}:${o}`;if(!(\":authority\"in this[E])){this[E][\":authority\"]=`${a}:${o}`}}if(u){this.setTimeout(u)}if(r){this.once(\"response\",r)}this[k]=false}get method(){return this[E][_]}set method(e){if(e){this[E][_]=e.toUpperCase()}}get path(){return this[E][w]}set path(e){if(e){this[E][w]=e}}get _mustNotHaveABody(){return this.method===\"GET\"||this.method===\"HEAD\"||this.method===\"DELETE\"}_write(e,t,r){if(this._mustNotHaveABody){r(new Error(\"The GET, HEAD and DELETE methods must NOT have a body\"));return}this.flushHeaders();const callWrite=()=>this._request.write(e,t,r);if(this._request){callWrite()}else{this[T].push(callWrite)}}_final(e){if(this.destroyed){return}this.flushHeaders();const callEnd=()=>{if(this._mustNotHaveABody){e();return}this._request.end(e)};if(this._request){callEnd()}else{this[T].push(callEnd)}}abort(){if(this.res&&this.res.complete){return}if(!this.aborted){process.nextTick((()=>this.emit(\"abort\")))}this.aborted=true;this.destroy()}_destroy(e,t){if(this.res){this.res._dump()}if(this._request){this._request.destroy()}t(e)}async flushHeaders(){if(this[k]||this.destroyed){return}this[k]=true;const e=this.method===v;const onStream=t=>{this._request=t;if(this.destroyed){t.destroy();return}if(!e){u(t,this,[\"timeout\",\"continue\",\"close\",\"error\"])}const waitForEnd=e=>(...t)=>{if(!this.writable&&!this.destroyed){e(...t)}else{this.once(\"finish\",(()=>{e(...t)}))}};t.once(\"response\",waitForEnd(((r,s,o)=>{const n=new a(this.socket,t.readableHighWaterMark);this.res=n;n.req=this;n.statusCode=r[b];n.headers=r;n.rawHeaders=o;n.once(\"end\",(()=>{if(this.aborted){n.aborted=true;n.emit(\"aborted\")}else{n.complete=true;n.socket=null;n.connection=null}}));if(e){n.upgrade=true;if(this.emit(\"connect\",n,t,Buffer.alloc(0))){this.emit(\"close\")}else{t.destroy()}}else{t.on(\"data\",(e=>{if(!n._dumped&&!n.push(e)){t.pause()}}));t.once(\"end\",(()=>{n.push(null)}));if(!this.emit(\"response\",n)){n._dump()}}})));t.once(\"headers\",waitForEnd((e=>this.emit(\"information\",{statusCode:e[b]}))));t.once(\"trailers\",waitForEnd(((e,t,r)=>{const{res:s}=this;s.trailers=e;s.rawTrailers=r})));const{socket:r}=t.session;this.socket=r;this.connection=r;for(const e of this[T]){e()}this.emit(\"socket\",this.socket)};if(this[x]){try{onStream(this[x].request(this[E]))}catch(e){this.emit(\"error\",e)}}else{this.reusedSocket=true;try{onStream(await this.agent.request(this[S],this[R],this[E]))}catch(e){this.emit(\"error\",e)}}}getHeader(e){if(typeof e!==\"string\"){throw new h(\"name\",\"string\",e)}return this[E][e.toLowerCase()]}get headersSent(){return this[k]}removeHeader(e){if(typeof e!==\"string\"){throw new h(\"name\",\"string\",e)}if(this.headersSent){throw new p(\"remove\")}delete this[E][e.toLowerCase()]}setHeader(e,t){if(this.headersSent){throw new p(\"set\")}if(typeof e!==\"string\"||!P.test(e)&&!l(e)){throw new m(\"Header name\",e)}if(typeof t===\"undefined\"){throw new y(t,e)}if(C.test(t)){throw new g(\"header content\",e)}this[E][e.toLowerCase()]=t}setNoDelay(){}setSocketKeepAlive(){}setTimeout(e,t){const applyTimeout=()=>this._request.setTimeout(e,t);if(this._request){applyTimeout()}else{this[T].push(applyTimeout)}return this}get maxHeadersCount(){if(!this.destroyed&&this._request){return this._request.session.localSettings.maxHeaderListSize}return undefined}set maxHeadersCount(e){}}e.exports=ClientRequest},2575:(e,t,r)=>{\"use strict\";const{Readable:s}=r(2781);class IncomingMessage extends s{constructor(e,t){super({highWaterMark:t,autoDestroy:false});this.statusCode=null;this.statusMessage=\"\";this.httpVersion=\"2.0\";this.httpVersionMajor=2;this.httpVersionMinor=0;this.headers={};this.trailers={};this.req=null;this.aborted=false;this.complete=false;this.upgrade=null;this.rawHeaders=[];this.rawTrailers=[];this.socket=e;this.connection=e;this._dumped=false}_destroy(e){this.req._request.destroy(e)}setTimeout(e,t){this.req.setTimeout(e,t);return this}_dump(){if(!this._dumped){this._dumped=true;this.removeAllListeners(\"data\");this.resume()}}_read(){if(this.req){this.req._request.resume()}}}e.exports=IncomingMessage},4645:(e,t,r)=>{\"use strict\";const s=r(5158);const o=r(9898);const n=r(9632);const i=r(2575);const a=r(7167);const request=(e,t,r)=>new n(e,t,r);const get=(e,t,r)=>{const s=new n(e,t,r);s.end();return s};e.exports={...s,ClientRequest:n,IncomingMessage:i,...o,request:request,get:get,auto:a}},1982:(e,t,r)=>{\"use strict\";const s=r(1808);e.exports=e=>{let t=e.host;const r=e.headers&&e.headers.host;if(r){if(r.startsWith(\"[\")){const e=r.indexOf(\"]\");if(e===-1){t=r}else{t=r.slice(1,-1)}}else{t=r.split(\":\",1)[0]}}if(s.isIP(t)){return\"\"}return t}},7087:e=>{\"use strict\";const makeError=(t,r,s)=>{e.exports[r]=class NodeError extends t{constructor(...e){super(typeof s===\"string\"?s:s(e));this.name=`${super.name} [${r}]`;this.code=r}}};makeError(TypeError,\"ERR_INVALID_ARG_TYPE\",(e=>{const t=e[0].includes(\".\")?\"property\":\"argument\";let r=e[1];const s=Array.isArray(r);if(s){r=`${r.slice(0,-1).join(\", \")} or ${r.slice(-1)}`}return`The \"${e[0]}\" ${t} must be ${s?\"one of\":\"of\"} type ${r}. Received ${typeof e[2]}`}));makeError(TypeError,\"ERR_INVALID_PROTOCOL\",(e=>`Protocol \"${e[0]}\" not supported. Expected \"${e[1]}\"`));makeError(Error,\"ERR_HTTP_HEADERS_SENT\",(e=>`Cannot ${e[0]} headers after they are sent to the client`));makeError(TypeError,\"ERR_INVALID_HTTP_TOKEN\",(e=>`${e[0]} must be a valid HTTP token [${e[1]}]`));makeError(TypeError,\"ERR_HTTP_INVALID_HEADER_VALUE\",(e=>`Invalid value \"${e[0]} for header \"${e[1]}\"`));makeError(TypeError,\"ERR_INVALID_CHAR\",(e=>`Invalid character in ${e[0]} [${e[1]}]`))},1199:e=>{\"use strict\";e.exports=e=>{switch(e){case\":method\":case\":scheme\":case\":authority\":case\":path\":return true;default:return false}}},1818:e=>{\"use strict\";e.exports=(e,t,r)=>{for(const s of r){e.on(s,((...e)=>t.emit(s,...e)))}}},2686:e=>{\"use strict\";e.exports=e=>{const t={protocol:e.protocol,hostname:typeof e.hostname===\"string\"&&e.hostname.startsWith(\"[\")?e.hostname.slice(1,-1):e.hostname,host:e.host,hash:e.hash,search:e.search,pathname:e.pathname,href:e.href,path:`${e.pathname||\"\"}${e.search||\"\"}`};if(typeof e.port===\"string\"&&e.port.length!==0){t.port=Number(e.port)}if(e.username||e.password){t.auth=`${e.username||\"\"}:${e.password||\"\"}`}return t}},2820:(e,t)=>{t.stringify=function stringify(e){if(\"undefined\"==typeof e)return e;if(e&&Buffer.isBuffer(e))return JSON.stringify(\":base64:\"+e.toString(\"base64\"));if(e&&e.toJSON)e=e.toJSON();if(e&&\"object\"===typeof e){var t=\"\";var r=Array.isArray(e);t=r?\"[\":\"{\";var s=true;for(var o in e){var n=\"function\"==typeof e[o]||!r&&\"undefined\"===typeof e[o];if(Object.hasOwnProperty.call(e,o)&&!n){if(!s)t+=\",\";s=false;if(r){if(e[o]==undefined)t+=\"null\";else t+=stringify(e[o])}else if(e[o]!==void 0){t+=stringify(o)+\":\"+stringify(e[o])}}}t+=r?\"]\":\"}\";return t}else if(\"string\"===typeof e){return JSON.stringify(/^:/.test(e)?\":\"+e:e)}else if(\"undefined\"===typeof e){return\"null\"}else return JSON.stringify(e)};t.parse=function(e){return JSON.parse(e,(function(e,t){if(\"string\"===typeof t){if(/^:base64:/.test(t))return Buffer.from(t.substring(8),\"base64\");else return/^:/.test(t)?t.substring(1):t}return t}))}},1531:(e,t,r)=>{\"use strict\";const s=r(2361);const o=r(2820);const loadStore=e=>{const t={redis:\"@keyv/redis\",rediss:\"@keyv/redis\",mongodb:\"@keyv/mongo\",mongo:\"@keyv/mongo\",sqlite:\"@keyv/sqlite\",postgresql:\"@keyv/postgres\",postgres:\"@keyv/postgres\",mysql:\"@keyv/mysql\",etcd:\"@keyv/etcd\",offline:\"@keyv/offline\",tiered:\"@keyv/tiered\"};if(e.adapter||e.uri){const r=e.adapter||/^[^:+]*/.exec(e.uri)[0];return new(require(t[r]))(e)}return new Map};const n=[\"sqlite\",\"postgres\",\"mysql\",\"mongo\",\"redis\",\"tiered\"];class Keyv extends s{constructor(e,{emitErrors:t=true,...r}={}){super();this.opts={namespace:\"keyv\",serialize:o.stringify,deserialize:o.parse,...typeof e===\"string\"?{uri:e}:e,...r};if(!this.opts.store){const e={...this.opts};this.opts.store=loadStore(e)}if(this.opts.compression){const e=this.opts.compression;this.opts.serialize=e.serialize.bind(e);this.opts.deserialize=e.deserialize.bind(e)}if(typeof this.opts.store.on===\"function\"&&t){this.opts.store.on(\"error\",(e=>this.emit(\"error\",e)))}this.opts.store.namespace=this.opts.namespace;const generateIterator=e=>async function*(){for await(const[t,r]of typeof e===\"function\"?e(this.opts.store.namespace):e){const e=await this.opts.deserialize(r);if(this.opts.store.namespace&&!t.includes(this.opts.store.namespace)){continue}if(typeof e.expires===\"number\"&&Date.now()>e.expires){this.delete(t);continue}yield[this._getKeyUnprefix(t),e.value]}};if(typeof this.opts.store[Symbol.iterator]===\"function\"&&this.opts.store instanceof Map){this.iterator=generateIterator(this.opts.store)}else if(typeof this.opts.store.iterator===\"function\"&&this.opts.store.opts&&this._checkIterableAdaptar()){this.iterator=generateIterator(this.opts.store.iterator.bind(this.opts.store))}}_checkIterableAdaptar(){return n.includes(this.opts.store.opts.dialect)||n.findIndex((e=>this.opts.store.opts.url.includes(e)))>=0}_getKeyPrefix(e){return`${this.opts.namespace}:${e}`}_getKeyPrefixArray(e){return e.map((e=>`${this.opts.namespace}:${e}`))}_getKeyUnprefix(e){return e.split(\":\").splice(1).join(\":\")}get(e,t){const{store:r}=this.opts;const s=Array.isArray(e);const o=s?this._getKeyPrefixArray(e):this._getKeyPrefix(e);if(s&&r.getMany===undefined){const e=[];for(const s of o){e.push(Promise.resolve().then((()=>r.get(s))).then((e=>typeof e===\"string\"?this.opts.deserialize(e):this.opts.compression?this.opts.deserialize(e):e)).then((e=>{if(e===undefined||e===null){return undefined}if(typeof e.expires===\"number\"&&Date.now()>e.expires){return this.delete(s).then((()=>undefined))}return t&&t.raw?e:e.value})))}return Promise.allSettled(e).then((e=>{const t=[];for(const r of e){t.push(r.value)}return t}))}return Promise.resolve().then((()=>s?r.getMany(o):r.get(o))).then((e=>typeof e===\"string\"?this.opts.deserialize(e):this.opts.compression?this.opts.deserialize(e):e)).then((r=>{if(r===undefined||r===null){return undefined}if(s){const s=[];for(let o of r){if(typeof o===\"string\"){o=this.opts.deserialize(o)}if(o===undefined||o===null){s.push(undefined);continue}if(typeof o.expires===\"number\"&&Date.now()>o.expires){this.delete(e).then((()=>undefined));s.push(undefined)}else{s.push(t&&t.raw?o:o.value)}}return s}if(typeof r.expires===\"number\"&&Date.now()>r.expires){return this.delete(e).then((()=>undefined))}return t&&t.raw?r:r.value}))}set(e,t,r){const s=this._getKeyPrefix(e);if(typeof r===\"undefined\"){r=this.opts.ttl}if(r===0){r=undefined}const{store:o}=this.opts;return Promise.resolve().then((()=>{const e=typeof r===\"number\"?Date.now()+r:null;if(typeof t===\"symbol\"){this.emit(\"error\",\"symbol cannot be serialized\")}t={value:t,expires:e};return this.opts.serialize(t)})).then((e=>o.set(s,e,r))).then((()=>true))}delete(e){const{store:t}=this.opts;if(Array.isArray(e)){const r=this._getKeyPrefixArray(e);if(t.deleteMany===undefined){const e=[];for(const s of r){e.push(t.delete(s))}return Promise.allSettled(e).then((e=>e.every((e=>e.value===true))))}return Promise.resolve().then((()=>t.deleteMany(r)))}const r=this._getKeyPrefix(e);return Promise.resolve().then((()=>t.delete(r)))}clear(){const{store:e}=this.opts;return Promise.resolve().then((()=>e.clear()))}has(e){const t=this._getKeyPrefix(e);const{store:r}=this.opts;return Promise.resolve().then((async()=>{if(typeof r.has===\"function\"){return r.has(t)}const e=await r.get(t);return e!==undefined}))}disconnect(){const{store:e}=this.opts;if(typeof e.disconnect===\"function\"){return e.disconnect()}}}e.exports=Keyv},9662:e=>{\"use strict\";e.exports=e=>{const t={};for(const[r,s]of Object.entries(e)){t[r.toLowerCase()]=s}return t}},2610:e=>{\"use strict\";const t=[\"aborted\",\"complete\",\"headers\",\"httpVersion\",\"httpVersionMinor\",\"httpVersionMajor\",\"method\",\"rawHeaders\",\"rawTrailers\",\"setTimeout\",\"socket\",\"statusCode\",\"statusMessage\",\"trailers\",\"url\"];e.exports=(e,r)=>{if(r._readableState.autoDestroy){throw new Error(\"The second stream must have the `autoDestroy` option set to `false`\")}const s=new Set(Object.keys(e).concat(t));const o={};for(const t of s){if(t in r){continue}o[t]={get(){const r=e[t];const s=typeof r===\"function\";return s?r.bind(e):r},set(r){e[t]=r},enumerable:true,configurable:false}}Object.defineProperties(r,o);e.once(\"aborted\",(()=>{r.destroy();r.emit(\"aborted\")}));e.once(\"close\",(()=>{if(e.complete){if(r.readable){r.once(\"end\",(()=>{r.emit(\"close\")}))}else{r.emit(\"close\")}}else{r.emit(\"close\")}}));return r}},7952:e=>{\"use strict\";const t=\"text/plain\";const r=\"us-ascii\";const testParameter=(e,t)=>t.some((t=>t instanceof RegExp?t.test(e):t===e));const normalizeDataURL=(e,{stripHash:s})=>{const o=/^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(e);if(!o){throw new Error(`Invalid URL: ${e}`)}let{type:n,data:i,hash:a}=o.groups;const c=n.split(\";\");a=s?\"\":a;let u=false;if(c[c.length-1]===\"base64\"){c.pop();u=true}const l=(c.shift()||\"\").toLowerCase();const h=c.map((e=>{let[t,s=\"\"]=e.split(\"=\").map((e=>e.trim()));if(t===\"charset\"){s=s.toLowerCase();if(s===r){return\"\"}}return`${t}${s?`=${s}`:\"\"}`})).filter(Boolean);const d=[...h];if(u){d.push(\"base64\")}if(d.length!==0||l&&l!==t){d.unshift(l)}return`data:${d.join(\";\")},${u?i.trim():i}${a?`#${a}`:\"\"}`};const normalizeUrl=(e,t)=>{t={defaultProtocol:\"http:\",normalizeProtocol:true,forceHttp:false,forceHttps:false,stripAuthentication:true,stripHash:false,stripTextFragment:true,stripWWW:true,removeQueryParameters:[/^utm_\\w+/i],removeTrailingSlash:true,removeSingleSlash:true,removeDirectoryIndex:false,sortQueryParameters:true,...t};e=e.trim();if(/^data:/i.test(e)){return normalizeDataURL(e,t)}if(/^view-source:/i.test(e)){throw new Error(\"`view-source:` is not supported as it is a non-standard protocol\")}const r=e.startsWith(\"//\");const s=!r&&/^\\.*\\//.test(e);if(!s){e=e.replace(/^(?!(?:\\w+:)?\\/\\/)|^\\/\\//,t.defaultProtocol)}const o=new URL(e);if(t.forceHttp&&t.forceHttps){throw new Error(\"The `forceHttp` and `forceHttps` options cannot be used together\")}if(t.forceHttp&&o.protocol===\"https:\"){o.protocol=\"http:\"}if(t.forceHttps&&o.protocol===\"http:\"){o.protocol=\"https:\"}if(t.stripAuthentication){o.username=\"\";o.password=\"\"}if(t.stripHash){o.hash=\"\"}else if(t.stripTextFragment){o.hash=o.hash.replace(/#?:~:text.*?$/i,\"\")}if(o.pathname){o.pathname=o.pathname.replace(/(?<!\\b(?:[a-z][a-z\\d+\\-.]{1,50}:))\\/{2,}/g,\"/\")}if(o.pathname){try{o.pathname=decodeURI(o.pathname)}catch(e){}}if(t.removeDirectoryIndex===true){t.removeDirectoryIndex=[/^index\\.[a-z]+$/]}if(Array.isArray(t.removeDirectoryIndex)&&t.removeDirectoryIndex.length>0){let e=o.pathname.split(\"/\");const r=e[e.length-1];if(testParameter(r,t.removeDirectoryIndex)){e=e.slice(0,e.length-1);o.pathname=e.slice(1).join(\"/\")+\"/\"}}if(o.hostname){o.hostname=o.hostname.replace(/\\.$/,\"\");if(t.stripWWW&&/^www\\.(?!www\\.)(?:[a-z\\-\\d]{1,63})\\.(?:[a-z.\\-\\d]{2,63})$/.test(o.hostname)){o.hostname=o.hostname.replace(/^www\\./,\"\")}}if(Array.isArray(t.removeQueryParameters)){for(const e of[...o.searchParams.keys()]){if(testParameter(e,t.removeQueryParameters)){o.searchParams.delete(e)}}}if(t.removeQueryParameters===true){o.search=\"\"}if(t.sortQueryParameters){o.searchParams.sort()}if(t.removeTrailingSlash){o.pathname=o.pathname.replace(/\\/$/,\"\")}const n=e;e=o.toString();if(!t.removeSingleSlash&&o.pathname===\"/\"&&!n.endsWith(\"/\")&&o.hash===\"\"){e=e.replace(/\\/$/,\"\")}if((t.removeTrailingSlash||o.pathname===\"/\")&&o.hash===\"\"&&t.removeSingleSlash){e=e.replace(/\\/$/,\"\")}if(r&&!t.normalizeProtocol){e=e.replace(/^http:\\/\\//,\"//\")}if(t.stripProtocol){e=e.replace(/^(?:https?:)?\\/\\//,\"\")}return e};e.exports=normalizeUrl},1223:(e,t,r)=>{var s=r(2940);e.exports=s(once);e.exports.strict=s(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,\"once\",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,\"onceStrict\",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var t=e.name||\"Function wrapped with `once`\";f.onceError=t+\" shouldn't be called more than once\";f.called=false;return f}},9072:e=>{\"use strict\";class CancelError extends Error{constructor(e){super(e||\"Promise was canceled\");this.name=\"CancelError\"}get isCanceled(){return true}}class PCancelable{static fn(e){return(...t)=>new PCancelable(((r,s,o)=>{t.push(o);e(...t).then(r,s)}))}constructor(e){this._cancelHandlers=[];this._isPending=true;this._isCanceled=false;this._rejectOnCancel=true;this._promise=new Promise(((t,r)=>{this._reject=r;const onResolve=e=>{if(!this._isCanceled||!onCancel.shouldReject){this._isPending=false;t(e)}};const onReject=e=>{this._isPending=false;r(e)};const onCancel=e=>{if(!this._isPending){throw new Error(\"The `onCancel` handler was attached after the promise settled.\")}this._cancelHandlers.push(e)};Object.defineProperties(onCancel,{shouldReject:{get:()=>this._rejectOnCancel,set:e=>{this._rejectOnCancel=e}}});return e(onResolve,onReject,onCancel)}))}then(e,t){return this._promise.then(e,t)}catch(e){return this._promise.catch(e)}finally(e){return this._promise.finally(e)}cancel(e){if(!this._isPending||this._isCanceled){return}this._isCanceled=true;if(this._cancelHandlers.length>0){try{for(const e of this._cancelHandlers){e()}}catch(e){this._reject(e);return}}if(this._rejectOnCancel){this._reject(new CancelError(e))}}get isCanceled(){return this._isCanceled}}Object.setPrototypeOf(PCancelable.prototype,Promise.prototype);e.exports=PCancelable;e.exports.CancelError=CancelError},8341:(e,t,r)=>{var s=r(1223);var o=r(1205);var n=r(7147);var noop=function(){};var i=/^v?\\.0/.test(process.version);var isFn=function(e){return typeof e===\"function\"};var isFS=function(e){if(!i)return false;if(!n)return false;return(e instanceof(n.ReadStream||noop)||e instanceof(n.WriteStream||noop))&&isFn(e.close)};var isRequest=function(e){return e.setHeader&&isFn(e.abort)};var destroyer=function(e,t,r,n){n=s(n);var i=false;e.on(\"close\",(function(){i=true}));o(e,{readable:t,writable:r},(function(e){if(e)return n(e);i=true;n()}));var a=false;return function(t){if(i)return;if(a)return;a=true;if(isFS(e))return e.close(noop);if(isRequest(e))return e.abort();if(isFn(e.destroy))return e.destroy();n(t||new Error(\"stream was destroyed\"))}};var call=function(e){e()};var pipe=function(e,t){return e.pipe(t)};var pump=function(){var e=Array.prototype.slice.call(arguments);var t=isFn(e[e.length-1]||noop)&&e.pop()||noop;if(Array.isArray(e[0]))e=e[0];if(e.length<2)throw new Error(\"pump requires two streams per minimum\");var r;var s=e.map((function(o,n){var i=n<e.length-1;var a=n>0;return destroyer(o,i,a,(function(e){if(!r)r=e;if(e)s.forEach(call);if(i)return;s.forEach(call);t(r)}))}));return e.reduce(pipe)};e.exports=pump},9273:e=>{\"use strict\";class QuickLRU{constructor(e={}){if(!(e.maxSize&&e.maxSize>0)){throw new TypeError(\"`maxSize` must be a number greater than 0\")}this.maxSize=e.maxSize;this.onEviction=e.onEviction;this.cache=new Map;this.oldCache=new Map;this._size=0}_set(e,t){this.cache.set(e,t);this._size++;if(this._size>=this.maxSize){this._size=0;if(typeof this.onEviction===\"function\"){for(const[e,t]of this.oldCache.entries()){this.onEviction(e,t)}}this.oldCache=this.cache;this.cache=new Map}}get(e){if(this.cache.has(e)){return this.cache.get(e)}if(this.oldCache.has(e)){const t=this.oldCache.get(e);this.oldCache.delete(e);this._set(e,t);return t}}set(e,t){if(this.cache.has(e)){this.cache.set(e,t)}else{this._set(e,t)}return this}has(e){return this.cache.has(e)||this.oldCache.has(e)}peek(e){if(this.cache.has(e)){return this.cache.get(e)}if(this.oldCache.has(e)){return this.oldCache.get(e)}}delete(e){const t=this.cache.delete(e);if(t){this._size--}return this.oldCache.delete(e)||t}clear(){this.cache.clear();this.oldCache.clear();this._size=0}*keys(){for(const[e]of this){yield e}}*values(){for(const[,e]of this){yield e}}*[Symbol.iterator](){for(const e of this.cache){yield e}for(const e of this.oldCache){const[t]=e;if(!this.cache.has(t)){yield e}}}get size(){let e=0;for(const t of this.oldCache.keys()){if(!this.cache.has(t)){e++}}return Math.min(this._size+e,this.maxSize)}}e.exports=QuickLRU},6624:(e,t,r)=>{\"use strict\";const s=r(4404);e.exports=(e={},t=s.connect)=>new Promise(((r,s)=>{let o=false;let n;const callback=async()=>{await i;n.off(\"timeout\",onTimeout);n.off(\"error\",s);if(e.resolveSocket){r({alpnProtocol:n.alpnProtocol,socket:n,timeout:o});if(o){await Promise.resolve();n.emit(\"timeout\")}}else{n.destroy();r({alpnProtocol:n.alpnProtocol,timeout:o})}};const onTimeout=async()=>{o=true;callback()};const i=(async()=>{try{n=await t(e,callback);n.on(\"error\",s);n.once(\"timeout\",onTimeout)}catch(e){s(e)}})()}))},9004:(e,t,r)=>{\"use strict\";const s=r(2781).Readable;const o=r(9662);class Response extends s{constructor(e,t,r,s){if(typeof e!==\"number\"){throw new TypeError(\"Argument `statusCode` should be a number\")}if(typeof t!==\"object\"){throw new TypeError(\"Argument `headers` should be an object\")}if(!(r instanceof Buffer)){throw new TypeError(\"Argument `body` should be a buffer\")}if(typeof s!==\"string\"){throw new TypeError(\"Argument `url` should be a string\")}super();this.statusCode=e;this.headers=o(t);this.body=r;this.url=s}_read(){this.push(this.body);this.push(null)}}e.exports=Response},2940:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!==\"function\")throw new TypeError(\"need wrapper function\");Object.keys(e).forEach((function(t){wrapper[t]=e[t]}));return wrapper;function wrapper(){var t=new Array(arguments.length);for(var r=0;r<t.length;r++){t[r]=arguments[r]}var s=e.apply(this,t);var o=t[t.length-1];if(typeof s===\"function\"&&s!==o){Object.keys(o).forEach((function(e){s[e]=o[e]}))}return s}}},4300:e=>{\"use strict\";e.exports=require(\"buffer\")},9523:e=>{\"use strict\";e.exports=require(\"dns\")},2361:e=>{\"use strict\";e.exports=require(\"events\")},7147:e=>{\"use strict\";e.exports=require(\"fs\")},3685:e=>{\"use strict\";e.exports=require(\"http\")},5158:e=>{\"use strict\";e.exports=require(\"http2\")},5687:e=>{\"use strict\";e.exports=require(\"https\")},1808:e=>{\"use strict\";e.exports=require(\"net\")},2037:e=>{\"use strict\";e.exports=require(\"os\")},2781:e=>{\"use strict\";e.exports=require(\"stream\")},4404:e=>{\"use strict\";e.exports=require(\"tls\")},7310:e=>{\"use strict\";e.exports=require(\"url\")},3837:e=>{\"use strict\";e.exports=require(\"util\")},9796:e=>{\"use strict\";e.exports=require(\"zlib\")}};var t={};function __nccwpck_require__(r){var s=t[r];if(s!==undefined){return s.exports}var o=t[r]={exports:{}};var n=true;try{e[r].call(o.exports,o,o.exports,__nccwpck_require__);n=false}finally{if(n)delete t[r]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(3061);module.exports=r})();", "explanation": "It appears that you're trying to generate code for a cache mechanism, specifically an LRU (Least Recently Used) cache. However, your question format doesn't directly relate to the typical approach of asking for code generation.\n\nTo give you a clear response based on common practices in generating caches:\n\nYou could consider using libraries like `quick-lru` or manually implementing an LRU cache. \n\nBelow is a basic implementation of a QuickLRU class that extends the standard cache with methods like `get`, `set`, and `delete`.\n\n```javascript\nconst { QuickLRU } = require('quick-lru');\n\nclass MyCache {\n  constructor(maxSize) {\n    this.maxSize = maxSize;\n    this.cache = new QuickLRU({ maxSize });\n  }\n\n  get(key) {\n    return this.cache.get(key);\n  }\n\n  set(key, value) {\n    return this.cache.set(key, value);\n  }\n\n  delete(key) {\n    return this.cache.delete(key);\n  }\n}\n\nconst cache = new MyCache(10);\n\ncache.set('key', 'value');\nconsole.log(cache.get('key')); // outputs: value\n```\n\nThis QuickLRU library offers a simple way to create an LRU Cache with methods for adding items and checking if keys exist.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/got/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'compiled/got/index.js':\n\n\"This JavaScript file contains a basic implementation of an LRU (Least Recently Used) cache using the QuickLRU library.\""}
{"code": "(()=>{\"use strict\";var e={517:(e,r)=>{\n/** @license React v17.0.2\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This block appears to be JavaScript code, specifically an anonymous IIFE (Immediately Invoked Function Expression) that imports a module named \"react-is\" likely from a library called React.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe \"compiled/react-is/index.js\" file exports utility functions for validating and checking the type of React components, including checks for element types, forward refs, and valid element types."}
{"code": "if(process.env.NODE_ENV!==\"production\"){(function(){\"use strict\";var e=60103;var t=60106;var n=60107;var o=60108;var a=60114;var i=60109;var s=60110;var c=60112;var f=60113;var u=60120;var p=60115;var l=60116;var d=60121;var v=60122;var m=60117;var _=60119;var $=60128;var b=60129;var w=60130;var C=60131;if(typeof Symbol===\"function\"&&Symbol.for){var M=Symbol.for;e=M(\"react.element\");t=M(\"react.portal\");n=M(\"react.fragment\");o=M(\"react.strict_mode\");a=M(\"react.profiler\");i=M(\"react.provider\");s=M(\"react.context\");c=M(\"react.forward_ref\");f=M(\"react.suspense\");u=M(\"react.suspense_list\");p=M(\"react.memo\");l=M(\"react.lazy\");d=M(\"react.block\");v=M(\"react.server.block\");m=M(\"react.fundamental\");_=M(\"react.scope\");$=M(\"react.opaque.id\");b=M(\"react.debug_trace_mode\");w=M(\"react.offscreen\");C=M(\"react.legacy_hidden\")}var x=false;function isValidElementType(e){if(typeof e===\"string\"||typeof e===\"function\"){return true}if(e===n||e===a||e===b||e===o||e===f||e===u||e===C||x){return true}if(typeof e===\"object\"&&e!==null){if(e.$$typeof===l||e.$$typeof===p||e.$$typeof===i||e.$$typeof===s||e.$$typeof===c||e.$$typeof===m||e.$$typeof===d||e[0]===v){return true}}return false}function typeOf(r){if(typeof r===\"object\"&&r!==null){var d=r.$$typeof;switch(d){case e:var v=r.type;switch(v){case n:case a:case o:case f:case u:return v;default:var m=v&&v.$$typeof;switch(m){case s:case c:case l:case p:case i:return m;default:return d}}case t:return d}}return undefined}var P=s;var S=i;var O=e;var g=c;var E=n;var h=l;var F=p;var R=t;var k=a;var z=o;var j=f;var q=false;var L=false;function isAsyncMode(e){{if(!q){q=true;console[\"warn\"](\"The ReactIs.isAsyncMode() alias has been deprecated, \"+\"and will be removed in React 18+.\")}}return false}function isConcurrentMode(e){{if(!L){L=true;console[\"warn\"](\"The ReactIs.isConcurrentMode() alias has been deprecated, \"+\"and will be removed in React 18+.\")}}return false}function isContextConsumer(e){return typeOf(e)===s}function isContextProvider(e){return typeOf(e)===i}function isElement(r){return typeof r===\"object\"&&r!==null&&r.$$typeof===e}function isForwardRef(e){return typeOf(e)===c}function isFragment(e){return typeOf(e)===n}function isLazy(e){return typeOf(e)===l}function isMemo(e){return typeOf(e)===p}function isPortal(e){return typeOf(e)===t}function isProfiler(e){return typeOf(e)===a}function isStrictMode(e){return typeOf(e)===o}function isSuspense(e){return typeOf(e)===f}r.ContextConsumer=P;r.ContextProvider=S;r.Element=O;r.ForwardRef=g;r.Fragment=E;r.Lazy=h;r.Memo=F;r.Portal=R;r.Profiler=k;r.StrictMode=z;r.Suspense=j;r.isAsyncMode=isAsyncMode;r.isConcurrentMode=isConcurrentMode;r.isContextConsumer=isContextConsumer;r.isContextProvider=isContextProvider;r.isElement=isElement;r.isForwardRef=isForwardRef;r.isFragment=isFragment;r.isLazy=isLazy;r.isMemo=isMemo;r.isPortal=isPortal;r.isProfiler=isProfiler;r.isStrictMode=isStrictMode;r.isSuspense=isSuspense;r.isValidElementType=isValidElementType;r.typeOf=typeOf})()}},402:(e,r)=>{", "explanation": "**Block Summary**\n\nThis block is a JavaScript module that exports various React-related functions for type checking and validation. It defines several constants, functions, and aliases for determining the type of a given React component or element. The purpose of this block appears to be utility-like, providing reusable functionality for checking the validity and type of React components.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe \"compiled/react-is/index.js\" file exports utility functions for validating and checking the type of React components, including checks for element types, forward refs, and valid element types."}
{"code": "/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This block is a JavaScript comment that contains licensing information for React version 17.0.2, indicating it's copyrighted by Facebook and licensed under the MIT license.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe \"compiled/react-is/index.js\" file exports utility functions for validating and checking the type of React components, including checks for element types, forward refs, and valid element types."}
{"code": "var t=60103,n=60106,o=60107,a=60108,i=60114,s=60109,c=60110,f=60112,u=60113,p=60120,l=60115,d=60116,v=60121,m=60122,_=60117,$=60129,b=60131;if(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;t=w(\"react.element\");n=w(\"react.portal\");o=w(\"react.fragment\");a=w(\"react.strict_mode\");i=w(\"react.profiler\");s=w(\"react.provider\");c=w(\"react.context\");f=w(\"react.forward_ref\");u=w(\"react.suspense\");p=w(\"react.suspense_list\");l=w(\"react.memo\");d=w(\"react.lazy\");v=w(\"react.block\");m=w(\"react.server.block\");_=w(\"react.fundamental\");$=w(\"react.debug_trace_mode\");b=w(\"react.legacy_hidden\")}function y(e){if(\"object\"===typeof e&&null!==e){var r=e.$$typeof;switch(r){case t:switch(e=e.type,e){case o:case i:case a:case u:case p:return e;default:switch(e=e&&e.$$typeof,e){case c:case f:case d:case l:case s:return e;default:return r}}case n:return r}}}var C=s,M=t,x=f,P=o,S=d,O=l,g=n,E=i,h=a,F=u;r.ContextConsumer=c;r.ContextProvider=C;r.Element=M;r.ForwardRef=x;r.Fragment=P;r.Lazy=S;r.Memo=O;r.Portal=g;r.Profiler=E;r.StrictMode=h;r.Suspense=F;r.isAsyncMode=function(){return!1};r.isConcurrentMode=function(){return!1};r.isContextConsumer=function(e){return y(e)===c};r.isContextProvider=function(e){return y(e)===s};r.isElement=function(e){return\"object\"===typeof e&&null!==e&&e.$$typeof===t};r.isForwardRef=function(e){return y(e)===f};r.isFragment=function(e){return y(e)===o};r.isLazy=function(e){return y(e)===d};r.isMemo=function(e){return y(e)===l};r.isPortal=function(e){return y(e)===n};r.isProfiler=function(e){return y(e)===i};r.isStrictMode=function(e){return y(e)===a};r.isSuspense=function(e){return y(e)===u};r.isValidElementType=function(e){return\"string\"===typeof e||\"function\"===typeof e||e===o||e===i||e===$||e===a||e===u||e===p||e===b||\"object\"===typeof e&&null!==e&&(e.$$typeof===d||e.$$typeof===l||e.$$typeof===s||e.$$typeof===c||e.$$typeof===f||e.$$typeof===_||e.$$typeof===v||e[0]===m)?!0:!1};r.typeOf=y},93:(e,r,t)=>{if(process.env.NODE_ENV===\"production\"){e.exports=t(402)}else{e.exports=t(517)}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var o=r[t]={exports:{}};var a=true;try{e[t](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(93);module.exports=t})();", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** This JavaScript code defines utility functions for React components.\n\n**Functionality:** It exports several helper functions for checking the type of React elements, such as `isElement`, `isForwardRef`, and `isValidElementType`. These functions can be used to determine the nature of a given React component.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe \"compiled/react-is/index.js\" file exports utility functions for validating and checking the type of React components, including checks for element types, forward refs, and valid element types."}
{"code": "(()=>{\"use strict\";var e={426:e=>{\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/", "explanation": "This is a JavaScript IIFE (Immediately Invoked Function Expression), which assigns an object with a single property `426` containing another object to a variable `e`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react/index.js", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'compiled/react/index.js':\n\nThis file sets up React for use in the project by:\n\n* Defining various constants\n* Exporting React components (Component and PureComponent)\n* Implementing utility functions (cloneElement) and redefining React.Children methods\n* Including a polyfill for Object.assign() to ensure browser compatibility"}
{"code": "var r=Object.getOwnPropertySymbols;var t=Object.prototype.hasOwnProperty;var n=Object.prototype.propertyIsEnumerable;function toObject(e){if(e===null||e===undefined){throw new TypeError(\"Object.assign cannot be called with null or undefined\")}return Object(e)}function shouldUseNative(){try{if(!Object.assign){return false}var e=new String(\"abc\");e[5]=\"de\";if(Object.getOwnPropertyNames(e)[0]===\"5\"){return false}var r={};for(var t=0;t<10;t++){r[\"_\"+String.fromCharCode(t)]=t}var n=Object.getOwnPropertyNames(r).map((function(e){return r[e]}));if(n.join(\"\")!==\"0123456789\"){return false}var a={};\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){a[e]=e}));if(Object.keys(Object.assign({},a)).join(\"\")!==\"abcdefghijklmnopqrst\"){return false}return true}catch(e){return false}}e.exports=shouldUseNative()?Object.assign:function(e,a){var o;var i=toObject(e);var u;for(var s=1;s<arguments.length;s++){o=Object(arguments[s]);for(var l in o){if(t.call(o,l)){i[l]=o[l]}}if(r){u=r(o);for(var c=0;c<u.length;c++){if(n.call(o,u[c])){i[u[c]]=o[u[c]]}}}}return i}},857:(e,r,t)=>{", "explanation": "**Summary:**\n\nThis block is a polyfill for `Object.assign()`, which enables browser support for this method even if it's not natively available. It checks for native support using a set of tests, and if unavailable, provides an implementation that merges properties from one or more objects into another.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react/index.js", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'compiled/react/index.js':\n\nThis file sets up React for use in the project by:\n\n* Defining various constants\n* Exporting React components (Component and PureComponent)\n* Implementing utility functions (cloneElement) and redefining React.Children methods\n* Including a polyfill for Object.assign() to ensure browser compatibility"}
{"code": "/** @license React v17.0.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This block is a JavaScript library license statement for React, specifying its copyright holder (Facebook) and licensing terms under the MIT license.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react/index.js", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'compiled/react/index.js':\n\nThis file sets up React for use in the project by:\n\n* Defining various constants\n* Exporting React components (Component and PureComponent)\n* Implementing utility functions (cloneElement) and redefining React.Children methods\n* Including a polyfill for Object.assign() to ensure browser compatibility"}
{"code": "if(process.env.NODE_ENV!==\"production\"){(function(){\"use strict\";var e=t(426);var n=\"17.0.2\";var a=60103;var o=60106;r.Fragment=60107;r.StrictMode=60108;r.Profiler=60114;var i=60109;var u=60110;var s=60112;r.Suspense=60113;var l=60120;var c=60115;var f=60116;var p=60121;var d=60122;var m=60117;var v=60119;var h=60128;var g=60129;var b=60130;var _=60131;if(typeof Symbol===\"function\"&&Symbol.for){var w=Symbol.for;a=w(\"react.element\");o=w(\"react.portal\");r.Fragment=w(\"react.fragment\");r.StrictMode=w(\"react.strict_mode\");r.Profiler=w(\"react.profiler\");i=w(\"react.provider\");u=w(\"react.context\");s=w(\"react.forward_ref\");r.Suspense=w(\"react.suspense\");l=w(\"react.suspense_list\");c=w(\"react.memo\");f=w(\"react.lazy\");p=w(\"react.block\");d=w(\"react.server.block\");m=w(\"react.fundamental\");v=w(\"react.scope\");h=w(\"react.opaque.id\");g=w(\"react.debug_trace_mode\");b=w(\"react.offscreen\");_=w(\"react.legacy_hidden\")}var k=typeof Symbol===\"function\"&&Symbol.iterator;var R=\"@@iterator\";function getIteratorFn(e){if(e===null||typeof e!==\"object\"){return null}var r=k&&e[k]||e[R];if(typeof r===\"function\"){return r}return null}var j={current:null};var $={transition:0};var x={current:null};var F={};var I=null;function setExtraStackFrame(e){{I=e}}{F.setExtraStackFrame=function(e){{I=e}};F.getCurrentStack=null;F.getStackAddendum=function(){var e=\"\";if(I){e+=I}var r=F.getCurrentStack;if(r){e+=r()||\"\"}return e}}var V={current:false};var A={ReactCurrentDispatcher:j,ReactCurrentBatchConfig:$,ReactCurrentOwner:x,IsSomeRendererActing:V,assign:e};{A.ReactDebugCurrentFrame=F}function warn(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++){t[n-1]=arguments[n]}printWarning(\"warn\",e,t)}}function error(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++){t[n-1]=arguments[n]}printWarning(\"error\",e,t)}}function printWarning(e,r,t){{var n=A.ReactDebugCurrentFrame;var a=n.getStackAddendum();if(a!==\"\"){r+=\"%s\";t=t.concat([a])}var o=t.map((function(e){return\"\"+e}));o.unshift(\"Warning: \"+r);Function.prototype.apply.call(console[e],console,o)}}var T={};function warnNoop(e,r){{var t=e.constructor;var n=t&&(t.displayName||t.name)||\"ReactClass\";var a=n+\".\"+r;if(T[a]){return}error(\"Can't call %s on a component that is not yet mounted. \"+\"This is a no-op, but it might indicate a bug in your application. \"+\"Instead, assign to `this.state` directly or define a `state = {};` \"+\"class property with the desired state in the %s component.\",r,n);T[a]=true}}var U={isMounted:function(e){return false},enqueueForceUpdate:function(e,r,t){warnNoop(e,\"forceUpdate\")},enqueueReplaceState:function(e,r,t,n){warnNoop(e,\"replaceState\")},enqueueSetState:function(e,r,t,n){warnNoop(e,\"setState\")}};var W={};{Object.freeze(W)}function Component(e,r,t){this.props=e;this.context=r;this.refs=W;this.updater=t||U}Component.prototype.isReactComponent={};Component.prototype.setState=function(e,r){if(!(typeof e===\"object\"||typeof e===\"function\"||e==null)){{throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\")}}this.updater.enqueueSetState(this,e,r,\"setState\")};Component.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,\"forceUpdate\")};{var M={isMounted:[\"isMounted\",\"Instead, make sure to clean up subscriptions and pending requests in \"+\"componentWillUnmount to prevent memory leaks.\"],replaceState:[\"replaceState\",\"Refactor your code to use setState instead (see \"+\"https://github.com/facebook/react/issues/3236).\"]};var defineDeprecationWarning=function(e,r){Object.defineProperty(Component.prototype,e,{get:function(){warn(\"%s(...) is deprecated in plain JavaScript React classes. %s\",r[0],r[1]);return undefined}})};for(var q in M){if(M.hasOwnProperty(q)){defineDeprecationWarning(q,M[q])}}}function ComponentDummy(){}ComponentDummy.prototype=Component.prototype;function PureComponent(e,r,t){this.props=e;this.context=r;this.refs=W;this.updater=t||U}var B=PureComponent.prototype=new ComponentDummy;B.constructor=PureComponent;e(B,Component.prototype);B.isPureReactComponent=true;function createRef(){var e={current:null};{Object.seal(e)}return e}function getWrappedName(e,r,t){var n=r.displayName||r.name||\"\";return e.displayName||(n!==\"\"?t+\"(\"+n+\")\":t)}function getContextName(e){return e.displayName||\"Context\"}function getComponentName(e){if(e==null){return null}{if(typeof e.tag===\"number\"){error(\"Received an unexpected object in getComponentName(). \"+\"This is likely a bug in React. Please file an issue.\")}}if(typeof e===\"function\"){return e.displayName||e.name||null}if(typeof e===\"string\"){return e}switch(e){case r.Fragment:return\"Fragment\";case o:return\"Portal\";case r.Profiler:return\"Profiler\";case r.StrictMode:return\"StrictMode\";case r.Suspense:return\"Suspense\";case l:return\"SuspenseList\"}if(typeof e===\"object\"){switch(e.$$typeof){case u:var t=e;return getContextName(t)+\".Consumer\";case i:var n=e;return getContextName(n._context)+\".Provider\";case s:return getWrappedName(e,e.render,\"ForwardRef\");case c:return getComponentName(e.type);case p:return getComponentName(e._render);case f:{var a=e;var d=a._payload;var m=a._init;try{return getComponentName(m(d))}catch(e){return null}}}}return null}var Y=Object.prototype.hasOwnProperty;var H={key:true,ref:true,__self:true,__source:true};var G,X,Z;{Z={}}function hasValidRef(e){{if(Y.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning){return false}}}return e.ref!==undefined}function hasValidKey(e){{if(Y.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning){return false}}}return e.key!==undefined}function defineKeyPropWarningGetter(e,r){var warnAboutAccessingKey=function(){{if(!G){G=true;error(\"%s: `key` is not a prop. Trying to access it will result \"+\"in `undefined` being returned. If you need to access the same \"+\"value within the child component, you should pass it as a different \"+\"prop. (https://reactjs.org/link/special-props)\",r)}}};warnAboutAccessingKey.isReactWarning=true;Object.defineProperty(e,\"key\",{get:warnAboutAccessingKey,configurable:true})}function defineRefPropWarningGetter(e,r){var warnAboutAccessingRef=function(){{if(!X){X=true;error(\"%s: `ref` is not a prop. Trying to access it will result \"+\"in `undefined` being returned. If you need to access the same \"+\"value within the child component, you should pass it as a different \"+\"prop. (https://reactjs.org/link/special-props)\",r)}}};warnAboutAccessingRef.isReactWarning=true;Object.defineProperty(e,\"ref\",{get:warnAboutAccessingRef,configurable:true})}function warnIfStringRefCannotBeAutoConverted(e){{if(typeof e.ref===\"string\"&&x.current&&e.__self&&x.current.stateNode!==e.__self){var r=getComponentName(x.current.type);if(!Z[r]){error('Component \"%s\" contains the string ref \"%s\". '+\"Support for string refs will be removed in a future major release. \"+\"This case cannot be automatically converted to an arrow function. \"+\"We ask you to manually fix this case by using useRef() or createRef() instead. \"+\"Learn more about using refs safely here: \"+\"https://reactjs.org/link/strict-mode-string-ref\",r,e.ref);Z[r]=true}}}}var ReactElement=function(e,r,t,n,o,i,u){var s={$$typeof:a,type:e,key:r,ref:t,props:u,_owner:i};{s._store={};Object.defineProperty(s._store,\"validated\",{configurable:false,enumerable:false,writable:true,value:false});Object.defineProperty(s,\"_self\",{configurable:false,enumerable:false,writable:false,value:n});Object.defineProperty(s,\"_source\",{configurable:false,enumerable:false,writable:false,value:o});if(Object.freeze){Object.freeze(s.props);Object.freeze(s)}}return s};function createElement(e,r,t){var n;var a={};var o=null;var i=null;var u=null;var s=null;if(r!=null){if(hasValidRef(r)){i=r.ref;{warnIfStringRefCannotBeAutoConverted(r)}}if(hasValidKey(r)){o=\"\"+r.key}u=r.__self===undefined?null:r.__self;s=r.__source===undefined?null:r.__source;for(n in r){if(Y.call(r,n)&&!H.hasOwnProperty(n)){a[n]=r[n]}}}var l=arguments.length-2;if(l===1){a.children=t}else if(l>1){var c=Array(l);for(var f=0;f<l;f++){c[f]=arguments[f+2]}{if(Object.freeze){Object.freeze(c)}}a.children=c}if(e&&e.defaultProps){var p=e.defaultProps;for(n in p){if(a[n]===undefined){a[n]=p[n]}}}{if(o||i){var d=typeof e===\"function\"?e.displayName||e.name||\"Unknown\":e;if(o){defineKeyPropWarningGetter(a,d)}if(i){defineRefPropWarningGetter(a,d)}}}return ReactElement(e,o,i,u,s,x.current,a)}function cloneAndReplaceKey(e,r){var t=ReactElement(e.type,r,e.ref,e._self,e._source,e._owner,e.props);return t}function cloneElement(r,t,n){if(!!(r===null||r===undefined)){{throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+r+\".\")}}var a;var o=e({},r.props);var i=r.key;var u=r.ref;var s=r._self;var l=r._source;var c=r._owner;if(t!=null){if(hasValidRef(t)){u=t.ref;c=x.current}if(hasValidKey(t)){i=\"\"+t.key}var f;if(r.type&&r.type.defaultProps){f=r.type.defaultProps}for(a in t){if(Y.call(t,a)&&!H.hasOwnProperty(a)){if(t[a]===undefined&&f!==undefined){o[a]=f[a]}else{o[a]=t[a]}}}}var p=arguments.length-2;if(p===1){o.children=n}else if(p>1){var d=Array(p);for(var m=0;m<p;m++){d[m]=arguments[m+2]}o.children=d}return ReactElement(r.type,i,u,s,l,c,o)}function isValidElement(e){return typeof e===\"object\"&&e!==null&&e.$$typeof===a}var ee=\".\";var re=\":\";function escape(e){var r=/[=:]/g;var t={\"=\":\"=0\",\":\":\"=2\"};var n=e.replace(r,(function(e){return t[e]}));return\"$\"+n}var te=false;var ne=/\\/+/g;function escapeUserProvidedKey(e){return e.replace(ne,\"$&/\")}function getElementKey(e,r){if(typeof e===\"object\"&&e!==null&&e.key!=null){return escape(\"\"+e.key)}return r.toString(36)}function mapIntoArray(e,r,t,n,i){var u=typeof e;if(u===\"undefined\"||u===\"boolean\"){e=null}var s=false;if(e===null){s=true}else{switch(u){case\"string\":case\"number\":s=true;break;case\"object\":switch(e.$$typeof){case a:case o:s=true}}}if(s){var l=e;var c=i(l);var f=n===\"\"?ee+getElementKey(l,0):n;if(Array.isArray(c)){var p=\"\";if(f!=null){p=escapeUserProvidedKey(f)+\"/\"}mapIntoArray(c,r,p,\"\",(function(e){return e}))}else if(c!=null){if(isValidElement(c)){c=cloneAndReplaceKey(c,t+(c.key&&(!l||l.key!==c.key)?escapeUserProvidedKey(\"\"+c.key)+\"/\":\"\")+f)}r.push(c)}return 1}var d;var m;var v=0;var h=n===\"\"?ee:n+re;if(Array.isArray(e)){for(var g=0;g<e.length;g++){d=e[g];m=h+getElementKey(d,g);v+=mapIntoArray(d,r,t,m,i)}}else{var b=getIteratorFn(e);if(typeof b===\"function\"){var _=e;{if(b===_.entries){if(!te){warn(\"Using Maps as children is not supported. \"+\"Use an array of keyed ReactElements instead.\")}te=true}}var w=b.call(_);var k;var R=0;while(!(k=w.next()).done){d=k.value;m=h+getElementKey(d,R++);v+=mapIntoArray(d,r,t,m,i)}}else if(u===\"object\"){var j=\"\"+e;{{throw Error(\"Objects are not valid as a React child (found: \"+(j===\"[object Object]\"?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":j)+\"). If you meant to render a collection of children, use an array instead.\")}}}}return v}function mapChildren(e,r,t){if(e==null){return e}var n=[];var a=0;mapIntoArray(e,n,\"\",\"\",(function(e){return r.call(t,e,a++)}));return n}function countChildren(e){var r=0;mapChildren(e,(function(){r++}));return r}function forEachChildren(e,r,t){mapChildren(e,(function(){r.apply(this,arguments)}),t)}function toArray(e){return mapChildren(e,(function(e){return e}))||[]}function onlyChild(e){if(!isValidElement(e)){{throw Error(\"React.Children.only expected to receive a single React element child.\")}}return e}function createContext(e,r){if(r===undefined){r=null}else{{if(r!==null&&typeof r!==\"function\"){error(\"createContext: Expected the optional second argument to be a \"+\"function. Instead received: %s\",r)}}}var t={$$typeof:u,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null};t.Provider={$$typeof:i,_context:t};var n=false;var a=false;var o=false;{var s={$$typeof:u,_context:t,_calculateChangedBits:t._calculateChangedBits};Object.defineProperties(s,{Provider:{get:function(){if(!a){a=true;error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in \"+\"a future major release. Did you mean to render <Context.Provider> instead?\")}return t.Provider},set:function(e){t.Provider=e}},_currentValue:{get:function(){return t._currentValue},set:function(e){t._currentValue=e}},_currentValue2:{get:function(){return t._currentValue2},set:function(e){t._currentValue2=e}},_threadCount:{get:function(){return t._threadCount},set:function(e){t._threadCount=e}},Consumer:{get:function(){if(!n){n=true;error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in \"+\"a future major release. Did you mean to render <Context.Consumer> instead?\")}return t.Consumer}},displayName:{get:function(){return t.displayName},set:function(e){if(!o){warn(\"Setting `displayName` on Context.Consumer has no effect. \"+\"You should set it directly on the context with Context.displayName = '%s'.\",e);o=true}}}});t.Consumer=s}{t._currentRenderer=null;t._currentRenderer2=null}return t}var ae=-1;var oe=0;var ie=1;var ue=2;function lazyInitializer(e){if(e._status===ae){var r=e._result;var t=r();var n=e;n._status=oe;n._result=t;t.then((function(r){if(e._status===oe){var t=r.default;{if(t===undefined){error(\"lazy: Expected the result of a dynamic import() call. \"+\"Instead received: %s\\n\\nYour code should look like: \\n  \"+\"const MyComponent = lazy(() => imp\"+\"ort('./MyComponent'))\",r)}}var n=e;n._status=ie;n._result=t}}),(function(r){if(e._status===oe){var t=e;t._status=ue;t._result=r}}))}if(e._status===ie){return e._result}else{throw e._result}}function lazy(e){var r={_status:-1,_result:e};var t={$$typeof:f,_payload:r,_init:lazyInitializer};{var n;var a;Object.defineProperties(t,{defaultProps:{configurable:true,get:function(){return n},set:function(e){error(\"React.lazy(...): It is not supported to assign `defaultProps` to \"+\"a lazy component import. Either specify them where the component \"+\"is defined, or create a wrapping component around it.\");n=e;Object.defineProperty(t,\"defaultProps\",{enumerable:true})}},propTypes:{configurable:true,get:function(){return a},set:function(e){error(\"React.lazy(...): It is not supported to assign `propTypes` to \"+\"a lazy component import. Either specify them where the component \"+\"is defined, or create a wrapping component around it.\");a=e;Object.defineProperty(t,\"propTypes\",{enumerable:true})}}})}return t}function forwardRef(e){{if(e!=null&&e.$$typeof===c){error(\"forwardRef requires a render function but received a `memo` \"+\"component. Instead of forwardRef(memo(...)), use \"+\"memo(forwardRef(...)).\")}else if(typeof e!==\"function\"){error(\"forwardRef requires a render function but was given %s.\",e===null?\"null\":typeof e)}else{if(e.length!==0&&e.length!==2){error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\",e.length===1?\"Did you forget to use the ref parameter?\":\"Any additional parameter will be undefined.\")}}if(e!=null){if(e.defaultProps!=null||e.propTypes!=null){error(\"forwardRef render functions do not support propTypes or defaultProps. \"+\"Did you accidentally pass a React component?\")}}}var r={$$typeof:s,render:e};{var t;Object.defineProperty(r,\"displayName\",{enumerable:false,configurable:true,get:function(){return t},set:function(r){t=r;if(e.displayName==null){e.displayName=r}}})}return r}var se=false;function isValidElementType(e){if(typeof e===\"string\"||typeof e===\"function\"){return true}if(e===r.Fragment||e===r.Profiler||e===g||e===r.StrictMode||e===r.Suspense||e===l||e===_||se){return true}if(typeof e===\"object\"&&e!==null){if(e.$$typeof===f||e.$$typeof===c||e.$$typeof===i||e.$$typeof===u||e.$$typeof===s||e.$$typeof===m||e.$$typeof===p||e[0]===d){return true}}return false}function memo(e,r){{if(!isValidElementType(e)){error(\"memo: The first argument must be a component. Instead \"+\"received: %s\",e===null?\"null\":typeof e)}}var t={$$typeof:c,type:e,compare:r===undefined?null:r};{var n;Object.defineProperty(t,\"displayName\",{enumerable:false,configurable:true,get:function(){return n},set:function(r){n=r;if(e.displayName==null){e.displayName=r}}})}return t}function resolveDispatcher(){var e=j.current;if(!(e!==null)){{throw Error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\")}}return e}function useContext(e,r){var t=resolveDispatcher();{if(r!==undefined){error(\"useContext() second argument is reserved for future \"+\"use in React. Passing it is not supported. \"+\"You passed: %s.%s\",r,typeof r===\"number\"&&Array.isArray(arguments[2])?\"\\n\\nDid you call array.map(useContext)? \"+\"Calling Hooks inside a loop is not supported. \"+\"Learn more at https://reactjs.org/link/rules-of-hooks\":\"\")}if(e._context!==undefined){var n=e._context;if(n.Consumer===e){error(\"Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be \"+\"removed in a future major release. Did you mean to call useContext(Context) instead?\")}else if(n.Provider===e){error(\"Calling useContext(Context.Provider) is not supported. \"+\"Did you mean to call useContext(Context) instead?\")}}}return t.useContext(e,r)}function useState(e){var r=resolveDispatcher();return r.useState(e)}function useReducer(e,r,t){var n=resolveDispatcher();return n.useReducer(e,r,t)}function useRef(e){var r=resolveDispatcher();return r.useRef(e)}function useEffect(e,r){var t=resolveDispatcher();return t.useEffect(e,r)}function useLayoutEffect(e,r){var t=resolveDispatcher();return t.useLayoutEffect(e,r)}function useCallback(e,r){var t=resolveDispatcher();return t.useCallback(e,r)}function useMemo(e,r){var t=resolveDispatcher();return t.useMemo(e,r)}function useImperativeHandle(e,r,t){var n=resolveDispatcher();return n.useImperativeHandle(e,r,t)}function useDebugValue(e,r){{var t=resolveDispatcher();return t.useDebugValue(e,r)}}var le=0;var ce;var fe;var pe;var de;var ye;var me;var ve;function disabledLog(){}disabledLog.__reactDisabledLog=true;function disableLogs(){{if(le===0){ce=console.log;fe=console.info;pe=console.warn;de=console.error;ye=console.group;me=console.groupCollapsed;ve=console.groupEnd;var e={configurable:true,enumerable:true,value:disabledLog,writable:true};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}le++}}function reenableLogs(){{le--;if(le===0){var r={configurable:true,enumerable:true,writable:true};Object.defineProperties(console,{log:e({},r,{value:ce}),info:e({},r,{value:fe}),warn:e({},r,{value:pe}),error:e({},r,{value:de}),group:e({},r,{value:ye}),groupCollapsed:e({},r,{value:me}),groupEnd:e({},r,{value:ve})})}if(le<0){error(\"disabledDepth fell below zero. \"+\"This is a bug in React. Please file an issue.\")}}}var he=A.ReactCurrentDispatcher;var ge;function describeBuiltInComponentFrame(e,r,t){{if(ge===undefined){try{throw Error()}catch(e){var n=e.stack.trim().match(/\\n( *(at )?)/);ge=n&&n[1]||\"\"}}return\"\\n\"+ge+e}}var be=false;var Ce;{var _e=typeof WeakMap===\"function\"?WeakMap:Map;Ce=new _e}function describeNativeComponentFrame(e,r){if(!e||be){return\"\"}{var t=Ce.get(e);if(t!==undefined){return t}}var n;be=true;var a=Error.prepareStackTrace;Error.prepareStackTrace=undefined;var o;{o=he.current;he.current=null;disableLogs()}try{if(r){var Fake=function(){throw Error()};Object.defineProperty(Fake.prototype,\"props\",{set:function(){throw Error()}});if(typeof Reflect===\"object\"&&Reflect.construct){try{Reflect.construct(Fake,[])}catch(e){n=e}Reflect.construct(e,[],Fake)}else{try{Fake.call()}catch(e){n=e}e.call(Fake.prototype)}}else{try{throw Error()}catch(e){n=e}e()}}catch(r){if(r&&n&&typeof r.stack===\"string\"){var i=r.stack.split(\"\\n\");var u=n.stack.split(\"\\n\");var s=i.length-1;var l=u.length-1;while(s>=1&&l>=0&&i[s]!==u[l]){l--}for(;s>=1&&l>=0;s--,l--){if(i[s]!==u[l]){if(s!==1||l!==1){do{s--;l--;if(l<0||i[s]!==u[l]){var c=\"\\n\"+i[s].replace(\" at new \",\" at \");{if(typeof e===\"function\"){Ce.set(e,c)}}return c}}while(s>=1&&l>=0)}break}}}}finally{be=false;{he.current=o;reenableLogs()}Error.prepareStackTrace=a}var f=e?e.displayName||e.name:\"\";var p=f?describeBuiltInComponentFrame(f):\"\";{if(typeof e===\"function\"){Ce.set(e,p)}}return p}function describeFunctionComponentFrame(e,r,t){{return describeNativeComponentFrame(e,false)}}function shouldConstruct(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function describeUnknownElementTypeFrameInDEV(e,t,n){if(e==null){return\"\"}if(typeof e===\"function\"){{return describeNativeComponentFrame(e,shouldConstruct(e))}}if(typeof e===\"string\"){return describeBuiltInComponentFrame(e)}switch(e){case r.Suspense:return describeBuiltInComponentFrame(\"Suspense\");case l:return describeBuiltInComponentFrame(\"SuspenseList\")}if(typeof e===\"object\"){switch(e.$$typeof){case s:return describeFunctionComponentFrame(e.render);case c:return describeUnknownElementTypeFrameInDEV(e.type,t,n);case p:return describeFunctionComponentFrame(e._render);case f:{var a=e;var o=a._payload;var i=a._init;try{return describeUnknownElementTypeFrameInDEV(i(o),t,n)}catch(e){}}}}return\"\"}var we={};var Ee=A.ReactDebugCurrentFrame;function setCurrentlyValidatingElement(e){{if(e){var r=e._owner;var t=describeUnknownElementTypeFrameInDEV(e.type,e._source,r?r.type:null);Ee.setExtraStackFrame(t)}else{Ee.setExtraStackFrame(null)}}}function checkPropTypes(e,r,t,n,a){{var o=Function.call.bind(Object.prototype.hasOwnProperty);for(var i in e){if(o(e,i)){var u=void 0;try{if(typeof e[i]!==\"function\"){var s=Error((n||\"React class\")+\": \"+t+\" type `\"+i+\"` is invalid; \"+\"it must be a function, usually from the `prop-types` package, but received `\"+typeof e[i]+\"`.\"+\"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");s.name=\"Invariant Violation\";throw s}u=e[i](r,i,n,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(e){u=e}if(u&&!(u instanceof Error)){setCurrentlyValidatingElement(a);error(\"%s: type specification of %s\"+\" `%s` is invalid; the type checker \"+\"function must return `null` or an `Error` but returned a %s. \"+\"You may have forgotten to pass an argument to the type checker \"+\"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \"+\"shape all require an argument).\",n||\"React class\",t,i,typeof u);setCurrentlyValidatingElement(null)}if(u instanceof Error&&!(u.message in we)){we[u.message]=true;setCurrentlyValidatingElement(a);error(\"Failed %s type: %s\",t,u.message);setCurrentlyValidatingElement(null)}}}}}function setCurrentlyValidatingElement$1(e){{if(e){var r=e._owner;var t=describeUnknownElementTypeFrameInDEV(e.type,e._source,r?r.type:null);setExtraStackFrame(t)}else{setExtraStackFrame(null)}}}var ke;{ke=false}function getDeclarationErrorAddendum(){if(x.current){var e=getComponentName(x.current.type);if(e){return\"\\n\\nCheck the render method of `\"+e+\"`.\"}}return\"\"}function getSourceInfoErrorAddendum(e){if(e!==undefined){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\");var t=e.lineNumber;return\"\\n\\nCheck your code at \"+r+\":\"+t+\".\"}return\"\"}function getSourceInfoErrorAddendumForProps(e){if(e!==null&&e!==undefined){return getSourceInfoErrorAddendum(e.__source)}return\"\"}var Re={};function getCurrentComponentErrorInfo(e){var r=getDeclarationErrorAddendum();if(!r){var t=typeof e===\"string\"?e:e.displayName||e.name;if(t){r=\"\\n\\nCheck the top-level render call using <\"+t+\">.\"}}return r}function validateExplicitKey(e,r){if(!e._store||e._store.validated||e.key!=null){return}e._store.validated=true;var t=getCurrentComponentErrorInfo(r);if(Re[t]){return}Re[t]=true;var n=\"\";if(e&&e._owner&&e._owner!==x.current){n=\" It was passed a child from \"+getComponentName(e._owner.type)+\".\"}{setCurrentlyValidatingElement$1(e);error('Each child in a list should have a unique \"key\" prop.'+\"%s%s See https://reactjs.org/link/warning-keys for more information.\",t,n);setCurrentlyValidatingElement$1(null)}}function validateChildKeys(e,r){if(typeof e!==\"object\"){return}if(Array.isArray(e)){for(var t=0;t<e.length;t++){var n=e[t];if(isValidElement(n)){validateExplicitKey(n,r)}}}else if(isValidElement(e)){if(e._store){e._store.validated=true}}else if(e){var a=getIteratorFn(e);if(typeof a===\"function\"){if(a!==e.entries){var o=a.call(e);var i;while(!(i=o.next()).done){if(isValidElement(i.value)){validateExplicitKey(i.value,r)}}}}}}function validatePropTypes(e){{var r=e.type;if(r===null||r===undefined||typeof r===\"string\"){return}var t;if(typeof r===\"function\"){t=r.propTypes}else if(typeof r===\"object\"&&(r.$$typeof===s||r.$$typeof===c)){t=r.propTypes}else{return}if(t){var n=getComponentName(r);checkPropTypes(t,e.props,\"prop\",n,e)}else if(r.PropTypes!==undefined&&!ke){ke=true;var a=getComponentName(r);error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",a||\"Unknown\")}if(typeof r.getDefaultProps===\"function\"&&!r.getDefaultProps.isReactClassApproved){error(\"getDefaultProps is only used on classic React.createClass \"+\"definitions. Use a static property named `defaultProps` instead.\")}}}function validateFragmentProps(e){{var r=Object.keys(e.props);for(var t=0;t<r.length;t++){var n=r[t];if(n!==\"children\"&&n!==\"key\"){setCurrentlyValidatingElement$1(e);error(\"Invalid prop `%s` supplied to `React.Fragment`. \"+\"React.Fragment can only have `key` and `children` props.\",n);setCurrentlyValidatingElement$1(null);break}}if(e.ref!==null){setCurrentlyValidatingElement$1(e);error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");setCurrentlyValidatingElement$1(null)}}}function createElementWithValidation(e,t,n){var o=isValidElementType(e);if(!o){var i=\"\";if(e===undefined||typeof e===\"object\"&&e!==null&&Object.keys(e).length===0){i+=\" You likely forgot to export your component from the file \"+\"it's defined in, or you might have mixed up default and named imports.\"}var u=getSourceInfoErrorAddendumForProps(t);if(u){i+=u}else{i+=getDeclarationErrorAddendum()}var s;if(e===null){s=\"null\"}else if(Array.isArray(e)){s=\"array\"}else if(e!==undefined&&e.$$typeof===a){s=\"<\"+(getComponentName(e.type)||\"Unknown\")+\" />\";i=\" Did you accidentally export a JSX literal instead of a component?\"}else{s=typeof e}{error(\"React.createElement: type is invalid -- expected a string (for \"+\"built-in components) or a class/function (for composite \"+\"components) but got: %s.%s\",s,i)}}var l=createElement.apply(this,arguments);if(l==null){return l}if(o){for(var c=2;c<arguments.length;c++){validateChildKeys(arguments[c],e)}}if(e===r.Fragment){validateFragmentProps(l)}else{validatePropTypes(l)}return l}var Se=false;function createFactoryWithValidation(e){var r=createElementWithValidation.bind(null,e);r.type=e;{if(!Se){Se=true;warn(\"React.createFactory() is deprecated and will be removed in \"+\"a future major release. Consider using JSX \"+\"or use React.createElement() directly instead.\")}Object.defineProperty(r,\"type\",{enumerable:false,get:function(){warn(\"Factory.type is deprecated. Access the class directly \"+\"before passing it to createFactory.\");Object.defineProperty(this,\"type\",{value:e});return e}})}return r}function cloneElementWithValidation(e,r,t){var n=cloneElement.apply(this,arguments);for(var a=2;a<arguments.length;a++){validateChildKeys(arguments[a],n.type)}validatePropTypes(n);return n}{try{var Pe=Object.freeze({});new Map([[Pe,null]]);new Set([Pe])}catch(e){}}var je=createElementWithValidation;var Oe=cloneElementWithValidation;var $e=createFactoryWithValidation;var xe={map:mapChildren,forEach:forEachChildren,count:countChildren,toArray:toArray,only:onlyChild};r.Children=xe;r.Component=Component;r.PureComponent=PureComponent;r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=A;r.cloneElement=Oe;r.createContext=createContext;r.createElement=je;r.createFactory=$e;r.createRef=createRef;r.forwardRef=forwardRef;r.isValidElement=isValidElement;r.lazy=lazy;r.memo=memo;r.useCallback=useCallback;r.useContext=useContext;r.useDebugValue=useDebugValue;r.useEffect=useEffect;r.useImperativeHandle=useImperativeHandle;r.useLayoutEffect=useLayoutEffect;r.useMemo=useMemo;r.useReducer=useReducer;r.useRef=useRef;r.useState=useState;r.version=n})()}},696:(e,r,t)=>{", "explanation": "It appears you're trying to share some code snippet with me, likely from a React component or library file.\n\nHowever, it looks like I didn't recognize or understand the full context of that snippet. If you could provide more information about what this code snippet is for (what React feature/library you're using), I'll do my best help you better!", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react/index.js", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'compiled/react/index.js':\n\nThis file sets up React for use in the project by:\n\n* Defining various constants\n* Exporting React components (Component and PureComponent)\n* Implementing utility functions (cloneElement) and redefining React.Children methods\n* Including a polyfill for Object.assign() to ensure browser compatibility"}
{"code": "/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This block appears to be a JavaScript comment, specifically a license header. It contains copyright information and licensing terms for the React library.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react/index.js", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'compiled/react/index.js':\n\nThis file sets up React for use in the project by:\n\n* Defining various constants\n* Exporting React components (Component and PureComponent)\n* Implementing utility functions (cloneElement) and redefining React.Children methods\n* Including a polyfill for Object.assign() to ensure browser compatibility"}
{"code": "var n=t(426),a=60103,o=60106;r.Fragment=60107;r.StrictMode=60108;r.Profiler=60114;var i=60109,u=60110,s=60112;r.Suspense=60113;var l=60115,c=60116;if(\"function\"===typeof Symbol&&Symbol.for){var f=Symbol.for;a=f(\"react.element\");o=f(\"react.portal\");r.Fragment=f(\"react.fragment\");r.StrictMode=f(\"react.strict_mode\");r.Profiler=f(\"react.profiler\");i=f(\"react.provider\");u=f(\"react.context\");s=f(\"react.forward_ref\");r.Suspense=f(\"react.suspense\");l=f(\"react.memo\");c=f(\"react.lazy\")}var p=\"function\"===typeof Symbol&&Symbol.iterator;function y(e){if(null===e||\"object\"!==typeof e)return null;e=p&&e[p]||e[\"@@iterator\"];return\"function\"===typeof e?e:null}function z(e){for(var r=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+e,t=1;t<arguments.length;t++)r+=\"&args[]=\"+encodeURIComponent(arguments[t]);return\"Minified React error #\"+e+\"; visit \"+r+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var d={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function C(e,r,t){this.props=e;this.context=r;this.refs=m;this.updater=t||d}C.prototype.isReactComponent={};C.prototype.setState=function(e,r){if(\"object\"!==typeof e&&\"function\"!==typeof e&&null!=e)throw Error(z(85));this.updater.enqueueSetState(this,e,r,\"setState\")};C.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,\"forceUpdate\")};function D(){}D.prototype=C.prototype;function E(e,r,t){this.props=e;this.context=r;this.refs=m;this.updater=t||d}var v=E.prototype=new D;v.constructor=E;n(v,C.prototype);v.isPureReactComponent=!0;var h={current:null},g=Object.prototype.hasOwnProperty,b={key:!0,ref:!0,__self:!0,__source:!0};function J(e,r,t){var n,o={},i=null,u=null;if(null!=r)for(n in void 0!==r.ref&&(u=r.ref),void 0!==r.key&&(i=\"\"+r.key),r)g.call(r,n)&&!b.hasOwnProperty(n)&&(o[n]=r[n]);var s=arguments.length-2;if(1===s)o.children=t;else if(1<s){for(var l=Array(s),c=0;c<s;c++)l[c]=arguments[c+2];o.children=l}if(e&&e.defaultProps)for(n in s=e.defaultProps,s)void 0===o[n]&&(o[n]=s[n]);return{$$typeof:a,type:e,key:i,ref:u,props:o,_owner:h.current}}function K(e,r){return{$$typeof:a,type:e.type,key:r,ref:e.ref,props:e.props,_owner:e._owner}}function L(e){return\"object\"===typeof e&&null!==e&&e.$$typeof===a}function escape(e){var r={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+e.replace(/[=:]/g,(function(e){return r[e]}))}var _=/\\/+/g;function N(e,r){return\"object\"===typeof e&&null!==e&&null!=e.key?escape(\"\"+e.key):r.toString(36)}function O(e,r,t,n,i){var u=typeof e;if(\"undefined\"===u||\"boolean\"===u)e=null;var s=!1;if(null===e)s=!0;else switch(u){case\"string\":case\"number\":s=!0;break;case\"object\":switch(e.$$typeof){case a:case o:s=!0}}if(s)return s=e,i=i(s),e=\"\"===n?\".\"+N(s,0):n,Array.isArray(i)?(t=\"\",null!=e&&(t=e.replace(_,\"$&/\")+\"/\"),O(i,r,t,\"\",(function(e){return e}))):null!=i&&(L(i)&&(i=K(i,t+(!i.key||s&&s.key===i.key?\"\":(\"\"+i.key).replace(_,\"$&/\")+\"/\")+e)),r.push(i)),1;s=0;n=\"\"===n?\".\":n+\":\";if(Array.isArray(e))for(var l=0;l<e.length;l++){u=e[l];var c=n+N(u,l);s+=O(u,r,t,c,i)}else if(c=y(e),\"function\"===typeof c)for(e=c.call(e),l=0;!(u=e.next()).done;)u=u.value,c=n+N(u,l++),s+=O(u,r,t,c,i);else if(\"object\"===u)throw r=\"\"+e,Error(z(31,\"[object Object]\"===r?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":r));return s}function P(e,r,t){if(null==e)return e;var n=[],a=0;O(e,n,\"\",\"\",(function(e){return r.call(t,e,a++)}));return n}function Q(e){if(-1===e._status){var r=e._result;r=r();e._status=0;e._result=r;r.then((function(r){0===e._status&&(r=r.default,e._status=1,e._result=r)}),(function(r){0===e._status&&(e._status=2,e._result=r)}))}if(1===e._status)return e._result;throw e._result}var w={current:null};function S(){var e=w.current;if(null===e)throw Error(z(321));return e}var k={ReactCurrentDispatcher:w,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:h,IsSomeRendererActing:{current:!1},assign:n};r.Children={map:P,forEach:function(e,r,t){P(e,(function(){r.apply(this,arguments)}),t)},count:function(e){var r=0;P(e,(function(){r++}));return r},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!L(e))throw Error(z(143));return e}};r.Component=C;r.PureComponent=E;r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=k;r.cloneElement=function(e,r,t){if(null===e||void 0===e)throw Error(z(267,e));var o=n({},e.props),i=e.key,u=e.ref,s=e._owner;if(null!=r){void 0!==r.ref&&(u=r.ref,s=h.current);void 0!==r.key&&(i=\"\"+r.key);if(e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in r)g.call(r,c)&&!b.hasOwnProperty(c)&&(o[c]=void 0===r[c]&&void 0!==l?l[c]:r[c])}var c=arguments.length-2;if(1===c)o.children=t;else if(1<c){l=Array(c);for(var f=0;f<c;f++)l[f]=arguments[f+2];o.children=l}return{$$typeof:a,type:e.type,key:i,ref:u,props:o,_owner:s}};r.createContext=function(e,r){void 0===r&&(r=null);e={$$typeof:u,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null};e.Provider={$$typeof:i,_context:e};return e.Consumer=e};r.createElement=J;r.createFactory=function(e){var r=J.bind(null,e);r.type=e;return r};r.createRef=function(){return{current:null}};r.forwardRef=function(e){return{$$typeof:s,render:e}};r.isValidElement=L;r.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:Q}};r.memo=function(e,r){return{$$typeof:l,type:e,compare:void 0===r?null:r}};r.useCallback=function(e,r){return S().useCallback(e,r)};r.useContext=function(e,r){return S().useContext(e,r)};r.useDebugValue=function(){};r.useEffect=function(e,r){return S().useEffect(e,r)};r.useImperativeHandle=function(e,r,t){return S().useImperativeHandle(e,r,t)};r.useLayoutEffect=function(e,r){return S().useLayoutEffect(e,r)};r.useMemo=function(e,r){return S().useMemo(e,r)};r.useReducer=function(e,r,t){return S().useReducer(e,r,t)};r.useRef=function(e){return S().useRef(e)};r.useState=function(e){return S().useState(e)};r.version=\"17.0.2\"},444:(e,r,t)=>{if(process.env.NODE_ENV===\"production\"){e.exports=t(696)}else{e.exports=t(857)}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var a=r[t]={exports:{}};var o=true;try{e[t](a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete r[t]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(444);module.exports=t})();", "explanation": "This code is using the Webpack plugin \"ncc-webpack-plugin\" to create a custom webpack configuration.\n\nHere's a simplified explanation:\n\n* It defines an object `r` that contains various React-related constants.\n* It exports two React components, `Component` and `PureComponent`.\n* It defines a utility function `cloneElement` that clones a React element with new props.\n* It redefines the `React.Children` methods to work with React components.\n\nIn essence, this code is setting up React for use within the project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/react/index.js", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'compiled/react/index.js':\n\nThis file sets up React for use in the project by:\n\n* Defining various constants\n* Exporting React components (Component and PureComponent)\n* Implementing utility functions (cloneElement) and redefining React.Children methods\n* Including a polyfill for Object.assign() to ensure browser compatibility"}
{"code": "(()=>{var t={9051:(t,e,s)=>{\"use strict\";const i=s(7147);const r=s(1017);const n=i.lchown?\"lchown\":\"chown\";const o=i.lchownSync?\"lchownSync\":\"chownSync\";const h=i.lchown&&!process.version.match(/v1[1-9]+\\./)&&!process.version.match(/v10\\.[6-9]/);const lchownSync=(t,e,s)=>{try{return i[o](t,e,s)}catch(t){if(t.code!==\"ENOENT\")throw t}};const chownSync=(t,e,s)=>{try{return i.chownSync(t,e,s)}catch(t){if(t.code!==\"ENOENT\")throw t}};const l=h?(t,e,s,r)=>n=>{if(!n||n.code!==\"EISDIR\")r(n);else i.chown(t,e,s,r)}:(t,e,s,i)=>i;const c=h?(t,e,s)=>{try{return lchownSync(t,e,s)}catch(i){if(i.code!==\"EISDIR\")throw i;chownSync(t,e,s)}}:(t,e,s)=>lchownSync(t,e,s);const a=process.version;let readdir=(t,e,s)=>i.readdir(t,e,s);let readdirSync=(t,e)=>i.readdirSync(t,e);if(/^v4\\./.test(a))readdir=(t,e,s)=>i.readdir(t,s);const chown=(t,e,s,r)=>{i[n](t,e,s,l(t,e,s,(t=>{r(t&&t.code!==\"ENOENT\"?t:null)})))};const chownrKid=(t,e,s,n,o)=>{if(typeof e===\"string\")return i.lstat(r.resolve(t,e),((i,r)=>{if(i)return o(i.code!==\"ENOENT\"?i:null);r.name=e;chownrKid(t,r,s,n,o)}));if(e.isDirectory()){chownr(r.resolve(t,e.name),s,n,(i=>{if(i)return o(i);const h=r.resolve(t,e.name);chown(h,s,n,o)}))}else{const i=r.resolve(t,e.name);chown(i,s,n,o)}};const chownr=(t,e,s,i)=>{readdir(t,{withFileTypes:true},((r,n)=>{if(r){if(r.code===\"ENOENT\")return i();else if(r.code!==\"ENOTDIR\"&&r.code!==\"ENOTSUP\")return i(r)}if(r||!n.length)return chown(t,e,s,i);let o=n.length;let h=null;const then=r=>{if(h)return;if(r)return i(h=r);if(--o===0)return chown(t,e,s,i)};n.forEach((i=>chownrKid(t,i,e,s,then)))}))};const chownrKidSync=(t,e,s,n)=>{if(typeof e===\"string\"){try{const s=i.lstatSync(r.resolve(t,e));s.name=e;e=s}catch(t){if(t.code===\"ENOENT\")return;else throw t}}if(e.isDirectory())chownrSync(r.resolve(t,e.name),s,n);c(r.resolve(t,e.name),s,n)};const chownrSync=(t,e,s)=>{let i;try{i=readdirSync(t,{withFileTypes:true})}catch(i){if(i.code===\"ENOENT\")return;else if(i.code===\"ENOTDIR\"||i.code===\"ENOTSUP\")return c(t,e,s);else throw i}if(i&&i.length)i.forEach((i=>chownrKidSync(t,i,e,s)));return c(t,e,s)};t.exports=chownr;chownr.sync=chownrSync},7714:(t,e,s)=>{\"use strict\";const i=s(2505);const r=s(2361).EventEmitter;const n=s(7147);let o=n.writev;if(!o){const t=process.binding(\"fs\");const e=t.FSReqWrap||t.FSReqCallback;o=(s,i,r,n)=>{const done=(t,e)=>n(t,e,i);const o=new e;o.oncomplete=done;t.writeBuffers(s,i,r,o)}}const h=Symbol(\"_autoClose\");const l=Symbol(\"_close\");const c=Symbol(\"_ended\");const a=Symbol(\"_fd\");const f=Symbol(\"_finished\");const u=Symbol(\"_flags\");const d=Symbol(\"_flush\");const p=Symbol(\"_handleChunk\");const m=Symbol(\"_makeBuf\");const y=Symbol(\"_mode\");const b=Symbol(\"_needDrain\");const w=Symbol(\"_onerror\");const E=Symbol(\"_onopen\");const g=Symbol(\"_onread\");const S=Symbol(\"_onwrite\");const _=Symbol(\"_open\");const R=Symbol(\"_path\");const O=Symbol(\"_pos\");const v=Symbol(\"_queue\");const k=Symbol(\"_read\");const T=Symbol(\"_readSize\");const L=Symbol(\"_reading\");const x=Symbol(\"_remain\");const A=Symbol(\"_size\");const D=Symbol(\"_write\");const I=Symbol(\"_writing\");const N=Symbol(\"_defaultFlag\");const B=Symbol(\"_errored\");class ReadStream extends i{constructor(t,e){e=e||{};super(e);this.readable=true;this.writable=false;if(typeof t!==\"string\")throw new TypeError(\"path must be a string\");this[B]=false;this[a]=typeof e.fd===\"number\"?e.fd:null;this[R]=t;this[T]=e.readSize||16*1024*1024;this[L]=false;this[A]=typeof e.size===\"number\"?e.size:Infinity;this[x]=this[A];this[h]=typeof e.autoClose===\"boolean\"?e.autoClose:true;if(typeof this[a]===\"number\")this[k]();else this[_]()}get fd(){return this[a]}get path(){return this[R]}write(){throw new TypeError(\"this is a readable stream\")}end(){throw new TypeError(\"this is a readable stream\")}[_](){n.open(this[R],\"r\",((t,e)=>this[E](t,e)))}[E](t,e){if(t)this[w](t);else{this[a]=e;this.emit(\"open\",e);this[k]()}}[m](){return Buffer.allocUnsafe(Math.min(this[T],this[x]))}[k](){if(!this[L]){this[L]=true;const t=this[m]();if(t.length===0)return process.nextTick((()=>this[g](null,0,t)));n.read(this[a],t,0,t.length,null,((t,e,s)=>this[g](t,e,s)))}}[g](t,e,s){this[L]=false;if(t)this[w](t);else if(this[p](e,s))this[k]()}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;n.close(t,(t=>t?this.emit(\"error\",t):this.emit(\"close\")))}}[w](t){this[L]=true;this[l]();this.emit(\"error\",t)}[p](t,e){let s=false;this[x]-=t;if(t>0)s=super.write(t<e.length?e.slice(0,t):e);if(t===0||this[x]<=0){s=false;this[l]();super.end()}return s}emit(t,e){switch(t){case\"prefinish\":case\"finish\":break;case\"drain\":if(typeof this[a]===\"number\")this[k]();break;case\"error\":if(this[B])return;this[B]=true;return super.emit(t,e);default:return super.emit(t,e)}}}class ReadStreamSync extends ReadStream{[_](){let t=true;try{this[E](null,n.openSync(this[R],\"r\"));t=false}finally{if(t)this[l]()}}[k](){let t=true;try{if(!this[L]){this[L]=true;do{const t=this[m]();const e=t.length===0?0:n.readSync(this[a],t,0,t.length,null);if(!this[p](e,t))break}while(true);this[L]=false}t=false}finally{if(t)this[l]()}}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;n.closeSync(t);this.emit(\"close\")}}}class WriteStream extends r{constructor(t,e){e=e||{};super(e);this.readable=false;this.writable=true;this[B]=false;this[I]=false;this[c]=false;this[b]=false;this[v]=[];this[R]=t;this[a]=typeof e.fd===\"number\"?e.fd:null;this[y]=e.mode===undefined?438:e.mode;this[O]=typeof e.start===\"number\"?e.start:null;this[h]=typeof e.autoClose===\"boolean\"?e.autoClose:true;const s=this[O]!==null?\"r+\":\"w\";this[N]=e.flags===undefined;this[u]=this[N]?s:e.flags;if(this[a]===null)this[_]()}emit(t,e){if(t===\"error\"){if(this[B])return;this[B]=true}return super.emit(t,e)}get fd(){return this[a]}get path(){return this[R]}[w](t){this[l]();this[I]=true;this.emit(\"error\",t)}[_](){n.open(this[R],this[u],this[y],((t,e)=>this[E](t,e)))}[E](t,e){if(this[N]&&this[u]===\"r+\"&&t&&t.code===\"ENOENT\"){this[u]=\"w\";this[_]()}else if(t)this[w](t);else{this[a]=e;this.emit(\"open\",e);this[d]()}}end(t,e){if(t)this.write(t,e);this[c]=true;if(!this[I]&&!this[v].length&&typeof this[a]===\"number\")this[S](null,0);return this}write(t,e){if(typeof t===\"string\")t=Buffer.from(t,e);if(this[c]){this.emit(\"error\",new Error(\"write() after end()\"));return false}if(this[a]===null||this[I]||this[v].length){this[v].push(t);this[b]=true;return false}this[I]=true;this[D](t);return true}[D](t){n.write(this[a],t,0,t.length,this[O],((t,e)=>this[S](t,e)))}[S](t,e){if(t)this[w](t);else{if(this[O]!==null)this[O]+=e;if(this[v].length)this[d]();else{this[I]=false;if(this[c]&&!this[f]){this[f]=true;this[l]();this.emit(\"finish\")}else if(this[b]){this[b]=false;this.emit(\"drain\")}}}}[d](){if(this[v].length===0){if(this[c])this[S](null,0)}else if(this[v].length===1)this[D](this[v].pop());else{const t=this[v];this[v]=[];o(this[a],t,this[O],((t,e)=>this[S](t,e)))}}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;n.close(t,(t=>t?this.emit(\"error\",t):this.emit(\"close\")))}}}class WriteStreamSync extends WriteStream{[_](){let t;if(this[N]&&this[u]===\"r+\"){try{t=n.openSync(this[R],this[u],this[y])}catch(t){if(t.code===\"ENOENT\"){this[u]=\"w\";return this[_]()}else throw t}}else t=n.openSync(this[R],this[u],this[y]);this[E](null,t)}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;n.closeSync(t);this.emit(\"close\")}}[D](t){let e=true;try{this[S](null,n.writeSync(this[a],t,0,t.length,this[O]));e=false}finally{if(e)try{this[l]()}catch(t){}}}}e.ReadStream=ReadStream;e.ReadStreamSync=ReadStreamSync;e.WriteStream=WriteStream;e.WriteStreamSync=WriteStreamSync},2505:(t,e,s)=>{\"use strict\";const i=typeof process===\"object\"&&process?process:{stdout:null,stderr:null};const r=s(2361);const n=s(2781);const o=s(1576).StringDecoder;const h=Symbol(\"EOF\");const l=Symbol(\"maybeEmitEnd\");const c=Symbol(\"emittedEnd\");const a=Symbol(\"emittingEnd\");const f=Symbol(\"emittedError\");const u=Symbol(\"closed\");const d=Symbol(\"read\");const p=Symbol(\"flush\");const m=Symbol(\"flushChunk\");const y=Symbol(\"encoding\");const b=Symbol(\"decoder\");const w=Symbol(\"flowing\");const E=Symbol(\"paused\");const g=Symbol(\"resume\");const S=Symbol(\"bufferLength\");const _=Symbol(\"bufferPush\");const R=Symbol(\"bufferShift\");const O=Symbol(\"objectMode\");const v=Symbol(\"destroyed\");const k=Symbol(\"emitData\");const T=Symbol(\"emitEnd\");const L=Symbol(\"emitEnd2\");const x=Symbol(\"async\");const defer=t=>Promise.resolve().then(t);const A=global._MP_NO_ITERATOR_SYMBOLS_!==\"1\";const D=A&&Symbol.asyncIterator||Symbol(\"asyncIterator not implemented\");const I=A&&Symbol.iterator||Symbol(\"iterator not implemented\");const isEndish=t=>t===\"end\"||t===\"finish\"||t===\"prefinish\";const isArrayBuffer=t=>t instanceof ArrayBuffer||typeof t===\"object\"&&t.constructor&&t.constructor.name===\"ArrayBuffer\"&&t.byteLength>=0;const isArrayBufferView=t=>!Buffer.isBuffer(t)&&ArrayBuffer.isView(t);class Pipe{constructor(t,e,s){this.src=t;this.dest=e;this.opts=s;this.ondrain=()=>t[g]();e.on(\"drain\",this.ondrain)}unpipe(){this.dest.removeListener(\"drain\",this.ondrain)}proxyErrors(){}end(){this.unpipe();if(this.opts.end)this.dest.end()}}class PipeProxyErrors extends Pipe{unpipe(){this.src.removeListener(\"error\",this.proxyErrors);super.unpipe()}constructor(t,e,s){super(t,e,s);this.proxyErrors=t=>e.emit(\"error\",t);t.on(\"error\",this.proxyErrors)}}t.exports=class Minipass extends n{constructor(t){super();this[w]=false;this[E]=false;this.pipes=[];this.buffer=[];this[O]=t&&t.objectMode||false;if(this[O])this[y]=null;else this[y]=t&&t.encoding||null;if(this[y]===\"buffer\")this[y]=null;this[x]=t&&!!t.async||false;this[b]=this[y]?new o(this[y]):null;this[h]=false;this[c]=false;this[a]=false;this[u]=false;this[f]=null;this.writable=true;this.readable=true;this[S]=0;this[v]=false}get bufferLength(){return this[S]}get encoding(){return this[y]}set encoding(t){if(this[O])throw new Error(\"cannot set encoding in objectMode\");if(this[y]&&t!==this[y]&&(this[b]&&this[b].lastNeed||this[S]))throw new Error(\"cannot change encoding\");if(this[y]!==t){this[b]=t?new o(t):null;if(this.buffer.length)this.buffer=this.buffer.map((t=>this[b].write(t)))}this[y]=t}setEncoding(t){this.encoding=t}get objectMode(){return this[O]}set objectMode(t){this[O]=this[O]||!!t}get[\"async\"](){return this[x]}set[\"async\"](t){this[x]=this[x]||!!t}write(t,e,s){if(this[h])throw new Error(\"write after end\");if(this[v]){this.emit(\"error\",Object.assign(new Error(\"Cannot call write after a stream was destroyed\"),{code:\"ERR_STREAM_DESTROYED\"}));return true}if(typeof e===\"function\")s=e,e=\"utf8\";if(!e)e=\"utf8\";const i=this[x]?defer:t=>t();if(!this[O]&&!Buffer.isBuffer(t)){if(isArrayBufferView(t))t=Buffer.from(t.buffer,t.byteOffset,t.byteLength);else if(isArrayBuffer(t))t=Buffer.from(t);else if(typeof t!==\"string\")this.objectMode=true}if(this[O]){if(this.flowing&&this[S]!==0)this[p](true);if(this.flowing)this.emit(\"data\",t);else this[_](t);if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(!t.length){if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(typeof t===\"string\"&&!(e===this[y]&&!this[b].lastNeed)){t=Buffer.from(t,e)}if(Buffer.isBuffer(t)&&this[y])t=this[b].write(t);if(this.flowing&&this[S]!==0)this[p](true);if(this.flowing)this.emit(\"data\",t);else this[_](t);if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}read(t){if(this[v])return null;if(this[S]===0||t===0||t>this[S]){this[l]();return null}if(this[O])t=null;if(this.buffer.length>1&&!this[O]){if(this.encoding)this.buffer=[this.buffer.join(\"\")];else this.buffer=[Buffer.concat(this.buffer,this[S])]}const e=this[d](t||null,this.buffer[0]);this[l]();return e}[d](t,e){if(t===e.length||t===null)this[R]();else{this.buffer[0]=e.slice(t);e=e.slice(0,t);this[S]-=t}this.emit(\"data\",e);if(!this.buffer.length&&!this[h])this.emit(\"drain\");return e}end(t,e,s){if(typeof t===\"function\")s=t,t=null;if(typeof e===\"function\")s=e,e=\"utf8\";if(t)this.write(t,e);if(s)this.once(\"end\",s);this[h]=true;this.writable=false;if(this.flowing||!this[E])this[l]();return this}[g](){if(this[v])return;this[E]=false;this[w]=true;this.emit(\"resume\");if(this.buffer.length)this[p]();else if(this[h])this[l]();else this.emit(\"drain\")}resume(){return this[g]()}pause(){this[w]=false;this[E]=true}get destroyed(){return this[v]}get flowing(){return this[w]}get paused(){return this[E]}[_](t){if(this[O])this[S]+=1;else this[S]+=t.length;this.buffer.push(t)}[R](){if(this.buffer.length){if(this[O])this[S]-=1;else this[S]-=this.buffer[0].length}return this.buffer.shift()}[p](t){do{}while(this[m](this[R]()));if(!t&&!this.buffer.length&&!this[h])this.emit(\"drain\")}[m](t){return t?(this.emit(\"data\",t),this.flowing):false}pipe(t,e){if(this[v])return;const s=this[c];e=e||{};if(t===i.stdout||t===i.stderr)e.end=false;else e.end=e.end!==false;e.proxyErrors=!!e.proxyErrors;if(s){if(e.end)t.end()}else{this.pipes.push(!e.proxyErrors?new Pipe(this,t,e):new PipeProxyErrors(this,t,e));if(this[x])defer((()=>this[g]()));else this[g]()}return t}unpipe(t){const e=this.pipes.find((e=>e.dest===t));if(e){this.pipes.splice(this.pipes.indexOf(e),1);e.unpipe()}}addListener(t,e){return this.on(t,e)}on(t,e){const s=super.on(t,e);if(t===\"data\"&&!this.pipes.length&&!this.flowing)this[g]();else if(t===\"readable\"&&this[S]!==0)super.emit(\"readable\");else if(isEndish(t)&&this[c]){super.emit(t);this.removeAllListeners(t)}else if(t===\"error\"&&this[f]){if(this[x])defer((()=>e.call(this,this[f])));else e.call(this,this[f])}return s}get emittedEnd(){return this[c]}[l](){if(!this[a]&&!this[c]&&!this[v]&&this.buffer.length===0&&this[h]){this[a]=true;this.emit(\"end\");this.emit(\"prefinish\");this.emit(\"finish\");if(this[u])this.emit(\"close\");this[a]=false}}emit(t,e,...s){if(t!==\"error\"&&t!==\"close\"&&t!==v&&this[v])return;else if(t===\"data\"){return!e?false:this[x]?defer((()=>this[k](e))):this[k](e)}else if(t===\"end\"){return this[T]()}else if(t===\"close\"){this[u]=true;if(!this[c]&&!this[v])return;const t=super.emit(\"close\");this.removeAllListeners(\"close\");return t}else if(t===\"error\"){this[f]=e;const t=super.emit(\"error\",e);this[l]();return t}else if(t===\"resume\"){const t=super.emit(\"resume\");this[l]();return t}else if(t===\"finish\"||t===\"prefinish\"){const e=super.emit(t);this.removeAllListeners(t);return e}const i=super.emit(t,e,...s);this[l]();return i}[k](t){for(const e of this.pipes){if(e.dest.write(t)===false)this.pause()}const e=super.emit(\"data\",t);this[l]();return e}[T](){if(this[c])return;this[c]=true;this.readable=false;if(this[x])defer((()=>this[L]()));else this[L]()}[L](){if(this[b]){const t=this[b].end();if(t){for(const e of this.pipes){e.dest.write(t)}super.emit(\"data\",t)}}for(const t of this.pipes){t.end()}const t=super.emit(\"end\");this.removeAllListeners(\"end\");return t}collect(){const t=[];if(!this[O])t.dataLength=0;const e=this.promise();this.on(\"data\",(e=>{t.push(e);if(!this[O])t.dataLength+=e.length}));return e.then((()=>t))}concat(){return this[O]?Promise.reject(new Error(\"cannot concat in objectMode\")):this.collect().then((t=>this[O]?Promise.reject(new Error(\"cannot concat in objectMode\")):this[y]?t.join(\"\"):Buffer.concat(t,t.dataLength)))}promise(){return new Promise(((t,e)=>{this.on(v,(()=>e(new Error(\"stream destroyed\"))));this.on(\"error\",(t=>e(t)));this.on(\"end\",(()=>t()))}))}[D](){const next=()=>{const t=this.read();if(t!==null)return Promise.resolve({done:false,value:t});if(this[h])return Promise.resolve({done:true});let e=null;let s=null;const onerr=t=>{this.removeListener(\"data\",ondata);this.removeListener(\"end\",onend);s(t)};const ondata=t=>{this.removeListener(\"error\",onerr);this.removeListener(\"end\",onend);this.pause();e({value:t,done:!!this[h]})};const onend=()=>{this.removeListener(\"error\",onerr);this.removeListener(\"data\",ondata);e({done:true})};const ondestroy=()=>onerr(new Error(\"stream destroyed\"));return new Promise(((t,i)=>{s=i;e=t;this.once(v,ondestroy);this.once(\"error\",onerr);this.once(\"end\",onend);this.once(\"data\",ondata)}))};return{next:next}}[I](){const next=()=>{const t=this.read();const e=t===null;return{value:t,done:e}};return{next:next}}destroy(t){if(this[v]){if(t)this.emit(\"error\",t);else this.emit(v);return this}this[v]=true;this.buffer.length=0;this[S]=0;if(typeof this.close===\"function\"&&!this[u])this.close();if(t)this.emit(\"error\",t);else this.emit(v);return this}static isStream(t){return!!t&&(t instanceof Minipass||t instanceof n||t instanceof r&&(typeof t.pipe===\"function\"||typeof t.write===\"function\"&&typeof t.end===\"function\"))}}},6769:(t,e,s)=>{const i=s(9796).constants||{ZLIB_VERNUM:4736};t.exports=Object.freeze(Object.assign(Object.create(null),{Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_VERSION_ERROR:-6,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,DEFLATE:1,INFLATE:2,GZIP:3,GUNZIP:4,DEFLATERAW:5,INFLATERAW:6,UNZIP:7,BROTLI_DECODE:8,BROTLI_ENCODE:9,Z_MIN_WINDOWBITS:8,Z_MAX_WINDOWBITS:15,Z_DEFAULT_WINDOWBITS:15,Z_MIN_CHUNK:64,Z_MAX_CHUNK:Infinity,Z_DEFAULT_CHUNK:16384,Z_MIN_MEMLEVEL:1,Z_MAX_MEMLEVEL:9,Z_DEFAULT_MEMLEVEL:8,Z_MIN_LEVEL:-1,Z_MAX_LEVEL:9,Z_DEFAULT_LEVEL:-1,BROTLI_OPERATION_PROCESS:0,BROTLI_OPERATION_FLUSH:1,BROTLI_OPERATION_FINISH:2,BROTLI_OPERATION_EMIT_METADATA:3,BROTLI_MODE_GENERIC:0,BROTLI_MODE_TEXT:1,BROTLI_MODE_FONT:2,BROTLI_DEFAULT_MODE:0,BROTLI_MIN_QUALITY:0,BROTLI_MAX_QUALITY:11,BROTLI_DEFAULT_QUALITY:11,BROTLI_MIN_WINDOW_BITS:10,BROTLI_MAX_WINDOW_BITS:24,BROTLI_LARGE_MAX_WINDOW_BITS:30,BROTLI_DEFAULT_WINDOW:22,BROTLI_MIN_INPUT_BLOCK_BITS:16,BROTLI_MAX_INPUT_BLOCK_BITS:24,BROTLI_PARAM_MODE:0,BROTLI_PARAM_QUALITY:1,BROTLI_PARAM_LGWIN:2,BROTLI_PARAM_LGBLOCK:3,BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING:4,BROTLI_PARAM_SIZE_HINT:5,BROTLI_PARAM_LARGE_WINDOW:6,BROTLI_PARAM_NPOSTFIX:7,BROTLI_PARAM_NDIRECT:8,BROTLI_DECODER_RESULT_ERROR:0,BROTLI_DECODER_RESULT_SUCCESS:1,BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT:2,BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT:3,BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION:0,BROTLI_DECODER_PARAM_LARGE_WINDOW:1,BROTLI_DECODER_NO_ERROR:0,BROTLI_DECODER_SUCCESS:1,BROTLI_DECODER_NEEDS_MORE_INPUT:2,BROTLI_DECODER_NEEDS_MORE_OUTPUT:3,BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE:-1,BROTLI_DECODER_ERROR_FORMAT_RESERVED:-2,BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE:-3,BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET:-4,BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME:-5,BROTLI_DECODER_ERROR_FORMAT_CL_SPACE:-6,BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE:-7,BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT:-8,BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1:-9,BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2:-10,BROTLI_DECODER_ERROR_FORMAT_TRANSFORM:-11,BROTLI_DECODER_ERROR_FORMAT_DICTIONARY:-12,BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS:-13,BROTLI_DECODER_ERROR_FORMAT_PADDING_1:-14,BROTLI_DECODER_ERROR_FORMAT_PADDING_2:-15,BROTLI_DECODER_ERROR_FORMAT_DISTANCE:-16,BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET:-19,BROTLI_DECODER_ERROR_INVALID_ARGUMENTS:-20,BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES:-21,BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS:-22,BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP:-25,BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1:-26,BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2:-27,BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES:-30,BROTLI_DECODER_ERROR_UNREACHABLE:-31},i))},3486:(t,e,s)=>{\"use strict\";const i=s(9491);const r=s(4300).Buffer;const n=s(9796);const o=e.constants=s(6769);const h=s(7557);const l=r.concat;const c=Symbol(\"_superWrite\");class ZlibError extends Error{constructor(t){super(\"zlib: \"+t.message);this.code=t.code;this.errno=t.errno;if(!this.code)this.code=\"ZLIB_ERROR\";this.message=\"zlib: \"+t.message;Error.captureStackTrace(this,this.constructor)}get name(){return\"ZlibError\"}}const a=Symbol(\"opts\");const f=Symbol(\"flushFlag\");const u=Symbol(\"finishFlushFlag\");const d=Symbol(\"fullFlushFlag\");const p=Symbol(\"handle\");const m=Symbol(\"onError\");const y=Symbol(\"sawError\");const b=Symbol(\"level\");const w=Symbol(\"strategy\");const E=Symbol(\"ended\");const g=Symbol(\"_defaultFullFlush\");class ZlibBase extends h{constructor(t,e){if(!t||typeof t!==\"object\")throw new TypeError(\"invalid options for ZlibBase constructor\");super(t);this[y]=false;this[E]=false;this[a]=t;this[f]=t.flush;this[u]=t.finishFlush;try{this[p]=new n[e](t)}catch(t){throw new ZlibError(t)}this[m]=t=>{if(this[y])return;this[y]=true;this.close();this.emit(\"error\",t)};this[p].on(\"error\",(t=>this[m](new ZlibError(t))));this.once(\"end\",(()=>this.close))}close(){if(this[p]){this[p].close();this[p]=null;this.emit(\"close\")}}reset(){if(!this[y]){i(this[p],\"zlib binding closed\");return this[p].reset()}}flush(t){if(this.ended)return;if(typeof t!==\"number\")t=this[d];this.write(Object.assign(r.alloc(0),{[f]:t}))}end(t,e,s){if(t)this.write(t,e);this.flush(this[u]);this[E]=true;return super.end(null,null,s)}get ended(){return this[E]}write(t,e,s){if(typeof e===\"function\")s=e,e=\"utf8\";if(typeof t===\"string\")t=r.from(t,e);if(this[y])return;i(this[p],\"zlib binding closed\");const n=this[p]._handle;const o=n.close;n.close=()=>{};const h=this[p].close;this[p].close=()=>{};r.concat=t=>t;let a;try{const e=typeof t[f]===\"number\"?t[f]:this[f];a=this[p]._processChunk(t,e);r.concat=l}catch(t){r.concat=l;this[m](new ZlibError(t))}finally{if(this[p]){this[p]._handle=n;n.close=o;this[p].close=h;this[p].removeAllListeners(\"error\")}}if(this[p])this[p].on(\"error\",(t=>this[m](new ZlibError(t))));let u;if(a){if(Array.isArray(a)&&a.length>0){u=this[c](r.from(a[0]));for(let t=1;t<a.length;t++){u=this[c](a[t])}}else{u=this[c](r.from(a))}}if(s)s();return u}[c](t){return super.write(t)}}class Zlib extends ZlibBase{constructor(t,e){t=t||{};t.flush=t.flush||o.Z_NO_FLUSH;t.finishFlush=t.finishFlush||o.Z_FINISH;super(t,e);this[d]=o.Z_FULL_FLUSH;this[b]=t.level;this[w]=t.strategy}params(t,e){if(this[y])return;if(!this[p])throw new Error(\"cannot switch params when binding is closed\");if(!this[p].params)throw new Error(\"not supported in this implementation\");if(this[b]!==t||this[w]!==e){this.flush(o.Z_SYNC_FLUSH);i(this[p],\"zlib binding closed\");const s=this[p].flush;this[p].flush=(t,e)=>{this.flush(t);e()};try{this[p].params(t,e)}finally{this[p].flush=s}if(this[p]){this[b]=t;this[w]=e}}}}class Deflate extends Zlib{constructor(t){super(t,\"Deflate\")}}class Inflate extends Zlib{constructor(t){super(t,\"Inflate\")}}const S=Symbol(\"_portable\");class Gzip extends Zlib{constructor(t){super(t,\"Gzip\");this[S]=t&&!!t.portable}[c](t){if(!this[S])return super[c](t);this[S]=false;t[9]=255;return super[c](t)}}class Gunzip extends Zlib{constructor(t){super(t,\"Gunzip\")}}class DeflateRaw extends Zlib{constructor(t){super(t,\"DeflateRaw\")}}class InflateRaw extends Zlib{constructor(t){super(t,\"InflateRaw\")}}class Unzip extends Zlib{constructor(t){super(t,\"Unzip\")}}class Brotli extends ZlibBase{constructor(t,e){t=t||{};t.flush=t.flush||o.BROTLI_OPERATION_PROCESS;t.finishFlush=t.finishFlush||o.BROTLI_OPERATION_FINISH;super(t,e);this[d]=o.BROTLI_OPERATION_FLUSH}}class BrotliCompress extends Brotli{constructor(t){super(t,\"BrotliCompress\")}}class BrotliDecompress extends Brotli{constructor(t){super(t,\"BrotliDecompress\")}}e.Deflate=Deflate;e.Inflate=Inflate;e.Gzip=Gzip;e.Gunzip=Gunzip;e.DeflateRaw=DeflateRaw;e.InflateRaw=InflateRaw;e.Unzip=Unzip;if(typeof n.BrotliCompress===\"function\"){e.BrotliCompress=BrotliCompress;e.BrotliDecompress=BrotliDecompress}else{e.BrotliCompress=e.BrotliDecompress=class{constructor(){throw new Error(\"Brotli is not supported in this version of Node.js\")}}}},7557:(t,e,s)=>{\"use strict\";const i=typeof process===\"object\"&&process?process:{stdout:null,stderr:null};const r=s(2361);const n=s(2781);const o=s(1576).StringDecoder;const h=Symbol(\"EOF\");const l=Symbol(\"maybeEmitEnd\");const c=Symbol(\"emittedEnd\");const a=Symbol(\"emittingEnd\");const f=Symbol(\"emittedError\");const u=Symbol(\"closed\");const d=Symbol(\"read\");const p=Symbol(\"flush\");const m=Symbol(\"flushChunk\");const y=Symbol(\"encoding\");const b=Symbol(\"decoder\");const w=Symbol(\"flowing\");const E=Symbol(\"paused\");const g=Symbol(\"resume\");const S=Symbol(\"bufferLength\");const _=Symbol(\"bufferPush\");const R=Symbol(\"bufferShift\");const O=Symbol(\"objectMode\");const v=Symbol(\"destroyed\");const k=Symbol(\"emitData\");const T=Symbol(\"emitEnd\");const L=Symbol(\"emitEnd2\");const x=Symbol(\"async\");const defer=t=>Promise.resolve().then(t);const A=global._MP_NO_ITERATOR_SYMBOLS_!==\"1\";const D=A&&Symbol.asyncIterator||Symbol(\"asyncIterator not implemented\");const I=A&&Symbol.iterator||Symbol(\"iterator not implemented\");const isEndish=t=>t===\"end\"||t===\"finish\"||t===\"prefinish\";const isArrayBuffer=t=>t instanceof ArrayBuffer||typeof t===\"object\"&&t.constructor&&t.constructor.name===\"ArrayBuffer\"&&t.byteLength>=0;const isArrayBufferView=t=>!Buffer.isBuffer(t)&&ArrayBuffer.isView(t);class Pipe{constructor(t,e,s){this.src=t;this.dest=e;this.opts=s;this.ondrain=()=>t[g]();e.on(\"drain\",this.ondrain)}unpipe(){this.dest.removeListener(\"drain\",this.ondrain)}proxyErrors(){}end(){this.unpipe();if(this.opts.end)this.dest.end()}}class PipeProxyErrors extends Pipe{unpipe(){this.src.removeListener(\"error\",this.proxyErrors);super.unpipe()}constructor(t,e,s){super(t,e,s);this.proxyErrors=t=>e.emit(\"error\",t);t.on(\"error\",this.proxyErrors)}}t.exports=class Minipass extends n{constructor(t){super();this[w]=false;this[E]=false;this.pipes=[];this.buffer=[];this[O]=t&&t.objectMode||false;if(this[O])this[y]=null;else this[y]=t&&t.encoding||null;if(this[y]===\"buffer\")this[y]=null;this[x]=t&&!!t.async||false;this[b]=this[y]?new o(this[y]):null;this[h]=false;this[c]=false;this[a]=false;this[u]=false;this[f]=null;this.writable=true;this.readable=true;this[S]=0;this[v]=false}get bufferLength(){return this[S]}get encoding(){return this[y]}set encoding(t){if(this[O])throw new Error(\"cannot set encoding in objectMode\");if(this[y]&&t!==this[y]&&(this[b]&&this[b].lastNeed||this[S]))throw new Error(\"cannot change encoding\");if(this[y]!==t){this[b]=t?new o(t):null;if(this.buffer.length)this.buffer=this.buffer.map((t=>this[b].write(t)))}this[y]=t}setEncoding(t){this.encoding=t}get objectMode(){return this[O]}set objectMode(t){this[O]=this[O]||!!t}get[\"async\"](){return this[x]}set[\"async\"](t){this[x]=this[x]||!!t}write(t,e,s){if(this[h])throw new Error(\"write after end\");if(this[v]){this.emit(\"error\",Object.assign(new Error(\"Cannot call write after a stream was destroyed\"),{code:\"ERR_STREAM_DESTROYED\"}));return true}if(typeof e===\"function\")s=e,e=\"utf8\";if(!e)e=\"utf8\";const i=this[x]?defer:t=>t();if(!this[O]&&!Buffer.isBuffer(t)){if(isArrayBufferView(t))t=Buffer.from(t.buffer,t.byteOffset,t.byteLength);else if(isArrayBuffer(t))t=Buffer.from(t);else if(typeof t!==\"string\")this.objectMode=true}if(this[O]){if(this.flowing&&this[S]!==0)this[p](true);if(this.flowing)this.emit(\"data\",t);else this[_](t);if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(!t.length){if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(typeof t===\"string\"&&!(e===this[y]&&!this[b].lastNeed)){t=Buffer.from(t,e)}if(Buffer.isBuffer(t)&&this[y])t=this[b].write(t);if(this.flowing&&this[S]!==0)this[p](true);if(this.flowing)this.emit(\"data\",t);else this[_](t);if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}read(t){if(this[v])return null;if(this[S]===0||t===0||t>this[S]){this[l]();return null}if(this[O])t=null;if(this.buffer.length>1&&!this[O]){if(this.encoding)this.buffer=[this.buffer.join(\"\")];else this.buffer=[Buffer.concat(this.buffer,this[S])]}const e=this[d](t||null,this.buffer[0]);this[l]();return e}[d](t,e){if(t===e.length||t===null)this[R]();else{this.buffer[0]=e.slice(t);e=e.slice(0,t);this[S]-=t}this.emit(\"data\",e);if(!this.buffer.length&&!this[h])this.emit(\"drain\");return e}end(t,e,s){if(typeof t===\"function\")s=t,t=null;if(typeof e===\"function\")s=e,e=\"utf8\";if(t)this.write(t,e);if(s)this.once(\"end\",s);this[h]=true;this.writable=false;if(this.flowing||!this[E])this[l]();return this}[g](){if(this[v])return;this[E]=false;this[w]=true;this.emit(\"resume\");if(this.buffer.length)this[p]();else if(this[h])this[l]();else this.emit(\"drain\")}resume(){return this[g]()}pause(){this[w]=false;this[E]=true}get destroyed(){return this[v]}get flowing(){return this[w]}get paused(){return this[E]}[_](t){if(this[O])this[S]+=1;else this[S]+=t.length;this.buffer.push(t)}[R](){if(this.buffer.length){if(this[O])this[S]-=1;else this[S]-=this.buffer[0].length}return this.buffer.shift()}[p](t){do{}while(this[m](this[R]()));if(!t&&!this.buffer.length&&!this[h])this.emit(\"drain\")}[m](t){return t?(this.emit(\"data\",t),this.flowing):false}pipe(t,e){if(this[v])return;const s=this[c];e=e||{};if(t===i.stdout||t===i.stderr)e.end=false;else e.end=e.end!==false;e.proxyErrors=!!e.proxyErrors;if(s){if(e.end)t.end()}else{this.pipes.push(!e.proxyErrors?new Pipe(this,t,e):new PipeProxyErrors(this,t,e));if(this[x])defer((()=>this[g]()));else this[g]()}return t}unpipe(t){const e=this.pipes.find((e=>e.dest===t));if(e){this.pipes.splice(this.pipes.indexOf(e),1);e.unpipe()}}addListener(t,e){return this.on(t,e)}on(t,e){const s=super.on(t,e);if(t===\"data\"&&!this.pipes.length&&!this.flowing)this[g]();else if(t===\"readable\"&&this[S]!==0)super.emit(\"readable\");else if(isEndish(t)&&this[c]){super.emit(t);this.removeAllListeners(t)}else if(t===\"error\"&&this[f]){if(this[x])defer((()=>e.call(this,this[f])));else e.call(this,this[f])}return s}get emittedEnd(){return this[c]}[l](){if(!this[a]&&!this[c]&&!this[v]&&this.buffer.length===0&&this[h]){this[a]=true;this.emit(\"end\");this.emit(\"prefinish\");this.emit(\"finish\");if(this[u])this.emit(\"close\");this[a]=false}}emit(t,e,...s){if(t!==\"error\"&&t!==\"close\"&&t!==v&&this[v])return;else if(t===\"data\"){return!e?false:this[x]?defer((()=>this[k](e))):this[k](e)}else if(t===\"end\"){return this[T]()}else if(t===\"close\"){this[u]=true;if(!this[c]&&!this[v])return;const t=super.emit(\"close\");this.removeAllListeners(\"close\");return t}else if(t===\"error\"){this[f]=e;const t=super.emit(\"error\",e);this[l]();return t}else if(t===\"resume\"){const t=super.emit(\"resume\");this[l]();return t}else if(t===\"finish\"||t===\"prefinish\"){const e=super.emit(t);this.removeAllListeners(t);return e}const i=super.emit(t,e,...s);this[l]();return i}[k](t){for(const e of this.pipes){if(e.dest.write(t)===false)this.pause()}const e=super.emit(\"data\",t);this[l]();return e}[T](){if(this[c])return;this[c]=true;this.readable=false;if(this[x])defer((()=>this[L]()));else this[L]()}[L](){if(this[b]){const t=this[b].end();if(t){for(const e of this.pipes){e.dest.write(t)}super.emit(\"data\",t)}}for(const t of this.pipes){t.end()}const t=super.emit(\"end\");this.removeAllListeners(\"end\");return t}collect(){const t=[];if(!this[O])t.dataLength=0;const e=this.promise();this.on(\"data\",(e=>{t.push(e);if(!this[O])t.dataLength+=e.length}));return e.then((()=>t))}concat(){return this[O]?Promise.reject(new Error(\"cannot concat in objectMode\")):this.collect().then((t=>this[O]?Promise.reject(new Error(\"cannot concat in objectMode\")):this[y]?t.join(\"\"):Buffer.concat(t,t.dataLength)))}promise(){return new Promise(((t,e)=>{this.on(v,(()=>e(new Error(\"stream destroyed\"))));this.on(\"error\",(t=>e(t)));this.on(\"end\",(()=>t()))}))}[D](){const next=()=>{const t=this.read();if(t!==null)return Promise.resolve({done:false,value:t});if(this[h])return Promise.resolve({done:true});let e=null;let s=null;const onerr=t=>{this.removeListener(\"data\",ondata);this.removeListener(\"end\",onend);s(t)};const ondata=t=>{this.removeListener(\"error\",onerr);this.removeListener(\"end\",onend);this.pause();e({value:t,done:!!this[h]})};const onend=()=>{this.removeListener(\"error\",onerr);this.removeListener(\"data\",ondata);e({done:true})};const ondestroy=()=>onerr(new Error(\"stream destroyed\"));return new Promise(((t,i)=>{s=i;e=t;this.once(v,ondestroy);this.once(\"error\",onerr);this.once(\"end\",onend);this.once(\"data\",ondata)}))};return{next:next}}[I](){const next=()=>{const t=this.read();const e=t===null;return{value:t,done:e}};return{next:next}}destroy(t){if(this[v]){if(t)this.emit(\"error\",t);else this.emit(v);return this}this[v]=true;this.buffer.length=0;this[S]=0;if(typeof this.close===\"function\"&&!this[u])this.close();if(t)this.emit(\"error\",t);else this.emit(v);return this}static isStream(t){return!!t&&(t instanceof Minipass||t instanceof n||t instanceof r&&(typeof t.pipe===\"function\"||typeof t.write===\"function\"&&typeof t.end===\"function\"))}}},6186:(t,e,s)=>{const i=s(2853);const r=s(2930);const{mkdirpNative:n,mkdirpNativeSync:o}=s(4983);const{mkdirpManual:h,mkdirpManualSync:l}=s(356);const{useNative:c,useNativeSync:a}=s(4518);const mkdirp=(t,e)=>{t=r(t);e=i(e);return c(e)?n(t,e):h(t,e)};const mkdirpSync=(t,e)=>{t=r(t);e=i(e);return a(e)?o(t,e):l(t,e)};mkdirp.sync=mkdirpSync;mkdirp.native=(t,e)=>n(r(t),i(e));mkdirp.manual=(t,e)=>h(r(t),i(e));mkdirp.nativeSync=(t,e)=>o(r(t),i(e));mkdirp.manualSync=(t,e)=>l(r(t),i(e));t.exports=mkdirp},4992:(t,e,s)=>{const{dirname:i}=s(1017);const findMade=(t,e,s=undefined)=>{if(s===e)return Promise.resolve();return t.statAsync(e).then((t=>t.isDirectory()?s:undefined),(s=>s.code===\"ENOENT\"?findMade(t,i(e),e):undefined))};const findMadeSync=(t,e,s=undefined)=>{if(s===e)return undefined;try{return t.statSync(e).isDirectory()?s:undefined}catch(s){return s.code===\"ENOENT\"?findMadeSync(t,i(e),e):undefined}};t.exports={findMade:findMade,findMadeSync:findMadeSync}},356:(t,e,s)=>{const{dirname:i}=s(1017);const mkdirpManual=(t,e,s)=>{e.recursive=false;const r=i(t);if(r===t){return e.mkdirAsync(t,e).catch((t=>{if(t.code!==\"EISDIR\")throw t}))}return e.mkdirAsync(t,e).then((()=>s||t),(i=>{if(i.code===\"ENOENT\")return mkdirpManual(r,e).then((s=>mkdirpManual(t,e,s)));if(i.code!==\"EEXIST\"&&i.code!==\"EROFS\")throw i;return e.statAsync(t).then((t=>{if(t.isDirectory())return s;else throw i}),(()=>{throw i}))}))};const mkdirpManualSync=(t,e,s)=>{const r=i(t);e.recursive=false;if(r===t){try{return e.mkdirSync(t,e)}catch(t){if(t.code!==\"EISDIR\")throw t;else return}}try{e.mkdirSync(t,e);return s||t}catch(i){if(i.code===\"ENOENT\")return mkdirpManualSync(t,e,mkdirpManualSync(r,e,s));if(i.code!==\"EEXIST\"&&i.code!==\"EROFS\")throw i;try{if(!e.statSync(t).isDirectory())throw i}catch(t){throw i}}};t.exports={mkdirpManual:mkdirpManual,mkdirpManualSync:mkdirpManualSync}},4983:(t,e,s)=>{const{dirname:i}=s(1017);const{findMade:r,findMadeSync:n}=s(4992);const{mkdirpManual:o,mkdirpManualSync:h}=s(356);const mkdirpNative=(t,e)=>{e.recursive=true;const s=i(t);if(s===t)return e.mkdirAsync(t,e);return r(e,t).then((s=>e.mkdirAsync(t,e).then((()=>s)).catch((s=>{if(s.code===\"ENOENT\")return o(t,e);else throw s}))))};const mkdirpNativeSync=(t,e)=>{e.recursive=true;const s=i(t);if(s===t)return e.mkdirSync(t,e);const r=n(e,t);try{e.mkdirSync(t,e);return r}catch(s){if(s.code===\"ENOENT\")return h(t,e);else throw s}};t.exports={mkdirpNative:mkdirpNative,mkdirpNativeSync:mkdirpNativeSync}},2853:(t,e,s)=>{const{promisify:i}=s(3837);const r=s(7147);const optsArg=t=>{if(!t)t={mode:511,fs:r};else if(typeof t===\"object\")t={mode:511,fs:r,...t};else if(typeof t===\"number\")t={mode:t,fs:r};else if(typeof t===\"string\")t={mode:parseInt(t,8),fs:r};else throw new TypeError(\"invalid options argument\");t.mkdir=t.mkdir||t.fs.mkdir||r.mkdir;t.mkdirAsync=i(t.mkdir);t.stat=t.stat||t.fs.stat||r.stat;t.statAsync=i(t.stat);t.statSync=t.statSync||t.fs.statSync||r.statSync;t.mkdirSync=t.mkdirSync||t.fs.mkdirSync||r.mkdirSync;return t};t.exports=optsArg},2930:(t,e,s)=>{const i=process.env.__TESTING_MKDIRP_PLATFORM__||process.platform;const{resolve:r,parse:n}=s(1017);const pathArg=t=>{if(/\\0/.test(t)){throw Object.assign(new TypeError(\"path must be a string without null bytes\"),{path:t,code:\"ERR_INVALID_ARG_VALUE\"})}t=r(t);if(i===\"win32\"){const e=/[*|\"<>?:]/;const{root:s}=n(t);if(e.test(t.substr(s.length))){throw Object.assign(new Error(\"Illegal characters in path.\"),{path:t,code:\"EINVAL\"})}}return t};t.exports=pathArg},4518:(t,e,s)=>{const i=s(7147);const r=process.env.__TESTING_MKDIRP_NODE_VERSION__||process.version;const n=r.replace(/^v/,\"\").split(\".\");const o=+n[0]>10||+n[0]===10&&+n[1]>=12;const h=!o?()=>false:t=>t.mkdir===i.mkdir;const l=!o?()=>false:t=>t.mkdirSync===i.mkdirSync;t.exports={useNative:h,useNativeSync:l}},4016:(t,e,s)=>{\"use strict\";const i=s(5274);const r=s(7900);const n=s(7714);const o=s(1525);const h=s(1017);t.exports=(t,e,s)=>{if(typeof e===\"function\"){s=e}if(Array.isArray(t)){e=t,t={}}if(!e||!Array.isArray(e)||!e.length){throw new TypeError(\"no files or directories specified\")}e=Array.from(e);const r=i(t);if(r.sync&&typeof s===\"function\"){throw new TypeError(\"callback not supported for sync tar functions\")}if(!r.file&&typeof s===\"function\"){throw new TypeError(\"callback only supported with file option\")}return r.file&&r.sync?createFileSync(r,e):r.file?createFile(r,e,s):r.sync?createSync(r,e):create(r,e)};const createFileSync=(t,e)=>{const s=new r.Sync(t);const i=new n.WriteStreamSync(t.file,{mode:t.mode||438});s.pipe(i);addFilesSync(s,e)};const createFile=(t,e,s)=>{const i=new r(t);const o=new n.WriteStream(t.file,{mode:t.mode||438});i.pipe(o);const h=new Promise(((t,e)=>{o.on(\"error\",e);o.on(\"close\",t);i.on(\"error\",e)}));addFilesAsync(i,e);return s?h.then(s,s):h};const addFilesSync=(t,e)=>{e.forEach((e=>{if(e.charAt(0)===\"@\"){o({file:h.resolve(t.cwd,e.slice(1)),sync:true,noResume:true,onentry:e=>t.add(e)})}else{t.add(e)}}));t.end()};const addFilesAsync=(t,e)=>{while(e.length){const s=e.shift();if(s.charAt(0)===\"@\"){return o({file:h.resolve(t.cwd,s.slice(1)),noResume:true,onentry:e=>t.add(e)}).then((s=>addFilesAsync(t,e)))}else{t.add(s)}}t.end()};const createSync=(t,e)=>{const s=new r.Sync(t);addFilesSync(s,e);return s};const create=(t,e)=>{const s=new r(t);addFilesAsync(s,e);return s}},5317:(t,e,s)=>{\"use strict\";const i=s(5274);const r=s(7628);const n=s(7147);const o=s(7714);const h=s(1017);const l=s(8886);t.exports=(t,e,s)=>{if(typeof t===\"function\"){s=t,e=null,t={}}else if(Array.isArray(t)){e=t,t={}}if(typeof e===\"function\"){s=e,e=null}if(!e){e=[]}else{e=Array.from(e)}const r=i(t);if(r.sync&&typeof s===\"function\"){throw new TypeError(\"callback not supported for sync tar functions\")}if(!r.file&&typeof s===\"function\"){throw new TypeError(\"callback only supported with file option\")}if(e.length){filesFilter(r,e)}return r.file&&r.sync?extractFileSync(r):r.file?extractFile(r,s):r.sync?extractSync(r):extract(r)};const filesFilter=(t,e)=>{const s=new Map(e.map((t=>[l(t),true])));const i=t.filter;const mapHas=(t,e)=>{const i=e||h.parse(t).root||\".\";const r=t===i?false:s.has(t)?s.get(t):mapHas(h.dirname(t),i);s.set(t,r);return r};t.filter=i?(t,e)=>i(t,e)&&mapHas(l(t)):t=>mapHas(l(t))};const extractFileSync=t=>{const e=new r.Sync(t);const s=t.file;const i=n.statSync(s);const h=t.maxReadSize||16*1024*1024;const l=new o.ReadStreamSync(s,{readSize:h,size:i.size});l.pipe(e)};const extractFile=(t,e)=>{const s=new r(t);const i=t.maxReadSize||16*1024*1024;const h=t.file;const l=new Promise(((t,e)=>{s.on(\"error\",e);s.on(\"close\",t);n.stat(h,((t,r)=>{if(t){e(t)}else{const t=new o.ReadStream(h,{readSize:i,size:r.size});t.on(\"error\",e);t.pipe(s)}}))}));return e?l.then(e,e):l};const extractSync=t=>new r.Sync(t);const extract=t=>new r(t)},1172:(t,e,s)=>{const i=process.env.__FAKE_PLATFORM__||process.platform;const r=i===\"win32\";const n=global.__FAKE_TESTING_FS__||s(7147);const{O_CREAT:o,O_TRUNC:h,O_WRONLY:l,UV_FS_O_FILEMAP:c=0}=n.constants;const a=r&&!!c;const f=512*1024;const u=c|h|o|l;t.exports=!a?()=>\"w\":t=>t<f?u:\"w\"},6043:(t,e,s)=>{\"use strict\";const i=s(4173);const r=s(1017).posix;const n=s(2370);const o=Symbol(\"slurp\");const h=Symbol(\"type\");class Header{constructor(t,e,s,i){this.cksumValid=false;this.needPax=false;this.nullBlock=false;this.block=null;this.path=null;this.mode=null;this.uid=null;this.gid=null;this.size=null;this.mtime=null;this.cksum=null;this[h]=\"0\";this.linkpath=null;this.uname=null;this.gname=null;this.devmaj=0;this.devmin=0;this.atime=null;this.ctime=null;if(Buffer.isBuffer(t)){this.decode(t,e||0,s,i)}else if(t){this.set(t)}}decode(t,e,s,i){if(!e){e=0}if(!t||!(t.length>=e+512)){throw new Error(\"need 512 bytes for header\")}this.path=decString(t,e,100);this.mode=decNumber(t,e+100,8);this.uid=decNumber(t,e+108,8);this.gid=decNumber(t,e+116,8);this.size=decNumber(t,e+124,12);this.mtime=decDate(t,e+136,12);this.cksum=decNumber(t,e+148,12);this[o](s);this[o](i,true);this[h]=decString(t,e+156,1);if(this[h]===\"\"){this[h]=\"0\"}if(this[h]===\"0\"&&this.path.slice(-1)===\"/\"){this[h]=\"5\"}if(this[h]===\"5\"){this.size=0}this.linkpath=decString(t,e+157,100);if(t.slice(e+257,e+265).toString()===\"ustar\\x0000\"){this.uname=decString(t,e+265,32);this.gname=decString(t,e+297,32);this.devmaj=decNumber(t,e+329,8);this.devmin=decNumber(t,e+337,8);if(t[e+475]!==0){const s=decString(t,e+345,155);this.path=s+\"/\"+this.path}else{const s=decString(t,e+345,130);if(s){this.path=s+\"/\"+this.path}this.atime=decDate(t,e+476,12);this.ctime=decDate(t,e+488,12)}}let r=8*32;for(let s=e;s<e+148;s++){r+=t[s]}for(let s=e+156;s<e+512;s++){r+=t[s]}this.cksumValid=r===this.cksum;if(this.cksum===null&&r===8*32){this.nullBlock=true}}[o](t,e){for(const s in t){if(t[s]!==null&&t[s]!==undefined&&!(e&&s===\"path\")){this[s]=t[s]}}}encode(t,e){if(!t){t=this.block=Buffer.alloc(512);e=0}if(!e){e=0}if(!(t.length>=e+512)){throw new Error(\"need 512 bytes for header\")}const s=this.ctime||this.atime?130:155;const i=splitPrefix(this.path||\"\",s);const r=i[0];const n=i[1];this.needPax=i[2];this.needPax=encString(t,e,100,r)||this.needPax;this.needPax=encNumber(t,e+100,8,this.mode)||this.needPax;this.needPax=encNumber(t,e+108,8,this.uid)||this.needPax;this.needPax=encNumber(t,e+116,8,this.gid)||this.needPax;this.needPax=encNumber(t,e+124,12,this.size)||this.needPax;this.needPax=encDate(t,e+136,12,this.mtime)||this.needPax;t[e+156]=this[h].charCodeAt(0);this.needPax=encString(t,e+157,100,this.linkpath)||this.needPax;t.write(\"ustar\\x0000\",e+257,8);this.needPax=encString(t,e+265,32,this.uname)||this.needPax;this.needPax=encString(t,e+297,32,this.gname)||this.needPax;this.needPax=encNumber(t,e+329,8,this.devmaj)||this.needPax;this.needPax=encNumber(t,e+337,8,this.devmin)||this.needPax;this.needPax=encString(t,e+345,s,n)||this.needPax;if(t[e+475]!==0){this.needPax=encString(t,e+345,155,n)||this.needPax}else{this.needPax=encString(t,e+345,130,n)||this.needPax;this.needPax=encDate(t,e+476,12,this.atime)||this.needPax;this.needPax=encDate(t,e+488,12,this.ctime)||this.needPax}let o=8*32;for(let s=e;s<e+148;s++){o+=t[s]}for(let s=e+156;s<e+512;s++){o+=t[s]}this.cksum=o;encNumber(t,e+148,8,this.cksum);this.cksumValid=true;return this.needPax}set(t){for(const e in t){if(t[e]!==null&&t[e]!==undefined){this[e]=t[e]}}}get type(){return i.name.get(this[h])||this[h]}get typeKey(){return this[h]}set type(t){if(i.code.has(t)){this[h]=i.code.get(t)}else{this[h]=t}}}const splitPrefix=(t,e)=>{const s=100;let i=t;let n=\"\";let o;const h=r.parse(t).root||\".\";if(Buffer.byteLength(i)<s){o=[i,n,false]}else{n=r.dirname(i);i=r.basename(i);do{if(Buffer.byteLength(i)<=s&&Buffer.byteLength(n)<=e){o=[i,n,false]}else if(Buffer.byteLength(i)>s&&Buffer.byteLength(n)<=e){o=[i.slice(0,s-1),n,true]}else{i=r.join(r.basename(n),i);n=r.dirname(n)}}while(n!==h&&!o);if(!o){o=[t.slice(0,s-1),\"\",true]}}return o};const decString=(t,e,s)=>t.slice(e,e+s).toString(\"utf8\").replace(/\\0.*/,\"\");const decDate=(t,e,s)=>numToDate(decNumber(t,e,s));const numToDate=t=>t===null?null:new Date(t*1e3);const decNumber=(t,e,s)=>t[e]&128?n.parse(t.slice(e,e+s)):decSmallNumber(t,e,s);const nanNull=t=>isNaN(t)?null:t;const decSmallNumber=(t,e,s)=>nanNull(parseInt(t.slice(e,e+s).toString(\"utf8\").replace(/\\0.*$/,\"\").trim(),8));const l={12:8589934591,8:2097151};const encNumber=(t,e,s,i)=>i===null?false:i>l[s]||i<0?(n.encode(i,t.slice(e,e+s)),true):(encSmallNumber(t,e,s,i),false);const encSmallNumber=(t,e,s,i)=>t.write(octalString(i,s),e,s,\"ascii\");const octalString=(t,e)=>padOctal(Math.floor(t).toString(8),e);const padOctal=(t,e)=>(t.length===e-1?t:new Array(e-t.length-1).join(\"0\")+t+\" \")+\"\\0\";const encDate=(t,e,s,i)=>i===null?false:encNumber(t,e,s,i.getTime()/1e3);const c=new Array(156).join(\"\\0\");const encString=(t,e,s,i)=>i===null?false:(t.write(i+c,e,s,\"utf8\"),i.length!==Buffer.byteLength(i)||i.length>s);t.exports=Header},5274:t=>{\"use strict\";const e=new Map([[\"C\",\"cwd\"],[\"f\",\"file\"],[\"z\",\"gzip\"],[\"P\",\"preservePaths\"],[\"U\",\"unlink\"],[\"strip-components\",\"strip\"],[\"stripComponents\",\"strip\"],[\"keep-newer\",\"newer\"],[\"keepNewer\",\"newer\"],[\"keep-newer-files\",\"newer\"],[\"keepNewerFiles\",\"newer\"],[\"k\",\"keep\"],[\"keep-existing\",\"keep\"],[\"keepExisting\",\"keep\"],[\"m\",\"noMtime\"],[\"no-mtime\",\"noMtime\"],[\"p\",\"preserveOwner\"],[\"L\",\"follow\"],[\"h\",\"follow\"]]);t.exports=t=>t?Object.keys(t).map((s=>[e.has(s)?e.get(s):s,t[s]])).reduce(((t,e)=>(t[e[0]]=e[1],t)),Object.create(null)):{}},2370:t=>{\"use strict\";const encode=(t,e)=>{if(!Number.isSafeInteger(t)){throw Error(\"cannot encode number outside of javascript safe integer range\")}else if(t<0){encodeNegative(t,e)}else{encodePositive(t,e)}return e};const encodePositive=(t,e)=>{e[0]=128;for(var s=e.length;s>1;s--){e[s-1]=t&255;t=Math.floor(t/256)}};const encodeNegative=(t,e)=>{e[0]=255;var s=false;t=t*-1;for(var i=e.length;i>1;i--){var r=t&255;t=Math.floor(t/256);if(s){e[i-1]=onesComp(r)}else if(r===0){e[i-1]=0}else{s=true;e[i-1]=twosComp(r)}}};const parse=t=>{const e=t[0];const s=e===128?pos(t.slice(1,t.length)):e===255?twos(t):null;if(s===null){throw Error(\"invalid base256 encoding\")}if(!Number.isSafeInteger(s)){throw Error(\"parsed number outside of javascript safe integer range\")}return s};const twos=t=>{var e=t.length;var s=0;var i=false;for(var r=e-1;r>-1;r--){var n=t[r];var o;if(i){o=onesComp(n)}else if(n===0){o=n}else{i=true;o=twosComp(n)}if(o!==0){s-=o*Math.pow(256,e-r-1)}}return s};const pos=t=>{var e=t.length;var s=0;for(var i=e-1;i>-1;i--){var r=t[i];if(r!==0){s+=r*Math.pow(256,e-i-1)}}return s};const onesComp=t=>(255^t)&255;const twosComp=t=>(255^t)+1&255;t.exports={encode:encode,parse:parse}},1525:(t,e,s)=>{\"use strict\";const i=s(5274);const r=s(8917);const n=s(7147);const o=s(7714);const h=s(1017);const l=s(8886);t.exports=(t,e,s)=>{if(typeof t===\"function\"){s=t,e=null,t={}}else if(Array.isArray(t)){e=t,t={}}if(typeof e===\"function\"){s=e,e=null}if(!e){e=[]}else{e=Array.from(e)}const r=i(t);if(r.sync&&typeof s===\"function\"){throw new TypeError(\"callback not supported for sync tar functions\")}if(!r.file&&typeof s===\"function\"){throw new TypeError(\"callback only supported with file option\")}if(e.length){filesFilter(r,e)}if(!r.noResume){onentryFunction(r)}return r.file&&r.sync?listFileSync(r):r.file?listFile(r,s):list(r)};const onentryFunction=t=>{const e=t.onentry;t.onentry=e?t=>{e(t);t.resume()}:t=>t.resume()};const filesFilter=(t,e)=>{const s=new Map(e.map((t=>[l(t),true])));const i=t.filter;const mapHas=(t,e)=>{const i=e||h.parse(t).root||\".\";const r=t===i?false:s.has(t)?s.get(t):mapHas(h.dirname(t),i);s.set(t,r);return r};t.filter=i?(t,e)=>i(t,e)&&mapHas(l(t)):t=>mapHas(l(t))};const listFileSync=t=>{const e=list(t);const s=t.file;let i=true;let r;try{const o=n.statSync(s);const h=t.maxReadSize||16*1024*1024;if(o.size<h){e.end(n.readFileSync(s))}else{let t=0;const i=Buffer.allocUnsafe(h);r=n.openSync(s,\"r\");while(t<o.size){const s=n.readSync(r,i,0,h,t);t+=s;e.write(i.slice(0,s))}e.end()}i=false}finally{if(i&&r){try{n.closeSync(r)}catch(t){}}}};const listFile=(t,e)=>{const s=new r(t);const i=t.maxReadSize||16*1024*1024;const h=t.file;const l=new Promise(((t,e)=>{s.on(\"error\",e);s.on(\"end\",t);n.stat(h,((t,r)=>{if(t){e(t)}else{const t=new o.ReadStream(h,{readSize:i,size:r.size});t.on(\"error\",e);t.pipe(s)}}))}));return e?l.then(e,e):l};const list=t=>new r(t)},9624:(t,e,s)=>{\"use strict\";const i=s(6186);const r=s(7147);const n=s(1017);const o=s(9051);const h=s(6843);class SymlinkError extends Error{constructor(t,e){super(\"Cannot extract through symbolic link\");this.path=e;this.symlink=t}get name(){return\"SylinkError\"}}class CwdError extends Error{constructor(t,e){super(e+\": Cannot cd into '\"+t+\"'\");this.path=t;this.code=e}get name(){return\"CwdError\"}}const cGet=(t,e)=>t.get(h(e));const cSet=(t,e,s)=>t.set(h(e),s);const checkCwd=(t,e)=>{r.stat(t,((s,i)=>{if(s||!i.isDirectory()){s=new CwdError(t,s&&s.code||\"ENOTDIR\")}e(s)}))};t.exports=(t,e,s)=>{t=h(t);const l=e.umask;const c=e.mode|448;const a=(c&l)!==0;const f=e.uid;const u=e.gid;const d=typeof f===\"number\"&&typeof u===\"number\"&&(f!==e.processUid||u!==e.processGid);const p=e.preserve;const m=e.unlink;const y=e.cache;const b=h(e.cwd);const done=(e,i)=>{if(e){s(e)}else{cSet(y,t,true);if(i&&d){o(i,f,u,(t=>done(t)))}else if(a){r.chmod(t,c,s)}else{s()}}};if(y&&cGet(y,t)===true){return done()}if(t===b){return checkCwd(t,done)}if(p){return i(t,{mode:c}).then((t=>done(null,t)),done)}const w=h(n.relative(b,t));const E=w.split(\"/\");mkdir_(b,E,c,y,m,b,null,done)};const mkdir_=(t,e,s,i,o,l,c,a)=>{if(!e.length){return a(null,c)}const f=e.shift();const u=h(n.resolve(t+\"/\"+f));if(cGet(i,u)){return mkdir_(u,e,s,i,o,l,c,a)}r.mkdir(u,s,onmkdir(u,e,s,i,o,l,c,a))};const onmkdir=(t,e,s,i,n,o,l,c)=>a=>{if(a){r.lstat(t,((f,u)=>{if(f){f.path=f.path&&h(f.path);c(f)}else if(u.isDirectory()){mkdir_(t,e,s,i,n,o,l,c)}else if(n){r.unlink(t,(h=>{if(h){return c(h)}r.mkdir(t,s,onmkdir(t,e,s,i,n,o,l,c))}))}else if(u.isSymbolicLink()){return c(new SymlinkError(t,t+\"/\"+e.join(\"/\")))}else{c(a)}}))}else{l=l||t;mkdir_(t,e,s,i,n,o,l,c)}};const checkCwdSync=t=>{let e=false;let s=\"ENOTDIR\";try{e=r.statSync(t).isDirectory()}catch(t){s=t.code}finally{if(!e){throw new CwdError(t,s)}}};t.exports.sync=(t,e)=>{t=h(t);const s=e.umask;const l=e.mode|448;const c=(l&s)!==0;const a=e.uid;const f=e.gid;const u=typeof a===\"number\"&&typeof f===\"number\"&&(a!==e.processUid||f!==e.processGid);const d=e.preserve;const p=e.unlink;const m=e.cache;const y=h(e.cwd);const done=e=>{cSet(m,t,true);if(e&&u){o.sync(e,a,f)}if(c){r.chmodSync(t,l)}};if(m&&cGet(m,t)===true){return done()}if(t===y){checkCwdSync(y);return done()}if(d){return done(i.sync(t,l))}const b=h(n.relative(y,t));const w=b.split(\"/\");let E=null;for(let t=w.shift(),e=y;t&&(e+=\"/\"+t);t=w.shift()){e=h(n.resolve(e));if(cGet(m,e)){continue}try{r.mkdirSync(e,l);E=E||e;cSet(m,e,true)}catch(t){const s=r.lstatSync(e);if(s.isDirectory()){cSet(m,e,true);continue}else if(p){r.unlinkSync(e);r.mkdirSync(e,l);E=E||e;cSet(m,e,true);continue}else if(s.isSymbolicLink()){return new SymlinkError(e,e+\"/\"+w.join(\"/\"))}}}return done(E)}},8371:t=>{\"use strict\";t.exports=(t,e,s)=>{t&=4095;if(s){t=(t|384)&~18}if(e){if(t&256){t|=64}if(t&32){t|=8}if(t&4){t|=1}}return t}},7118:t=>{const e=Object.create(null);const{hasOwnProperty:s}=Object.prototype;t.exports=t=>{if(!s.call(e,t)){e[t]=t.normalize(\"NFD\")}return e[t]}},6843:t=>{const e=process.env.TESTING_TAR_FAKE_PLATFORM||process.platform;t.exports=e!==\"win32\"?t=>t:t=>t&&t.replace(/\\\\/g,\"/\")},7900:(t,e,s)=>{\"use strict\";class PackJob{constructor(t,e){this.path=t||\"./\";this.absolute=e;this.entry=null;this.stat=null;this.readdir=null;this.pending=false;this.ignore=false;this.piped=false}}const{Minipass:i}=s(6684);const r=s(3486);const n=s(8116);const o=s(5450);const h=o.Sync;const l=o.Tar;const c=s(665);const a=Buffer.alloc(1024);const f=Symbol(\"onStat\");const u=Symbol(\"ended\");const d=Symbol(\"queue\");const p=Symbol(\"current\");const m=Symbol(\"process\");const y=Symbol(\"processing\");const b=Symbol(\"processJob\");const w=Symbol(\"jobs\");const E=Symbol(\"jobDone\");const g=Symbol(\"addFSEntry\");const S=Symbol(\"addTarEntry\");const _=Symbol(\"stat\");const R=Symbol(\"readdir\");const O=Symbol(\"onreaddir\");const v=Symbol(\"pipe\");const k=Symbol(\"entry\");const T=Symbol(\"entryOpt\");const L=Symbol(\"writeEntryClass\");const x=Symbol(\"write\");const A=Symbol(\"ondrain\");const D=s(7147);const I=s(1017);const N=s(5899);const B=s(6843);const M=N(class Pack extends i{constructor(t){super(t);t=t||Object.create(null);this.opt=t;this.file=t.file||\"\";this.cwd=t.cwd||process.cwd();this.maxReadSize=t.maxReadSize;this.preservePaths=!!t.preservePaths;this.strict=!!t.strict;this.noPax=!!t.noPax;this.prefix=B(t.prefix||\"\");this.linkCache=t.linkCache||new Map;this.statCache=t.statCache||new Map;this.readdirCache=t.readdirCache||new Map;this[L]=o;if(typeof t.onwarn===\"function\"){this.on(\"warn\",t.onwarn)}this.portable=!!t.portable;this.zip=null;if(t.gzip||t.brotli){if(t.gzip&&t.brotli){throw new TypeError(\"gzip and brotli are mutually exclusive\")}if(t.gzip){if(typeof t.gzip!==\"object\"){t.gzip={}}if(this.portable){t.gzip.portable=true}this.zip=new r.Gzip(t.gzip)}if(t.brotli){if(typeof t.brotli!==\"object\"){t.brotli={}}this.zip=new r.BrotliCompress(t.brotli)}this.zip.on(\"data\",(t=>super.write(t)));this.zip.on(\"end\",(t=>super.end()));this.zip.on(\"drain\",(t=>this[A]()));this.on(\"resume\",(t=>this.zip.resume()))}else{this.on(\"drain\",this[A])}this.noDirRecurse=!!t.noDirRecurse;this.follow=!!t.follow;this.noMtime=!!t.noMtime;this.mtime=t.mtime||null;this.filter=typeof t.filter===\"function\"?t.filter:t=>true;this[d]=new c;this[w]=0;this.jobs=+t.jobs||4;this[y]=false;this[u]=false}[x](t){return super.write(t)}add(t){this.write(t);return this}end(t){if(t){this.write(t)}this[u]=true;this[m]();return this}write(t){if(this[u]){throw new Error(\"write after end\")}if(t instanceof n){this[S](t)}else{this[g](t)}return this.flowing}[S](t){const e=B(I.resolve(this.cwd,t.path));if(!this.filter(t.path,t)){t.resume()}else{const s=new PackJob(t.path,e,false);s.entry=new l(t,this[T](s));s.entry.on(\"end\",(t=>this[E](s)));this[w]+=1;this[d].push(s)}this[m]()}[g](t){const e=B(I.resolve(this.cwd,t));this[d].push(new PackJob(t,e));this[m]()}[_](t){t.pending=true;this[w]+=1;const e=this.follow?\"stat\":\"lstat\";D[e](t.absolute,((e,s)=>{t.pending=false;this[w]-=1;if(e){this.emit(\"error\",e)}else{this[f](t,s)}}))}[f](t,e){this.statCache.set(t.absolute,e);t.stat=e;if(!this.filter(t.path,e)){t.ignore=true}this[m]()}[R](t){t.pending=true;this[w]+=1;D.readdir(t.absolute,((e,s)=>{t.pending=false;this[w]-=1;if(e){return this.emit(\"error\",e)}this[O](t,s)}))}[O](t,e){this.readdirCache.set(t.absolute,e);t.readdir=e;this[m]()}[m](){if(this[y]){return}this[y]=true;for(let t=this[d].head;t!==null&&this[w]<this.jobs;t=t.next){this[b](t.value);if(t.value.ignore){const e=t.next;this[d].removeNode(t);t.next=e}}this[y]=false;if(this[u]&&!this[d].length&&this[w]===0){if(this.zip){this.zip.end(a)}else{super.write(a);super.end()}}}get[p](){return this[d]&&this[d].head&&this[d].head.value}[E](t){this[d].shift();this[w]-=1;this[m]()}[b](t){if(t.pending){return}if(t.entry){if(t===this[p]&&!t.piped){this[v](t)}return}if(!t.stat){if(this.statCache.has(t.absolute)){this[f](t,this.statCache.get(t.absolute))}else{this[_](t)}}if(!t.stat){return}if(t.ignore){return}if(!this.noDirRecurse&&t.stat.isDirectory()&&!t.readdir){if(this.readdirCache.has(t.absolute)){this[O](t,this.readdirCache.get(t.absolute))}else{this[R](t)}if(!t.readdir){return}}t.entry=this[k](t);if(!t.entry){t.ignore=true;return}if(t===this[p]&&!t.piped){this[v](t)}}[T](t){return{onwarn:(t,e,s)=>this.warn(t,e,s),noPax:this.noPax,cwd:this.cwd,absolute:t.absolute,preservePaths:this.preservePaths,maxReadSize:this.maxReadSize,strict:this.strict,portable:this.portable,linkCache:this.linkCache,statCache:this.statCache,noMtime:this.noMtime,mtime:this.mtime,prefix:this.prefix}}[k](t){this[w]+=1;try{return new this[L](t.path,this[T](t)).on(\"end\",(()=>this[E](t))).on(\"error\",(t=>this.emit(\"error\",t)))}catch(t){this.emit(\"error\",t)}}[A](){if(this[p]&&this[p].entry){this[p].entry.resume()}}[v](t){t.piped=true;if(t.readdir){t.readdir.forEach((e=>{const s=t.path;const i=s===\"./\"?\"\":s.replace(/\\/*$/,\"/\");this[g](i+e)}))}const e=t.entry;const s=this.zip;if(s){e.on(\"data\",(t=>{if(!s.write(t)){e.pause()}}))}else{e.on(\"data\",(t=>{if(!super.write(t)){e.pause()}}))}}pause(){if(this.zip){this.zip.pause()}return super.pause()}});class PackSync extends M{constructor(t){super(t);this[L]=h}pause(){}resume(){}[_](t){const e=this.follow?\"statSync\":\"lstatSync\";this[f](t,D[e](t.absolute))}[R](t,e){this[O](t,D.readdirSync(t.absolute))}[v](t){const e=t.entry;const s=this.zip;if(t.readdir){t.readdir.forEach((e=>{const s=t.path;const i=s===\"./\"?\"\":s.replace(/\\/*$/,\"/\");this[g](i+e)}))}if(s){e.on(\"data\",(t=>{s.write(t)}))}else{e.on(\"data\",(t=>{super[x](t)}))}}}M.Sync=PackSync;t.exports=M},8917:(t,e,s)=>{\"use strict\";const i=s(5899);const r=s(6043);const n=s(2361);const o=s(665);const h=1024*1024;const l=s(8116);const c=s(7996);const a=s(3486);const{nextTick:f}=s(7282);const u=Buffer.from([31,139]);const d=Symbol(\"state\");const p=Symbol(\"writeEntry\");const m=Symbol(\"readEntry\");const y=Symbol(\"nextEntry\");const b=Symbol(\"processEntry\");const w=Symbol(\"extendedHeader\");const E=Symbol(\"globalExtendedHeader\");const g=Symbol(\"meta\");const S=Symbol(\"emitMeta\");const _=Symbol(\"buffer\");const R=Symbol(\"queue\");const O=Symbol(\"ended\");const v=Symbol(\"emittedEnd\");const k=Symbol(\"emit\");const T=Symbol(\"unzip\");const L=Symbol(\"consumeChunk\");const x=Symbol(\"consumeChunkSub\");const A=Symbol(\"consumeBody\");const D=Symbol(\"consumeMeta\");const I=Symbol(\"consumeHeader\");const N=Symbol(\"consuming\");const B=Symbol(\"bufferConcat\");const M=Symbol(\"maybeEnd\");const P=Symbol(\"writing\");const C=Symbol(\"aborted\");const F=Symbol(\"onDone\");const z=Symbol(\"sawValidEntry\");const U=Symbol(\"sawNullBlock\");const j=Symbol(\"sawEOF\");const Y=Symbol(\"closeStream\");const noop=t=>true;t.exports=i(class Parser extends n{constructor(t){t=t||{};super(t);this.file=t.file||\"\";this[z]=null;this.on(F,(t=>{if(this[d]===\"begin\"||this[z]===false){this.warn(\"TAR_BAD_ARCHIVE\",\"Unrecognized archive format\")}}));if(t.ondone){this.on(F,t.ondone)}else{this.on(F,(t=>{this.emit(\"prefinish\");this.emit(\"finish\");this.emit(\"end\")}))}this.strict=!!t.strict;this.maxMetaEntrySize=t.maxMetaEntrySize||h;this.filter=typeof t.filter===\"function\"?t.filter:noop;const e=t.file&&(t.file.endsWith(\".tar.br\")||t.file.endsWith(\".tbr\"));this.brotli=!t.gzip&&t.brotli!==undefined?t.brotli:e?undefined:false;this.writable=true;this.readable=false;this[R]=new o;this[_]=null;this[m]=null;this[p]=null;this[d]=\"begin\";this[g]=\"\";this[w]=null;this[E]=null;this[O]=false;this[T]=null;this[C]=false;this[U]=false;this[j]=false;this.on(\"end\",(()=>this[Y]()));if(typeof t.onwarn===\"function\"){this.on(\"warn\",t.onwarn)}if(typeof t.onentry===\"function\"){this.on(\"entry\",t.onentry)}}[I](t,e){if(this[z]===null){this[z]=false}let s;try{s=new r(t,e,this[w],this[E])}catch(t){return this.warn(\"TAR_ENTRY_INVALID\",t)}if(s.nullBlock){if(this[U]){this[j]=true;if(this[d]===\"begin\"){this[d]=\"header\"}this[k](\"eof\")}else{this[U]=true;this[k](\"nullBlock\")}}else{this[U]=false;if(!s.cksumValid){this.warn(\"TAR_ENTRY_INVALID\",\"checksum failure\",{header:s})}else if(!s.path){this.warn(\"TAR_ENTRY_INVALID\",\"path is required\",{header:s})}else{const t=s.type;if(/^(Symbolic)?Link$/.test(t)&&!s.linkpath){this.warn(\"TAR_ENTRY_INVALID\",\"linkpath required\",{header:s})}else if(!/^(Symbolic)?Link$/.test(t)&&s.linkpath){this.warn(\"TAR_ENTRY_INVALID\",\"linkpath forbidden\",{header:s})}else{const t=this[p]=new l(s,this[w],this[E]);if(!this[z]){if(t.remain){const onend=()=>{if(!t.invalid){this[z]=true}};t.on(\"end\",onend)}else{this[z]=true}}if(t.meta){if(t.size>this.maxMetaEntrySize){t.ignore=true;this[k](\"ignoredEntry\",t);this[d]=\"ignore\";t.resume()}else if(t.size>0){this[g]=\"\";t.on(\"data\",(t=>this[g]+=t));this[d]=\"meta\"}}else{this[w]=null;t.ignore=t.ignore||!this.filter(t.path,t);if(t.ignore){this[k](\"ignoredEntry\",t);this[d]=t.remain?\"ignore\":\"header\";t.resume()}else{if(t.remain){this[d]=\"body\"}else{this[d]=\"header\";t.end()}if(!this[m]){this[R].push(t);this[y]()}else{this[R].push(t)}}}}}}}[Y](){f((()=>this.emit(\"close\")))}[b](t){let e=true;if(!t){this[m]=null;e=false}else if(Array.isArray(t)){this.emit.apply(this,t)}else{this[m]=t;this.emit(\"entry\",t);if(!t.emittedEnd){t.on(\"end\",(t=>this[y]()));e=false}}return e}[y](){do{}while(this[b](this[R].shift()));if(!this[R].length){const t=this[m];const e=!t||t.flowing||t.size===t.remain;if(e){if(!this[P]){this.emit(\"drain\")}}else{t.once(\"drain\",(t=>this.emit(\"drain\")))}}}[A](t,e){const s=this[p];const i=s.blockRemain;const r=i>=t.length&&e===0?t:t.slice(e,e+i);s.write(r);if(!s.blockRemain){this[d]=\"header\";this[p]=null;s.end()}return r.length}[D](t,e){const s=this[p];const i=this[A](t,e);if(!this[p]){this[S](s)}return i}[k](t,e,s){if(!this[R].length&&!this[m]){this.emit(t,e,s)}else{this[R].push([t,e,s])}}[S](t){this[k](\"meta\",this[g]);switch(t.type){case\"ExtendedHeader\":case\"OldExtendedHeader\":this[w]=c.parse(this[g],this[w],false);break;case\"GlobalExtendedHeader\":this[E]=c.parse(this[g],this[E],true);break;case\"NextFileHasLongPath\":case\"OldGnuLongPath\":this[w]=this[w]||Object.create(null);this[w].path=this[g].replace(/\\0.*/,\"\");break;case\"NextFileHasLongLinkpath\":this[w]=this[w]||Object.create(null);this[w].linkpath=this[g].replace(/\\0.*/,\"\");break;default:throw new Error(\"unknown meta: \"+t.type)}}abort(t){this[C]=true;this.emit(\"abort\",t);this.warn(\"TAR_ABORT\",t,{recoverable:false})}write(t){if(this[C]){return}const e=this[T]===null||this.brotli===undefined&&this[T]===false;if(e&&t){if(this[_]){t=Buffer.concat([this[_],t]);this[_]=null}if(t.length<u.length){this[_]=t;return true}for(let e=0;this[T]===null&&e<u.length;e++){if(t[e]!==u[e]){this[T]=false}}const e=this.brotli===undefined;if(this[T]===false&&e){if(t.length<512){if(this[O]){this.brotli=true}else{this[_]=t;return true}}else{try{new r(t.slice(0,512));this.brotli=false}catch(t){this.brotli=true}}}if(this[T]===null||this[T]===false&&this.brotli){const e=this[O];this[O]=false;this[T]=this[T]===null?new a.Unzip:new a.BrotliDecompress;this[T].on(\"data\",(t=>this[L](t)));this[T].on(\"error\",(t=>this.abort(t)));this[T].on(\"end\",(t=>{this[O]=true;this[L]()}));this[P]=true;const s=this[T][e?\"end\":\"write\"](t);this[P]=false;return s}}this[P]=true;if(this[T]){this[T].write(t)}else{this[L](t)}this[P]=false;const s=this[R].length?false:this[m]?this[m].flowing:true;if(!s&&!this[R].length){this[m].once(\"drain\",(t=>this.emit(\"drain\")))}return s}[B](t){if(t&&!this[C]){this[_]=this[_]?Buffer.concat([this[_],t]):t}}[M](){if(this[O]&&!this[v]&&!this[C]&&!this[N]){this[v]=true;const t=this[p];if(t&&t.blockRemain){const e=this[_]?this[_].length:0;this.warn(\"TAR_BAD_ARCHIVE\",`Truncated input (needed ${t.blockRemain} more bytes, only ${e} available)`,{entry:t});if(this[_]){t.write(this[_])}t.end()}this[k](F)}}[L](t){if(this[N]){this[B](t)}else if(!t&&!this[_]){this[M]()}else{this[N]=true;if(this[_]){this[B](t);const e=this[_];this[_]=null;this[x](e)}else{this[x](t)}while(this[_]&&this[_].length>=512&&!this[C]&&!this[j]){const t=this[_];this[_]=null;this[x](t)}this[N]=false}if(!this[_]||this[O]){this[M]()}}[x](t){let e=0;const s=t.length;while(e+512<=s&&!this[C]&&!this[j]){switch(this[d]){case\"begin\":case\"header\":this[I](t,e);e+=512;break;case\"ignore\":case\"body\":e+=this[A](t,e);break;case\"meta\":e+=this[D](t,e);break;default:throw new Error(\"invalid state: \"+this[d])}}if(e<s){if(this[_]){this[_]=Buffer.concat([t.slice(e),this[_]])}else{this[_]=t.slice(e)}}}end(t){if(!this[C]){if(this[T]){this[T].end(t)}else{this[O]=true;if(this.brotli===undefined)t=t||Buffer.alloc(0);this.write(t)}}}})},9587:(t,e,s)=>{const i=s(9491);const r=s(7118);const n=s(8886);const{join:o}=s(1017);const h=process.env.TESTING_TAR_FAKE_PLATFORM||process.platform;const l=h===\"win32\";t.exports=()=>{const t=new Map;const e=new Map;const getDirs=t=>{const e=t.split(\"/\").slice(0,-1).reduce(((t,e)=>{if(t.length){e=o(t[t.length-1],e)}t.push(e||\"/\");return t}),[]);return e};const s=new Set;const getQueues=s=>{const i=e.get(s);if(!i){throw new Error(\"function does not have any path reservations\")}return{paths:i.paths.map((e=>t.get(e))),dirs:[...i.dirs].map((e=>t.get(e)))}};const check=t=>{const{paths:e,dirs:s}=getQueues(t);return e.every((e=>e[0]===t))&&s.every((e=>e[0]instanceof Set&&e[0].has(t)))};const run=t=>{if(s.has(t)||!check(t)){return false}s.add(t);t((()=>clear(t)));return true};const clear=r=>{if(!s.has(r)){return false}const{paths:n,dirs:o}=e.get(r);const h=new Set;n.forEach((e=>{const s=t.get(e);i.equal(s[0],r);if(s.length===1){t.delete(e)}else{s.shift();if(typeof s[0]===\"function\"){h.add(s[0])}else{s[0].forEach((t=>h.add(t)))}}}));o.forEach((e=>{const s=t.get(e);i(s[0]instanceof Set);if(s[0].size===1&&s.length===1){t.delete(e)}else if(s[0].size===1){s.shift();h.add(s[0])}else{s[0].delete(r)}}));s.delete(r);h.forEach((t=>run(t)));return true};const reserve=(s,i)=>{s=l?[\"win32 parallelization disabled\"]:s.map((t=>n(o(r(t))).toLowerCase()));const h=new Set(s.map((t=>getDirs(t))).reduce(((t,e)=>t.concat(e))));e.set(i,{dirs:h,paths:s});s.forEach((e=>{const s=t.get(e);if(!s){t.set(e,[i])}else{s.push(i)}}));h.forEach((e=>{const s=t.get(e);if(!s){t.set(e,[new Set([i])])}else if(s[s.length-1]instanceof Set){s[s.length-1].add(i)}else{s.push(new Set([i]))}}));return run(i)};return{check:check,reserve:reserve}}},7996:(t,e,s)=>{\"use strict\";const i=s(6043);const r=s(1017);class Pax{constructor(t,e){this.atime=t.atime||null;this.charset=t.charset||null;this.comment=t.comment||null;this.ctime=t.ctime||null;this.gid=t.gid||null;this.gname=t.gname||null;this.linkpath=t.linkpath||null;this.mtime=t.mtime||null;this.path=t.path||null;this.size=t.size||null;this.uid=t.uid||null;this.uname=t.uname||null;this.dev=t.dev||null;this.ino=t.ino||null;this.nlink=t.nlink||null;this.global=e||false}encode(){const t=this.encodeBody();if(t===\"\"){return null}const e=Buffer.byteLength(t);const s=512*Math.ceil(1+e/512);const n=Buffer.allocUnsafe(s);for(let t=0;t<512;t++){n[t]=0}new i({path:(\"PaxHeader/\"+r.basename(this.path)).slice(0,99),mode:this.mode||420,uid:this.uid||null,gid:this.gid||null,size:e,mtime:this.mtime||null,type:this.global?\"GlobalExtendedHeader\":\"ExtendedHeader\",linkpath:\"\",uname:this.uname||\"\",gname:this.gname||\"\",devmaj:0,devmin:0,atime:this.atime||null,ctime:this.ctime||null}).encode(n);n.write(t,512,e,\"utf8\");for(let t=e+512;t<n.length;t++){n[t]=0}return n}encodeBody(){return this.encodeField(\"path\")+this.encodeField(\"ctime\")+this.encodeField(\"atime\")+this.encodeField(\"dev\")+this.encodeField(\"ino\")+this.encodeField(\"nlink\")+this.encodeField(\"charset\")+this.encodeField(\"comment\")+this.encodeField(\"gid\")+this.encodeField(\"gname\")+this.encodeField(\"linkpath\")+this.encodeField(\"mtime\")+this.encodeField(\"size\")+this.encodeField(\"uid\")+this.encodeField(\"uname\")}encodeField(t){if(this[t]===null||this[t]===undefined){return\"\"}const e=this[t]instanceof Date?this[t].getTime()/1e3:this[t];const s=\" \"+(t===\"dev\"||t===\"ino\"||t===\"nlink\"?\"SCHILY.\":\"\")+t+\"=\"+e+\"\\n\";const i=Buffer.byteLength(s);let r=Math.floor(Math.log(i)/Math.log(10))+1;if(i+r>=Math.pow(10,r)){r+=1}const n=r+i;return n+s}}Pax.parse=(t,e,s)=>new Pax(merge(parseKV(t),e),s);const merge=(t,e)=>e?Object.keys(t).reduce(((e,s)=>(e[s]=t[s],e)),e):t;const parseKV=t=>t.replace(/\\n$/,\"\").split(\"\\n\").reduce(parseKVLine,Object.create(null));const parseKVLine=(t,e)=>{const s=parseInt(e,10);if(s!==Buffer.byteLength(e)+1){return t}e=e.slice((s+\" \").length);const i=e.split(\"=\");const r=i.shift().replace(/^SCHILY\\.(dev|ino|nlink)/,\"$1\");if(!r){return t}const n=i.join(\"=\");t[r]=/^([A-Z]+\\.)?([mac]|birth|creation)time$/.test(r)?new Date(n*1e3):/^[0-9]+$/.test(n)?+n:n;return t};t.exports=Pax},8116:(t,e,s)=>{\"use strict\";const{Minipass:i}=s(6684);const r=s(6843);const n=Symbol(\"slurp\");t.exports=class ReadEntry extends i{constructor(t,e,s){super();this.pause();this.extended=e;this.globalExtended=s;this.header=t;this.startBlockSize=512*Math.ceil(t.size/512);this.blockRemain=this.startBlockSize;this.remain=t.size;this.type=t.type;this.meta=false;this.ignore=false;switch(this.type){case\"File\":case\"OldFile\":case\"Link\":case\"SymbolicLink\":case\"CharacterDevice\":case\"BlockDevice\":case\"Directory\":case\"FIFO\":case\"ContiguousFile\":case\"GNUDumpDir\":break;case\"NextFileHasLongLinkpath\":case\"NextFileHasLongPath\":case\"OldGnuLongPath\":case\"GlobalExtendedHeader\":case\"ExtendedHeader\":case\"OldExtendedHeader\":this.meta=true;break;default:this.ignore=true}this.path=r(t.path);this.mode=t.mode;if(this.mode){this.mode=this.mode&4095}this.uid=t.uid;this.gid=t.gid;this.uname=t.uname;this.gname=t.gname;this.size=t.size;this.mtime=t.mtime;this.atime=t.atime;this.ctime=t.ctime;this.linkpath=r(t.linkpath);this.uname=t.uname;this.gname=t.gname;if(e){this[n](e)}if(s){this[n](s,true)}}write(t){const e=t.length;if(e>this.blockRemain){throw new Error(\"writing more to entry than is appropriate\")}const s=this.remain;const i=this.blockRemain;this.remain=Math.max(0,s-e);this.blockRemain=Math.max(0,i-e);if(this.ignore){return true}if(s>=e){return super.write(t)}return super.write(t.slice(0,s))}[n](t,e){for(const s in t){if(t[s]!==null&&t[s]!==undefined&&!(e&&s===\"path\")){this[s]=s===\"path\"||s===\"linkpath\"?r(t[s]):t[s]}}}}},5923:(t,e,s)=>{\"use strict\";const i=s(5274);const r=s(7900);const n=s(7147);const o=s(7714);const h=s(1525);const l=s(1017);const c=s(6043);t.exports=(t,e,s)=>{const r=i(t);if(!r.file){throw new TypeError(\"file is required\")}if(r.gzip||r.brotli||r.file.endsWith(\".br\")||r.file.endsWith(\".tbr\")){throw new TypeError(\"cannot append to compressed archives\")}if(!e||!Array.isArray(e)||!e.length){throw new TypeError(\"no files or directories specified\")}e=Array.from(e);return r.sync?replaceSync(r,e):replace(r,e,s)};const replaceSync=(t,e)=>{const s=new r.Sync(t);let i=true;let o;let h;try{try{o=n.openSync(t.file,\"r+\")}catch(e){if(e.code===\"ENOENT\"){o=n.openSync(t.file,\"w+\")}else{throw e}}const r=n.fstatSync(o);const l=Buffer.alloc(512);t:for(h=0;h<r.size;h+=512){for(let t=0,e=0;t<512;t+=e){e=n.readSync(o,l,t,l.length-t,h+t);if(h===0&&l[0]===31&&l[1]===139){throw new Error(\"cannot append to compressed archives\")}if(!e){break t}}const e=new c(l);if(!e.cksumValid){break}const s=512*Math.ceil(e.size/512);if(h+s+512>r.size){break}h+=s;if(t.mtimeCache){t.mtimeCache.set(e.path,e.mtime)}}i=false;streamSync(t,s,h,o,e)}finally{if(i){try{n.closeSync(o)}catch(t){}}}};const streamSync=(t,e,s,i,r)=>{const n=new o.WriteStreamSync(t.file,{fd:i,start:s});e.pipe(n);addFilesSync(e,r)};const replace=(t,e,s)=>{e=Array.from(e);const i=new r(t);const getPos=(e,s,i)=>{const cb=(t,s)=>{if(t){n.close(e,(e=>i(t)))}else{i(null,s)}};let r=0;if(s===0){return cb(null,0)}let o=0;const h=Buffer.alloc(512);const onread=(i,l)=>{if(i){return cb(i)}o+=l;if(o<512&&l){return n.read(e,h,o,h.length-o,r+o,onread)}if(r===0&&h[0]===31&&h[1]===139){return cb(new Error(\"cannot append to compressed archives\"))}if(o<512){return cb(null,r)}const a=new c(h);if(!a.cksumValid){return cb(null,r)}const f=512*Math.ceil(a.size/512);if(r+f+512>s){return cb(null,r)}r+=f+512;if(r>=s){return cb(null,r)}if(t.mtimeCache){t.mtimeCache.set(a.path,a.mtime)}o=0;n.read(e,h,0,512,r,onread)};n.read(e,h,0,512,r,onread)};const h=new Promise(((s,r)=>{i.on(\"error\",r);let h=\"r+\";const onopen=(l,c)=>{if(l&&l.code===\"ENOENT\"&&h===\"r+\"){h=\"w+\";return n.open(t.file,h,onopen)}if(l){return r(l)}n.fstat(c,((h,l)=>{if(h){return n.close(c,(()=>r(h)))}getPos(c,l.size,((n,h)=>{if(n){return r(n)}const l=new o.WriteStream(t.file,{fd:c,start:h});i.pipe(l);l.on(\"error\",r);l.on(\"close\",s);addFilesAsync(i,e)}))}))};n.open(t.file,h,onopen)}));return s?h.then(s,s):h};const addFilesSync=(t,e)=>{e.forEach((e=>{if(e.charAt(0)===\"@\"){h({file:l.resolve(t.cwd,e.slice(1)),sync:true,noResume:true,onentry:e=>t.add(e)})}else{t.add(e)}}));t.end()};const addFilesAsync=(t,e)=>{while(e.length){const s=e.shift();if(s.charAt(0)===\"@\"){return h({file:l.resolve(t.cwd,s.slice(1)),noResume:true,onentry:e=>t.add(e)}).then((s=>addFilesAsync(t,e)))}else{t.add(s)}}t.end()}},7111:(t,e,s)=>{const{isAbsolute:i,parse:r}=s(1017).win32;t.exports=t=>{let e=\"\";let s=r(t);while(i(t)||s.root){const i=t.charAt(0)===\"/\"&&t.slice(0,4)!==\"//?/\"?\"/\":s.root;t=t.slice(i.length);e+=i;s=r(t)}return[e,t]}},8886:t=>{t.exports=t=>{let e=t.length-1;let s=-1;while(e>-1&&t.charAt(e)===\"/\"){s=e;e--}return s===-1?t:t.slice(0,s)}},4173:(t,e)=>{\"use strict\";e.name=new Map([[\"0\",\"File\"],[\"\",\"OldFile\"],[\"1\",\"Link\"],[\"2\",\"SymbolicLink\"],[\"3\",\"CharacterDevice\"],[\"4\",\"BlockDevice\"],[\"5\",\"Directory\"],[\"6\",\"FIFO\"],[\"7\",\"ContiguousFile\"],[\"g\",\"GlobalExtendedHeader\"],[\"x\",\"ExtendedHeader\"],[\"A\",\"SolarisACL\"],[\"D\",\"GNUDumpDir\"],[\"I\",\"Inode\"],[\"K\",\"NextFileHasLongLinkpath\"],[\"L\",\"NextFileHasLongPath\"],[\"M\",\"ContinuationFile\"],[\"N\",\"OldGnuLongPath\"],[\"S\",\"SparseFile\"],[\"V\",\"TapeVolumeHeader\"],[\"X\",\"OldExtendedHeader\"]]);e.code=new Map(Array.from(e.name).map((t=>[t[1],t[0]])))},7628:(t,e,s)=>{\"use strict\";const i=s(9491);const r=s(8917);const n=s(7147);const o=s(7714);const h=s(1017);const l=s(9624);const c=s(4808);const a=s(9587);const f=s(7111);const u=s(6843);const d=s(8886);const p=s(7118);const m=Symbol(\"onEntry\");const y=Symbol(\"checkFs\");const b=Symbol(\"checkFs2\");const w=Symbol(\"pruneCache\");const E=Symbol(\"isReusable\");const g=Symbol(\"makeFs\");const S=Symbol(\"file\");const _=Symbol(\"directory\");const R=Symbol(\"link\");const O=Symbol(\"symlink\");const v=Symbol(\"hardlink\");const k=Symbol(\"unsupported\");const T=Symbol(\"checkPath\");const L=Symbol(\"mkdir\");const x=Symbol(\"onError\");const A=Symbol(\"pending\");const D=Symbol(\"pend\");const I=Symbol(\"unpend\");const N=Symbol(\"ended\");const B=Symbol(\"maybeClose\");const M=Symbol(\"skip\");const P=Symbol(\"doChown\");const C=Symbol(\"uid\");const F=Symbol(\"gid\");const z=Symbol(\"checkedCwd\");const U=s(6113);const j=s(1172);const Y=process.env.TESTING_TAR_FAKE_PLATFORM||process.platform;const Z=Y===\"win32\";const G=1024;const unlinkFile=(t,e)=>{if(!Z){return n.unlink(t,e)}const s=t+\".DELETE.\"+U.randomBytes(16).toString(\"hex\");n.rename(t,s,(t=>{if(t){return e(t)}n.unlink(s,e)}))};const unlinkFileSync=t=>{if(!Z){return n.unlinkSync(t)}const e=t+\".DELETE.\"+U.randomBytes(16).toString(\"hex\");n.renameSync(t,e);n.unlinkSync(e)};const uint32=(t,e,s)=>t===t>>>0?t:e===e>>>0?e:s;const cacheKeyNormalize=t=>d(u(p(t))).toLowerCase();const pruneCache=(t,e)=>{e=cacheKeyNormalize(e);for(const s of t.keys()){const i=cacheKeyNormalize(s);if(i===e||i.indexOf(e+\"/\")===0){t.delete(s)}}};const dropCache=t=>{for(const e of t.keys()){t.delete(e)}};class Unpack extends r{constructor(t){if(!t){t={}}t.ondone=t=>{this[N]=true;this[B]()};super(t);this[z]=false;this.reservations=a();this.transform=typeof t.transform===\"function\"?t.transform:null;this.writable=true;this.readable=false;this[A]=0;this[N]=false;this.dirCache=t.dirCache||new Map;if(typeof t.uid===\"number\"||typeof t.gid===\"number\"){if(typeof t.uid!==\"number\"||typeof t.gid!==\"number\"){throw new TypeError(\"cannot set owner without number uid and gid\")}if(t.preserveOwner){throw new TypeError(\"cannot preserve owner in archive and also set owner explicitly\")}this.uid=t.uid;this.gid=t.gid;this.setOwner=true}else{this.uid=null;this.gid=null;this.setOwner=false}if(t.preserveOwner===undefined&&typeof t.uid!==\"number\"){this.preserveOwner=process.getuid&&process.getuid()===0}else{this.preserveOwner=!!t.preserveOwner}this.processUid=(this.preserveOwner||this.setOwner)&&process.getuid?process.getuid():null;this.processGid=(this.preserveOwner||this.setOwner)&&process.getgid?process.getgid():null;this.maxDepth=typeof t.maxDepth===\"number\"?t.maxDepth:G;this.forceChown=t.forceChown===true;this.win32=!!t.win32||Z;this.newer=!!t.newer;this.keep=!!t.keep;this.noMtime=!!t.noMtime;this.preservePaths=!!t.preservePaths;this.unlink=!!t.unlink;this.cwd=u(h.resolve(t.cwd||process.cwd()));this.strip=+t.strip||0;this.processUmask=t.noChmod?0:process.umask();this.umask=typeof t.umask===\"number\"?t.umask:this.processUmask;this.dmode=t.dmode||511&~this.umask;this.fmode=t.fmode||438&~this.umask;this.on(\"entry\",(t=>this[m](t)))}warn(t,e,s={}){if(t===\"TAR_BAD_ARCHIVE\"||t===\"TAR_ABORT\"){s.recoverable=false}return super.warn(t,e,s)}[B](){if(this[N]&&this[A]===0){this.emit(\"prefinish\");this.emit(\"finish\");this.emit(\"end\")}}[T](t){const e=u(t.path);const s=e.split(\"/\");if(this.strip){if(s.length<this.strip){return false}if(t.type===\"Link\"){const e=u(t.linkpath).split(\"/\");if(e.length>=this.strip){t.linkpath=e.slice(this.strip).join(\"/\")}else{return false}}s.splice(0,this.strip);t.path=s.join(\"/\")}if(isFinite(this.maxDepth)&&s.length>this.maxDepth){this.warn(\"TAR_ENTRY_ERROR\",\"path excessively deep\",{entry:t,path:e,depth:s.length,maxDepth:this.maxDepth});return false}if(!this.preservePaths){if(s.includes(\"..\")||Z&&/^[a-z]:\\.\\.$/i.test(s[0])){this.warn(\"TAR_ENTRY_ERROR\",`path contains '..'`,{entry:t,path:e});return false}const[i,r]=f(e);if(i){t.path=r;this.warn(\"TAR_ENTRY_INFO\",`stripping ${i} from absolute path`,{entry:t,path:e})}}if(h.isAbsolute(t.path)){t.absolute=u(h.resolve(t.path))}else{t.absolute=u(h.resolve(this.cwd,t.path))}if(!this.preservePaths&&t.absolute.indexOf(this.cwd+\"/\")!==0&&t.absolute!==this.cwd){this.warn(\"TAR_ENTRY_ERROR\",\"path escaped extraction target\",{entry:t,path:u(t.path),resolvedPath:t.absolute,cwd:this.cwd});return false}if(t.absolute===this.cwd&&t.type!==\"Directory\"&&t.type!==\"GNUDumpDir\"){return false}if(this.win32){const{root:e}=h.win32.parse(t.absolute);t.absolute=e+c.encode(t.absolute.slice(e.length));const{root:s}=h.win32.parse(t.path);t.path=s+c.encode(t.path.slice(s.length))}return true}[m](t){if(!this[T](t)){return t.resume()}i.equal(typeof t.absolute,\"string\");switch(t.type){case\"Directory\":case\"GNUDumpDir\":if(t.mode){t.mode=t.mode|448}case\"File\":case\"OldFile\":case\"ContiguousFile\":case\"Link\":case\"SymbolicLink\":return this[y](t);case\"CharacterDevice\":case\"BlockDevice\":case\"FIFO\":default:return this[k](t)}}[x](t,e){if(t.name===\"CwdError\"){this.emit(\"error\",t)}else{this.warn(\"TAR_ENTRY_ERROR\",t,{entry:e});this[I]();e.resume()}}[L](t,e,s){l(u(t),{uid:this.uid,gid:this.gid,processUid:this.processUid,processGid:this.processGid,umask:this.processUmask,preserve:this.preservePaths,unlink:this.unlink,cache:this.dirCache,cwd:this.cwd,mode:e,noChmod:this.noChmod},s)}[P](t){return this.forceChown||this.preserveOwner&&(typeof t.uid===\"number\"&&t.uid!==this.processUid||typeof t.gid===\"number\"&&t.gid!==this.processGid)||(typeof this.uid===\"number\"&&this.uid!==this.processUid||typeof this.gid===\"number\"&&this.gid!==this.processGid)}[C](t){return uint32(this.uid,t.uid,this.processUid)}[F](t){return uint32(this.gid,t.gid,this.processGid)}[S](t,e){const s=t.mode&4095||this.fmode;const i=new o.WriteStream(t.absolute,{flags:j(t.size),mode:s,autoClose:false});i.on(\"error\",(s=>{if(i.fd){n.close(i.fd,(()=>{}))}i.write=()=>true;this[x](s,t);e()}));let r=1;const done=s=>{if(s){if(i.fd){n.close(i.fd,(()=>{}))}this[x](s,t);e();return}if(--r===0){n.close(i.fd,(s=>{if(s){this[x](s,t)}else{this[I]()}e()}))}};i.on(\"finish\",(e=>{const s=t.absolute;const o=i.fd;if(t.mtime&&!this.noMtime){r++;const e=t.atime||new Date;const i=t.mtime;n.futimes(o,e,i,(t=>t?n.utimes(s,e,i,(e=>done(e&&t))):done()))}if(this[P](t)){r++;const e=this[C](t);const i=this[F](t);n.fchown(o,e,i,(t=>t?n.chown(s,e,i,(e=>done(e&&t))):done()))}done()}));const h=this.transform?this.transform(t)||t:t;if(h!==t){h.on(\"error\",(s=>{this[x](s,t);e()}));t.pipe(h)}h.pipe(i)}[_](t,e){const s=t.mode&4095||this.dmode;this[L](t.absolute,s,(s=>{if(s){this[x](s,t);e();return}let i=1;const done=s=>{if(--i===0){e();this[I]();t.resume()}};if(t.mtime&&!this.noMtime){i++;n.utimes(t.absolute,t.atime||new Date,t.mtime,done)}if(this[P](t)){i++;n.chown(t.absolute,this[C](t),this[F](t),done)}done()}))}[k](t){t.unsupported=true;this.warn(\"TAR_ENTRY_UNSUPPORTED\",`unsupported entry type: ${t.type}`,{entry:t});t.resume()}[O](t,e){this[R](t,t.linkpath,\"symlink\",e)}[v](t,e){const s=u(h.resolve(this.cwd,t.linkpath));this[R](t,s,\"link\",e)}[D](){this[A]++}[I](){this[A]--;this[B]()}[M](t){this[I]();t.resume()}[E](t,e){return t.type===\"File\"&&!this.unlink&&e.isFile()&&e.nlink<=1&&!Z}[y](t){this[D]();const e=[t.path];if(t.linkpath){e.push(t.linkpath)}this.reservations.reserve(e,(e=>this[b](t,e)))}[w](t){if(t.type===\"SymbolicLink\"){dropCache(this.dirCache)}else if(t.type!==\"Directory\"){pruneCache(this.dirCache,t.absolute)}}[b](t,e){this[w](t);const done=s=>{this[w](t);e(s)};const checkCwd=()=>{this[L](this.cwd,this.dmode,(e=>{if(e){this[x](e,t);done();return}this[z]=true;start()}))};const start=()=>{if(t.absolute!==this.cwd){const e=u(h.dirname(t.absolute));if(e!==this.cwd){return this[L](e,this.dmode,(e=>{if(e){this[x](e,t);done();return}afterMakeParent()}))}}afterMakeParent()};const afterMakeParent=()=>{n.lstat(t.absolute,((e,s)=>{if(s&&(this.keep||this.newer&&s.mtime>t.mtime)){this[M](t);done();return}if(e||this[E](t,s)){return this[g](null,t,done)}if(s.isDirectory()){if(t.type===\"Directory\"){const e=!this.noChmod&&t.mode&&(s.mode&4095)!==t.mode;const afterChmod=e=>this[g](e,t,done);if(!e){return afterChmod()}return n.chmod(t.absolute,t.mode,afterChmod)}if(t.absolute!==this.cwd){return n.rmdir(t.absolute,(e=>this[g](e,t,done)))}}if(t.absolute===this.cwd){return this[g](null,t,done)}unlinkFile(t.absolute,(e=>this[g](e,t,done)))}))};if(this[z]){start()}else{checkCwd()}}[g](t,e,s){if(t){this[x](t,e);s();return}switch(e.type){case\"File\":case\"OldFile\":case\"ContiguousFile\":return this[S](e,s);case\"Link\":return this[v](e,s);case\"SymbolicLink\":return this[O](e,s);case\"Directory\":case\"GNUDumpDir\":return this[_](e,s)}}[R](t,e,s,i){n[s](e,t.absolute,(e=>{if(e){this[x](e,t)}else{this[I]();t.resume()}i()}))}}const callSync=t=>{try{return[null,t()]}catch(t){return[t,null]}};class UnpackSync extends Unpack{[g](t,e){return super[g](t,e,(()=>{}))}[y](t){this[w](t);if(!this[z]){const e=this[L](this.cwd,this.dmode);if(e){return this[x](e,t)}this[z]=true}if(t.absolute!==this.cwd){const e=u(h.dirname(t.absolute));if(e!==this.cwd){const s=this[L](e,this.dmode);if(s){return this[x](s,t)}}}const[e,s]=callSync((()=>n.lstatSync(t.absolute)));if(s&&(this.keep||this.newer&&s.mtime>t.mtime)){return this[M](t)}if(e||this[E](t,s)){return this[g](null,t)}if(s.isDirectory()){if(t.type===\"Directory\"){const e=!this.noChmod&&t.mode&&(s.mode&4095)!==t.mode;const[i]=e?callSync((()=>{n.chmodSync(t.absolute,t.mode)})):[];return this[g](i,t)}const[e]=callSync((()=>n.rmdirSync(t.absolute)));this[g](e,t)}const[i]=t.absolute===this.cwd?[]:callSync((()=>unlinkFileSync(t.absolute)));this[g](i,t)}[S](t,e){const s=t.mode&4095||this.fmode;const oner=s=>{let r;try{n.closeSync(i)}catch(t){r=t}if(s||r){this[x](s||r,t)}e()};let i;try{i=n.openSync(t.absolute,j(t.size),s)}catch(t){return oner(t)}const r=this.transform?this.transform(t)||t:t;if(r!==t){r.on(\"error\",(e=>this[x](e,t)));t.pipe(r)}r.on(\"data\",(t=>{try{n.writeSync(i,t,0,t.length)}catch(t){oner(t)}}));r.on(\"end\",(e=>{let s=null;if(t.mtime&&!this.noMtime){const e=t.atime||new Date;const r=t.mtime;try{n.futimesSync(i,e,r)}catch(i){try{n.utimesSync(t.absolute,e,r)}catch(t){s=i}}}if(this[P](t)){const e=this[C](t);const r=this[F](t);try{n.fchownSync(i,e,r)}catch(i){try{n.chownSync(t.absolute,e,r)}catch(t){s=s||i}}}oner(s)}))}[_](t,e){const s=t.mode&4095||this.dmode;const i=this[L](t.absolute,s);if(i){this[x](i,t);e();return}if(t.mtime&&!this.noMtime){try{n.utimesSync(t.absolute,t.atime||new Date,t.mtime)}catch(i){}}if(this[P](t)){try{n.chownSync(t.absolute,this[C](t),this[F](t))}catch(i){}}e();t.resume()}[L](t,e){try{return l.sync(u(t),{uid:this.uid,gid:this.gid,processUid:this.processUid,processGid:this.processGid,umask:this.processUmask,preserve:this.preservePaths,unlink:this.unlink,cache:this.dirCache,cwd:this.cwd,mode:e})}catch(t){return t}}[R](t,e,s,i){try{n[s+\"Sync\"](e,t.absolute);i();t.resume()}catch(e){return this[x](e,t)}}}Unpack.Sync=UnpackSync;t.exports=Unpack},4404:(t,e,s)=>{\"use strict\";const i=s(5274);const r=s(5923);t.exports=(t,e,s)=>{const n=i(t);if(!n.file){throw new TypeError(\"file is required\")}if(n.gzip||n.brotli||n.file.endsWith(\".br\")||n.file.endsWith(\".tbr\")){throw new TypeError(\"cannot append to compressed archives\")}if(!e||!Array.isArray(e)||!e.length){throw new TypeError(\"no files or directories specified\")}e=Array.from(e);mtimeFilter(n);return r(n,e,s)};const mtimeFilter=t=>{const e=t.filter;if(!t.mtimeCache){t.mtimeCache=new Map}t.filter=e?(s,i)=>e(s,i)&&!(t.mtimeCache.get(s)>i.mtime):(e,s)=>!(t.mtimeCache.get(e)>s.mtime)}},5899:t=>{\"use strict\";t.exports=t=>class extends t{warn(t,e,s={}){if(this.file){s.file=this.file}if(this.cwd){s.cwd=this.cwd}s.code=e instanceof Error&&e.code||t;s.tarCode=t;if(!this.strict&&s.recoverable!==false){if(e instanceof Error){s=Object.assign(e,s);e=e.message}this.emit(\"warn\",s.tarCode,e,s)}else if(e instanceof Error){this.emit(\"error\",Object.assign(e,s))}else{this.emit(\"error\",Object.assign(new Error(`${t}: ${e}`),s))}}}},4808:t=>{\"use strict\";const e=[\"|\",\"<\",\">\",\"?\",\":\"];const s=e.map((t=>String.fromCharCode(61440+t.charCodeAt(0))));const i=new Map(e.map(((t,e)=>[t,s[e]])));const r=new Map(s.map(((t,s)=>[t,e[s]])));t.exports={encode:t=>e.reduce(((t,e)=>t.split(e).join(i.get(e))),t),decode:t=>s.reduce(((t,e)=>t.split(e).join(r.get(e))),t)}},5450:(t,e,s)=>{\"use strict\";const{Minipass:i}=s(6684);const r=s(7996);const n=s(6043);const o=s(7147);const h=s(1017);const l=s(6843);const c=s(8886);const prefixPath=(t,e)=>{if(!e){return l(t)}t=l(t).replace(/^\\.(\\/|$)/,\"\");return c(e)+\"/\"+t};const a=16*1024*1024;const f=Symbol(\"process\");const u=Symbol(\"file\");const d=Symbol(\"directory\");const p=Symbol(\"symlink\");const m=Symbol(\"hardlink\");const y=Symbol(\"header\");const b=Symbol(\"read\");const w=Symbol(\"lstat\");const E=Symbol(\"onlstat\");const g=Symbol(\"onread\");const S=Symbol(\"onreadlink\");const _=Symbol(\"openfile\");const R=Symbol(\"onopenfile\");const O=Symbol(\"close\");const v=Symbol(\"mode\");const k=Symbol(\"awaitDrain\");const T=Symbol(\"ondrain\");const L=Symbol(\"prefix\");const x=Symbol(\"hadError\");const A=s(5899);const D=s(4808);const I=s(7111);const N=s(8371);const B=A(class WriteEntry extends i{constructor(t,e){e=e||{};super(e);if(typeof t!==\"string\"){throw new TypeError(\"path is required\")}this.path=l(t);this.portable=!!e.portable;this.myuid=process.getuid&&process.getuid()||0;this.myuser=process.env.USER||\"\";this.maxReadSize=e.maxReadSize||a;this.linkCache=e.linkCache||new Map;this.statCache=e.statCache||new Map;this.preservePaths=!!e.preservePaths;this.cwd=l(e.cwd||process.cwd());this.strict=!!e.strict;this.noPax=!!e.noPax;this.noMtime=!!e.noMtime;this.mtime=e.mtime||null;this.prefix=e.prefix?l(e.prefix):null;this.fd=null;this.blockLen=null;this.blockRemain=null;this.buf=null;this.offset=null;this.length=null;this.pos=null;this.remain=null;if(typeof e.onwarn===\"function\"){this.on(\"warn\",e.onwarn)}let s=false;if(!this.preservePaths){const[t,e]=I(this.path);if(t){this.path=e;s=t}}this.win32=!!e.win32||process.platform===\"win32\";if(this.win32){this.path=D.decode(this.path.replace(/\\\\/g,\"/\"));t=t.replace(/\\\\/g,\"/\")}this.absolute=l(e.absolute||h.resolve(this.cwd,t));if(this.path===\"\"){this.path=\"./\"}if(s){this.warn(\"TAR_ENTRY_INFO\",`stripping ${s} from absolute path`,{entry:this,path:s+this.path})}if(this.statCache.has(this.absolute)){this[E](this.statCache.get(this.absolute))}else{this[w]()}}emit(t,...e){if(t===\"error\"){this[x]=true}return super.emit(t,...e)}[w](){o.lstat(this.absolute,((t,e)=>{if(t){return this.emit(\"error\",t)}this[E](e)}))}[E](t){this.statCache.set(this.absolute,t);this.stat=t;if(!t.isFile()){t.size=0}this.type=getType(t);this.emit(\"stat\",t);this[f]()}[f](){switch(this.type){case\"File\":return this[u]();case\"Directory\":return this[d]();case\"SymbolicLink\":return this[p]();default:return this.end()}}[v](t){return N(t,this.type===\"Directory\",this.portable)}[L](t){return prefixPath(t,this.prefix)}[y](){if(this.type===\"Directory\"&&this.portable){this.noMtime=true}this.header=new n({path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,mode:this[v](this.stat.mode),uid:this.portable?null:this.stat.uid,gid:this.portable?null:this.stat.gid,size:this.stat.size,mtime:this.noMtime?null:this.mtime||this.stat.mtime,type:this.type,uname:this.portable?null:this.stat.uid===this.myuid?this.myuser:\"\",atime:this.portable?null:this.stat.atime,ctime:this.portable?null:this.stat.ctime});if(this.header.encode()&&!this.noPax){super.write(new r({atime:this.portable?null:this.header.atime,ctime:this.portable?null:this.header.ctime,gid:this.portable?null:this.header.gid,mtime:this.noMtime?null:this.mtime||this.header.mtime,path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,size:this.header.size,uid:this.portable?null:this.header.uid,uname:this.portable?null:this.header.uname,dev:this.portable?null:this.stat.dev,ino:this.portable?null:this.stat.ino,nlink:this.portable?null:this.stat.nlink}).encode())}super.write(this.header.block)}[d](){if(this.path.slice(-1)!==\"/\"){this.path+=\"/\"}this.stat.size=0;this[y]();this.end()}[p](){o.readlink(this.absolute,((t,e)=>{if(t){return this.emit(\"error\",t)}this[S](e)}))}[S](t){this.linkpath=l(t);this[y]();this.end()}[m](t){this.type=\"Link\";this.linkpath=l(h.relative(this.cwd,t));this.stat.size=0;this[y]();this.end()}[u](){if(this.stat.nlink>1){const t=this.stat.dev+\":\"+this.stat.ino;if(this.linkCache.has(t)){const e=this.linkCache.get(t);if(e.indexOf(this.cwd)===0){return this[m](e)}}this.linkCache.set(t,this.absolute)}this[y]();if(this.stat.size===0){return this.end()}this[_]()}[_](){o.open(this.absolute,\"r\",((t,e)=>{if(t){return this.emit(\"error\",t)}this[R](e)}))}[R](t){this.fd=t;if(this[x]){return this[O]()}this.blockLen=512*Math.ceil(this.stat.size/512);this.blockRemain=this.blockLen;const e=Math.min(this.blockLen,this.maxReadSize);this.buf=Buffer.allocUnsafe(e);this.offset=0;this.pos=0;this.remain=this.stat.size;this.length=this.buf.length;this[b]()}[b](){const{fd:t,buf:e,offset:s,length:i,pos:r}=this;o.read(t,e,s,i,r,((t,e)=>{if(t){return this[O]((()=>this.emit(\"error\",t)))}this[g](e)}))}[O](t){o.close(this.fd,t)}[g](t){if(t<=0&&this.remain>0){const t=new Error(\"encountered unexpected EOF\");t.path=this.absolute;t.syscall=\"read\";t.code=\"EOF\";return this[O]((()=>this.emit(\"error\",t)))}if(t>this.remain){const t=new Error(\"did not encounter expected EOF\");t.path=this.absolute;t.syscall=\"read\";t.code=\"EOF\";return this[O]((()=>this.emit(\"error\",t)))}if(t===this.remain){for(let e=t;e<this.length&&t<this.blockRemain;e++){this.buf[e+this.offset]=0;t++;this.remain++}}const e=this.offset===0&&t===this.buf.length?this.buf:this.buf.slice(this.offset,this.offset+t);const s=this.write(e);if(!s){this[k]((()=>this[T]()))}else{this[T]()}}[k](t){this.once(\"drain\",t)}write(t){if(this.blockRemain<t.length){const t=new Error(\"writing more data than expected\");t.path=this.absolute;return this.emit(\"error\",t)}this.remain-=t.length;this.blockRemain-=t.length;this.pos+=t.length;this.offset+=t.length;return super.write(t)}[T](){if(!this.remain){if(this.blockRemain){super.write(Buffer.alloc(this.blockRemain))}return this[O]((t=>t?this.emit(\"error\",t):this.end()))}if(this.offset>=this.length){this.buf=Buffer.allocUnsafe(Math.min(this.blockRemain,this.buf.length));this.offset=0}this.length=this.buf.length-this.offset;this[b]()}});class WriteEntrySync extends B{[w](){this[E](o.lstatSync(this.absolute))}[p](){this[S](o.readlinkSync(this.absolute))}[_](){this[R](o.openSync(this.absolute,\"r\"))}[b](){let t=true;try{const{fd:e,buf:s,offset:i,length:r,pos:n}=this;const h=o.readSync(e,s,i,r,n);this[g](h);t=false}finally{if(t){try{this[O]((()=>{}))}catch(t){}}}}[k](t){t()}[O](t){o.closeSync(this.fd);t()}}const M=A(class WriteEntryTar extends i{constructor(t,e){e=e||{};super(e);this.preservePaths=!!e.preservePaths;this.portable=!!e.portable;this.strict=!!e.strict;this.noPax=!!e.noPax;this.noMtime=!!e.noMtime;this.readEntry=t;this.type=t.type;if(this.type===\"Directory\"&&this.portable){this.noMtime=true}this.prefix=e.prefix||null;this.path=l(t.path);this.mode=this[v](t.mode);this.uid=this.portable?null:t.uid;this.gid=this.portable?null:t.gid;this.uname=this.portable?null:t.uname;this.gname=this.portable?null:t.gname;this.size=t.size;this.mtime=this.noMtime?null:e.mtime||t.mtime;this.atime=this.portable?null:t.atime;this.ctime=this.portable?null:t.ctime;this.linkpath=l(t.linkpath);if(typeof e.onwarn===\"function\"){this.on(\"warn\",e.onwarn)}let s=false;if(!this.preservePaths){const[t,e]=I(this.path);if(t){this.path=e;s=t}}this.remain=t.size;this.blockRemain=t.startBlockSize;this.header=new n({path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,mode:this.mode,uid:this.portable?null:this.uid,gid:this.portable?null:this.gid,size:this.size,mtime:this.noMtime?null:this.mtime,type:this.type,uname:this.portable?null:this.uname,atime:this.portable?null:this.atime,ctime:this.portable?null:this.ctime});if(s){this.warn(\"TAR_ENTRY_INFO\",`stripping ${s} from absolute path`,{entry:this,path:s+this.path})}if(this.header.encode()&&!this.noPax){super.write(new r({atime:this.portable?null:this.atime,ctime:this.portable?null:this.ctime,gid:this.portable?null:this.gid,mtime:this.noMtime?null:this.mtime,path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,size:this.size,uid:this.portable?null:this.uid,uname:this.portable?null:this.uname,dev:this.portable?null:this.readEntry.dev,ino:this.portable?null:this.readEntry.ino,nlink:this.portable?null:this.readEntry.nlink}).encode())}super.write(this.header.block);t.pipe(this)}[L](t){return prefixPath(t,this.prefix)}[v](t){return N(t,this.type===\"Directory\",this.portable)}write(t){const e=t.length;if(e>this.blockRemain){throw new Error(\"writing more to entry than is appropriate\")}this.blockRemain-=e;return super.write(t)}end(){if(this.blockRemain){super.write(Buffer.alloc(this.blockRemain))}return super.end()}});B.Sync=WriteEntrySync;B.Tar=M;const getType=t=>t.isFile()?\"File\":t.isDirectory()?\"Directory\":t.isSymbolicLink()?\"SymbolicLink\":\"Unsupported\";t.exports=B},6684:(t,e,s)=>{\"use strict\";const i=typeof process===\"object\"&&process?process:{stdout:null,stderr:null};const r=s(2361);const n=s(2781);const o=s(1576);const h=o.StringDecoder;const l=Symbol(\"EOF\");const c=Symbol(\"maybeEmitEnd\");const a=Symbol(\"emittedEnd\");const f=Symbol(\"emittingEnd\");const u=Symbol(\"emittedError\");const d=Symbol(\"closed\");const p=Symbol(\"read\");const m=Symbol(\"flush\");const y=Symbol(\"flushChunk\");const b=Symbol(\"encoding\");const w=Symbol(\"decoder\");const E=Symbol(\"flowing\");const g=Symbol(\"paused\");const S=Symbol(\"resume\");const _=Symbol(\"buffer\");const R=Symbol(\"pipes\");const O=Symbol(\"bufferLength\");const v=Symbol(\"bufferPush\");const k=Symbol(\"bufferShift\");const T=Symbol(\"objectMode\");const L=Symbol(\"destroyed\");const x=Symbol(\"error\");const A=Symbol(\"emitData\");const D=Symbol(\"emitEnd\");const I=Symbol(\"emitEnd2\");const N=Symbol(\"async\");const B=Symbol(\"abort\");const M=Symbol(\"aborted\");const P=Symbol(\"signal\");const defer=t=>Promise.resolve().then(t);const C=global._MP_NO_ITERATOR_SYMBOLS_!==\"1\";const F=C&&Symbol.asyncIterator||Symbol(\"asyncIterator not implemented\");const z=C&&Symbol.iterator||Symbol(\"iterator not implemented\");const isEndish=t=>t===\"end\"||t===\"finish\"||t===\"prefinish\";const isArrayBuffer=t=>t instanceof ArrayBuffer||typeof t===\"object\"&&t.constructor&&t.constructor.name===\"ArrayBuffer\"&&t.byteLength>=0;const isArrayBufferView=t=>!Buffer.isBuffer(t)&&ArrayBuffer.isView(t);class Pipe{constructor(t,e,s){this.src=t;this.dest=e;this.opts=s;this.ondrain=()=>t[S]();e.on(\"drain\",this.ondrain)}unpipe(){this.dest.removeListener(\"drain\",this.ondrain)}proxyErrors(){}end(){this.unpipe();if(this.opts.end)this.dest.end()}}class PipeProxyErrors extends Pipe{unpipe(){this.src.removeListener(\"error\",this.proxyErrors);super.unpipe()}constructor(t,e,s){super(t,e,s);this.proxyErrors=t=>e.emit(\"error\",t);t.on(\"error\",this.proxyErrors)}}class Minipass extends n{constructor(t){super();this[E]=false;this[g]=false;this[R]=[];this[_]=[];this[T]=t&&t.objectMode||false;if(this[T])this[b]=null;else this[b]=t&&t.encoding||null;if(this[b]===\"buffer\")this[b]=null;this[N]=t&&!!t.async||false;this[w]=this[b]?new h(this[b]):null;this[l]=false;this[a]=false;this[f]=false;this[d]=false;this[u]=null;this.writable=true;this.readable=true;this[O]=0;this[L]=false;if(t&&t.debugExposeBuffer===true){Object.defineProperty(this,\"buffer\",{get:()=>this[_]})}if(t&&t.debugExposePipes===true){Object.defineProperty(this,\"pipes\",{get:()=>this[R]})}this[P]=t&&t.signal;this[M]=false;if(this[P]){this[P].addEventListener(\"abort\",(()=>this[B]()));if(this[P].aborted){this[B]()}}}get bufferLength(){return this[O]}get encoding(){return this[b]}set encoding(t){if(this[T])throw new Error(\"cannot set encoding in objectMode\");if(this[b]&&t!==this[b]&&(this[w]&&this[w].lastNeed||this[O]))throw new Error(\"cannot change encoding\");if(this[b]!==t){this[w]=t?new h(t):null;if(this[_].length)this[_]=this[_].map((t=>this[w].write(t)))}this[b]=t}setEncoding(t){this.encoding=t}get objectMode(){return this[T]}set objectMode(t){this[T]=this[T]||!!t}get[\"async\"](){return this[N]}set[\"async\"](t){this[N]=this[N]||!!t}[B](){this[M]=true;this.emit(\"abort\",this[P].reason);this.destroy(this[P].reason)}get aborted(){return this[M]}set aborted(t){}write(t,e,s){if(this[M])return false;if(this[l])throw new Error(\"write after end\");if(this[L]){this.emit(\"error\",Object.assign(new Error(\"Cannot call write after a stream was destroyed\"),{code:\"ERR_STREAM_DESTROYED\"}));return true}if(typeof e===\"function\")s=e,e=\"utf8\";if(!e)e=\"utf8\";const i=this[N]?defer:t=>t();if(!this[T]&&!Buffer.isBuffer(t)){if(isArrayBufferView(t))t=Buffer.from(t.buffer,t.byteOffset,t.byteLength);else if(isArrayBuffer(t))t=Buffer.from(t);else if(typeof t!==\"string\")this.objectMode=true}if(this[T]){if(this.flowing&&this[O]!==0)this[m](true);if(this.flowing)this.emit(\"data\",t);else this[v](t);if(this[O]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(!t.length){if(this[O]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(typeof t===\"string\"&&!(e===this[b]&&!this[w].lastNeed)){t=Buffer.from(t,e)}if(Buffer.isBuffer(t)&&this[b])t=this[w].write(t);if(this.flowing&&this[O]!==0)this[m](true);if(this.flowing)this.emit(\"data\",t);else this[v](t);if(this[O]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}read(t){if(this[L])return null;if(this[O]===0||t===0||t>this[O]){this[c]();return null}if(this[T])t=null;if(this[_].length>1&&!this[T]){if(this.encoding)this[_]=[this[_].join(\"\")];else this[_]=[Buffer.concat(this[_],this[O])]}const e=this[p](t||null,this[_][0]);this[c]();return e}[p](t,e){if(t===e.length||t===null)this[k]();else{this[_][0]=e.slice(t);e=e.slice(0,t);this[O]-=t}this.emit(\"data\",e);if(!this[_].length&&!this[l])this.emit(\"drain\");return e}end(t,e,s){if(typeof t===\"function\")s=t,t=null;if(typeof e===\"function\")s=e,e=\"utf8\";if(t)this.write(t,e);if(s)this.once(\"end\",s);this[l]=true;this.writable=false;if(this.flowing||!this[g])this[c]();return this}[S](){if(this[L])return;this[g]=false;this[E]=true;this.emit(\"resume\");if(this[_].length)this[m]();else if(this[l])this[c]();else this.emit(\"drain\")}resume(){return this[S]()}pause(){this[E]=false;this[g]=true}get destroyed(){return this[L]}get flowing(){return this[E]}get paused(){return this[g]}[v](t){if(this[T])this[O]+=1;else this[O]+=t.length;this[_].push(t)}[k](){if(this[T])this[O]-=1;else this[O]-=this[_][0].length;return this[_].shift()}[m](t){do{}while(this[y](this[k]())&&this[_].length);if(!t&&!this[_].length&&!this[l])this.emit(\"drain\")}[y](t){this.emit(\"data\",t);return this.flowing}pipe(t,e){if(this[L])return;const s=this[a];e=e||{};if(t===i.stdout||t===i.stderr)e.end=false;else e.end=e.end!==false;e.proxyErrors=!!e.proxyErrors;if(s){if(e.end)t.end()}else{this[R].push(!e.proxyErrors?new Pipe(this,t,e):new PipeProxyErrors(this,t,e));if(this[N])defer((()=>this[S]()));else this[S]()}return t}unpipe(t){const e=this[R].find((e=>e.dest===t));if(e){this[R].splice(this[R].indexOf(e),1);e.unpipe()}}addListener(t,e){return this.on(t,e)}on(t,e){const s=super.on(t,e);if(t===\"data\"&&!this[R].length&&!this.flowing)this[S]();else if(t===\"readable\"&&this[O]!==0)super.emit(\"readable\");else if(isEndish(t)&&this[a]){super.emit(t);this.removeAllListeners(t)}else if(t===\"error\"&&this[u]){if(this[N])defer((()=>e.call(this,this[u])));else e.call(this,this[u])}return s}get emittedEnd(){return this[a]}[c](){if(!this[f]&&!this[a]&&!this[L]&&this[_].length===0&&this[l]){this[f]=true;this.emit(\"end\");this.emit(\"prefinish\");this.emit(\"finish\");if(this[d])this.emit(\"close\");this[f]=false}}emit(t,e,...s){if(t!==\"error\"&&t!==\"close\"&&t!==L&&this[L])return;else if(t===\"data\"){return!this[T]&&!e?false:this[N]?defer((()=>this[A](e))):this[A](e)}else if(t===\"end\"){return this[D]()}else if(t===\"close\"){this[d]=true;if(!this[a]&&!this[L])return;const t=super.emit(\"close\");this.removeAllListeners(\"close\");return t}else if(t===\"error\"){this[u]=e;super.emit(x,e);const t=!this[P]||this.listeners(\"error\").length?super.emit(\"error\",e):false;this[c]();return t}else if(t===\"resume\"){const t=super.emit(\"resume\");this[c]();return t}else if(t===\"finish\"||t===\"prefinish\"){const e=super.emit(t);this.removeAllListeners(t);return e}const i=super.emit(t,e,...s);this[c]();return i}[A](t){for(const e of this[R]){if(e.dest.write(t)===false)this.pause()}const e=super.emit(\"data\",t);this[c]();return e}[D](){if(this[a])return;this[a]=true;this.readable=false;if(this[N])defer((()=>this[I]()));else this[I]()}[I](){if(this[w]){const t=this[w].end();if(t){for(const e of this[R]){e.dest.write(t)}super.emit(\"data\",t)}}for(const t of this[R]){t.end()}const t=super.emit(\"end\");this.removeAllListeners(\"end\");return t}collect(){const t=[];if(!this[T])t.dataLength=0;const e=this.promise();this.on(\"data\",(e=>{t.push(e);if(!this[T])t.dataLength+=e.length}));return e.then((()=>t))}concat(){return this[T]?Promise.reject(new Error(\"cannot concat in objectMode\")):this.collect().then((t=>this[T]?Promise.reject(new Error(\"cannot concat in objectMode\")):this[b]?t.join(\"\"):Buffer.concat(t,t.dataLength)))}promise(){return new Promise(((t,e)=>{this.on(L,(()=>e(new Error(\"stream destroyed\"))));this.on(\"error\",(t=>e(t)));this.on(\"end\",(()=>t()))}))}[F](){let t=false;const stop=()=>{this.pause();t=true;return Promise.resolve({done:true})};const next=()=>{if(t)return stop();const e=this.read();if(e!==null)return Promise.resolve({done:false,value:e});if(this[l])return stop();let s=null;let i=null;const onerr=t=>{this.removeListener(\"data\",ondata);this.removeListener(\"end\",onend);this.removeListener(L,ondestroy);stop();i(t)};const ondata=t=>{this.removeListener(\"error\",onerr);this.removeListener(\"end\",onend);this.removeListener(L,ondestroy);this.pause();s({value:t,done:!!this[l]})};const onend=()=>{this.removeListener(\"error\",onerr);this.removeListener(\"data\",ondata);this.removeListener(L,ondestroy);stop();s({done:true})};const ondestroy=()=>onerr(new Error(\"stream destroyed\"));return new Promise(((t,e)=>{i=e;s=t;this.once(L,ondestroy);this.once(\"error\",onerr);this.once(\"end\",onend);this.once(\"data\",ondata)}))};return{next:next,throw:stop,return:stop,[F](){return this}}}[z](){let t=false;const stop=()=>{this.pause();this.removeListener(x,stop);this.removeListener(L,stop);this.removeListener(\"end\",stop);t=true;return{done:true}};const next=()=>{if(t)return stop();const e=this.read();return e===null?stop():{value:e}};this.once(\"end\",stop);this.once(x,stop);this.once(L,stop);return{next:next,throw:stop,return:stop,[z](){return this}}}destroy(t){if(this[L]){if(t)this.emit(\"error\",t);else this.emit(L);return this}this[L]=true;this[_].length=0;this[O]=0;if(typeof this.close===\"function\"&&!this[d])this.close();if(t)this.emit(\"error\",t);else this.emit(L);return this}static isStream(t){return!!t&&(t instanceof Minipass||t instanceof n||t instanceof r&&(typeof t.pipe===\"function\"||typeof t.write===\"function\"&&typeof t.end===\"function\"))}}e.Minipass=Minipass},4091:t=>{\"use strict\";t.exports=function(t){t.prototype[Symbol.iterator]=function*(){for(let t=this.head;t;t=t.next){yield t.value}}}},665:(t,e,s)=>{\"use strict\";t.exports=Yallist;Yallist.Node=Node;Yallist.create=Yallist;function Yallist(t){var e=this;if(!(e instanceof Yallist)){e=new Yallist}e.tail=null;e.head=null;e.length=0;if(t&&typeof t.forEach===\"function\"){t.forEach((function(t){e.push(t)}))}else if(arguments.length>0){for(var s=0,i=arguments.length;s<i;s++){e.push(arguments[s])}}return e}Yallist.prototype.removeNode=function(t){if(t.list!==this){throw new Error(\"removing node which does not belong to this list\")}var e=t.next;var s=t.prev;if(e){e.prev=s}if(s){s.next=e}if(t===this.head){this.head=e}if(t===this.tail){this.tail=s}t.list.length--;t.next=null;t.prev=null;t.list=null;return e};Yallist.prototype.unshiftNode=function(t){if(t===this.head){return}if(t.list){t.list.removeNode(t)}var e=this.head;t.list=this;t.next=e;if(e){e.prev=t}this.head=t;if(!this.tail){this.tail=t}this.length++};Yallist.prototype.pushNode=function(t){if(t===this.tail){return}if(t.list){t.list.removeNode(t)}var e=this.tail;t.list=this;t.prev=e;if(e){e.next=t}this.tail=t;if(!this.head){this.head=t}this.length++};Yallist.prototype.push=function(){for(var t=0,e=arguments.length;t<e;t++){push(this,arguments[t])}return this.length};Yallist.prototype.unshift=function(){for(var t=0,e=arguments.length;t<e;t++){unshift(this,arguments[t])}return this.length};Yallist.prototype.pop=function(){if(!this.tail){return undefined}var t=this.tail.value;this.tail=this.tail.prev;if(this.tail){this.tail.next=null}else{this.head=null}this.length--;return t};Yallist.prototype.shift=function(){if(!this.head){return undefined}var t=this.head.value;this.head=this.head.next;if(this.head){this.head.prev=null}else{this.tail=null}this.length--;return t};Yallist.prototype.forEach=function(t,e){e=e||this;for(var s=this.head,i=0;s!==null;i++){t.call(e,s.value,i,this);s=s.next}};Yallist.prototype.forEachReverse=function(t,e){e=e||this;for(var s=this.tail,i=this.length-1;s!==null;i--){t.call(e,s.value,i,this);s=s.prev}};Yallist.prototype.get=function(t){for(var e=0,s=this.head;s!==null&&e<t;e++){s=s.next}if(e===t&&s!==null){return s.value}};Yallist.prototype.getReverse=function(t){for(var e=0,s=this.tail;s!==null&&e<t;e++){s=s.prev}if(e===t&&s!==null){return s.value}};Yallist.prototype.map=function(t,e){e=e||this;var s=new Yallist;for(var i=this.head;i!==null;){s.push(t.call(e,i.value,this));i=i.next}return s};Yallist.prototype.mapReverse=function(t,e){e=e||this;var s=new Yallist;for(var i=this.tail;i!==null;){s.push(t.call(e,i.value,this));i=i.prev}return s};Yallist.prototype.reduce=function(t,e){var s;var i=this.head;if(arguments.length>1){s=e}else if(this.head){i=this.head.next;s=this.head.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var r=0;i!==null;r++){s=t(s,i.value,r);i=i.next}return s};Yallist.prototype.reduceReverse=function(t,e){var s;var i=this.tail;if(arguments.length>1){s=e}else if(this.tail){i=this.tail.prev;s=this.tail.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var r=this.length-1;i!==null;r--){s=t(s,i.value,r);i=i.prev}return s};Yallist.prototype.toArray=function(){var t=new Array(this.length);for(var e=0,s=this.head;s!==null;e++){t[e]=s.value;s=s.next}return t};Yallist.prototype.toArrayReverse=function(){var t=new Array(this.length);for(var e=0,s=this.tail;s!==null;e++){t[e]=s.value;s=s.prev}return t};Yallist.prototype.slice=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var s=new Yallist;if(e<t||e<0){return s}if(t<0){t=0}if(e>this.length){e=this.length}for(var i=0,r=this.head;r!==null&&i<t;i++){r=r.next}for(;r!==null&&i<e;i++,r=r.next){s.push(r.value)}return s};Yallist.prototype.sliceReverse=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var s=new Yallist;if(e<t||e<0){return s}if(t<0){t=0}if(e>this.length){e=this.length}for(var i=this.length,r=this.tail;r!==null&&i>e;i--){r=r.prev}for(;r!==null&&i>t;i--,r=r.prev){s.push(r.value)}return s};Yallist.prototype.splice=function(t,e,...s){if(t>this.length){t=this.length-1}if(t<0){t=this.length+t}for(var i=0,r=this.head;r!==null&&i<t;i++){r=r.next}var n=[];for(var i=0;r&&i<e;i++){n.push(r.value);r=this.removeNode(r)}if(r===null){r=this.tail}if(r!==this.head&&r!==this.tail){r=r.prev}for(var i=0;i<s.length;i++){r=insert(this,r,s[i])}return n};Yallist.prototype.reverse=function(){var t=this.head;var e=this.tail;for(var s=t;s!==null;s=s.prev){var i=s.prev;s.prev=s.next;s.next=i}this.head=e;this.tail=t;return this};function insert(t,e,s){var i=e===t.head?new Node(s,null,e,t):new Node(s,e,e.next,t);if(i.next===null){t.tail=i}if(i.prev===null){t.head=i}t.length++;return i}function push(t,e){t.tail=new Node(e,t.tail,null,t);if(!t.head){t.head=t.tail}t.length++}function unshift(t,e){t.head=new Node(e,null,t.head,t);if(!t.tail){t.tail=t.head}t.length++}function Node(t,e,s,i){if(!(this instanceof Node)){return new Node(t,e,s,i)}this.list=i;this.value=t;if(e){e.next=this;this.prev=e}else{this.prev=null}if(s){s.prev=this;this.next=s}else{this.next=null}}try{s(4091)(Yallist)}catch(t){}},9491:t=>{\"use strict\";t.exports=require(\"assert\")},4300:t=>{\"use strict\";t.exports=require(\"buffer\")},6113:t=>{\"use strict\";t.exports=require(\"crypto\")},2361:t=>{\"use strict\";t.exports=require(\"events\")},7147:t=>{\"use strict\";t.exports=require(\"fs\")},1017:t=>{\"use strict\";t.exports=require(\"path\")},7282:t=>{\"use strict\";t.exports=require(\"process\")},2781:t=>{\"use strict\";t.exports=require(\"stream\")},1576:t=>{\"use strict\";t.exports=require(\"string_decoder\")},3837:t=>{\"use strict\";t.exports=require(\"util\")},9796:t=>{\"use strict\";t.exports=require(\"zlib\")}};var e={};function __nccwpck_require__(s){var i=e[s];if(i!==undefined){return i.exports}var r=e[s]={exports:{}};var n=true;try{t[s](r,r.exports,__nccwpck_require__);n=false}finally{if(n)delete e[s]}return r.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var s={};(()=>{\"use strict\";var t=s;t.c=t.create=__nccwpck_require__(4016);t.r=t.replace=__nccwpck_require__(5923);t.t=t.list=__nccwpck_require__(1525);t.u=t.update=__nccwpck_require__(4404);t.x=t.extract=__nccwpck_require__(5317);t.Pack=__nccwpck_require__(7900);t.Unpack=__nccwpck_require__(7628);t.Parse=__nccwpck_require__(8917);t.ReadEntry=__nccwpck_require__(8116);t.WriteEntry=__nccwpck_require__(5450);t.Header=__nccwpck_require__(6043);t.Pax=__nccwpck_require__(7996);t.types=__nccwpck_require__(4173)})();module.exports=s})();", "explanation": "It appears you've provided a large code snippet with many lines of code. Can I help you with something specific, or would you like me to try and provide an explanation for what this code is doing? If so, which part of the code would you like me to focus on?", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/tar/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "It appears there's no actual code provided in your question. However, I can still guide you through a hypothetical approach to creating a holistic summary of a file.\n\nIf you had provided a large code snippet from 'compiled/tar/index.js', here's how I'd approach summarizing it:\n\n1. **Identify the main functions**: Look for the primary functions or classes that contain the majority of the logic.\n2. **Determine the purpose**: Understand what the file is intended to do, based on its content and name (e.g., 'tar' suggests a tarball-related functionality).\n3. **Highlight key features**: Note any notable features, such as data structures used, algorithms employed, or specific interactions with external dependencies.\n4. **Simplify complex concepts**: If the code contains intricate logic, try to break it down into simpler components and describe their relationships.\n5. **Keep it concise**: Craft a summary that is easy to read and understand, avoiding unnecessary details.\n\nPlease provide the actual code, and I'll be happy to help you with creating a holistic summary of 'compiled/tar/index.js'."}
{"code": "(()=>{var D={63:D=>{\"use strict\";D.exports=({onlyFirst:D=false}={})=>{const u=[\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");return new RegExp(u,D?undefined:\"g\")}},391:(D,u,e)=>{const n=e(510);const t={};for(const D of Object.keys(n)){t[n[D]]=D}const r={rgb:{channels:3,labels:\"rgb\"},hsl:{channels:3,labels:\"hsl\"},hsv:{channels:3,labels:\"hsv\"},hwb:{channels:3,labels:\"hwb\"},cmyk:{channels:4,labels:\"cmyk\"},xyz:{channels:3,labels:\"xyz\"},lab:{channels:3,labels:\"lab\"},lch:{channels:3,labels:\"lch\"},hex:{channels:1,labels:[\"hex\"]},keyword:{channels:1,labels:[\"keyword\"]},ansi16:{channels:1,labels:[\"ansi16\"]},ansi256:{channels:1,labels:[\"ansi256\"]},hcg:{channels:3,labels:[\"h\",\"c\",\"g\"]},apple:{channels:3,labels:[\"r16\",\"g16\",\"b16\"]},gray:{channels:1,labels:[\"gray\"]}};D.exports=r;for(const D of Object.keys(r)){if(!(\"channels\"in r[D])){throw new Error(\"missing channels property: \"+D)}if(!(\"labels\"in r[D])){throw new Error(\"missing channel labels property: \"+D)}if(r[D].labels.length!==r[D].channels){throw new Error(\"channel and label counts mismatch: \"+D)}const{channels:u,labels:e}=r[D];delete r[D].channels;delete r[D].labels;Object.defineProperty(r[D],\"channels\",{value:u});Object.defineProperty(r[D],\"labels\",{value:e})}r.rgb.hsl=function(D){const u=D[0]/255;const e=D[1]/255;const n=D[2]/255;const t=Math.min(u,e,n);const r=Math.max(u,e,n);const o=r-t;let F;let s;if(r===t){F=0}else if(u===r){F=(e-n)/o}else if(e===r){F=2+(n-u)/o}else if(n===r){F=4+(u-e)/o}F=Math.min(F*60,360);if(F<0){F+=360}const c=(t+r)/2;if(r===t){s=0}else if(c<=.5){s=o/(r+t)}else{s=o/(2-r-t)}return[F,s*100,c*100]};r.rgb.hsv=function(D){let u;let e;let n;let t;let r;const o=D[0]/255;const F=D[1]/255;const s=D[2]/255;const c=Math.max(o,F,s);const l=c-Math.min(o,F,s);const diffc=function(D){return(c-D)/6/l+1/2};if(l===0){t=0;r=0}else{r=l/c;u=diffc(o);e=diffc(F);n=diffc(s);if(o===c){t=n-e}else if(F===c){t=1/3+u-n}else if(s===c){t=2/3+e-u}if(t<0){t+=1}else if(t>1){t-=1}}return[t*360,r*100,c*100]};r.rgb.hwb=function(D){const u=D[0];const e=D[1];let n=D[2];const t=r.rgb.hsl(D)[0];const o=1/255*Math.min(u,Math.min(e,n));n=1-1/255*Math.max(u,Math.max(e,n));return[t,o*100,n*100]};r.rgb.cmyk=function(D){const u=D[0]/255;const e=D[1]/255;const n=D[2]/255;const t=Math.min(1-u,1-e,1-n);const r=(1-u-t)/(1-t)||0;const o=(1-e-t)/(1-t)||0;const F=(1-n-t)/(1-t)||0;return[r*100,o*100,F*100,t*100]};function comparativeDistance(D,u){return(D[0]-u[0])**2+(D[1]-u[1])**2+(D[2]-u[2])**2}r.rgb.keyword=function(D){const u=t[D];if(u){return u}let e=Infinity;let r;for(const u of Object.keys(n)){const t=n[u];const o=comparativeDistance(D,t);if(o<e){e=o;r=u}}return r};r.keyword.rgb=function(D){return n[D]};r.rgb.xyz=function(D){let u=D[0]/255;let e=D[1]/255;let n=D[2]/255;u=u>.04045?((u+.055)/1.055)**2.4:u/12.92;e=e>.04045?((e+.055)/1.055)**2.4:e/12.92;n=n>.04045?((n+.055)/1.055)**2.4:n/12.92;const t=u*.4124+e*.3576+n*.1805;const r=u*.2126+e*.7152+n*.0722;const o=u*.0193+e*.1192+n*.9505;return[t*100,r*100,o*100]};r.rgb.lab=function(D){const u=r.rgb.xyz(D);let e=u[0];let n=u[1];let t=u[2];e/=95.047;n/=100;t/=108.883;e=e>.008856?e**(1/3):7.787*e+16/116;n=n>.008856?n**(1/3):7.787*n+16/116;t=t>.008856?t**(1/3):7.787*t+16/116;const o=116*n-16;const F=500*(e-n);const s=200*(n-t);return[o,F,s]};r.hsl.rgb=function(D){const u=D[0]/360;const e=D[1]/100;const n=D[2]/100;let t;let r;let o;if(e===0){o=n*255;return[o,o,o]}if(n<.5){t=n*(1+e)}else{t=n+e-n*e}const F=2*n-t;const s=[0,0,0];for(let D=0;D<3;D++){r=u+1/3*-(D-1);if(r<0){r++}if(r>1){r--}if(6*r<1){o=F+(t-F)*6*r}else if(2*r<1){o=t}else if(3*r<2){o=F+(t-F)*(2/3-r)*6}else{o=F}s[D]=o*255}return s};r.hsl.hsv=function(D){const u=D[0];let e=D[1]/100;let n=D[2]/100;let t=e;const r=Math.max(n,.01);n*=2;e*=n<=1?n:2-n;t*=r<=1?r:2-r;const o=(n+e)/2;const F=n===0?2*t/(r+t):2*e/(n+e);return[u,F*100,o*100]};r.hsv.rgb=function(D){const u=D[0]/60;const e=D[1]/100;let n=D[2]/100;const t=Math.floor(u)%6;const r=u-Math.floor(u);const o=255*n*(1-e);const F=255*n*(1-e*r);const s=255*n*(1-e*(1-r));n*=255;switch(t){case 0:return[n,s,o];case 1:return[F,n,o];case 2:return[o,n,s];case 3:return[o,F,n];case 4:return[s,o,n];case 5:return[n,o,F]}};r.hsv.hsl=function(D){const u=D[0];const e=D[1]/100;const n=D[2]/100;const t=Math.max(n,.01);let r;let o;o=(2-e)*n;const F=(2-e)*t;r=e*t;r/=F<=1?F:2-F;r=r||0;o/=2;return[u,r*100,o*100]};r.hwb.rgb=function(D){const u=D[0]/360;let e=D[1]/100;let n=D[2]/100;const t=e+n;let r;if(t>1){e/=t;n/=t}const o=Math.floor(6*u);const F=1-n;r=6*u-o;if((o&1)!==0){r=1-r}const s=e+r*(F-e);let c;let l;let C;switch(o){default:case 6:case 0:c=F;l=s;C=e;break;case 1:c=s;l=F;C=e;break;case 2:c=e;l=F;C=s;break;case 3:c=e;l=s;C=F;break;case 4:c=s;l=e;C=F;break;case 5:c=F;l=e;C=s;break}return[c*255,l*255,C*255]};r.cmyk.rgb=function(D){const u=D[0]/100;const e=D[1]/100;const n=D[2]/100;const t=D[3]/100;const r=1-Math.min(1,u*(1-t)+t);const o=1-Math.min(1,e*(1-t)+t);const F=1-Math.min(1,n*(1-t)+t);return[r*255,o*255,F*255]};r.xyz.rgb=function(D){const u=D[0]/100;const e=D[1]/100;const n=D[2]/100;let t;let r;let o;t=u*3.2406+e*-1.5372+n*-.4986;r=u*-.9689+e*1.8758+n*.0415;o=u*.0557+e*-.204+n*1.057;t=t>.0031308?1.055*t**(1/2.4)-.055:t*12.92;r=r>.0031308?1.055*r**(1/2.4)-.055:r*12.92;o=o>.0031308?1.055*o**(1/2.4)-.055:o*12.92;t=Math.min(Math.max(0,t),1);r=Math.min(Math.max(0,r),1);o=Math.min(Math.max(0,o),1);return[t*255,r*255,o*255]};r.xyz.lab=function(D){let u=D[0];let e=D[1];let n=D[2];u/=95.047;e/=100;n/=108.883;u=u>.008856?u**(1/3):7.787*u+16/116;e=e>.008856?e**(1/3):7.787*e+16/116;n=n>.008856?n**(1/3):7.787*n+16/116;const t=116*e-16;const r=500*(u-e);const o=200*(e-n);return[t,r,o]};r.lab.xyz=function(D){const u=D[0];const e=D[1];const n=D[2];let t;let r;let o;r=(u+16)/116;t=e/500+r;o=r-n/200;const F=r**3;const s=t**3;const c=o**3;r=F>.008856?F:(r-16/116)/7.787;t=s>.008856?s:(t-16/116)/7.787;o=c>.008856?c:(o-16/116)/7.787;t*=95.047;r*=100;o*=108.883;return[t,r,o]};r.lab.lch=function(D){const u=D[0];const e=D[1];const n=D[2];let t;const r=Math.atan2(n,e);t=r*360/2/Math.PI;if(t<0){t+=360}const o=Math.sqrt(e*e+n*n);return[u,o,t]};r.lch.lab=function(D){const u=D[0];const e=D[1];const n=D[2];const t=n/360*2*Math.PI;const r=e*Math.cos(t);const o=e*Math.sin(t);return[u,r,o]};r.rgb.ansi16=function(D,u=null){const[e,n,t]=D;let o=u===null?r.rgb.hsv(D)[2]:u;o=Math.round(o/50);if(o===0){return 30}let F=30+(Math.round(t/255)<<2|Math.round(n/255)<<1|Math.round(e/255));if(o===2){F+=60}return F};r.hsv.ansi16=function(D){return r.rgb.ansi16(r.hsv.rgb(D),D[2])};r.rgb.ansi256=function(D){const u=D[0];const e=D[1];const n=D[2];if(u===e&&e===n){if(u<8){return 16}if(u>248){return 231}return Math.round((u-8)/247*24)+232}const t=16+36*Math.round(u/255*5)+6*Math.round(e/255*5)+Math.round(n/255*5);return t};r.ansi16.rgb=function(D){let u=D%10;if(u===0||u===7){if(D>50){u+=3.5}u=u/10.5*255;return[u,u,u]}const e=(~~(D>50)+1)*.5;const n=(u&1)*e*255;const t=(u>>1&1)*e*255;const r=(u>>2&1)*e*255;return[n,t,r]};r.ansi256.rgb=function(D){if(D>=232){const u=(D-232)*10+8;return[u,u,u]}D-=16;let u;const e=Math.floor(D/36)/5*255;const n=Math.floor((u=D%36)/6)/5*255;const t=u%6/5*255;return[e,n,t]};r.rgb.hex=function(D){const u=((Math.round(D[0])&255)<<16)+((Math.round(D[1])&255)<<8)+(Math.round(D[2])&255);const e=u.toString(16).toUpperCase();return\"000000\".substring(e.length)+e};r.hex.rgb=function(D){const u=D.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!u){return[0,0,0]}let e=u[0];if(u[0].length===3){e=e.split(\"\").map((D=>D+D)).join(\"\")}const n=parseInt(e,16);const t=n>>16&255;const r=n>>8&255;const o=n&255;return[t,r,o]};r.rgb.hcg=function(D){const u=D[0]/255;const e=D[1]/255;const n=D[2]/255;const t=Math.max(Math.max(u,e),n);const r=Math.min(Math.min(u,e),n);const o=t-r;let F;let s;if(o<1){F=r/(1-o)}else{F=0}if(o<=0){s=0}else if(t===u){s=(e-n)/o%6}else if(t===e){s=2+(n-u)/o}else{s=4+(u-e)/o}s/=6;s%=1;return[s*360,o*100,F*100]};r.hsl.hcg=function(D){const u=D[1]/100;const e=D[2]/100;const n=e<.5?2*u*e:2*u*(1-e);let t=0;if(n<1){t=(e-.5*n)/(1-n)}return[D[0],n*100,t*100]};r.hsv.hcg=function(D){const u=D[1]/100;const e=D[2]/100;const n=u*e;let t=0;if(n<1){t=(e-n)/(1-n)}return[D[0],n*100,t*100]};r.hcg.rgb=function(D){const u=D[0]/360;const e=D[1]/100;const n=D[2]/100;if(e===0){return[n*255,n*255,n*255]}const t=[0,0,0];const r=u%1*6;const o=r%1;const F=1-o;let s=0;switch(Math.floor(r)){case 0:t[0]=1;t[1]=o;t[2]=0;break;case 1:t[0]=F;t[1]=1;t[2]=0;break;case 2:t[0]=0;t[1]=1;t[2]=o;break;case 3:t[0]=0;t[1]=F;t[2]=1;break;case 4:t[0]=o;t[1]=0;t[2]=1;break;default:t[0]=1;t[1]=0;t[2]=F}s=(1-e)*n;return[(e*t[0]+s)*255,(e*t[1]+s)*255,(e*t[2]+s)*255]};r.hcg.hsv=function(D){const u=D[1]/100;const e=D[2]/100;const n=u+e*(1-u);let t=0;if(n>0){t=u/n}return[D[0],t*100,n*100]};r.hcg.hsl=function(D){const u=D[1]/100;const e=D[2]/100;const n=e*(1-u)+.5*u;let t=0;if(n>0&&n<.5){t=u/(2*n)}else if(n>=.5&&n<1){t=u/(2*(1-n))}return[D[0],t*100,n*100]};r.hcg.hwb=function(D){const u=D[1]/100;const e=D[2]/100;const n=u+e*(1-u);return[D[0],(n-u)*100,(1-n)*100]};r.hwb.hcg=function(D){const u=D[1]/100;const e=D[2]/100;const n=1-e;const t=n-u;let r=0;if(t<1){r=(n-t)/(1-t)}return[D[0],t*100,r*100]};r.apple.rgb=function(D){return[D[0]/65535*255,D[1]/65535*255,D[2]/65535*255]};r.rgb.apple=function(D){return[D[0]/255*65535,D[1]/255*65535,D[2]/255*65535]};r.gray.rgb=function(D){return[D[0]/100*255,D[0]/100*255,D[0]/100*255]};r.gray.hsl=function(D){return[0,0,D[0]]};r.gray.hsv=r.gray.hsl;r.gray.hwb=function(D){return[0,100,D[0]]};r.gray.cmyk=function(D){return[0,0,0,D[0]]};r.gray.lab=function(D){return[D[0],0,0]};r.gray.hex=function(D){const u=Math.round(D[0]/100*255)&255;const e=(u<<16)+(u<<8)+u;const n=e.toString(16).toUpperCase();return\"000000\".substring(n.length)+n};r.rgb.gray=function(D){const u=(D[0]+D[1]+D[2])/3;return[u/255*100]}},931:(D,u,e)=>{const n=e(391);const t=e(880);const r={};const o=Object.keys(n);function wrapRaw(D){const wrappedFn=function(...u){const e=u[0];if(e===undefined||e===null){return e}if(e.length>1){u=e}return D(u)};if(\"conversion\"in D){wrappedFn.conversion=D.conversion}return wrappedFn}function wrapRounded(D){const wrappedFn=function(...u){const e=u[0];if(e===undefined||e===null){return e}if(e.length>1){u=e}const n=D(u);if(typeof n===\"object\"){for(let D=n.length,u=0;u<D;u++){n[u]=Math.round(n[u])}}return n};if(\"conversion\"in D){wrappedFn.conversion=D.conversion}return wrappedFn}o.forEach((D=>{r[D]={};Object.defineProperty(r[D],\"channels\",{value:n[D].channels});Object.defineProperty(r[D],\"labels\",{value:n[D].labels});const u=t(D);const e=Object.keys(u);e.forEach((e=>{const n=u[e];r[D][e]=wrapRounded(n);r[D][e].raw=wrapRaw(n)}))}));D.exports=r},880:(D,u,e)=>{const n=e(391);function buildGraph(){const D={};const u=Object.keys(n);for(let e=u.length,n=0;n<e;n++){D[u[n]]={distance:-1,parent:null}}return D}function deriveBFS(D){const u=buildGraph();const e=[D];u[D].distance=0;while(e.length){const D=e.pop();const t=Object.keys(n[D]);for(let n=t.length,r=0;r<n;r++){const n=t[r];const o=u[n];if(o.distance===-1){o.distance=u[D].distance+1;o.parent=D;e.unshift(n)}}}return u}function link(D,u){return function(e){return u(D(e))}}function wrapConversion(D,u){const e=[u[D].parent,D];let t=n[u[D].parent][D];let r=u[D].parent;while(u[r].parent){e.unshift(u[r].parent);t=link(n[u[r].parent][r],t);r=u[r].parent}t.conversion=e;return t}D.exports=function(D){const u=deriveBFS(D);const e={};const n=Object.keys(u);for(let D=n.length,t=0;t<D;t++){const D=n[t];const r=u[D];if(r.parent===null){continue}e[D]=wrapConversion(D,u)}return e}},510:D=>{\"use strict\";D.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},212:D=>{\"use strict\";D.exports=function(){return/\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g}},882:D=>{\"use strict\";const isFullwidthCodePoint=D=>{if(Number.isNaN(D)){return false}if(D>=4352&&(D<=4447||D===9001||D===9002||11904<=D&&D<=12871&&D!==12351||12880<=D&&D<=19903||19968<=D&&D<=42182||43360<=D&&D<=43388||44032<=D&&D<=55203||63744<=D&&D<=64255||65040<=D&&D<=65049||65072<=D&&D<=65131||65281<=D&&D<=65376||65504<=D&&D<=65510||110592<=D&&D<=110593||127488<=D&&D<=127569||131072<=D&&D<=262141)){return true}return false};D.exports=isFullwidthCodePoint;D.exports[\"default\"]=isFullwidthCodePoint},577:(D,u,e)=>{\"use strict\";const n=e(591);const t=e(882);const r=e(212);const stringWidth=D=>{if(typeof D!==\"string\"||D.length===0){return 0}D=n(D);if(D.length===0){return 0}D=D.replace(r(),\"  \");let u=0;for(let e=0;e<D.length;e++){const n=D.codePointAt(e);if(n<=31||n>=127&&n<=159){continue}if(n>=768&&n<=879){continue}if(n>65535){e++}u+=t(n)?2:1}return u};D.exports=stringWidth;D.exports[\"default\"]=stringWidth},591:(D,u,e)=>{\"use strict\";const n=e(63);D.exports=D=>typeof D===\"string\"?D.replace(n(),\"\"):D},824:(D,u,e)=>{\"use strict\";const n=e(577);const t=e(591);const r=e(862);const o=new Set([\"\u001b\",\"\u009b\"]);const F=39;const s=\"\u0007\";const c=\"[\";const l=\"]\";const C=\"m\";const i=`${l}8;;`;const wrapAnsi=D=>`${o.values().next().value}${c}${D}${C}`;const wrapAnsiHyperlink=D=>`${o.values().next().value}${i}${D}${s}`;const wordLengths=D=>D.split(\" \").map((D=>n(D)));const wrapWord=(D,u,e)=>{const r=[...u];let F=false;let c=false;let l=n(t(D[D.length-1]));for(const[u,t]of r.entries()){const a=n(t);if(l+a<=e){D[D.length-1]+=t}else{D.push(t);l=0}if(o.has(t)){F=true;c=r.slice(u+1).join(\"\").startsWith(i)}if(F){if(c){if(t===s){F=false;c=false}}else if(t===C){F=false}continue}l+=a;if(l===e&&u<r.length-1){D.push(\"\");l=0}}if(!l&&D[D.length-1].length>0&&D.length>1){D[D.length-2]+=D.pop()}};const stringVisibleTrimSpacesRight=D=>{const u=D.split(\" \");let e=u.length;while(e>0){if(n(u[e-1])>0){break}e--}if(e===u.length){return D}return u.slice(0,e).join(\" \")+u.slice(e).join(\"\")};const exec=(D,u,e={})=>{if(e.trim!==false&&D.trim()===\"\"){return\"\"}let t=\"\";let l;let C;const a=wordLengths(D);let E=[\"\"];for(const[t,r]of D.split(\" \").entries()){if(e.trim!==false){E[E.length-1]=E[E.length-1].trimStart()}let D=n(E[E.length-1]);if(t!==0){if(D>=u&&(e.wordWrap===false||e.trim===false)){E.push(\"\");D=0}if(D>0||e.trim===false){E[E.length-1]+=\" \";D++}}if(e.hard&&a[t]>u){const e=u-D;const n=1+Math.floor((a[t]-e-1)/u);const o=Math.floor((a[t]-1)/u);if(o<n){E.push(\"\")}wrapWord(E,r,u);continue}if(D+a[t]>u&&D>0&&a[t]>0){if(e.wordWrap===false&&D<u){wrapWord(E,r,u);continue}E.push(\"\")}if(D+a[t]>u&&e.wordWrap===false){wrapWord(E,r,u);continue}E[E.length-1]+=r}if(e.trim!==false){E=E.map(stringVisibleTrimSpacesRight)}const f=[...E.join(\"\\n\")];for(const[D,u]of f.entries()){t+=u;if(o.has(u)){const{groups:u}=new RegExp(`(?:\\\\${c}(?<code>\\\\d+)m|\\\\${i}(?<uri>.*)${s})`).exec(f.slice(D).join(\"\"))||{groups:{}};if(u.code!==undefined){const D=Number.parseFloat(u.code);l=D===F?undefined:D}else if(u.uri!==undefined){C=u.uri.length===0?undefined:u.uri}}const e=r.codes.get(Number(l));if(f[D+1]===\"\\n\"){if(C){t+=wrapAnsiHyperlink(\"\")}if(l&&e){t+=wrapAnsi(e)}}else if(u===\"\\n\"){if(l&&e){t+=wrapAnsi(l)}if(C){t+=wrapAnsiHyperlink(C)}}}return t};D.exports=(D,u,e)=>String(D).normalize().replace(/\\r\\n/g,\"\\n\").split(\"\\n\").map((D=>exec(D,u,e))).join(\"\\n\")},862:(D,u,e)=>{\"use strict\";D=e.nmd(D);const wrapAnsi16=(D,u)=>(...e)=>{const n=D(...e);return`\u001b[${n+u}m`};const wrapAnsi256=(D,u)=>(...e)=>{const n=D(...e);return`\u001b[${38+u};5;${n}m`};const wrapAnsi16m=(D,u)=>(...e)=>{const n=D(...e);return`\u001b[${38+u};2;${n[0]};${n[1]};${n[2]}m`};const ansi2ansi=D=>D;const rgb2rgb=(D,u,e)=>[D,u,e];const setLazyProperty=(D,u,e)=>{Object.defineProperty(D,u,{get:()=>{const n=e();Object.defineProperty(D,u,{value:n,enumerable:true,configurable:true});return n},enumerable:true,configurable:true})};let n;const makeDynamicStyles=(D,u,t,r)=>{if(n===undefined){n=e(931)}const o=r?10:0;const F={};for(const[e,r]of Object.entries(n)){const n=e===\"ansi16\"?\"ansi\":e;if(e===u){F[n]=D(t,o)}else if(typeof r===\"object\"){F[n]=D(r[u],o)}}return F};function assembleStyles(){const D=new Map;const u={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};u.color.gray=u.color.blackBright;u.bgColor.bgGray=u.bgColor.bgBlackBright;u.color.grey=u.color.blackBright;u.bgColor.bgGrey=u.bgColor.bgBlackBright;for(const[e,n]of Object.entries(u)){for(const[e,t]of Object.entries(n)){u[e]={open:`\u001b[${t[0]}m`,close:`\u001b[${t[1]}m`};n[e]=u[e];D.set(t[0],t[1])}Object.defineProperty(u,e,{value:n,enumerable:false})}Object.defineProperty(u,\"codes\",{value:D,enumerable:false});u.color.close=\"\u001b[39m\";u.bgColor.close=\"\u001b[49m\";setLazyProperty(u.color,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,false)));setLazyProperty(u.color,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,false)));setLazyProperty(u.color,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,false)));setLazyProperty(u.bgColor,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,true)));setLazyProperty(u.bgColor,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,true)));setLazyProperty(u.bgColor,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,true)));return u}Object.defineProperty(D,\"exports\",{enumerable:true,get:assembleStyles})}};var u={};function __nccwpck_require__(e){var n=u[e];if(n!==undefined){return n.exports}var t=u[e]={id:e,loaded:false,exports:{}};var r=true;try{D[e](t,t.exports,__nccwpck_require__);r=false}finally{if(r)delete u[e]}t.loaded=true;return t.exports}(()=>{__nccwpck_require__.nmd=D=>{D.paths=[];if(!D.children)D.children=[];return D}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e=__nccwpck_require__(824);module.exports=e})();", "explanation": "It appears you've provided a large block of code with some comments. I'll provide a brief summary:\n\nThe code is a Node.js module that provides functions for working with ANSI escape codes, which are used to style text in terminal environments. The module exports several functions, including `assembleStyles`, `stringVisibleTrimSpacesRight`, and `exec`.\n\nHere's a high-level overview of what each function does:\n\n1. `assembleStyles`: Assembles styles for ANSI escape codes.\n2. `stringVisibleTrimSpacesRight`: Trims trailing whitespace from a string.\n3. `exec`: Processes a string using the assembled styles.\n\nThe code also uses some Node.js built-in modules, such as `path` and `process`.\n\nIf you'd like to know more about a specific function or aspect of this code, feel free to ask!", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/wrap-ansi/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `compiled/wrap-ansi/index.js` file is a Node.js module that provides functions for styling text in terminal environments using ANSI escape codes. It exports three main functions: assembling styles, trimming strings, and processing styled strings."}
{"code": "(()=>{var e={670:e=>{function webpackEmptyContext(e){var t=new Error(\"Cannot find module '\"+e+\"'\");t.code=\"MODULE_NOT_FOUND\";throw t}webpackEmptyContext.keys=()=>[];webpackEmptyContext.resolve=webpackEmptyContext;webpackEmptyContext.id=670;e.exports=webpackEmptyContext},147:e=>{\"use strict\";e.exports=require(\"fs\")},17:e=>{\"use strict\";e.exports=require(\"path\")},837:e=>{\"use strict\";e.exports=require(\"util\")},970:(e,t,s)=>{\"use strict\";var n=s(837);var r=s(17);var i=s(147);function camelCase(e){const t=e!==e.toLowerCase()&&e!==e.toUpperCase();if(!t){e=e.toLowerCase()}if(e.indexOf(\"-\")===-1&&e.indexOf(\"_\")===-1){return e}else{let t=\"\";let s=false;const n=e.match(/^-+/);for(let r=n?n[0].length:0;r<e.length;r++){let n=e.charAt(r);if(s){s=false;n=n.toUpperCase()}if(r!==0&&(n===\"-\"||n===\"_\")){s=true}else if(n!==\"-\"&&n!==\"_\"){t+=n}}return t}}function decamelize(e,t){const s=e.toLowerCase();t=t||\"-\";let n=\"\";for(let r=0;r<e.length;r++){const i=s.charAt(r);const a=e.charAt(r);if(i!==a&&r>0){n+=`${t}${s.charAt(r)}`}else{n+=a}}return n}function looksLikeNumber(e){if(e===null||e===undefined)return false;if(typeof e===\"number\")return true;if(/^0x[0-9a-f]+$/i.test(e))return true;if(/^0[^.]/.test(e))return false;return/^[-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(e)}function tokenizeArgString(e){if(Array.isArray(e)){return e.map((e=>typeof e!==\"string\"?e+\"\":e))}e=e.trim();let t=0;let s=null;let n=null;let r=null;const i=[];for(let a=0;a<e.length;a++){s=n;n=e.charAt(a);if(n===\" \"&&!r){if(!(s===\" \")){t++}continue}if(n===r){r=null}else if((n===\"'\"||n==='\"')&&!r){r=n}if(!i[t])i[t]=\"\";i[t]+=n}return i}var a;(function(e){e[\"BOOLEAN\"]=\"boolean\";e[\"STRING\"]=\"string\";e[\"NUMBER\"]=\"number\";e[\"ARRAY\"]=\"array\"})(a||(a={}));let o;class YargsParser{constructor(e){o=e}parse(e,t){const s=Object.assign({alias:undefined,array:undefined,boolean:undefined,config:undefined,configObjects:undefined,configuration:undefined,coerce:undefined,count:undefined,default:undefined,envPrefix:undefined,narg:undefined,normalize:undefined,string:undefined,number:undefined,__:undefined,key:undefined},t);const n=tokenizeArgString(e);const r=typeof e===\"string\";const i=combineAliases(Object.assign(Object.create(null),s.alias));const c=Object.assign({\"boolean-negation\":true,\"camel-case-expansion\":true,\"combine-arrays\":false,\"dot-notation\":true,\"duplicate-arguments-array\":true,\"flatten-duplicate-arrays\":true,\"greedy-arrays\":true,\"halt-at-non-option\":false,\"nargs-eats-options\":false,\"negation-prefix\":\"no-\",\"parse-numbers\":true,\"parse-positional-numbers\":true,\"populate--\":false,\"set-placeholder-key\":false,\"short-option-groups\":true,\"strip-aliased\":false,\"strip-dashed\":false,\"unknown-options-as-args\":false},s.configuration);const l=Object.assign(Object.create(null),s.default);const f=s.configObjects||[];const u=s.envPrefix;const p=c[\"populate--\"];const h=p?\"--\":\"_\";const A=Object.create(null);const d=Object.create(null);const g=s.__||o.format;const y={aliases:Object.create(null),arrays:Object.create(null),bools:Object.create(null),strings:Object.create(null),numbers:Object.create(null),counts:Object.create(null),normalize:Object.create(null),configs:Object.create(null),nargs:Object.create(null),coercions:Object.create(null),keys:[]};const b=/^-([0-9]+(\\.[0-9]+)?|\\.[0-9]+)$/;const m=new RegExp(\"^--\"+c[\"negation-prefix\"]+\"(.+)\");[].concat(s.array||[]).filter(Boolean).forEach((function(e){const t=typeof e===\"object\"?e.key:e;const s=Object.keys(e).map((function(e){const t={boolean:\"bools\",string:\"strings\",number:\"numbers\"};return t[e]})).filter(Boolean).pop();if(s){y[s][t]=true}y.arrays[t]=true;y.keys.push(t)}));[].concat(s.boolean||[]).filter(Boolean).forEach((function(e){y.bools[e]=true;y.keys.push(e)}));[].concat(s.string||[]).filter(Boolean).forEach((function(e){y.strings[e]=true;y.keys.push(e)}));[].concat(s.number||[]).filter(Boolean).forEach((function(e){y.numbers[e]=true;y.keys.push(e)}));[].concat(s.count||[]).filter(Boolean).forEach((function(e){y.counts[e]=true;y.keys.push(e)}));[].concat(s.normalize||[]).filter(Boolean).forEach((function(e){y.normalize[e]=true;y.keys.push(e)}));if(typeof s.narg===\"object\"){Object.entries(s.narg).forEach((([e,t])=>{if(typeof t===\"number\"){y.nargs[e]=t;y.keys.push(e)}}))}if(typeof s.coerce===\"object\"){Object.entries(s.coerce).forEach((([e,t])=>{if(typeof t===\"function\"){y.coercions[e]=t;y.keys.push(e)}}))}if(typeof s.config!==\"undefined\"){if(Array.isArray(s.config)||typeof s.config===\"string\"){[].concat(s.config).filter(Boolean).forEach((function(e){y.configs[e]=true}))}else if(typeof s.config===\"object\"){Object.entries(s.config).forEach((([e,t])=>{if(typeof t===\"boolean\"||typeof t===\"function\"){y.configs[e]=t}}))}}extendAliases(s.key,i,s.default,y.arrays);Object.keys(l).forEach((function(e){(y.aliases[e]||[]).forEach((function(t){l[t]=l[e]}))}));let k=null;checkConfiguration();let O=[];const j=Object.assign(Object.create(null),{_:[]});const E={};for(let e=0;e<n.length;e++){const t=n[e];const s=t.replace(/^-{3,}/,\"---\");let r;let i;let a;let o;let l;let f;if(t!==\"--\"&&/^-/.test(t)&&isUnknownOptionAsArg(t)){pushPositional(t)}else if(s.match(/^---+(=|$)/)){pushPositional(t);continue}else if(t.match(/^--.+=/)||!c[\"short-option-groups\"]&&t.match(/^-.+=/)){o=t.match(/^--?([^=]+)=([\\s\\S]*)$/);if(o!==null&&Array.isArray(o)&&o.length>=3){if(checkAllAliases(o[1],y.arrays)){e=eatArray(e,o[1],n,o[2])}else if(checkAllAliases(o[1],y.nargs)!==false){e=eatNargs(e,o[1],n,o[2])}else{setArg(o[1],o[2],true)}}}else if(t.match(m)&&c[\"boolean-negation\"]){o=t.match(m);if(o!==null&&Array.isArray(o)&&o.length>=2){i=o[1];setArg(i,checkAllAliases(i,y.arrays)?[false]:false)}}else if(t.match(/^--.+/)||!c[\"short-option-groups\"]&&t.match(/^-[^-]+/)){o=t.match(/^--?(.+)/);if(o!==null&&Array.isArray(o)&&o.length>=2){i=o[1];if(checkAllAliases(i,y.arrays)){e=eatArray(e,i,n)}else if(checkAllAliases(i,y.nargs)!==false){e=eatNargs(e,i,n)}else{l=n[e+1];if(l!==undefined&&(!l.match(/^-/)||l.match(b))&&!checkAllAliases(i,y.bools)&&!checkAllAliases(i,y.counts)){setArg(i,l);e++}else if(/^(true|false)$/.test(l)){setArg(i,l);e++}else{setArg(i,defaultValue(i))}}}}else if(t.match(/^-.\\..+=/)){o=t.match(/^-([^=]+)=([\\s\\S]*)$/);if(o!==null&&Array.isArray(o)&&o.length>=3){setArg(o[1],o[2])}}else if(t.match(/^-.\\..+/)&&!t.match(b)){l=n[e+1];o=t.match(/^-(.\\..+)/);if(o!==null&&Array.isArray(o)&&o.length>=2){i=o[1];if(l!==undefined&&!l.match(/^-/)&&!checkAllAliases(i,y.bools)&&!checkAllAliases(i,y.counts)){setArg(i,l);e++}else{setArg(i,defaultValue(i))}}}else if(t.match(/^-[^-]+/)&&!t.match(b)){a=t.slice(1,-1).split(\"\");r=false;for(let s=0;s<a.length;s++){l=t.slice(s+2);if(a[s+1]&&a[s+1]===\"=\"){f=t.slice(s+3);i=a[s];if(checkAllAliases(i,y.arrays)){e=eatArray(e,i,n,f)}else if(checkAllAliases(i,y.nargs)!==false){e=eatNargs(e,i,n,f)}else{setArg(i,f)}r=true;break}if(l===\"-\"){setArg(a[s],l);continue}if(/[A-Za-z]/.test(a[s])&&/^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(l)&&checkAllAliases(l,y.bools)===false){setArg(a[s],l);r=true;break}if(a[s+1]&&a[s+1].match(/\\W/)){setArg(a[s],l);r=true;break}else{setArg(a[s],defaultValue(a[s]))}}i=t.slice(-1)[0];if(!r&&i!==\"-\"){if(checkAllAliases(i,y.arrays)){e=eatArray(e,i,n)}else if(checkAllAliases(i,y.nargs)!==false){e=eatNargs(e,i,n)}else{l=n[e+1];if(l!==undefined&&(!/^(-|--)[^-]/.test(l)||l.match(b))&&!checkAllAliases(i,y.bools)&&!checkAllAliases(i,y.counts)){setArg(i,l);e++}else if(/^(true|false)$/.test(l)){setArg(i,l);e++}else{setArg(i,defaultValue(i))}}}}else if(t.match(/^-[0-9]$/)&&t.match(b)&&checkAllAliases(t.slice(1),y.bools)){i=t.slice(1);setArg(i,defaultValue(i))}else if(t===\"--\"){O=n.slice(e+1);break}else if(c[\"halt-at-non-option\"]){O=n.slice(e);break}else{pushPositional(t)}}applyEnvVars(j,true);applyEnvVars(j,false);setConfig(j);setConfigObjects();applyDefaultsAndAliases(j,y.aliases,l,true);applyCoercions(j);if(c[\"set-placeholder-key\"])setPlaceholderKeys(j);Object.keys(y.counts).forEach((function(e){if(!hasKey(j,e.split(\".\")))setArg(e,0)}));if(p&&O.length)j[h]=[];O.forEach((function(e){j[h].push(e)}));if(c[\"camel-case-expansion\"]&&c[\"strip-dashed\"]){Object.keys(j).filter((e=>e!==\"--\"&&e.includes(\"-\"))).forEach((e=>{delete j[e]}))}if(c[\"strip-aliased\"]){[].concat(...Object.keys(i).map((e=>i[e]))).forEach((e=>{if(c[\"camel-case-expansion\"]&&e.includes(\"-\")){delete j[e.split(\".\").map((e=>camelCase(e))).join(\".\")]}delete j[e]}))}function pushPositional(e){const t=maybeCoerceNumber(\"_\",e);if(typeof t===\"string\"||typeof t===\"number\"){j._.push(t)}}function eatNargs(e,t,s,n){let r;let i=checkAllAliases(t,y.nargs);i=typeof i!==\"number\"||isNaN(i)?1:i;if(i===0){if(!isUndefined(n)){k=Error(g(\"Argument unexpected for: %s\",t))}setArg(t,defaultValue(t));return e}let a=isUndefined(n)?0:1;if(c[\"nargs-eats-options\"]){if(s.length-(e+1)+a<i){k=Error(g(\"Not enough arguments following: %s\",t))}a=i}else{for(r=e+1;r<s.length;r++){if(!s[r].match(/^-[^0-9]/)||s[r].match(b)||isUnknownOptionAsArg(s[r]))a++;else break}if(a<i)k=Error(g(\"Not enough arguments following: %s\",t))}let o=Math.min(a,i);if(!isUndefined(n)&&o>0){setArg(t,n);o--}for(r=e+1;r<o+e+1;r++){setArg(t,s[r])}return e+o}function eatArray(e,t,s,n){let i=[];let a=n||s[e+1];const o=checkAllAliases(t,y.nargs);if(checkAllAliases(t,y.bools)&&!/^(true|false)$/.test(a)){i.push(true)}else if(isUndefined(a)||isUndefined(n)&&/^-/.test(a)&&!b.test(a)&&!isUnknownOptionAsArg(a)){if(l[t]!==undefined){const e=l[t];i=Array.isArray(e)?e:[e]}}else{if(!isUndefined(n)){i.push(processValue(t,n,true))}for(let n=e+1;n<s.length;n++){if(!c[\"greedy-arrays\"]&&i.length>0||o&&typeof o===\"number\"&&i.length>=o)break;a=s[n];if(/^-/.test(a)&&!b.test(a)&&!isUnknownOptionAsArg(a))break;e=n;i.push(processValue(t,a,r))}}if(typeof o===\"number\"&&(o&&i.length<o||isNaN(o)&&i.length===0)){k=Error(g(\"Not enough arguments following: %s\",t))}setArg(t,i);return e}function setArg(e,t,s=r){if(/-/.test(e)&&c[\"camel-case-expansion\"]){const t=e.split(\".\").map((function(e){return camelCase(e)})).join(\".\");addNewAlias(e,t)}const n=processValue(e,t,s);const i=e.split(\".\");setKey(j,i,n);if(y.aliases[e]){y.aliases[e].forEach((function(e){const t=e.split(\".\");setKey(j,t,n)}))}if(i.length>1&&c[\"dot-notation\"]){(y.aliases[i[0]]||[]).forEach((function(t){let s=t.split(\".\");const r=[].concat(i);r.shift();s=s.concat(r);if(!(y.aliases[e]||[]).includes(s.join(\".\"))){setKey(j,s,n)}}))}if(checkAllAliases(e,y.normalize)&&!checkAllAliases(e,y.arrays)){const s=[e].concat(y.aliases[e]||[]);s.forEach((function(e){Object.defineProperty(E,e,{enumerable:true,get(){return t},set(e){t=typeof e===\"string\"?o.normalize(e):e}})}))}}function addNewAlias(e,t){if(!(y.aliases[e]&&y.aliases[e].length)){y.aliases[e]=[t];A[t]=true}if(!(y.aliases[t]&&y.aliases[t].length)){addNewAlias(t,e)}}function processValue(e,t,s){if(s){t=stripQuotes(t)}if(checkAllAliases(e,y.bools)||checkAllAliases(e,y.counts)){if(typeof t===\"string\")t=t===\"true\"}let n=Array.isArray(t)?t.map((function(t){return maybeCoerceNumber(e,t)})):maybeCoerceNumber(e,t);if(checkAllAliases(e,y.counts)&&(isUndefined(n)||typeof n===\"boolean\")){n=increment()}if(checkAllAliases(e,y.normalize)&&checkAllAliases(e,y.arrays)){if(Array.isArray(t))n=t.map((e=>o.normalize(e)));else n=o.normalize(t)}return n}function maybeCoerceNumber(e,t){if(!c[\"parse-positional-numbers\"]&&e===\"_\")return t;if(!checkAllAliases(e,y.strings)&&!checkAllAliases(e,y.bools)&&!Array.isArray(t)){const s=looksLikeNumber(t)&&c[\"parse-numbers\"]&&Number.isSafeInteger(Math.floor(parseFloat(`${t}`)));if(s||!isUndefined(t)&&checkAllAliases(e,y.numbers)){t=Number(t)}}return t}function setConfig(e){const t=Object.create(null);applyDefaultsAndAliases(t,y.aliases,l);Object.keys(y.configs).forEach((function(s){const n=e[s]||t[s];if(n){try{let e=null;const t=o.resolve(o.cwd(),n);const r=y.configs[s];if(typeof r===\"function\"){try{e=r(t)}catch(t){e=t}if(e instanceof Error){k=e;return}}else{e=o.require(t)}setConfigObject(e)}catch(t){if(t.name===\"PermissionDenied\")k=t;else if(e[s])k=Error(g(\"Invalid JSON config file: %s\",n))}}}))}function setConfigObject(e,t){Object.keys(e).forEach((function(s){const n=e[s];const r=t?t+\".\"+s:s;if(typeof n===\"object\"&&n!==null&&!Array.isArray(n)&&c[\"dot-notation\"]){setConfigObject(n,r)}else{if(!hasKey(j,r.split(\".\"))||checkAllAliases(r,y.arrays)&&c[\"combine-arrays\"]){setArg(r,n)}}}))}function setConfigObjects(){if(typeof f!==\"undefined\"){f.forEach((function(e){setConfigObject(e)}))}}function applyEnvVars(e,t){if(typeof u===\"undefined\")return;const s=typeof u===\"string\"?u:\"\";const n=o.env();Object.keys(n).forEach((function(r){if(s===\"\"||r.lastIndexOf(s,0)===0){const i=r.split(\"__\").map((function(e,t){if(t===0){e=e.substring(s.length)}return camelCase(e)}));if((t&&y.configs[i.join(\".\")]||!t)&&!hasKey(e,i)){setArg(i.join(\".\"),n[r])}}}))}function applyCoercions(e){let t;const s=new Set;Object.keys(e).forEach((function(n){if(!s.has(n)){t=checkAllAliases(n,y.coercions);if(typeof t===\"function\"){try{const r=maybeCoerceNumber(n,t(e[n]));[].concat(y.aliases[n]||[],n).forEach((t=>{s.add(t);e[t]=r}))}catch(e){k=e}}}}))}function setPlaceholderKeys(e){y.keys.forEach((t=>{if(~t.indexOf(\".\"))return;if(typeof e[t]===\"undefined\")e[t]=undefined}));return e}function applyDefaultsAndAliases(e,t,s,n=false){Object.keys(s).forEach((function(r){if(!hasKey(e,r.split(\".\"))){setKey(e,r.split(\".\"),s[r]);if(n)d[r]=true;(t[r]||[]).forEach((function(t){if(hasKey(e,t.split(\".\")))return;setKey(e,t.split(\".\"),s[r])}))}}))}function hasKey(e,t){let s=e;if(!c[\"dot-notation\"])t=[t.join(\".\")];t.slice(0,-1).forEach((function(e){s=s[e]||{}}));const n=t[t.length-1];if(typeof s!==\"object\")return false;else return n in s}function setKey(e,t,s){let n=e;if(!c[\"dot-notation\"])t=[t.join(\".\")];t.slice(0,-1).forEach((function(e){e=sanitizeKey(e);if(typeof n===\"object\"&&n[e]===undefined){n[e]={}}if(typeof n[e]!==\"object\"||Array.isArray(n[e])){if(Array.isArray(n[e])){n[e].push({})}else{n[e]=[n[e],{}]}n=n[e][n[e].length-1]}else{n=n[e]}}));const r=sanitizeKey(t[t.length-1]);const i=checkAllAliases(t.join(\".\"),y.arrays);const a=Array.isArray(s);let o=c[\"duplicate-arguments-array\"];if(!o&&checkAllAliases(r,y.nargs)){o=true;if(!isUndefined(n[r])&&y.nargs[r]===1||Array.isArray(n[r])&&n[r].length===y.nargs[r]){n[r]=undefined}}if(s===increment()){n[r]=increment(n[r])}else if(Array.isArray(n[r])){if(o&&i&&a){n[r]=c[\"flatten-duplicate-arrays\"]?n[r].concat(s):(Array.isArray(n[r][0])?n[r]:[n[r]]).concat([s])}else if(!o&&Boolean(i)===Boolean(a)){n[r]=s}else{n[r]=n[r].concat([s])}}else if(n[r]===undefined&&i){n[r]=a?s:[s]}else if(o&&!(n[r]===undefined||checkAllAliases(r,y.counts)||checkAllAliases(r,y.bools))){n[r]=[n[r],s]}else{n[r]=s}}function extendAliases(...e){e.forEach((function(e){Object.keys(e||{}).forEach((function(e){if(y.aliases[e])return;y.aliases[e]=[].concat(i[e]||[]);y.aliases[e].concat(e).forEach((function(t){if(/-/.test(t)&&c[\"camel-case-expansion\"]){const s=camelCase(t);if(s!==e&&y.aliases[e].indexOf(s)===-1){y.aliases[e].push(s);A[s]=true}}}));y.aliases[e].concat(e).forEach((function(t){if(t.length>1&&/[A-Z]/.test(t)&&c[\"camel-case-expansion\"]){const s=decamelize(t,\"-\");if(s!==e&&y.aliases[e].indexOf(s)===-1){y.aliases[e].push(s);A[s]=true}}}));y.aliases[e].forEach((function(t){y.aliases[t]=[e].concat(y.aliases[e].filter((function(e){return t!==e})))}))}))}))}function checkAllAliases(e,t){const s=[].concat(y.aliases[e]||[],e);const n=Object.keys(t);const r=s.find((e=>n.includes(e)));return r?t[r]:false}function hasAnyFlag(e){const t=Object.keys(y);const s=[].concat(t.map((e=>y[e])));return s.some((function(t){return Array.isArray(t)?t.includes(e):t[e]}))}function hasFlagsMatching(e,...t){const s=[].concat(...t);return s.some((function(t){const s=e.match(t);return s&&hasAnyFlag(s[1])}))}function hasAllShortFlags(e){if(e.match(b)||!e.match(/^-[^-]+/)){return false}let t=true;let s;const n=e.slice(1).split(\"\");for(let r=0;r<n.length;r++){s=e.slice(r+2);if(!hasAnyFlag(n[r])){t=false;break}if(n[r+1]&&n[r+1]===\"=\"||s===\"-\"||/[A-Za-z]/.test(n[r])&&/^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(s)||n[r+1]&&n[r+1].match(/\\W/)){break}}return t}function isUnknownOptionAsArg(e){return c[\"unknown-options-as-args\"]&&isUnknownOption(e)}function isUnknownOption(e){e=e.replace(/^-{3,}/,\"--\");if(e.match(b)){return false}if(hasAllShortFlags(e)){return false}const t=/^-+([^=]+?)=[\\s\\S]*$/;const s=/^-+([^=]+?)$/;const n=/^-+([^=]+?)-$/;const r=/^-+([^=]+?\\d+)$/;const i=/^-+([^=]+?)\\W+.*$/;return!hasFlagsMatching(e,t,m,s,n,r,i)}function defaultValue(e){if(!checkAllAliases(e,y.bools)&&!checkAllAliases(e,y.counts)&&`${e}`in l){return l[e]}else{return defaultForType(guessType(e))}}function defaultForType(e){const t={[a.BOOLEAN]:true,[a.STRING]:\"\",[a.NUMBER]:undefined,[a.ARRAY]:[]};return t[e]}function guessType(e){let t=a.BOOLEAN;if(checkAllAliases(e,y.strings))t=a.STRING;else if(checkAllAliases(e,y.numbers))t=a.NUMBER;else if(checkAllAliases(e,y.bools))t=a.BOOLEAN;else if(checkAllAliases(e,y.arrays))t=a.ARRAY;return t}function isUndefined(e){return e===undefined}function checkConfiguration(){Object.keys(y.counts).find((e=>{if(checkAllAliases(e,y.arrays)){k=Error(g(\"Invalid configuration: %s, opts.count excludes opts.array.\",e));return true}else if(checkAllAliases(e,y.nargs)){k=Error(g(\"Invalid configuration: %s, opts.count excludes opts.narg.\",e));return true}return false}))}return{aliases:Object.assign({},y.aliases),argv:Object.assign(E,j),configuration:c,defaulted:Object.assign({},d),error:k,newAliases:Object.assign({},A)}}}function combineAliases(e){const t=[];const s=Object.create(null);let n=true;Object.keys(e).forEach((function(s){t.push([].concat(e[s],s))}));while(n){n=false;for(let e=0;e<t.length;e++){for(let s=e+1;s<t.length;s++){const r=t[e].filter((function(e){return t[s].indexOf(e)!==-1}));if(r.length){t[e]=t[e].concat(t[s]);t.splice(s,1);n=true;break}}}}t.forEach((function(e){e=e.filter((function(e,t,s){return s.indexOf(e)===t}));const t=e.pop();if(t!==undefined&&typeof t===\"string\"){s[t]=e}}));return s}function increment(e){return e!==undefined?e+1:1}function sanitizeKey(e){if(e===\"__proto__\")return\"___proto___\";return e}function stripQuotes(e){return typeof e===\"string\"&&(e[0]===\"'\"||e[0]==='\"')&&e[e.length-1]===e[0]?e.substring(1,e.length-1):e}var c,l,f;const u=process&&process.env&&process.env.YARGS_MIN_NODE_VERSION?Number(process.env.YARGS_MIN_NODE_VERSION):12;const p=(l=(c=process===null||process===void 0?void 0:process.versions)===null||c===void 0?void 0:c.node)!==null&&l!==void 0?l:(f=process===null||process===void 0?void 0:process.version)===null||f===void 0?void 0:f.slice(1);if(p){const e=Number(p.match(/^([^.]+)/)[1]);if(e<u){throw Error(`yargs parser supports a minimum Node.js version of ${u}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`)}}const h=process?process.env:{};const A=new YargsParser({cwd:process.cwd,env:()=>h,format:n.format,normalize:r.normalize,resolve:r.resolve,require:e=>{if(true){return s(670)(e)}else{}}});const d=function Parser(e,t){const s=A.parse(e.slice(),t);return s.argv};d.detailed=function(e,t){return A.parse(e.slice(),t)};d.camelCase=camelCase;d.decamelize=decamelize;d.looksLikeNumber=looksLikeNumber;e.exports=d}};var t={};function __nccwpck_require__(s){var n=t[s];if(n!==undefined){return n.exports}var r=t[s]={exports:{}};var i=true;try{e[s](r,r.exports,__nccwpck_require__);i=false}finally{if(i)delete t[s]}return r.exports}(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var s=__nccwpck_require__(970);module.exports=s})();", "explanation": "It seems like you've provided a code snippet, but I don't see any specific question or problem to solve.\n\nIf you could provide more context or clarify what you're trying to accomplish with this code, I'd be happy to help.\n\nIs there something specific you need assistance with? \n\nPlease let me know if I can assist further.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "compiled/yargs-parser/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "It seems like there's no actual code snippet provided. However, based on your request for a holistic summary of the file 'compiled/yargs-parser/index.js', I'll assume it's related to Yargs Parser, a utility for parsing command-line arguments.\n\nHere's a concise and to-the-point summary:\n\n**Summary:** The 'compiled/yargs-parser/index.js' file contains the main entry point for Yargs Parser, a JavaScript library that helps parse and validate command-line arguments."}
{"code": "import os from 'os';\nimport { Analytics as Segment } from '@segment/analytics-node';\nimport { loadConfig } from './config';\nimport { addShutdownTask } from './utils/shutdown';\n\nexport interface Analytics {\n  logEvent(event: string, data: any): void;\n  identifyUser(userId: string): void;\n  prepareForShutdown(): Promise<void>;\n}\n\nexport class SegmentAnalytics implements Analytics {\n  private segment: Segment;\n\n  constructor() {\n    this.segment = new Segment({ writeKey: 'g9GIEwAL2HOQHq6PXg9gHzSjEBuAuRLq' });\n    addShutdownTask(async (reason) => {\n      this.logEvent('cli-tool-shutdown', reason);\n      await this.prepareForShutdown();\n    });\n  }\n\n  logEvent(event: string, data: any): void {\n    const config = loadConfig();\n    if (config?.shouldTrackUsageData ?? false) {\n      this.segment.track({ anonymousId: config?.id ?? '', event, properties: data });\n    }\n  }\n\n  identifyUser(userId: string) {\n    const config = loadConfig();\n    if (config?.shouldTrackUsageData ?? false) {", "explanation": "**Summary:**\n\nThis block is a Node.js module that integrates Segment analytics into an application, allowing users to track events and identify users. It provides two main functions:\n\n1. `logEvent`: sends anonymous data to Segment when a specific event occurs.\n2. `identifyUser`: sets a user ID in Segment if tracking usage data is enabled.\n\nThe module also adds a shutdown task to log the reason for shutdown and prepare for cleanup before exiting.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/analytics.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/analytics.ts':\n\n**Summary:**\n\nThis module integrates Segment analytics, allowing users to track events and identify users. It provides methods for logging events (`logEvent`) and identifying users (`identifyUser`), as well as shutdown preparation."}
{"code": "      this.segment.identify({ userId, traits: { os: os.platform } });\n    }\n  }\n\n  async prepareForShutdown(): Promise<void> {\n    await this.segment.closeAndFlush();\n  }\n}\n\nexport const SharedAnalytics = new SegmentAnalytics();\n", "explanation": "Here is a concise summary:\n\nThis code defines a class `SegmentAnalytics` with methods for initializing analytics tracking (`identify`) and preparing for shutdown (closing and flushing data). It exports an instance of this class as `SharedAnalytics`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/analytics.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/analytics.ts':\n\n**Summary:**\n\nThis module integrates Segment analytics, allowing users to track events and identify users. It provides methods for logging events (`logEvent`) and identifying users (`identifyUser`), as well as shutdown preparation."}
{"code": "import fs from 'fs';\nimport chalk from 'chalk';\nimport got from 'got';\nimport { createApp } from './create-app';\nimport { printHelp } from './help-text';\nimport { resolveToRoot } from './utils/path-helpers';\nimport { CreateMagicAppError, CreateMagicAppErrorCode } from './utils/errors-warnings';\nimport { makeInputsLowercase, parseFlags } from './flags';\nimport { globalOptions } from './global-options';\nimport { shutdown, useGracefulShutdown } from './utils/shutdown';\nimport { SharedAnalytics } from './analytics';\nimport { modifyUsageConsent, initializeUsageConfigIfneeded } from './utils/usagePermissions';\nimport { loadConfig } from './config';\nimport suppressWarnings from './utils/suppress-experimental-warnings';\n\nexport const ConsoleMessages = {\n  bootstrapSuccess: (projectName: string, destination: string) => {\n    console.log(); // Aesthetics!\n\n    const magic = chalk`{rgb(92,101,246) M}{rgb(127,103,246) ag}{rgb(168,140,248) ic}`;\n\n    const msg = [\n      '\u2728\\n',", "explanation": "**Summary**\n\nThis block imports various dependencies and exports a `ConsoleMessages` object with a method to print success messages for creating a project using the \"create-app\" command.\n\n**Functionality**\n\nThe code imports dependencies from other modules, creates a `ConsoleMessages` object with a single method `bootstrapSuccess`, and sets up analytics, usage permissions, and shutdown functionality. The `bootstrapSuccess` method logs a colorful success message to the console when a project is created.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/cli.ts", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/cli.ts':\n\nThis file exports a `ConsoleMessages` object that handles various tasks, including:\n\n* Creating a colorful success message when a project is created with the \"create-app\" command\n* Displaying instructions on how to install dependencies and start the app\n* Checking for updates against the MakeMagic library and providing a link to GitHub issues\n* Initializing usage data configuration and loading global configuration\n* Handling program startup, analytics, and shutdown process\n* Catching errors during scaffold creation and logging them\n\nThe code also sets up analytics, usage permissions, and shutdown functionality, making it a comprehensive utility for CLI tasks."}
{"code": "      chalk`{bold {green Success!} You've bootstrapped a ${magic} app with {rgb(0,255,255) ${projectName}}!}`,\n      chalk`Created {bold.rgb(0,255,255) ${projectName}} at {bold.rgb(0,255,255) ${destination}}`,\n    ];\n\n    return msg.join('\\n');\n  },\n\n  postRenderCommands: (installCmd: string | undefined, startCmd: string | undefined, projectName: string) => {\n    console.log(); // Aesthetics!\n\n    const msg = [\n      (installCmd || startCmd) && chalk`Inside your app directory, you can run several commands:\\n`,\n\n      installCmd && chalk`  {rgb(0,255,255) ${installCmd}}`,\n      installCmd && chalk`    Install dependencies.\\n`,\n\n      startCmd && chalk`  {rgb(0,255,255) ${startCmd}}`,\n      startCmd && chalk`    Starts the app with a local development server.\\n`,\n\n      startCmd && chalk`Type the following to restart your newly-created app:\\n`,\n      startCmd && chalk`  {rgb(0,255,255) cd} ${projectName}`,\n      startCmd && chalk`  {rgb(0,255,255) ${startCmd}}`,\n    ].filter(Boolean);\n", "explanation": "**Purpose:** Display a success message with installation and starting commands for a newly created project.\n\n**Functionality:** Outputs a colorful log message with instructions on how to install dependencies and start the app, along with links to specific commands.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/cli.ts", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/cli.ts':\n\nThis file exports a `ConsoleMessages` object that handles various tasks, including:\n\n* Creating a colorful success message when a project is created with the \"create-app\" command\n* Displaying instructions on how to install dependencies and start the app\n* Checking for updates against the MakeMagic library and providing a link to GitHub issues\n* Initializing usage data configuration and loading global configuration\n* Handling program startup, analytics, and shutdown process\n* Catching errors during scaffold creation and logging them\n\nThe code also sets up analytics, usage permissions, and shutdown functionality, making it a comprehensive utility for CLI tasks."}
{"code": "    return msg.join('\\n');\n  },\n\n  gitHubIssuesLink: () => {\n    const msg = chalk`For feedback/questions/issues, please use {rgb(0,255,255) https://github.com/magiclabs/make-magic-app/issues/new/choose}`;\n    return msg;\n  },\n};\n\nasync function sayHello() {\n  console.log(chalk`\\n\n {rgb(92,101,246) \u2588\u2580\u2580 \u2588}{rgb(127,103,246) \u2580\u2588 \u2588\u2580\u2580} {rgb(133,139,247) \u2584\u2580\u2588 \u2580\u2588\u2580} {rgb(168,140,248) \u2588\u2580\u2580}\n {rgb(92,101,246) \u2588\u2584\u2584 \u2588}{rgb(127,103,246) \u2580\u2584 \u2588\u2588\u2584} {rgb(133,139,247) \u2588\u2580\u2588  \u2588 } {rgb(168,140,248) \u2588\u2588\u2584}\n\n {rgb(92,101,246) \u2588\u2580\u2584\u2580\u2588} {rgb(127,103,246) \u2584\u2580\u2588 \u2588\u2580}{rgb(133,139,247) \u2580 \u2588 \u2588\u2580\u2580}\n {rgb(92,101,246) \u2588 \u2580 \u2588} {rgb(127,103,246) \u2588\u2580\u2588 \u2588\u2584}{rgb(133,139,247) \u2588 \u2588 \u2588\u2584\u2584}\n\n {rgb(92,101,246) \u2584\u2580\u2588 \u2588}{rgb(127,103,246) \u2580\u2588 \u2588\u2580\u2588}\n {rgb(92,101,246) \u2588\u2580\u2588 \u2588}{rgb(127,103,246) \u2580\u2580 \u2588\u2580\u2580}\n`);\n\n  const currentVersion = getMakeMagicVersion();\n  const latestVersion = await getLatestMakeMagicVersion();\n  if (currentVersion !== latestVersion) {\n    console.log(", "explanation": "Here is a concise summary of the purpose and functionality of this code block:\n\n**Purpose:** Utility functions for outputting formatted text and interacting with GitHub issues.\n\n**Functionality:**\n\n1. `join`: Returns a message string joined by newline characters.\n2. `gitHubIssuesLink`: Creates a link to create a new issue on GitHub.\n3. `sayHello`: Prints a colorful hello message to the console, checks for updates against the MakeMagic library, and displays a prompt if a newer version is available.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/cli.ts", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/cli.ts':\n\nThis file exports a `ConsoleMessages` object that handles various tasks, including:\n\n* Creating a colorful success message when a project is created with the \"create-app\" command\n* Displaying instructions on how to install dependencies and start the app\n* Checking for updates against the MakeMagic library and providing a link to GitHub issues\n* Initializing usage data configuration and loading global configuration\n* Handling program startup, analytics, and shutdown process\n* Catching errors during scaffold creation and logging them\n\nThe code also sets up analytics, usage permissions, and shutdown functionality, making it a comprehensive utility for CLI tasks."}
{"code": "      chalk`{rgb(92,101,246) A new version of {bold make-magic-app} is available! {rgb(0,255,255) ${currentVersion}} \u2192 {rgb(0,255,255) ${latestVersion}}}`,\n    );\n    console.log(chalk`{rgb(92,101,246) Run {rgb(0,255,255) npm i -g make-magic-app} to update!}\\n\\n`);\n  } else {\n    console.log(chalk`\\n {dim v${getMakeMagicVersion()}}\\n\\n`);\n  }\n\n  console.log(ConsoleMessages.gitHubIssuesLink());\n  console.log();\n}\n\n(async () => {\n  // Ensures that ExperimentalWarning caused by fetch is suppressed\n  suppressWarnings.fetch();\n\n  useGracefulShutdown();\n\n  const parsedFlags = await parseFlags(globalOptions);\n  const { version, help, projectName, shareUsageData } = parsedFlags;\n  let { template, network, branch } = parsedFlags;\n\n  template = makeInputsLowercase(template);\n  network = makeInputsLowercase(network);\n  branch = makeInputsLowercase(branch);\n\n  const collectUsageData = await initializeUsageConfigIfneeded();\n  const config = loadConfig();\n\n  if (version) {\n    console.log(getMakeMagicVersion());\n    shutdown(0);", "explanation": "**Summary:**\n\nThis block checks for updates of the `make-magic-app` package, logs a message with the current version, and provides a link to GitHub issues. It also initializes usage data configuration, loads global configuration, and parses command-line flags. If the `--version` flag is present, it prints the Make Magic app version and exits.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/cli.ts", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/cli.ts':\n\nThis file exports a `ConsoleMessages` object that handles various tasks, including:\n\n* Creating a colorful success message when a project is created with the \"create-app\" command\n* Displaying instructions on how to install dependencies and start the app\n* Checking for updates against the MakeMagic library and providing a link to GitHub issues\n* Initializing usage data configuration and loading global configuration\n* Handling program startup, analytics, and shutdown process\n* Catching errors during scaffold creation and logging them\n\nThe code also sets up analytics, usage permissions, and shutdown functionality, making it a comprehensive utility for CLI tasks."}
{"code": "  }\n\n  if (help) {\n    await sayHello();\n    printHelp(globalOptions, template);\n    shutdown(0);\n  }\n\n  if (shareUsageData !== undefined) {\n    const consent = await modifyUsageConsent(shareUsageData);\n    if (consent) {\n      console.log('Thanks for helping us improve the developer experience by sharing anonymous usage data!');\n    } else {\n      console.log('You are now opted out of sharing anonymous usage data.');\n    }\n    shutdown(0);\n  }\n\n  await sayHello();\n\n  if (collectUsageData && config?.id) {\n    SharedAnalytics.identifyUser(config.id);\n  }\n\n  // Run the scaffold...\n  await createApp({ projectName, template, branch, network });\n})().catch((err) => {\n  SharedAnalytics.logEvent('cli-tool-error', { error: err });\n  if (err instanceof CreateMagicAppError && err.code === CreateMagicAppErrorCode.USER_CANCELED_PROMPT) {\n    // Skip logging errors about users canceling input, just exit!\n    shutdown(1);\n  }\n\n  if (err instanceof CreateMagicAppError) {\n    console.error(`\\n${err.message}`);", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Handle program startup and analytics, then run the main scaffold creation.\n\n**Functionality:**\n\n* Display help text and exit if requested.\n* Ask user for consent to share usage data and update their preference accordingly.\n* Initialize SharedAnalytics with user ID (if provided).\n* Catch any errors that occur during scaffold creation and log them.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/cli.ts", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/cli.ts':\n\nThis file exports a `ConsoleMessages` object that handles various tasks, including:\n\n* Creating a colorful success message when a project is created with the \"create-app\" command\n* Displaying instructions on how to install dependencies and start the app\n* Checking for updates against the MakeMagic library and providing a link to GitHub issues\n* Initializing usage data configuration and loading global configuration\n* Handling program startup, analytics, and shutdown process\n* Catching errors during scaffold creation and logging them\n\nThe code also sets up analytics, usage permissions, and shutdown functionality, making it a comprehensive utility for CLI tasks."}
{"code": "    console.error(chalk`\\nSee {bold --help} for information about proper options usage.`);\n    shutdown(1);\n  }\n\n  console.error(err);\n  shutdown(1);\n});\n\nfunction getMakeMagicVersion() {\n  return JSON.parse(fs.readFileSync(resolveToRoot('package.json')).toString('utf8')).version;\n}\n\nasync function getLatestMakeMagicVersion() {\n  const latest = await got.get('https://registry.npmjs.org/make-magic-app/latest');\n\n  return JSON.parse(latest.body).version;\n}\n", "explanation": "Here is a concise summary:\n\n**Block Purpose:** Handle errors and shutdown process.\n\n**Functionality:**\n\n* Logs an error message with a usage hint for `--help`.\n* Exits the program with code 1.\n* Also logs and exits on any other error (e.g., `err`).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/cli.ts", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/cli.ts':\n\nThis file exports a `ConsoleMessages` object that handles various tasks, including:\n\n* Creating a colorful success message when a project is created with the \"create-app\" command\n* Displaying instructions on how to install dependencies and start the app\n* Checking for updates against the MakeMagic library and providing a link to GitHub issues\n* Initializing usage data configuration and loading global configuration\n* Handling program startup, analytics, and shutdown process\n* Catching errors during scaffold creation and logging them\n\nThe code also sets up analytics, usage permissions, and shutdown functionality, making it a comprehensive utility for CLI tasks."}
{"code": "import path from 'path';\nimport os from 'os';\nimport fs from 'fs';\n\n// Relative to `/dist`, so we are actually walking up an additional directory.\nexport const REPO_ROOT = path.resolve(__dirname, '../../');\n\nexport const GITHUB_BASE_URL = 'https://github.com';\nexport const DEFAULT_CREATE_MAGIC_APP_REPO = 'magiclabs/make-magic-app';\nexport const BINARY = 'make-magic-app';\n\nexport interface CliConfig {\n  shouldTrackUsageData: boolean;\n  id: string;\n}\n\nlet configCache: Partial<CliConfig> | undefined;\n\nexport const saveConfig = (config: Partial<CliConfig>) => {\n  try {\n    configCache = config;\n    const homedir = os.homedir();\n    const configDir = path.resolve(homedir, '.make-magic-app');\n    if (!fs.existsSync(configDir)) {\n      fs.mkdirSync(configDir);\n    }\n    const configUrl = path.resolve(homedir, '.make-magic-app/config');\n    const configString = JSON.stringify(config);\n    fs.writeFileSync(configUrl, configString);\n  } catch (err) {\n    console.error(err);\n  }\n};\n", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** Manage application configuration and settings.\n\n**Functionality:**\n\n* Exposes constants for repository root, GitHub base URL, and default app name.\n* Defines an interface for CLI (Command-Line Interface) configuration.\n* Provides a function to save and cache user configuration.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/config.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'core/config.ts':\n\n**Manages application configuration and settings**\n\nLoads configuration from a local JSON file, caching it for future use, and provides constants and interfaces for repository root, GitHub base URL, default app name, and CLI configuration."}
{"code": "export const loadConfig = (): Partial<CliConfig> | undefined => {\n  try {\n    if (configCache) return configCache;\n\n    const homedir = os.homedir();\n    const configUrl = path.resolve(homedir, '.make-magic-app/config');\n    const configString = fs.readFileSync(configUrl, 'utf8');\n    const config = JSON.parse(configString);\n    configCache = config;\n    return config;\n  } catch (err) {\n    return undefined;\n  }\n};\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Loads application configuration from a local file.\n\n**Functionality:** Reads JSON config file, parses its contents, and caches the result for future use. Returns `undefined` if an error occurs or the cache already exists.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/config.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'core/config.ts':\n\n**Manages application configuration and settings**\n\nLoads configuration from a local JSON file, caching it for future use, and provides constants and interfaces for repository root, GitHub base URL, default app name, and CLI configuration."}
{"code": "import fs from 'fs';\nimport { URL } from 'url';\nimport path from 'path';\nimport ora, { Ora } from 'ora';\nimport prettyTime from 'pretty-time';\nimport execa from 'execa';\nimport chalk from 'chalk';\nimport { BlockchainNetworkPrompt } from 'scaffolds/prompts';\nimport { downloadAndExtractRepo, getRepoInfo } from './utils/repo';\nimport { makeDir } from './utils/make-dir';\nimport { DEFAULT_CREATE_MAGIC_APP_REPO, GITHUB_BASE_URL } from './config';\nimport { getAbsoluteTemplatePath, getRelativeTemplatePath, resolveToDist } from './utils/path-helpers';\nimport { createProjectDirIfDoesntExists, getScaffoldDefinition } from './utils/scaffold-helpers';\nimport { printWarning } from './utils/errors-warnings';\nimport { parseFlags } from './flags';\nimport { addShutdownTask } from './utils/shutdown';\nimport { SharedAnalytics } from './analytics';\nimport { buildTemplate, mapTemplateToFlags, mapTemplateToScaffold } from './utils/templateMappings';\nimport { Timer, createTimer } from './utils/timer';", "explanation": "Here is a concise summary:\n\n**Block Purpose:** Automate project setup and deployment using various utilities.\n\n**Functionality:**\n\n* Import necessary libraries and modules\n* Define functions for tasks such as:\n\t+ Downloading and extracting repositories\n\t+ Creating directories and scaffolding projects\n\t+ Building templates and mapping to flags and scaffolds\n\t+ Timing and analytics tracking", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/create-app.tsx", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/create-app.tsx':\n\n**Purpose:** Generate and deploy Magic-enabled applications by automating project setup and deployment.\n\n**Functionality:**\n\n* Resolves available scaffolds, checks chosen template validity, and builds/configures templates.\n* Clones a GitHub repository, scaffolds a project, and maps template to scaffold.\n* Generates a scaffold, logs progress, and executes install and start commands after completion.\n\nThis code block defines functions that manage application rendering, timing logic, and deployment, making it an essential component for creating Magic-enabled applications."}
{"code": "import BaseScaffold from './types/BaseScaffold';\nimport { renderScaffold } from './utils/renderScaffold';\nimport { ConsoleMessages } from './cli';\n\nexport interface CreateMagicAppData extends BlockchainNetworkPrompt.Data {\n  /**\n   * The `make-magic-app` project branch to source templates from.\n   */\n  branch: string;\n\n  /**\n   * The project name maps to a base directory\n   * created to wrap the generated code.\n   */\n  projectName: string;\n\n  /**\n   * The base template to use for scaffolding your Magic-enabled application.\n   */\n  template: string;\n}\n\nexport interface CreateMagicAppConfig extends Partial<CreateMagicAppData> {\n  /**\n   * Arbitrary data to passthrough to the template being scaffolded.\n   * This data will be made available for any template-specific variables.\n   */\n  data?: {};\n}\n\n/**\n * Generates and runs a project scaffold.\n */\nexport async function createApp(config: CreateMagicAppConfig) {\n  SharedAnalytics.logEvent('cli-tool-started', { input: config });\n\n  const destinationRoot = process.cwd();\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Generate and run a project scaffold for creating Magic-enabled applications.\n\n**Functionality:** This code defines interfaces for configuration data and logs analytics events. It then exports an asynchronous function `createApp` that generates and runs a project scaffold based on user-provided configuration, including template selection and project naming.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/create-app.tsx", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/create-app.tsx':\n\n**Purpose:** Generate and deploy Magic-enabled applications by automating project setup and deployment.\n\n**Functionality:**\n\n* Resolves available scaffolds, checks chosen template validity, and builds/configures templates.\n* Clones a GitHub repository, scaffolds a project, and maps template to scaffold.\n* Generates a scaffold, logs progress, and executes install and start commands after completion.\n\nThis code block defines functions that manage application rendering, timing logic, and deployment, making it an essential component for creating Magic-enabled applications."}
{"code": "  const availableScaffolds = fs\n    .readdirSync(resolveToDist('scaffolds'))\n    .filter((name) => fs.statSync(resolveToDist('scaffolds', name)).isDirectory())\n    .map((name) => {\n      return {\n        name,\n        message: getScaffoldDefinition(name).shortDescription,\n        featured: getScaffoldDefinition(name).featured,\n      };\n    });\n\n  const isChosenTemplateValid = availableScaffolds\n    .map((i) => i.name)\n    .includes((config?.template ? config.template : '').toLowerCase());\n\n  if (config?.template && !isChosenTemplateValid) {\n    printWarning(chalk`'{bold ${config.template}}' does not match any templates.`);\n    console.warn(); // Aesthetics!\n  }\n\n  config = {\n    ...(await buildTemplate({\n      ...config,\n      chain: undefined,\n      configuration: undefined,\n      isChosenTemplateValid: false,\n      isQuickstart: false,\n    })),\n  };\n\n  const templateFlags: any = await parseFlags(mapTemplateToFlags(config.template as string), config?.data);", "explanation": "Here is a concise summary:\n\n**Purpose:** Resolves available scaffolds, checks chosen template validity, and builds/configures templates.\n\n**Functionality:**\n\n1. Retrieves available scaffold directories.\n2. Checks if chosen template matches any available scaffolds.\n3. Builds/configures templates based on user input (config).\n4. Parses flags for the built template.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/create-app.tsx", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/create-app.tsx':\n\n**Purpose:** Generate and deploy Magic-enabled applications by automating project setup and deployment.\n\n**Functionality:**\n\n* Resolves available scaffolds, checks chosen template validity, and builds/configures templates.\n* Clones a GitHub repository, scaffolds a project, and maps template to scaffold.\n* Generates a scaffold, logs progress, and executes install and start commands after completion.\n\nThis code block defines functions that manage application rendering, timing logic, and deployment, making it an essential component for creating Magic-enabled applications."}
{"code": "  const repoUrl = new URL(`${DEFAULT_CREATE_MAGIC_APP_REPO}/tree/${config.branch}`, GITHUB_BASE_URL);\n  const repoInfo = await getRepoInfo(repoUrl, getRelativeTemplatePath(config.template as string));\n  if (repoInfo) {\n    const templatePath = getAbsoluteTemplatePath(config.template as string);\n\n    // TODO - come back to this to check if out of date\n    if (!fs.existsSync(templatePath)) {\n      await makeDir(templatePath);\n      await downloadAndExtractRepo(templatePath, repoInfo);\n    }\n  } else {\n    // TODO: Handle case where repo info is not found\n  }\n\n  const cwd = process.cwd();\n  createProjectDirIfDoesntExists(cwd, config.projectName!);\n\n  const templateData = {\n    ...config,\n    ...templateFlags,\n    ...config.data,\n  };\n\n  const { gray, cyan } = chalk;\n  const timer = createTimer();\n\n  const spinner = ora({ text: 'Scaffolding', spinner: 'dots10' });\n  startTimerAndSpinner(timer, spinner, false);\n\n  const scaffold = await mapTemplateToScaffold(config.template as string, templateData, spinner, timer);\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Clones a GitHub repository and scaffolds a project.\n\n**Functionality:**\n\n1. Downloads a GitHub repository based on user configuration.\n2. Checks if the downloaded template is up-to-date (todo).\n3. Creates a new directory for the project.\n4. Prepares template data from user configuration and flags.\n5. Starts a timer and spinner to track progress.\n6. Maps the template to scaffold a new project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/create-app.tsx", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/create-app.tsx':\n\n**Purpose:** Generate and deploy Magic-enabled applications by automating project setup and deployment.\n\n**Functionality:**\n\n* Resolves available scaffolds, checks chosen template validity, and builds/configures templates.\n* Clones a GitHub repository, scaffolds a project, and maps template to scaffold.\n* Generates a scaffold, logs progress, and executes install and start commands after completion.\n\nThis code block defines functions that manage application rendering, timing logic, and deployment, making it an essential component for creating Magic-enabled applications."}
{"code": "  startTimerAndSpinner(timer, spinner, true);\n  console.log(`${gray('\\n\\nRunning scaffold ') + cyan.bold(scaffold.templateName)}\\n`);\n\n  await renderScaffold(process.cwd(), scaffold, templateData);\n\n  const prettyTimeElapsed = prettyTime(timer.stop());\n  spinner.succeed(gray(`Generated in ${cyan.bold(prettyTimeElapsed)}\\n\\n`));\n\n  addShutdownTask(() => {\n    console.log(ConsoleMessages.bootstrapSuccess(config.projectName!, path.join(destinationRoot, config.projectName!)));\n  });\n\n  const installCmd = await createPostRenderAction({\n    data: templateData,\n    cmd: 'installDependenciesCommand',\n    scaffold,\n    log: true,\n  })?.wait();\n  const startCmd = createPostRenderAction({ data: templateData, cmd: 'startCommand', scaffold, log: true });\n\n  addShutdownTask(() => {\n    console.log(ConsoleMessages.postRenderCommands(installCmd, startCmd, config.projectName!));\n  });\n}\n\n/**\n * After the scaffold is rendered, we call this\n * function to invoke post-render shell commands.\n */", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Generate a scaffold and run post-render actions.\n\n**Functionality:** Renders a scaffold, logs progress, and executes install and start commands after completion.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/create-app.tsx", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/create-app.tsx':\n\n**Purpose:** Generate and deploy Magic-enabled applications by automating project setup and deployment.\n\n**Functionality:**\n\n* Resolves available scaffolds, checks chosen template validity, and builds/configures templates.\n* Clones a GitHub repository, scaffolds a project, and maps template to scaffold.\n* Generates a scaffold, logs progress, and executes install and start commands after completion.\n\nThis code block defines functions that manage application rendering, timing logic, and deployment, making it an essential component for creating Magic-enabled applications."}
{"code": "function createPostRenderAction(options: {\n  data: CreateMagicAppData & Record<string, any>;\n  cmd: 'installDependenciesCommand' | 'startCommand';\n  scaffold: BaseScaffold;\n  log?: boolean;\n}) {\n  const getCmd =\n    options.cmd === 'installDependenciesCommand' ? options.scaffold.installationCommand : options.scaffold.startCommand;\n\n  if (getCmd) {\n    const subprocess = execa(getCmd.command, getCmd.args, { stdio: 'inherit' });\n    const bin = `${getCmd.command} ${getCmd.args.join(' ')}`;\n\n    return Object.assign(bin, {\n      wait: async () => {\n        await subprocess;\n        return bin;\n      },\n    });\n  }\n}\n\nexport function startTimerAndSpinner(timer: Timer, spinner: Ora, isPaused: boolean) {\n  if (isPaused) {\n    timer.resume();\n  }\n  timer.start();\n  spinner.start();\n}\n\nexport function pauseTimerAndSpinner(timer: Timer, spinner: Ora) {\n  timer.pause();\n  if (spinner.isSpinning) {\n    spinner.stop();\n  }\n}\n", "explanation": "Here is a concise summary:\n\n**Block Summary**\n\nThis code block defines three functions that manage application rendering and timing logic.\n\n* `createPostRenderAction`: runs a command (installing dependencies or starting an app) and returns its result.\n* `startTimerAndSpinner`: starts a timer and spinner, resuming if paused.\n* `pauseTimerAndSpinner`: pauses a timer and stops a spinner if spinning.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/create-app.tsx", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'core/create-app.tsx':\n\n**Purpose:** Generate and deploy Magic-enabled applications by automating project setup and deployment.\n\n**Functionality:**\n\n* Resolves available scaffolds, checks chosen template validity, and builds/configures templates.\n* Clones a GitHub repository, scaffolds a project, and maps template to scaffold.\n* Generates a scaffold, logs progress, and executes install and start commands after completion.\n\nThis code block defines functions that manage application rendering, timing logic, and deployment, making it an essential component for creating Magic-enabled applications."}
{"code": "import parseArgs from 'yargs-parser';\nimport decamelize from 'decamelize';\nimport { createValidationError } from './utils/errors-warnings';\nimport { filterNilValues } from './utils/filter-nil-values';\n\nexport type ValueType = string | string[] | number | number[] | boolean;\n\ntype FlagType<T extends ValueType = ValueType> = T extends string\n  ? StringConstructor\n  : T extends string[]\n    ? [StringConstructor]\n    : T extends number\n      ? NumberConstructor\n      : T extends number[]\n        ? [NumberConstructor]\n        : T extends boolean\n          ? BooleanConstructor\n          : StringConstructor | NumberConstructor | BooleanConstructor;\n\n/**\n * Configuration to modify the behavior of flag-based template data inputs.\n */\ntype BaseFlag<T extends ValueType = ValueType> = {\n  /**\n   * A factory function to transform raw command-line input\n   * into the requisite native type (string, boolean, or number).\n   */\n  readonly type: FlagType<T>;\n\n  /**", "explanation": "**Summary**\n\nThis block exports a configuration object `BaseFlag` that modifies flag-based template data inputs. It uses the `yargs-parser` library to parse command-line arguments and provides a factory function to transform input into native types (string, boolean, or number).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/flags.ts", "chunk_number": 1, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/flags.ts':\n\n**Summary**\n\nThe `core/flags.ts` file exports a configuration object `BaseFlag` that modifies flag-based template data inputs using `yargs-parser`. It defines a factory function to transform input into native types (string, boolean, or number) and provides validation capabilities. The purpose of the code is to validate and parse CLI arguments, ensuring valid input data for further processing."}
{"code": "   * A single-character alias which can be used to assign the CLI flag in an\n   * abbreviated way. For example, `--help` has the alias `h`, which can be used\n   * like `-h`.\n   */\n  readonly alias?: string;\n\n  /**\n   * A help-text description for this flag. This will be printed along with\n   * global `make-magic-app` documentation when the respective template is used\n   * alongside the standard `--help` flag.\n   */\n  readonly description: string;\n\n  /**\n   * An optional validation function that may return an error message\n   * to be raised indicating invalid command-line input.\n   */\n  readonly validate?: (value: T) => (string | boolean | Promise<string | boolean>) | undefined;\n\n  /**\n   * Provides a default value for the flag.\n   */\n  readonly default?: T | (() => T);\n};\n\n/**\n * Configuration to modify the behavior of flag-based template data inputs.\n */\ntype BaseFlagWithRequiredDefault<T extends ValueType = ValueType> = BaseFlag<T> & {\n  /**\n   * Provides a default value for the flag.\n   */", "explanation": "Here is a concise summary:\n\nThis block defines a configuration object with four properties:\n\n1. `alias`: an optional single-character abbreviation for the CLI flag.\n2. `description`: a help-text description for the flag.\n3. `validate`: an optional validation function to ensure valid input.\n4. `default`: an optional default value for the flag.\n\nNote: This summary assumes that \"this block\" refers to the TypeScript type definition block provided in the code snippet.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/flags.ts", "chunk_number": 2, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/flags.ts':\n\n**Summary**\n\nThe `core/flags.ts` file exports a configuration object `BaseFlag` that modifies flag-based template data inputs using `yargs-parser`. It defines a factory function to transform input into native types (string, boolean, or number) and provides validation capabilities. The purpose of the code is to validate and parse CLI arguments, ensuring valid input data for further processing."}
{"code": "  readonly default: T | (() => T);\n};\n\n/**\n * Configuration to modify the behavior of flag-based template data inputs.\n */\nexport type Flag<T extends ValueType = ValueType> = BaseFlag<T> | BaseFlagWithRequiredDefault<T>;\n\n/**\n * A record of `ScaffoldFlag` values with data types given by `T`.\n */\nexport type Flags<T extends Record<string, ValueType | null | undefined> = Record<string, any>> = {\n  [P in keyof Required<T>]: undefined extends T[P]\n    ? BaseFlag<NonNullable<T[P]>>\n    : null extends T[P]\n      ? BaseFlag<NonNullable<T[P]>>\n      : BaseFlagWithRequiredDefault<NonNullable<T[P]>>;\n};\n\nexport type TypedFlags<F extends Flags> = F extends Flags<infer R> ? R : unknown;\n\n/**\n * Parse and validate input given by the user via CLI flags.\n */\nexport async function parseFlags<T extends Flags>(flags: T, data?: {}): Promise<TypedFlags<T>> {\n  const isProgrammaticFlow = !!data;\n  const aliases: Record<string, string[]> = {};\n  const booleans: string[] = [];\n\n  Object.entries(flags).forEach(([flag, options]) => {", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Configuration for flag-based template data inputs.\n\n**Functionality:** Defines types `Flag` and `Flags` for parsing CLI flags with validation and aliasing capabilities. The `parseFlags` function takes in user input, parses it, and returns validated results.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/flags.ts", "chunk_number": 3, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/flags.ts':\n\n**Summary**\n\nThe `core/flags.ts` file exports a configuration object `BaseFlag` that modifies flag-based template data inputs using `yargs-parser`. It defines a factory function to transform input into native types (string, boolean, or number) and provides validation capabilities. The purpose of the code is to validate and parse CLI arguments, ensuring valid input data for further processing."}
{"code": "    if (options.alias) {\n      aliases[flag] = [options.alias.toLowerCase()];\n    }\n\n    if (options.type === Boolean) {\n      booleans.push(flag);\n    }\n  });\n\n  const results: {} =\n    data ??\n    parseArgs(process.argv.slice(2), {\n      alias: aliases,\n      boolean: booleans,\n    });\n\n  const defaultResults = getFlagDefaults(flags);\n  const validatedResults = await validateFlagInputs(flags, results);\n  const finalResults = { ...defaultResults, ...validatedResults };\n\n  // If `data` is provided (in other words, if the flow is programmatic rather\n  // than CLI-based), we validate that all required fields are present in the\n  // final result.\n  if (isProgrammaticFlow) {\n    const requiredFields = Object.keys(flags).filter((flag) => flags[flag].default == null);\n    const givenFields = Object.keys(results);\n    const missingFields = requiredFields\n      .map((field) => {\n        if (!givenFields.includes(field)) return field;\n        return undefined;\n      })\n      .filter(Boolean);\n\n    if (missingFields.length) {", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Validate and parse CLI arguments.\n\n**Functionality:**\n\n1. Parse CLI flags with provided aliases and booleans.\n2. Combine parsed results with default flag values.\n3. Validate flag inputs against defaults.\n4. Check for missing required fields if data is programmatic.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/flags.ts", "chunk_number": 4, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/flags.ts':\n\n**Summary**\n\nThe `core/flags.ts` file exports a configuration object `BaseFlag` that modifies flag-based template data inputs using `yargs-parser`. It defines a factory function to transform input into native types (string, boolean, or number) and provides validation capabilities. The purpose of the code is to validate and parse CLI arguments, ensuring valid input data for further processing."}
{"code": "      throw createValidationError(`Missing required template data (${missingFields.join(', ')})`);\n    }\n  }\n\n  return finalResults;\n}\n\nfunction getFlagDefaults<T extends Flags>(flags: T) {\n  return filterNilValues<TypedFlags<T>>(\n    Object.fromEntries(\n      Object.keys(flags)\n        .filter((flag) => flags[flag].default != null)\n        .map((key) => {\n          const flag = flags[key] as unknown as Flag;\n          return [key, typeof flag.default === 'function' ? flag.default() : flag.default];\n        }),\n    ) as TypedFlags<T>,\n  );\n}\n\nasync function validateFlagInputs<T extends Flags>(flags: T, inputs: {} = {}) {\n  return filterNilValues<TypedFlags<T>>(\n    Object.fromEntries(\n      await Promise.all(\n        Object.entries(inputs).map(async ([key, value]) => {\n          const flag = flags[key] as unknown as Flag;\n\n          if (flag) {\n            // Coerce result type\n            const typeFactory = flag.type;\n            let result: any;\n            if (Array.isArray(typeFactory)) {", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** Validates flag inputs against a set of flags and returns valid input data.\n\n**Functionality:**\n\n1. Checks for missing required template data.\n2. Extracts default values from flags with defaults.\n3. Validates user-provided inputs against corresponding flags, coercing result types as needed.\n4. Filters out nil values to produce final validated results.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/flags.ts", "chunk_number": 5, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/flags.ts':\n\n**Summary**\n\nThe `core/flags.ts` file exports a configuration object `BaseFlag` that modifies flag-based template data inputs using `yargs-parser`. It defines a factory function to transform input into native types (string, boolean, or number) and provides validation capabilities. The purpose of the code is to validate and parse CLI arguments, ensuring valid input data for further processing."}
{"code": "              result = Array.isArray(value) ? value.map((i) => typeFactory[0](i)) : [typeFactory[0](value)];\n            } else {\n              // In the case that we expect the flag argument to NOT be an\n              // array, but we receive multiple instances of the flag anyway,\n              // we simply use the last instance.\n              result = Array.isArray(value) ? typeFactory(value[value.length - 1]) : typeFactory(value);\n            }\n\n            // Validate results\n            const invalidMessage = await flag?.validate?.(result);\n\n            if (invalidMessage && typeof invalidMessage === 'string') {\n              throw createValidationError(invalidMessage);\n            } else if (!invalidMessage && typeof invalidMessage === 'boolean') {\n              throw createValidationError(`--${decamelize(key, { separator: '-' })} received invalid input.`);\n            }\n\n            return [key, result ?? (typeof flag.default === 'function' ? flag.default() : flag.default)];\n          }\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Process input value(s) for a flag and validate results.\n\n**Functionality:**\n\n1. If multiple values are provided, process each individually using `typeFactory`.\n2. Validate processed result(s) against `flag.validate` function.\n3. Return key-value pair with validated result or default value if invalid.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/flags.ts", "chunk_number": 6, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/flags.ts':\n\n**Summary**\n\nThe `core/flags.ts` file exports a configuration object `BaseFlag` that modifies flag-based template data inputs using `yargs-parser`. It defines a factory function to transform input into native types (string, boolean, or number) and provides validation capabilities. The purpose of the code is to validate and parse CLI arguments, ensuring valid input data for further processing."}
{"code": "          // Return undefined if no flag is defined (we'll filter it out)\n          return [key, undefined];\n        }),\n      ),\n    ),\n  );\n}\n\nexport function makeInputsLowercase(arg: string | undefined): string | undefined {\n  if (arg === undefined) {\n    return undefined;\n  }\n  return arg.toLowerCase();\n}\n", "explanation": "Here is a concise summary:\n\nThis code snippet appears to be JavaScript functions that process data for filtering or formatting purposes, specifically converting input strings to lowercase. The purpose of the functions is to transform data in a specific way before it's used elsewhere.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/flags.ts", "chunk_number": 7, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/flags.ts':\n\n**Summary**\n\nThe `core/flags.ts` file exports a configuration object `BaseFlag` that modifies flag-based template data inputs using `yargs-parser`. It defines a factory function to transform input into native types (string, boolean, or number) and provides validation capabilities. The purpose of the code is to validate and parse CLI arguments, ensuring valid input data for further processing."}
{"code": "import chalk from 'chalk';\nimport { BlockchainNetworkPrompt } from 'scaffolds/prompts';\nimport { BINARY } from './config';\nimport { CreateMagicAppData } from './create-app';\nimport { Flags } from './flags';\n\nexport interface GlobalOptions extends Partial<CreateMagicAppData & BlockchainNetworkPrompt.Data> {\n  help?: boolean;\n  version?: boolean;\n  [key: string]: any;\n}\n\nexport const globalOptions: Flags<GlobalOptions> = {\n  projectName: {\n    type: String,\n    alias: 'p',\n    description:\n      'The name of your project. A top-level directory will be created from this value. If omitted, the project name will be prompted for interactively.',\n  },\n\n  template: {\n    type: String,\n    alias: 't',\n    description: 'The base template to use. If omitted or invalid, the template will be prompted for interactively.',\n  },\n\n  branch: {\n    type: String,\n    alias: 'b',\n    description: `The remote Git branch of \\`${BINARY}\\` from which to source templates.`,\n    default: 'master',\n  },\n\n  help: {\n    type: Boolean,", "explanation": "Here is a concise summary:\n\n**Purpose:** Define global command-line options for creating Magic App data.\n\n**Functionality:** Provides a set of flags (projectName, template, branch, help) that can be used to customize the creation process, with default values or interactive prompting if not provided.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/global-options.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/global-options.ts':\n\n**Summary:** Defines global command-line options for customizing Magic App creation, including project settings, template selection, and anonymous usage data sharing."}
{"code": "    alias: 'h',\n    description: chalk`Show help (you're lookin' at it). {bold If --template or -t is provided, template-specific documentation will be printed, too.}`,\n  },\n\n  version: {\n    type: Boolean,\n    alias: 'v',\n    description: `Show which version of \\`${BINARY}\\` is currently in use.`,\n  },\n\n  shareUsageData: {\n    type: Boolean,\n    description:\n      'A boolean representing whether or not to share anonymous usage data with Magic. The data cannot be traced back to you and is used to improve the developer experience.',\n  },\n\n  ...BlockchainNetworkPrompt.flags,\n};\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Summary:** Configures command-line flags for displaying help, version information, and sharing usage data.\n\n**Key functions:**\n\n* `h` or `-h`: Displays help text.\n* `v` or `-v`: Shows the current version of the binary.\n* `shareUsageData`: Controls anonymous usage data sharing with Magic.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/global-options.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/global-options.ts':\n\n**Summary:** Defines global command-line options for customizing Magic App creation, including project settings, template selection, and anonymous usage data sharing."}
{"code": "/* eslint-disable no-param-reassign */\n/* eslint-disable consistent-return */\n\nimport chalk from 'chalk';\nimport decamelize from 'decamelize';\nimport wrapAnsi from 'wrap-ansi';\nimport { BINARY } from './config';\nimport { Flags, Flag } from './flags';\nimport { mapTemplateToFlags } from './utils/templateMappings';\n\nconst styled = {\n  Usage: chalk.bold.inverse(' USAGE '),\n  Options: chalk.bold.inverse(' OPTIONS '),\n  Examples: chalk.bold.inverse(' EXAMPLES '),\n  sh: chalk.gray.dim('$'),\n  bin: chalk.green(BINARY),\n};\n\n/**\n * Prints help text, including specific options for the given `scaffoldName`.\n */\nexport function printHelp(globalOptions: Flags, scaffoldName?: string) {\n  const helpSections: string[] = [];\n\n  // Basic usage information\n  helpSections.push(\n    createHelpSection({\n      heading: styled.Usage,\n      content: `  ${styled.sh} ${styled.bin} [options]`,\n    }),\n  );\n\n  // Global options\n  helpSections.push(\n    createHelpSection({\n      heading: styled.Options,\n      content: createOptionsTable({", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Prints help text for a CLI tool.\n\n**Functionality:** Generates a formatted help message with usage information, global options, and examples, using the `createHelpSection` function. The help message can be customized based on the given `scaffoldName`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/help-text.ts", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/help-text.ts':\n\nThis file generates help text for CLI tools, including global options, template-specific options, usage examples, and formatted flag information. It uses functions like `createHelpSection`, `createOptionsTable`, and `formatDescription` to create readable sections and tables from input data."}
{"code": "        ...globalOptions,\n        '[...]': chalk`Additional CLI flags are given as data to the chosen template. Data provided as CLI flags will {italic not be prompted for interactively.}`,\n      }),\n    }),\n  );\n\n  // Template-specific options\n  try {\n    const flags = mapTemplateToFlags(scaffoldName!);\n    helpSections.push(\n      createHelpSection({\n        heading: styled.Options + chalk.bold(' \u276f ') + chalk.bold.hex('#b93fff').inverse(` ${scaffoldName} `),\n        content: createOptionsTable(flags),\n      }),\n    );\n  } catch (err) {\n    console.error(err);\n  }\n\n  // Usage examples\n  helpSections.push(\n    createHelpSection({\n      heading: styled.Examples,\n      content: [\n        `  ${styled.sh} npx ${styled.bin}`,\n        `  ${styled.sh} npx ${styled.bin} --version`,\n        `  ${styled.sh} npx ${styled.bin} --template=hello-world`,\n        `  ${styled.sh} npx ${styled.bin} --project-name=my-app`,\n      ].join('\\n'),\n    }),\n  );\n\n  // Print it out!\n  console.log(helpSections.join('\\n\\n'));\n}\n\n/**", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Generate help content for a CLI tool, including global options, template-specific options, and usage examples.\n\n**Functionality:** Creates sections with information on global options, template-specific options (if applicable), and provides usage examples to display in the help output.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/help-text.ts", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/help-text.ts':\n\nThis file generates help text for CLI tools, including global options, template-specific options, usage examples, and formatted flag information. It uses functions like `createHelpSection`, `createOptionsTable`, and `formatDescription` to create readable sections and tables from input data."}
{"code": " * Join a help section heading together with its content.\n */\nfunction createHelpSection(config: { heading: string; content: string }) {\n  return `${config.heading}\\n\\n${config.content}`;\n}\n\n/**\n * From the record of args to descriptions given by `source`,\n * output a printable table of arguments for the help text.\n */\nfunction createOptionsTable(flags: Record<string, string | Flag>) {\n  const normalizeArg = (arg: string, config?: Flag) => {\n    if (arg.startsWith('-') || arg.startsWith('[')) return arg;\n    return config?.alias\n      ? `--${decamelize(arg, { separator: '-' })}, -${config?.alias}`\n      : `--${decamelize(arg, { separator: '-' })}`;\n  };\n\n  // Get a list of rows containing de-camelized args\n  // as keys and formatted description texts as values\n  const rows: Array<[string, string]> = Object.entries(flags).map(([arg, config]) => {\n    const configStr = typeof config === 'string' ? config : config.description + getDefaultArgLabel(config);\n", "explanation": "Here is a concise summary of the block:\n\n**Two functions:**\n\n1. `createHelpSection`: Joins a heading with its content.\n2. `createOptionsTable`: Creates a printable table of arguments from an object mapping args to descriptions, formatting them in a human-readable way.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/help-text.ts", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/help-text.ts':\n\nThis file generates help text for CLI tools, including global options, template-specific options, usage examples, and formatted flag information. It uses functions like `createHelpSection`, `createOptionsTable`, and `formatDescription` to create readable sections and tables from input data."}
{"code": "    return [`  ${normalizeArg(arg, typeof config === 'string' ? undefined : config)}`, configStr];\n  });\n\n  const gap = 3; // Space between args column & description text\n  const maxWidth = 80 - gap;\n  const argColumnWidth = Math.max(...rows.map(([arg]) => arg.length));\n\n  const helpTexts = rows.map(([, helpText]) => formatDescription(helpText, maxWidth, argColumnWidth + gap));\n\n  return rows.map(([arg], i) => [arg, helpTexts[i]].join(' '.repeat(argColumnWidth - arg.length + gap))).join('\\n\\n');\n}\n\n/**\n * Creates a default value label based on the\n * value type associated to the given `flag`.\n */\nfunction getDefaultArgLabel(flag: Flag) {\n  const type = Array.isArray(flag.default) ? typeof flag.default[0] : typeof flag.default;\n  const value = Array.isArray(flag.default)\n    ? `[${(flag.default as any).map(JSON.stringify).join(', ')}]`\n    : JSON.stringify(flag.default);\n\n  switch (type) {\n    case 'string':\n    case 'number':\n    case 'boolean':\n      return chalk` {dim Default: {yellow ${value}}}`;\n", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Format help text for CLI flags.\n\n**Functionality:** Takes an array of flag rows and formats them into a readable string, including arg descriptions and default values.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/help-text.ts", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/help-text.ts':\n\nThis file generates help text for CLI tools, including global options, template-specific options, usage examples, and formatted flag information. It uses functions like `createHelpSection`, `createOptionsTable`, and `formatDescription` to create readable sections and tables from input data."}
{"code": "    case 'function':\n      return chalk` {dim Default: {yellow.italic auto-generated at runtime}}`;\n\n    default:\n      return '';\n  }\n}\n\n/**\n * Wraps the source `str` at `maxWidth`,\n * with leading whitespace for every line after the first.\n */\nfunction formatDescription(str: string, maxWidth: number, leadingWhitespaceAmount: number) {\n  const result = wrapAnsi(str, maxWidth - leadingWhitespaceAmount);\n  return result.split('\\n').join(`\\n${' '.repeat(leadingWhitespaceAmount)}`);\n}\n", "explanation": "**Purpose:** Conditionally returns a formatted string or empty string based on input type.\n\n**Functionality:**\n\n* Returns a formatted string with specific styling for a 'function' case.\n* Calls `formatDescription` function with parameters `str`, `maxWidth`, and `leadingWhitespaceAmount`.\n \n**FormatDescription Functionality:** \n\n* Wraps the source string at specified width.\n* Adds leading whitespace to every line after the first.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/help-text.ts", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/help-text.ts':\n\nThis file generates help text for CLI tools, including global options, template-specific options, usage examples, and formatted flag information. It uses functions like `createHelpSection`, `createOptionsTable`, and `formatDescription` to create readable sections and tables from input data."}
{"code": "import { createApp, CreateMagicAppConfig } from './create-app';\n\n/**\n * Generates boilerplate app code integrated with\n * passwordless login powered by Magic Labs.\n *\n * @see https://magic.link/\n */\nexport default async function makeMagicApp(options: CreateMagicAppConfig = {}) {\n  const { projectName = 'my-app', template = 'hello-world', branch = 'master', data = {} } = options;\n  await createApp({ projectName, template, branch, data });\n}\n", "explanation": "**Summary**\n\nThis block generates boilerplate app code with passwordless login powered by Magic Labs using the `create-app` function.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/lib.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to the point summary:\n\n\"Generates core application code with passwordless login functionality using Magic Labs and create-app function.\""}
{"code": "export default abstract class BaseScaffold {\n  public abstract templateName: string;\n\n  public abstract source: string | string[];\n\n  public abstract installationCommand: ExecaCommand;\n\n  public abstract startCommand: ExecaCommand;\n}\n\nexport type ExecaCommand = { command: string; args: string[] };\n", "explanation": "Here is a concise summary:\n\nThis code defines a base class `BaseScaffold` that serves as a template for scaffold configurations, with properties for a template name, source, installation command, and start command. The `ExecaCommand` type represents a command with an executable and arguments.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/types/BaseScaffold.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `BaseScaffold` class in `core/types/BaseScaffold.ts` serves as a base template for scaffold configurations, defining properties for template metadata and commands."}
{"code": "declare module 'cfonts' {\n  const CFonts: any;\n  export default CFonts;\n}\n", "explanation": "This block declares a module named 'cfonts', allowing it to be imported as a default export, providing access to its functionality.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/types/shims.d.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to the point summary:\n\n**Summary of core/types/shims.d.ts:**\n\nDeclares a shim module for the cfonts library, making its functionality accessible via import."}
{"code": "/**\n * Get a union of value types from `T`.\n */\nexport type ValuesOf<T> = T extends ReadonlyArray<any> ? T[number] : T[keyof T];\n", "explanation": "Here is a concise summary:\n\nThis block defines a TypeScript type alias \"ValuesOf\" that returns a union of all possible value types from a given generic type \"T\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/types/utility-types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\n`utility-types.ts`: Defines utility type aliases, starting with `ValuesOf`, which extracts a union of all possible values from a generic type."}
{"code": "export type AsyncPromiseExecutor<TResult> = (\n  resolve: (value: TResult | PromiseLike<TResult>) => void,\n  reject: (reason?: any) => void,\n) => void | Promise<void>;\n\nexport function createPromise<TResult>(executor: AsyncPromiseExecutor<TResult>) {\n  return new Promise<TResult>((resolve, reject) => {\n    const result = executor(resolve, reject);\n    Promise.resolve(result).catch(reject);\n  });\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Create a promise from an asynchronous function.\n\n**Functionality:** Takes an async function as input, executes it, and returns a promise that resolves or rejects based on the output of the function.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/create-promise.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/create-promise.ts':\n\n**Purpose:** Wraps asynchronous functions into promises for predictable execution."}
{"code": "import chalk from 'chalk';\n\n/**\n * Enum of possible error codes associated\n * with `CreateMagicAppError` instances.\n */\nexport enum CreateMagicAppErrorCode {\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  USER_CANCELED_PROMPT = 'USER_CANCELED_PROMPT',\n}\n\n/**\n * Base class representing `make-magic-app` errors.\n */\nexport class CreateMagicAppError<Code extends CreateMagicAppErrorCode = CreateMagicAppErrorCode> extends Error {\n  constructor(\n    public readonly code: Code,\n    message?: string,\n  ) {\n    super(chalk`{red Error:} ${message}`);\n  }\n}\n\n/**\n * Prints a prefixed warning to the console.\n */\nexport function printWarning(message?: string) {\n  console.warn(chalk`{yellow Warning:} ${message}`);\n}\n\n/**\n * Creates a validation error\n */\nexport function createValidationError(message?: string) {\n  return new CreateMagicAppError(CreateMagicAppErrorCode.VALIDATION_ERROR, message);\n}\n\nexport function createUserCanceledPromptError(message?: string) {", "explanation": "Here is a concise summary:\n\n**Purpose:** This block provides error handling functionality for creating Magic Apps.\n\n**Functionality:**\n\n* Defines an enum of possible error codes.\n* Creates a base class `CreateMagicAppError` with customizable error messages.\n* Provides functions to create specific errors (`createValidationError`, `createUserCanceledPromptError`) and print warnings.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/errors-warnings.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/errors-warnings.ts':\n\n**Summary:** This file provides error handling functionality for Magic Apps, defining an enum, a base class `CreateMagicAppError`, and functions for creating specific errors and printing warnings."}
{"code": "  return new CreateMagicAppError(CreateMagicAppErrorCode.USER_CANCELED_PROMPT, message);\n}\n", "explanation": "This block creates a custom error object with the code \"USER_CANCELED_PROMPT\" and a provided message.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/errors-warnings.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/errors-warnings.ts':\n\n**Summary:** This file provides error handling functionality for Magic Apps, defining an enum, a base class `CreateMagicAppError`, and functions for creating specific errors and printing warnings."}
{"code": "/**\n * Returns a shallow copy of `obj` without `null` or `undefined` values.\n */\nexport function filterNilValues<T>(obj: Partial<T>): T {\n  const result: any = {};\n\n  for (const [prop, value] of Object.entries(obj)) {\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n\n  return result;\n}\n", "explanation": "Here is a summary:\n\n**Purpose:** Removes `null` or `undefined` values from an object.\n\n**Functionality:** Returns a shallow copy of the input object with unwanted values filtered out.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/filter-nil-values.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/utils/filter-nil-values.ts':\n\n**Summary:** This utility function removes null/undefined values from an object, returning a shallow copy of the original with unwanted values filtered out."}
{"code": "import fs from 'fs';\nimport { renderFile } from 'ejs';\nimport fse from 'fs-extra';\nimport chalk from 'chalk';\nimport { createPromise } from 'core/utils/create-promise';\nimport { isBinary } from './is-binary';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { Confirm } = require('enquirer');\n\n// TODO - rename so that we know it also renders ejs\nexport const copyFileWithEjsData = async (from: string, to: string, data: any) => {\n  await createPromise<void>(async (resolve, reject) => {\n    const buffer = await fse.readFile(from);\n    const shouldRenderEjs = !isBinary(from, buffer);\n\n    if (shouldRenderEjs) {\n      await renderFile(from, data || {}, async (err, str) => {\n        if (err) {\n          reject(err);\n        } else {\n          try {\n            await outputFile(to, str).then(resolve).catch(reject);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    } else {\n      try {\n        await outputFile(to, buffer).then(resolve).catch(reject);", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Copies a file with optional EJS rendering and data injection.\n\n**Functionality:** Reads a file, checks if it's text-based, and if so, renders an EJS template using provided data, then writes the result to a new file. If not text-based, copies the original file unchanged.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/fs.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the 'core/utils/fs.ts' file:\n\n**Purpose:** Provides utility functions for file system operations.\n\n**Functionality:** Includes functionality for copying files with optional EJS rendering, reading template directories recursively, and checking if a file exists before overwriting it, allowing for user confirmation."}
{"code": "      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n};\n\nasync function outputFile(to: string, data: any) {\n  if (await shouldOverwriteFile(to)) {\n    await fse.outputFile(to, data);\n  }\n}\n\nexport const readTemplateDirs = (\n  root: string,\n  done: (err: NodeJS.ErrnoException | null, results: string[]) => void,\n): string[] => {\n  let filePaths: string[] = [];\n  fs.readdir(root, (err, files) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    let pending = files.length;\n    if (!pending) return done(null, filePaths);\n    files.forEach((file) => {\n      const stats = fs.statSync(`${root}/${file}`);\n      if (stats && stats.isDirectory()) {\n        readTemplateDirs(`${root}/${file}`, async (error, res) => {\n          filePaths = filePaths.concat(res);\n          if (!--pending) done(null, filePaths);\n        });\n      } else {\n        filePaths.push(`${root}/${file}`);\n        if (!--pending) done(null, filePaths);\n      }\n    });\n  });\n  return filePaths;\n};\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Read template directories recursively.\n\n**Functionality:** Iterates through files in a directory, identifies subdirectories as separate template directories, and recursively calls itself to read them. Collects file paths from all directories and returns them as an array.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/fs.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the 'core/utils/fs.ts' file:\n\n**Purpose:** Provides utility functions for file system operations.\n\n**Functionality:** Includes functionality for copying files with optional EJS rendering, reading template directories recursively, and checking if a file exists before overwriting it, allowing for user confirmation."}
{"code": "const shouldOverwriteFile = async (filePath: string): Promise<boolean> => {\n  const exists = await fse.pathExists(filePath);\n  if (exists) {\n    const overwrite = await new Confirm({\n      name: 'overwrite',\n      message: `Conflict on \\`${filePath.split('/').pop()}\\` ${chalk.red('\\n  Overwrite?')}`,\n      initial: false,\n    }).run();\n\n    return overwrite;\n  }\n  return true;\n};\n", "explanation": "**Function Summary**\n\nThe `shouldOverwriteFile` function checks if a file exists, prompting the user to confirm overwriting it if so. It returns a boolean indicating whether to overwrite the file or not.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/fs.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the 'core/utils/fs.ts' file:\n\n**Purpose:** Provides utility functions for file system operations.\n\n**Functionality:** Includes functionality for copying files with optional EJS rendering, reading template directories recursively, and checking if a file exists before overwriting it, allowing for user confirmation."}
{"code": "/**\n * The utilities in this file are based on the NPM module `istextorbinary`.\n *\n * The implementation is copied here to reduce dependency overhead\n * and improve compatibility with NodeJS compilers like `@vercel/ncc`.\n *\n * @see the `LICENSE` file at the root of this source tree:\n *   https://github.com/bevry/istextorbinary/blob/master/source/index.ts\n */\n\nimport type Buffer from 'buffer';\nimport * as pathUtil from 'path';\nimport textExtensions from 'textextensions';\nimport binaryExtensions from 'binaryextensions';\n\n/**\n * Determine if the filename and/or buffer is text.\n *\n * Determined by extension checks first (if filename is available), otherwise if\n * the extension is unrecognized or no filename is provided, will perform a\n * slower buffer encoding detection.\n *\n * Extension checks are quicker.\n * Encoding checks cannot guarantee accuracy for chars between utf8 and utf16.\n *\n * The extension checks are performed using the following resources:\n *   - https://github.com/bevry/textextensions", "explanation": "**Summary:**\n\nThis block contains utility functions from the `istextorbinary` NPM module, copied for dependency reduction and improved compatibility with certain NodeJS compilers. It determines whether a filename or buffer is text-based using extension checks (faster) or slower encoding detection if necessary.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the 'core/utils/is-binary.ts' file:\n\n**Purpose:** This module detects whether a file or buffer contains text-based data.\n\n**Functionality:** It checks for text extensions in filenames, and falls back to slower encoding detection if necessary, returning `true` if binary, `false` otherwise."}
{"code": " *   - https://github.com/bevry/binaryextensions\n *\n * @param filename The filename for the file/buffer if available\n * @param buffer The buffer for the file if available\n * @returns Will be `null` if neither `filename` nor `buffer` were provided. Otherwise will be a `boolean` value with the detection result.\n */\nfunction isText(filename?: string | null, buffer?: Buffer | null): boolean | null {\n  // Test extensions\n  if (filename) {\n    // Extract filename\n    const parts = pathUtil.basename(filename).split('.').reverse();\n\n    // Cycle extensions\n    for (const extension of parts) {\n      if (textExtensions.includes(extension)) {\n        return true;\n      }\n      if (binaryExtensions.includes(extension)) {\n        return false;\n      }\n    }\n  }\n\n  // Fallback to encoding if extension check was not enough\n  if (buffer) {\n    return getEncoding(buffer) === 'utf8';\n  }\n\n  // No buffer was provided\n  return null;\n}\n\ninterface EncodingOpts {\n  /**\n   * Defaults to 24.\n   */\n  chunkLength?: number;\n\n  /**", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Detect whether a file or buffer contains text data.\n\n**Functionality:** Takes an optional `filename` and/or `buffer` as input, checks for text extensions in the filename, and if not found, attempts to detect the encoding of the buffer. Returns `true` if text detected, `false` if binary, or `null` if no input provided.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the 'core/utils/is-binary.ts' file:\n\n**Purpose:** This module detects whether a file or buffer contains text-based data.\n\n**Functionality:** It checks for text extensions in filenames, and falls back to slower encoding detection if necessary, returning `true` if binary, `false` otherwise."}
{"code": "   * If not provided, will check the start, beginning, and end.\n   */\n  chunkBegin?: number;\n}\n\n/**\n * Get the encoding of a buffer.\n *\n * Checks the start, middle, and end of the buffer for characters that are\n * unrecognized within UTF8 encoding. History has shown that inspection at all\n * three locations is necessary.\n *\n * @returns Will be `null` if `buffer` was not provided. Otherwise will be either `'utf8'` or `'binary'`.\n */\nfunction getEncoding(buffer: Buffer | null, opts?: EncodingOpts): 'utf8' | 'binary' | null {\n  // Check\n  if (!buffer) return null;\n\n  // Prepare\n  const textEncoding = 'utf8';\n  const binaryEncoding = 'binary';\n  const chunkLength = opts?.chunkLength ?? 24;\n  let chunkBegin = opts?.chunkBegin ?? 0;\n\n  // Discover\n  if (opts?.chunkBegin == null) {\n    // Start\n    let encoding = getEncoding(buffer, { chunkLength, chunkBegin });\n    if (encoding === textEncoding) {\n      // Middle\n      chunkBegin = Math.max(0, Math.floor(buffer.length / 2) - chunkLength);", "explanation": "**Summary:**\n\nThis is an object type definition with a single property `chunkBegin`. It's used to specify the starting position of a buffer chunk.\n\n**Functionality:**\n\n* If not provided, it will default to checking from the start, middle, and end of the buffer.\n* The value can be set using the `chunkBegin` option in the `getEncoding()` function.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the 'core/utils/is-binary.ts' file:\n\n**Purpose:** This module detects whether a file or buffer contains text-based data.\n\n**Functionality:** It checks for text extensions in filenames, and falls back to slower encoding detection if necessary, returning `true` if binary, `false` otherwise."}
{"code": "      encoding = getEncoding(buffer, {\n        chunkLength,\n        chunkBegin,\n      });\n      if (encoding === textEncoding) {\n        // End\n        chunkBegin = Math.max(0, buffer.length - chunkLength);\n        encoding = getEncoding(buffer, {\n          chunkLength,\n          chunkBegin,\n        });\n      }\n    }\n\n    // Return\n    return encoding;\n  }\n  // Extract\n  const chunkEnd = Math.min(buffer.length, chunkBegin + chunkLength);\n  const contentChunkUTF8 = buffer.toString(textEncoding, chunkBegin, chunkEnd);\n\n  // Detect encoding\n  for (let i = 0; i < contentChunkUTF8.length; ++i) {\n    const charCode = contentChunkUTF8.charCodeAt(i);\n    if (charCode === 65533 || charCode <= 8) {\n      // 8 and below are control characters (e.g. backspace, null, eof, etc.)\n      // 65533 is the unknown character\n      // console.log(charCode, contentChunkUTF8[i])\n      return binaryEncoding;\n    }\n  }\n\n  // Return\n  return textEncoding;\n}\n\n/**\n * Determine if the filename and/or buffer is binary.\n *", "explanation": "Here is a concise summary of the purpose and functionality of this code block:\n\n**Purpose:** Detect the encoding type of a given buffer.\n\n**Functionality:** Iterates through a chunk of the buffer, attempting to decode it as UTF-8. If any invalid or control characters are found (e.g., 65533, <= 8), it returns `binaryEncoding`. Otherwise, it returns `textEncoding`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the 'core/utils/is-binary.ts' file:\n\n**Purpose:** This module detects whether a file or buffer contains text-based data.\n\n**Functionality:** It checks for text extensions in filenames, and falls back to slower encoding detection if necessary, returning `true` if binary, `false` otherwise."}
{"code": " * Determined by extension checks first (if filename is available), otherwise if\n * the extension is unrecognized or no filename is provided, will perform a\n * slower buffer encoding detection.\n *\n * Extension checks are quicker.\n * Encoding checks cannot guarantee accuracy for chars between utf8 and utf16.\n *\n * The extension checks are performed using the following resources:\n *   - https://github.com/bevry/textextensions\n *   - https://github.com/bevry/binaryextensions\n *\n * @param filename The filename for the file/buffer if available\n * @param buffer The buffer for the file if available\n * @returns Will be `null` if neither `filename` nor `buffer` were provided. Otherwise will be a `boolean` value with the detection result.\n */\nexport function isBinary(filename?: string | null, buffer?: Buffer | null) {\n  const text = isText(filename, buffer);\n  if (text == null) return null;\n  return !text;\n}\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Detect whether a file or buffer contains binary data.\n\n**Functionality:** The function first checks the file extension for hints, then falls back to slower encoding detection if necessary, returning `true` if binary and `false` (or null if neither input is provided) otherwise.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the 'core/utils/is-binary.ts' file:\n\n**Purpose:** This module detects whether a file or buffer contains text-based data.\n\n**Functionality:** It checks for text extensions in filenames, and falls back to slower encoding detection if necessary, returning `true` if binary, `false` otherwise."}
{"code": "import fs from 'fs';\n\n/**\n * Creates a directory recursively using NodeJS `fs` promises.\n *\n * Based on the `helpers/make-dir.ts` utility from `create-next-app`.\n *\n * @see the `package.json#license` field at the root of this source tree:\n *   https://github.com/vercel/next.js/blob/master/packages/create-next-app/helpers/make-dir.ts\n */\nexport async function makeDir(root: string, options = { recursive: true }): Promise<void> {\n  await fs.promises.mkdir(root, options);\n}\n", "explanation": "**Functionality Summary**\n\nCreates a directory recursively using NodeJS `fs` promises, allowing for asynchronous directory creation with optional recursive mode.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/make-dir.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\n`makeDir.ts`: Creates a directory recursively using Node's `fs` promises, enabling async directory creation in a single line of code."}
{"code": "import path from 'path';\nimport { REPO_ROOT } from '../config';\n\n/**\n * Resolve an absolute path relative to the repository root.\n */\nexport function resolveToRoot(...pathSegments: string[]): string {\n  return path.resolve(REPO_ROOT, ...pathSegments);\n}\n\n/**\n * Resolve an absolute path relative to the output directory.\n */\nexport function resolveToDist(...pathSegments: string[]) {\n  return path.resolve(REPO_ROOT, 'dist', ...pathSegments);\n}\n\n/**\n * Get a relative path to the target template.\n */\nexport function getRelativeTemplatePath(scaffoldName: string) {\n  return path.join('scaffolds', scaffoldName, 'template');\n}\n\n/**\n * Resolve an absolute path to the target template.\n *\n * NOTE: this is always resolved from the repository root (not `/dist`),\n * so that we can download templates from the remote repository if necessary.\n */\nexport function getAbsoluteTemplatePath(scaffoldName: string) {\n  return resolveToRoot('scaffolds', scaffoldName, 'template');\n}\n", "explanation": "**Summary**\n\nThis block exports four utility functions for resolving paths relative to a repository root or output directory:\n\n1. `resolveToRoot`: resolves an absolute path from the repository root.\n2. `resolveToDist`: resolves an absolute path from the output directory.\n3. `getRelativeTemplatePath`: returns a relative path to a target template.\n4. `getAbsoluteTemplatePath`: returns an absolute path to a target template, resolved from the repository root.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/path-helpers.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'core/utils/path-helpers.ts':\n\n\"Exports utility functions for resolving paths relative to the repository's root or output directory, including absolute and relative path helpers.\""}
{"code": "/* eslint-disable @typescript-eslint/no-loop-func */\n\nimport path from 'path';\nimport fs from 'fs';\nimport BaseScaffold from 'core/types/BaseScaffold';\nimport { resolveToRoot } from './path-helpers';\nimport { copyFileWithEjsData, readTemplateDirs } from './fs';\n\n// TODO - update templateData type to be more specific\nexport const renderScaffold = async (cwd: string, scaffold: BaseScaffold, templateData: any) => {\n  const basePath = resolveToRoot('scaffolds', scaffold.templateName, 'template');\n  const allDirFilePaths: string[] = [];\n  // typeof scaffold.source being a string means it's a directory and we should copy all files\n  if (typeof scaffold.source === 'string') {\n    readTemplateDirs(basePath, async (err, filePaths) => {\n      if (err) {\n        console.log(err);\n      }\n      for (const filePath of filePaths) {\n        allDirFilePaths.push(filePath);\n      }\n      await copyFilesAndRenameEnv(allDirFilePaths, basePath, cwd, templateData);\n    });", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Render a scaffold (template) by copying files from a directory or using a string-based source.\n\n**Functionality:**\n\n* Resolves a base path for the scaffold template\n* Reads all file paths in the specified directory\n* Copies files to the current working directory (cwd), renaming environment variables as needed\n\nNote that this is likely a script written in TypeScript, and it uses various dependencies such as `fs` and `path` modules.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/renderScaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/renderScaffold.ts':\n\n**Purpose:** Copy files from an array or directory structure.\n\n**Functionality:** Copies files with EJS data, updates a `.env` file, and renames environment variables as needed, using `fs`, `path`, and other dependencies."}
{"code": "    // Otherwise it's an array and we should copy all the files in the array\n  } else {\n    for (const filePath of scaffold.source) {\n      const resolvedPath = resolveToRoot('scaffolds', scaffold.templateName, 'template', filePath);\n\n      const isDirectory = fs.statSync(resolvedPath).isDirectory();\n      if (isDirectory) {\n        readTemplateDirs(resolvedPath, (err, filePaths) => {\n          if (err) {\n            console.log(err);\n          }\n          for (const sourceFilePath of filePaths) {\n            allDirFilePaths.push(sourceFilePath);\n          }\n        });\n      } else {\n        allDirFilePaths.push(resolvedPath);\n      }\n    }\n    await copyFilesAndRenameEnv(allDirFilePaths, basePath, cwd, templateData);\n  }\n};\n\nasync function copyFilesAndRenameEnv(allDirFilePaths: string[], basePath: string, cwd: string, templateData: any) {\n  for (const filePath of allDirFilePaths) {\n    // eslint-disable-next-line no-await-in-loop", "explanation": "Here is a concise summary of the purpose and functionality of this code block:\n\n**Purpose:** Copy files from an array or directory structure.\n\n**Functionality:** If input is an array, copies all files in the array. If input is a directory structure, recursively copies all files and directories, then calls `copyFilesAndRenameEnv` function to perform further operations.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/renderScaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/renderScaffold.ts':\n\n**Purpose:** Copy files from an array or directory structure.\n\n**Functionality:** Copies files with EJS data, updates a `.env` file, and renames environment variables as needed, using `fs`, `path`, and other dependencies."}
{"code": "    await copyFileWithEjsData(filePath, path.join(cwd, filePath.replace(basePath, '')), templateData);\n  }\n  if (fs.existsSync(path.join(cwd, '.env.example'))) {\n    fs.renameSync(path.join(cwd, '.env.example'), path.join(cwd, '.env'));\n  }\n}\n", "explanation": "This block copies files with EJS data and updates a `.env` file, renaming an example file to a production-ready one.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/renderScaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/renderScaffold.ts':\n\n**Purpose:** Copy files from an array or directory structure.\n\n**Functionality:** Copies files with EJS data, updates a `.env` file, and renames environment variables as needed, using `fs`, `path`, and other dependencies."}
{"code": "/* eslint-disable @typescript-eslint/naming-convention */\n\n/**\n * The utilities in this file are based on the\n * `helpers/examples.ts` module from `create-next-app`.\n *\n * @see the `package.json#license` field at the root of this source tree:\n *   https://github.com/vercel/next.js/blob/master/packages/create-next-app/helpers/examples.ts\n */\n\nimport { Stream } from 'stream';\nimport { promisify } from 'util';\nimport { URL } from 'url';\nimport path from 'path';\nimport tar from 'tar';\nimport got from 'got';\n\nconst pipeline = promisify(Stream.pipeline);\n\ninterface RepoInfo {\n  username: string;\n  name: string;\n  branch: string;\n  filePath: string;\n}\n\n/**\n * Gets repository information for the given remote\n * `url` (must be a GitHub origin) and `templatePath`.\n */\nexport async function getRepoInfo(url: URL, templatePath?: string): Promise<RepoInfo | undefined> {\n  const [, username, name, t, _branch, ...file] = url.pathname.split('/');\n  const filePath = templatePath ? templatePath.replace(/^\\//, '') : file.join('/');\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Provides utilities for retrieving repository information from GitHub.\n\n**Functionality:** Extracts repository details (username, name, branch, file path) from a given URL and optional template path using various libraries (got, tar, util).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/repo.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'core/utils/repo.ts' file:\n\n**Purpose:** Provides utility functions for downloading and extracting GitHub repository archives.\n\n**Functionality:** Extracts repository details from URLs, downloads compressed templates, and unpacks them to specified directories using various libraries."}
{"code": "  // If examplePath is available, the branch name takes the entire path\n  const branch = templatePath ? `${_branch}/${file.join('/')}`.replace(new RegExp(`/${filePath}|/$`), '') : _branch;\n\n  if (username && name && branch && t === 'tree') {\n    return { username, name, branch, filePath: filePath.split(path.sep).join('/') };\n  }\n}\n\n/**\n * Downloads an archive of the template repository using the given `RepoInfo`.\n * The archive is extracted at the given `root`, which is expected to already\n * exist before calling this function.\n */\nexport function downloadAndExtractRepo(root: string, { username, name, branch, filePath }: RepoInfo): Promise<void> {\n  return pipeline(\n    got.stream(`https://codeload.github.com/${username}/${name}/tar.gz/${branch}`),\n    tar.extract({ cwd: root, strip: filePath ? filePath.split('/').length + 1 : 1 }, [\n      `${name}-${branch}${filePath ? `/${filePath}` : ''}`,\n    ]),\n  );\n}\n", "explanation": "Here is a summary of the code block:\n\n**Functionality:** Extracts a GitHub repository archive at a specified root directory.\n\n**Purpose:** Downloads a compressed template repository using a `RepoInfo` object, which contains username, name, branch, and file path details, and extracts it to the provided root directory.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/repo.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'core/utils/repo.ts' file:\n\n**Purpose:** Provides utility functions for downloading and extracting GitHub repository archives.\n\n**Functionality:** Extracts repository details from URLs, downloads compressed templates, and unpacks them to specified directories using various libraries."}
{"code": "/* eslint-disable @typescript-eslint/no-var-requires */\nimport fs from 'fs';\nimport { ExecaCommand } from 'core/types/BaseScaffold';\nimport { resolveToDist, resolveToRoot } from './path-helpers';\nimport type { CreateMagicAppData } from '../create-app';\nimport type { Flags, ValueType } from '../flags';\n\n/**\n * Metadata about the scaffold being defined.\n */\ntype ScaffoldMetadata<T extends Record<string, ValueType> = Record<string, any>> = {\n  /**\n   * This will be printed as the display name for this scaffold\n   * under the standard templates prompt.\n   */\n  shortDescription: string;\n\n  /**\n   * If true, shows this scaffold with greater prominence in the templates\n   * prompt. If provided with an object containing a numeric `order` field, that\n   * will be used to sort this scaffold amongst the other featured scaffolds.\n   */\n  featured?: boolean | { order: number };\n\n  /**\n   * Provides an optional shell command to install dependencies\n   * required by the scaffolded project.\n   */", "explanation": "**Summary**\n\nThis block defines a `ScaffoldMetadata` type, which holds metadata for a scaffold (a set of configuration files) being defined. It includes properties for a short description, feature promotion, and an optional shell command to install dependencies.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/scaffold-helpers.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/utils/scaffold-helpers.ts':\n\nThis file defines utility functions and types for scaffolding projects. It includes:\n\n* `ScaffoldMetadata`: A type holding metadata for a scaffold, including description, feature promotion, and optional install dependencies command.\n* Functions to create a project directory if it doesn't exist, check its existence, and change the current working directory to the new project folder.\n\nIn essence, this file provides helper functions and types for creating and configuring scaffolding projects."}
{"code": "  installDependenciesCommand?: ExecaCommand | ((data: T & CreateMagicAppData) => ExecaCommand);\n\n  /**\n   * Provides an optional shell command to start the scaffolded project.\n   */\n  startCommand?: ExecaCommand | ((data: T & CreateMagicAppData) => ExecaCommand);\n\n  /**\n   * Provides metadata about CLI flags that may be used\n   * to input template data for this scaffold.\n   */\n  flags: Flags<Partial<T>>;\n};\n\nexport type ScaffoldDefinition<T extends Record<string, ValueType> = Record<string, any>> = ScaffoldMetadata<T>;\n\n/**\n * Gets the definition object for a scaffolding template.\n */\nexport function getScaffoldDefinition(scaffoldName: string): ScaffoldDefinition {\n  // We are requiring this file in context of the\n  // transpiled `/dist` output, so we use a JS extension...\n  return require(resolveToDist('scaffolds', scaffoldName, 'scaffold.js')).definition;\n}\n\n/**\n * Creates a new project directory if it doesn't exist and makes it cwd.\n * @param cwd Destination directory where the scaffold will be created", "explanation": "Here is a concise summary:\n\n**Purpose:** Define a scaffolding template's configuration.\n\n**Functionality:**\n\n* `installDependenciesCommand`: An optional command to install dependencies for the project.\n* `startCommand`: An optional command to start the scaffolded project.\n* `flags`: Metadata about CLI flags that input template data for this scaffold.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/scaffold-helpers.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/utils/scaffold-helpers.ts':\n\nThis file defines utility functions and types for scaffolding projects. It includes:\n\n* `ScaffoldMetadata`: A type holding metadata for a scaffold, including description, feature promotion, and optional install dependencies command.\n* Functions to create a project directory if it doesn't exist, check its existence, and change the current working directory to the new project folder.\n\nIn essence, this file provides helper functions and types for creating and configuring scaffolding projects."}
{"code": " * @param projectName Project name\n */\nexport function createProjectDirIfDoesntExists(cwd: string, projectName: string) {\n  if (!fs.existsSync(resolveToRoot(cwd, projectName))) {\n    fs.mkdirSync(resolveToRoot(cwd, projectName));\n  }\n  process.chdir(projectName);\n}\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Creates a project directory if it doesn't already exist.\n\n**Functionality:** Checks for directory existence, creates it if missing, and changes current working directory to the new project folder.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/scaffold-helpers.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'core/utils/scaffold-helpers.ts':\n\nThis file defines utility functions and types for scaffolding projects. It includes:\n\n* `ScaffoldMetadata`: A type holding metadata for a scaffold, including description, feature promotion, and optional install dependencies command.\n* Functions to create a project directory if it doesn't exist, check its existence, and change the current working directory to the new project folder.\n\nIn essence, this file provides helper functions and types for creating and configuring scaffolding projects."}
{"code": "export const ShutdownSignals = [\n  'SIGHUP',\n  'SIGINT',\n  'SIGQUIT',\n  'SIGILL',\n  'SIGTRAP',\n  'SIGABRT',\n  'SIGBUS',\n  'SIGFPE',\n  'SIGSEGV',\n  'SIGUSR1',\n  'SIGUSR2',\n  'SIGTERM',\n] as const;\nexport type ShutdownSignal = (typeof ShutdownSignals)[number];\n\ntype ShutdownTask = (reason: { signal: ShutdownSignal } | { code: number }) => void | Promise<void>;\n\ninterface ShutdownState {\n  tasks: Set<ShutdownTask>;\n  isShuttingDown: boolean;\n}\n\nconst state: ShutdownState = {\n  tasks: new Set(),\n  isShuttingDown: false,\n};\n\n/**\n * Attach the given `task` to `process`\n * events for known shutdown signals.\n */\nexport function addShutdownTask(task: ShutdownTask) {\n  state.tasks.add(task);\n}\n\n/**\n * Remove the given `task` from `process`\n * events for known shutdown signals.\n */\nexport function removeShutdownTask(task: ShutdownTask) {\n  state.tasks.delete(task);\n}\n\n/**\n * Create process listeners for\n * each registered shutdown signal.\n */\nexport function useGracefulShutdown() {\n  process.stdin.resume();\n", "explanation": "**Purpose:** Handle process shutdown signals.\n\n**Functionality:**\n\n1. **Add/Remove Tasks**: Attach or detach functions to be executed on process exit due to various shutdown signals.\n2. **Signal Handling**: Create listeners for known shutdown signals (e.g., SIGHUP, SIGINT).\n3. **State Management**: Track registered tasks and indicate if the process is shutting down.\n\n**Key Functions:**\n\n* `addShutdownTask`: Attach a task to be executed on process exit.\n* `removeShutdownTask`: Detach a task from being executed on process exit.\n* `useGracefulShutdown`: Create listeners for shutdown signals and resume stdin.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/shutdown.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**core/utils/shutdown.ts:**\n\nHandles process shutdown, allowing for cleanups and task execution on exit.\nRegisters event listeners for shutdown signals and executes asynchronous tasks before exiting the process."}
{"code": "  ShutdownSignals.forEach((signal) => {\n    const onShutdown = async () => {\n      if (state.isShuttingDown) return;\n      state.isShuttingDown = true;\n\n      await handleShutdownTasks({ signal });\n\n      process.exit();\n    };\n\n    process.on(signal, onShutdown as any);\n  });\n}\n\nasync function handleShutdownTasks(reason: { signal: ShutdownSignal } | { code: number }) {\n  const shutdownPromises = [...state.tasks.values()].map((task) => Promise.resolve(task(reason)));\n  await Promise.all(shutdownPromises);\n}\n\n/**\n * Shutdown process in a way that allows for cleanup\n * @param code exit status\n */\nexport function shutdown(code: number) {\n  handleShutdownTasks({ code });\n  process.exit(code);\n}\n", "explanation": "**Purpose:** Handle graceful shutdown of processes with cleanup tasks.\n\n**Functionality:** Registers event listeners for shutdown signals, executes asynchronous shutdown tasks, and exits the process when all tasks are completed.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/shutdown.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**core/utils/shutdown.ts:**\n\nHandles process shutdown, allowing for cleanups and task execution on exit.\nRegisters event listeners for shutdown signals and executes asynchronous tasks before exiting the process."}
{"code": "/**\n * This will prevent specific experimental warnings from being logged\n * to the console. For example if in Node 18 you are using the now native\n * fetch, you will see a warning about it.\n * To suppress this warning:\n *\n * import suppressWarnings from './suppress-experimental-warnings';\n * suppressWarnings.fetch();\n */\nimport process from 'process';\nconst originalEmit = process.emit;\n\nexport default {\n  fetch: function () {\n    process.emit = function (name, data) {\n      if (\n        name === 'warning' &&\n        typeof data === 'object' &&\n        data.name === 'ExperimentalWarning' &&\n        data.message.includes('The Fetch API is an experimental feature')\n      ) {\n        return false;\n      }\n      return originalEmit.apply(process, arguments);\n    };\n  },\n};\n", "explanation": "**Purpose:** Suppress specific experimental warnings in Node.js.\n\n**Functionality:** Replaces the default `process.emit` function to prevent certain warning messages from being logged to the console.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/suppress-experimental-warnings.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the file 'core/utils/suppress-experimental-warnings.js':\n\nSuppresses specific experimental warnings in Node.js by overriding the default process.emit behavior."}
{"code": "import { Ora } from 'ora';\nimport {\n  AuthTypePrompt,\n  BlockchainNetworkPrompt,\n  ConfigurationPrompt,\n  ProjectNamePrompt,\n  PublishableApiKeyPrompt,\n} from 'scaffolds/prompts';\nimport { CreateMagicAppConfig, pauseTimerAndSpinner } from 'core/create-app';\nimport { makeInputsLowercase } from 'core/flags';\nimport BaseScaffold from '../types/BaseScaffold';\nimport DedicatedScaffold, { flags as dedicatedFlags } from '../../scaffolds/nextjs-dedicated-wallet/scaffold';\nimport FlowDedicatedScaffold, {\n  flags as flowDedicatedFlags,\n} from '../../scaffolds/nextjs-flow-dedicated-wallet/scaffold';\nimport SolanaDedicatedScaffold, {\n  flags as solanaDedicatedFlags,\n} from '../../scaffolds/nextjs-solana-dedicated-wallet/scaffold';\nimport { Timer } from './timer';\n\nexport type Chain = 'evm' | 'solana' | 'flow';\nexport type Template = 'nextjs-dedicated-wallet' | 'nextjs-solana-dedicated-wallet' | 'nextjs-flow-dedicated-wallet';\n\ntype ConfigType = CreateMagicAppConfig & {\n  chain: Chain | undefined;", "explanation": "**Summary**\n\nThis block imports various functions and scaffolds for creating a Magic app, including prompts, config creation, and timers. It defines types for chains (EVM, Solana, Flow) and templates (dedicated wallets), and combines them into a single configuration type (`ConfigType`).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/templateMappings.ts':\n\n**Purpose:** Maps a given template to specific scaffold instances based on user input or template.\n\n**Functionality:** Determines the blockchain network (EVM, Solana, Flow) and updates the `config` object accordingly, prompting for missing data as needed."}
{"code": "  configuration: string | undefined;\n  isChosenTemplateValid: boolean;\n  isQuickstart: boolean;\n};\n\nfunction mapTemplateToChain(template: string): Chain | undefined {\n  switch (template) {\n    case 'nextjs-dedicated-wallet':\n      return 'evm';\n    case 'nextjs-solana-dedicated-wallet':\n      return 'solana';\n    case 'nextjs-flow-dedicated-wallet':\n      return 'flow';\n    default:\n      return undefined;\n  }\n}\n\nexport async function mapTemplateToScaffold(\n  template: string,\n  appData: any,\n  spinner: Ora,\n  timer: Timer,\n): Promise<BaseScaffold> {\n  const data = appData;\n  data.network = makeInputsLowercase(data.network);\n  pauseTimerAndSpinner(timer, spinner);\n  if (!data.publishableApiKey) {\n    data.publishableApiKey = await PublishableApiKeyPrompt.publishableApiKeyPrompt();\n  }\n  switch (template) {\n    case 'nextjs-dedicated-wallet':\n      if (!data.network) {\n        data.network = await BlockchainNetworkPrompt.evmNetworkPrompt();\n      }\n\n      if (data.isQuickstart) {\n        data.loginMethods = ['Email OTP'];", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** To map a template to a specific scaffold, based on the provided template name.\n\n**Functionality:**\n\n* The `mapTemplateToChain` function takes a template string as input and returns a corresponding chain (e.g. 'evm', 'solana', 'flow') or undefined.\n* The `mapTemplateToScaffold` function takes a template string, app data, and spinner/timer as inputs and:\n\t+ Updates the app data with lower-case network values\n\t+ Prompts for publishable API key if not provided\n\t+ Maps the template to a specific scaffold based on the chain\n\t+ Returns the scaffold", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/templateMappings.ts':\n\n**Purpose:** Maps a given template to specific scaffold instances based on user input or template.\n\n**Functionality:** Determines the blockchain network (EVM, Solana, Flow) and updates the `config` object accordingly, prompting for missing data as needed."}
{"code": "      } else if (!data.loginMethods || data.loginMethods.length === 0) {\n        data.loginMethods = await AuthTypePrompt.loginMethodsPrompt();\n      }\n      return new DedicatedScaffold(data);\n    case 'nextjs-solana-dedicated-wallet':\n      if (!data.network) {\n        data.network = await BlockchainNetworkPrompt.solanaNetworkPrompt();\n      }\n      if (!data.loginMethods || data.loginMethods.length === 0) {\n        data.loginMethods = await AuthTypePrompt.loginMethodsPrompt();\n      }\n      return new SolanaDedicatedScaffold(data);\n    case 'nextjs-flow-dedicated-wallet':\n      if (!data.network) {\n        data.network = await BlockchainNetworkPrompt.flowNetworkPrompt();\n      }\n      if (!data.loginMethods || data.loginMethods.length === 0) {\n        data.loginMethods = await AuthTypePrompt.loginMethodsPrompt();\n      }\n      return new FlowDedicatedScaffold(data);\n    default:\n      throw new Error(`Invalid template: ${template}`);\n  }\n}\n\nexport function mapTemplateToFlags(template: string): any {", "explanation": "Here is a concise summary:\n\n**Functionality:** Maps a given template to specific scaffold instances based on the input data.\n\n**Purpose:** Returns a corresponding scaffold instance (e.g., DedicatedScaffold, SolanaDedicatedScaffold) depending on the provided template value, prompting for missing data as needed.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/templateMappings.ts':\n\n**Purpose:** Maps a given template to specific scaffold instances based on user input or template.\n\n**Functionality:** Determines the blockchain network (EVM, Solana, Flow) and updates the `config` object accordingly, prompting for missing data as needed."}
{"code": "  switch (template) {\n    case 'nextjs-dedicated-wallet':\n      return dedicatedFlags;\n    case 'nextjs-solana-dedicated-wallet':\n      return solanaDedicatedFlags;\n    case 'nextjs-flow-dedicated-wallet':\n      return flowDedicatedFlags;\n    default:\n      throw new Error(`Invalid template: ${template}`);\n  }\n}\n\nconst quickstartConfig = (config: ConfigType): ConfigType => ({\n  ...config,\n  template: 'nextjs-dedicated-wallet',\n  network: 'polygon-amoy',\n  chain: 'evm',\n  isChosenTemplateValid: true,\n  isQuickstart: true,\n});\n\nconst solanaConfig = async (config: ConfigType): Promise<ConfigType> => ({\n  ...config,\n  template: 'nextjs-solana-dedicated-wallet',\n  network: await BlockchainNetworkPrompt.solanaNetworkPrompt(),\n  chain: 'solana',\n  isChosenTemplateValid: true,\n  isQuickstart: false,\n});\n\nexport const buildTemplate = async (appConfig: ConfigType): Promise<ConfigType> => {\n  let config = { ...appConfig };\n\n  if (!config.projectName) {\n    config.projectName = await ProjectNamePrompt.askProjectName();\n  }\n", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** A configuration builder for Next.js apps.\n\n**Functionality:**\n\n* Returns dedicated flags based on a specified template (Next.js, Solana, Flow).\n* Provides pre-configured configurations for quickstart and solana networks.\n* Allows user input to customize project name if not provided.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/templateMappings.ts':\n\n**Purpose:** Maps a given template to specific scaffold instances based on user input or template.\n\n**Functionality:** Determines the blockchain network (EVM, Solana, Flow) and updates the `config` object accordingly, prompting for missing data as needed."}
{"code": "  if (!config.template) {\n    config.configuration = await ConfigurationPrompt.askConfiguration();\n\n    if (config.configuration === 'quickstart') {\n      return quickstartConfig(config);\n    }\n  } else {\n    config.chain = mapTemplateToChain(config.template);\n  }\n\n  if (!config.chain) {\n    config.chain = await BlockchainNetworkPrompt.chainPrompt();\n  }\n\n  if (!config.network) {\n    switch (config.chain) {\n      case 'solana':\n        config = await solanaConfig(config);\n        break;\n      case 'flow':\n        config.network = await BlockchainNetworkPrompt.flowNetworkPrompt();\n        break;\n      case 'evm':\n        config.network = await BlockchainNetworkPrompt.evmNetworkPrompt();\n        break;\n      default:\n        config.network = await BlockchainNetworkPrompt.evmNetworkPrompt();\n        break;\n    }\n  } else {\n    const evmNetworks = [\n      'ethereum',\n      'ethereum-sepolia',\n      'polygon',\n      'polygon-amoy',\n      'etherlink',\n      'etherlink-testnet',\n      'zksync',\n      'zksync-sepolia',\n    ];", "explanation": "Here is a concise summary:\n\n**Purpose:** Configure blockchain settings based on user input or template.\n\n**Functionality:**\n\n* If no template, prompt user for configuration and apply quickstart config if chosen.\n* Map template to chain (if provided).\n* Prompt user for chain if not specified.\n* Based on chain, prompt user for network specific configuration (e.g. Solana, Flow, EVM).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/templateMappings.ts':\n\n**Purpose:** Maps a given template to specific scaffold instances based on user input or template.\n\n**Functionality:** Determines the blockchain network (EVM, Solana, Flow) and updates the `config` object accordingly, prompting for missing data as needed."}
{"code": "    const solanaNetworks = ['solana-devnet', 'solana-mainnet'];\n\n    if (evmNetworks.includes(config.network)) {\n      config.chain = 'evm';\n    } else if (solanaNetworks.includes(config.network)) {\n      config.chain = 'solana';\n    } else {\n      config.chain = 'flow';\n    }\n  }\n\n  config.template = config.chain === 'flow' ? 'nextjs-flow-dedicated-wallet' : 'nextjs-dedicated-wallet';\n  config.isChosenTemplateValid = true;\n\n  return config;\n};\n", "explanation": "Here is a concise summary:\n\nThis block determines which blockchain network (EVM, Solana, or Flow) the user is connected to based on their network selection, and updates the `config` object accordingly, setting the `chain` property and selecting a corresponding template for the application.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/templateMappings.ts':\n\n**Purpose:** Maps a given template to specific scaffold instances based on user input or template.\n\n**Functionality:** Determines the blockchain network (EVM, Solana, Flow) and updates the `config` object accordingly, prompting for missing data as needed."}
{"code": "export type HrTime = [number, number];\n\n/**\n * Calculate the difference between two Node hrtime (`[second, nanosecond]`)\n * tuples.\n *\n * Based on the `diff-hrtime` NPM package.\n *\n * @see the `package.json#license` field at the root of this source tree:\n *   https://github.com/firefoxes/diff-hrtime/blob/master/index.js\n */\nfunction subtractTime(a: HrTime, b: HrTime): HrTime {\n  // Capture seconds and nanoseconds\n  const [aS, aNS] = a;\n  const [bS, bNS] = b;\n  let ns = aNS - bNS; // Nanoseconds delta\n  let s = aS - bS; // Seconds delta\n\n  // If we have overflow nanoseconds\n  if (ns >= 1e9) {\n    s -= 1; // Subtract a second\n    ns += 1e9; // Add a billion nanoseconds\n  }\n\n  return [s, ns];\n}\n\nexport function createTimer() {\n  let startTime: HrTime;\n  let pauses: HrTime[] = [];\n  let resumes: HrTime[] = [];\n\n  return {\n    start() {\n      startTime = process.hrtime();\n      pauses = [];\n      resumes = [];\n    },\n\n    pause() {\n      pauses.push(process.hrtime());\n    },\n\n    resume() {", "explanation": "Here is a concise summary:\n\n**Purpose:** A timer utility that calculates time differences using Node's hrtime values.\n\n**Functionality:**\n\n* Calculates the difference between two hrtime tuples.\n* Provides a `createTimer` function that:\n\t+ Starts a timer with the current hrtime.\n\t+ Pauses and resumes the timer, recording hrtime values for each pause and resume.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/timer.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/timer.ts':\n\n**Purpose:** A timer utility that calculates time differences using Node's hrtime values.\n\n**Functionality:** Creates a timer object with `start()` and `stop()` methods, capturing time stamps on each iteration and calculating total execution time by subtracting start times from stop times."}
{"code": "      resumes.push(process.hrtime(pauses.pop()));\n    },\n\n    stop() {\n      return resumes.reduce((prev, curr) => subtractTime(prev, curr), process.hrtime(startTime));\n    },\n  };\n}\n\nexport type Timer = ReturnType<typeof createTimer>;\n", "explanation": "**Summary:**\n\nThis block creates a timer object with methods `start()` and `stop()`. The `start()` method captures time stamps on each iteration, while `stop()` calculates the total execution time by subtracting start times from stop times.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/timer.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'core/utils/timer.ts':\n\n**Purpose:** A timer utility that calculates time differences using Node's hrtime values.\n\n**Functionality:** Creates a timer object with `start()` and `stop()` methods, capturing time stamps on each iteration and calculating total execution time by subtracting start times from stop times."}
{"code": "/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport crypto from 'crypto';\nimport { loadConfig, saveConfig } from '../config';\n\nexport const initializeUsageConfigIfneeded = async (): Promise<boolean> => {\n  let config = await loadConfig();\n\n  if (!config) {\n    config = { shouldTrackUsageData: true };\n    await saveConfig(config);\n  }\n\n  if ((config.shouldTrackUsageData ?? false) && !config.id) {\n    config.id = crypto.randomUUID();\n    await saveConfig(config);\n  }\n\n  return config.shouldTrackUsageData ?? false;\n};\n\nexport const modifyUsageConsent = async (shouldTrackUsageData: boolean) => {\n  let config = await loadConfig();\n  config = { ...config, shouldTrackUsageData };\n  await saveConfig(config);\n  return config?.shouldTrackUsageData ?? false;\n};\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Manage user consent for tracking usage data.\n\n**Functionality:**\n\n1. `initializeUsageConfigIfneeded`: Initializes configuration if it doesn't exist, sets default values (track usage data by default), and generates an ID if none exists.\n2. `modifyUsageConsent`: Updates the \"should track usage data\" setting in the configuration based on user input.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "core/utils/usagePermissions.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'core/utils/usagePermissions.ts':\n\n**Manages User Consent for Tracking Usage Data**\n\nInitializes configuration with default values, generates an ID if needed, and updates the \"track usage data\" setting based on user input."}
{"code": "export const templateDevData = {\n  'nextjs-dedicated-wallet': {\n    network: 'ethereum-sepolia',\n    publishableApiKey: 'pk_live_FD2D70B32ABE11BD',\n    loginMethods: ['EmailOTP', 'SMSOTP'],\n    projectName: 'My Dedicated Wallet',\n  },\n  'nextjs-flow-dedicated-wallet': {\n    network: 'flow-testnet',\n    publishableApiKey: 'pk_live_FD2D70B32ABE11BD',\n    loginMethods: ['EmailOTP', 'SMSOTP'],\n    projectName: 'My Flow Dedicated Wallet',\n  },\n  'nextjs-solana-dedicated-wallet': {\n    network: 'solana-devnet',\n    publishableApiKey: 'pk_live_FD2D70B32ABE11BD',\n    loginMethods: ['EmailOTP', 'SMSOTP'],\n    projectName: 'My Solana Dedicated Wallet',\n  },\n};\n", "explanation": "**Summary**\n\nThis block exports an object containing configuration data for dedicated wallets, with separate sections for Ethereum (Sepolia), Flow (Testnet), and Solana (Devnet). It defines network settings, API keys, login methods, and project names for each platform.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/dev-data.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the file 'scaffolds/dev-data.ts':\n\n**Summary**\n\nThis file exports configuration data for dedicated wallets on Ethereum (Sepolia), Flow (Testnet), and Solana (Devnet) platforms, covering network settings, API keys, login methods, and project names."}
{"code": "import { Flags } from '../../core/flags';\nimport BaseScaffold, { ExecaCommand } from '../../core/types/BaseScaffold';\nimport { AuthTypePrompt, BlockchainNetworkPrompt, PublishableApiKeyPrompt } from '../prompts';\n\nexport type Data = BlockchainNetworkPrompt.Data & PublishableApiKeyPrompt.Data & AuthTypePrompt.Data;\n\nexport const flags: Flags<Partial<Data>> = {\n  ...BlockchainNetworkPrompt.flags,\n  ...PublishableApiKeyPrompt.flags,\n  ...AuthTypePrompt.flags,\n};\n\nexport const definition = {\n  shortDescription: 'A dedicated wallet scaffold for Next.js',\n  featured: true,\n};\n\nexport default class DedicatedScaffold extends BaseScaffold {\n  public templateName = 'nextjs-dedicated-wallet';\n\n  private data: Data;\n\n  public installationCommand: ExecaCommand = { command: 'npm', args: ['install'] };\n\n  public startCommand: ExecaCommand = { command: 'npm', args: ['run', 'dev'] };\n\n  public source: string | string[] = [\n    './public/favicon.ico',\n    './public/logo.svg',\n    './public/info.svg',\n    './public/link.svg',", "explanation": "**Summary**\n\nThis block defines a scaffold class called `DedicatedScaffold` for Next.js projects, which allows users to create a dedicated wallet scaffold with authentication features. The functionality includes:\n\n* Importing necessary flags and prompts\n* Defining data types and flags\n* Creating a scaffold class with installation and start commands\n* Specifying source files for the project", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/scaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/scaffold.ts':\n\nThis scaffold class creates a Next.js project with authentication features, allowing users to set up a dedicated wallet scaffold with specific files and configurations based on the chosen `authType`."}
{"code": "    './public/link_white.svg',\n    './public/redirect_bg.png',\n    './public/login_bg.png',\n    './.env.example',\n    './.eslintrc.json',\n    './.gitignore',\n    './package.json',\n    './postcss.config.js',\n    './tailwind.config.js',\n    './tsconfig.json',\n    './README.md',\n    './src/components/ui',\n    './src/components/magic/cards',\n    './src/components/magic/wallet-methods/Disconnect.tsx',\n    './src/components/magic/wallet-methods/GetIdToken.tsx',\n    './src/components/magic/wallet-methods/GetMetadata.tsx',\n    './src/components/magic/Login.tsx',\n    './src/hooks/MagicProvider.tsx',\n    './src/hooks/Web3.tsx',\n    './src/pages',\n    './src/styles',\n    './src/utils',\n  ];\n\n  constructor(data: Data) {\n    super();\n    this.data = data;\n\n    if (typeof this.source !== 'string') {\n      this.data.loginMethods = this.data.loginMethods.map((authType) =>\n        AuthTypePrompt.mapInputToLoginMethods(authType),\n      );\n      this.data.loginMethods.forEach((authType) => {", "explanation": "This block appears to be a list of file paths, likely in a development environment or project setup. The purpose is to specify the various files and directories required for the project's operation.\n\nFunctionality: This list serves as a reference for including necessary files and configurations (e.g., images, configuration files, and code components) when setting up or initializing the project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/scaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/scaffold.ts':\n\nThis scaffold class creates a Next.js project with authentication features, allowing users to set up a dedicated wallet scaffold with specific files and configurations based on the chosen `authType`."}
{"code": "        (this.source as string[]).push(`./src/components/magic/auth/${authType}.tsx`);\n        if (\n          authType === 'Discord' ||\n          authType === 'Facebook' ||\n          authType === 'Github' ||\n          authType === 'Google' ||\n          authType === 'Twitch' ||\n          authType === 'Twitter'\n        ) {\n          (this.source as string[]).push(`./public/social/${authType}.svg`);\n        }\n        if (authType === 'EmailOTP') {\n          (this.source as string[]).push('./src/components/magic/wallet-methods/UpdateEmail.tsx');\n        }\n      });\n    }\n  }\n}\n", "explanation": "**Purpose:** Dynamically push files to an array based on authentication type.\n\n**Functionality:** Updates a source array with file paths for specific components or assets, depending on the value of `authType`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/scaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/scaffold.ts':\n\nThis scaffold class creates a Next.js project with authentication features, allowing users to set up a dedicated wallet scaffold with specific files and configurations based on the chosen `authType`."}
{"code": "# Publishable API Key found in the Magic Dashboard\nNEXT_PUBLIC_MAGIC_API_KEY=<%= publishableApiKey %>\n\n# The RPC URL for the blockchain network\nNEXT_PUBLIC_BLOCKCHAIN_NETWORK=<%= network %>", "explanation": "This block configures two environment variables:\n\n1. `NEXT_PUBLIC_MAGIC_API_KEY`: Stores a publishable API key from the Magic Dashboard.\n2. `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: Sets the RPC URL for a blockchain network.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/.env.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/.env.example':\n\n**Environment Variables Configuration**\n\nConfigures two public environment variables:\n\n1. `NEXT_PUBLIC_MAGIC_API_KEY`: Stores a Magic API key for authentication.\n2. `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: Sets the RPC URL for interacting with a blockchain network."}
{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block appears to be a configuration file for ESLint (a JavaScript linter), specifically defining rules and formatting settings.\n\n* **Purpose:** Define linting rules and formatting conventions.\n* **Functionality:** Extend default Next.js web vitals configuration, set single quotes as default and enforce 2-space indentation.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/.eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/.eslintrc.json':\n\n**ESLint Configuration File**: Defines linting rules and formatting conventions for JavaScript code, extending Next.js web vitals configuration with single quotes as default and 2-space indentation."}
{"code": "This scaffold is meant to help you bootstrap your own projects with Magic's [Dedicated Wallet](https://magic.link/docs/auth/overview). Magic is a developer SDK that integrates with your application to enable passwordless Web3 onboarding.\n\nThe folder structure of this scaffold is designed to encapsulate all things Magic into one place so you can easily add or remove components and functionality. For example, all Magic-specific components are in the `src/components/magic` directory while generic UI components are in the `src/components/ui` directory.\n\n## Usage\n\nThis project uses Next.js but relies on fairly standard React components and hooks. Magic-related components are in the `/src/components/magic` directory, all other UI components are in the `/src/components/ui` directory, utility functions are in `/src/utils` and hooks are in the `/src/hooks` directory.\n\nUse this project as a reference for how to use this template or implement Magic in your own project. Key areas to look at include:\n", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** A scaffold to help developers bootstrap passwordless Web3 onboarding using Magic's Dedicated Wallet SDK.\n\n**Functionality:** Provides a structured project setup, separating Magic-specific components from generic UI components and utility functions. Serves as a reference for implementing Magic in own projects.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 1, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/README.md':\n\n**Next.js Dedicated Wallet Template**\n\nThis template provides a structured project setup for passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, including custom hooks and login functionality for user authentication. It contains utility files that support authentication processes, smart contract utilities, reusable UI components, and Next.js project instructions. The template serves as a reference for implementing Magic in own projects and provides links to resources and information about Next.js deployment options."}
{"code": "### Custom Hooks\nIn the `/src/hooks` directory, the `MagicProvider` hook sets up and provides a Magic instance for using the Magic SDK and OAuth extension. Additionally, the `Web3.tsx` hook initializes and provides a Web3 instance using the Magic provider.\n\n### Login Functionality \nThe `Login.tsx` component, located in `/src/components/magic`, manages the display and functionality of various login methods on the login page. It is a central piece for handling user authentication.\n\nOne thing to note is that whenever `getInfo` is called from any of the authentication providers, the user session is rehydrated.\n\nHere is a list of the available authentication methods:\n- `Discord.tsx` - Handles authentication using Discord OAuth.\n- `Facebook.tsx` - Handles authentication using Facebook OAuth.\n- `Google.tsx` - Handles authentication using Google OAuth.\n- `Twitch.tsx` - Handles authentication using Twitch OAuth.\n- `EmailOTP.tsx` - Handles authentication using email one-time password (OTP).", "explanation": "Here is a concise summary:\n\n**Purpose:** Provides custom hooks and login functionality for user authentication.\n\n**Functionality:**\n\n* `MagicProvider` hook sets up Magic instance for Magic SDK and OAuth extension.\n* `Web3.tsx` hook initializes Web3 instance using Magic provider.\n* `Login.tsx` component manages display and functionality of various login methods (Discord, Facebook, Google, Twitch, Email OTP).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 2, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/README.md':\n\n**Next.js Dedicated Wallet Template**\n\nThis template provides a structured project setup for passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, including custom hooks and login functionality for user authentication. It contains utility files that support authentication processes, smart contract utilities, reusable UI components, and Next.js project instructions. The template serves as a reference for implementing Magic in own projects and provides links to resources and information about Next.js deployment options."}
{"code": "- `Github.tsx` - Handles authentication using GitHub OAuth.\n- `SMSOTP.tsx` - Handles authentication using SMS one-time password (OTP).\n- `Twitter.tsx` - Handles authentication using Twitter OAuth.\n\n### User Interaction Components\n\n- `/src/components/magic/auth`: This contains all of the authentication methods.\n\n- `/src/components/magic/cards`: The `SendTransactionCard.tsx` component facilitate transaction processes, `UserInfoCard.tsx` displays user information, `WalletMethodsCard.tsx` manages authentication tokens and user metadata and `SmartContract.tsx` interacts with a basic storage contract. \n\n- `/src/components/magic/wallet-methods`: This directory includes several components that provide specific functionalities:\n    - `Disconnect.tsx` handles the disconnection of the user's session from the application.\n    - `GetIdToken.tsx` retrieves the ID token for the authenticated user.", "explanation": "Here is a concise summary:\n\n**Authentication Blocks:**\n\n* Handle authentication using GitHub, SMS OTP, and Twitter OAuth.\n\n**User Interaction Components:**\n\n* Manage user authentication and session.\n* Facilitate transaction processes and display user information.\n* Interact with basic storage contracts and manage authentication tokens.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 3, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/README.md':\n\n**Next.js Dedicated Wallet Template**\n\nThis template provides a structured project setup for passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, including custom hooks and login functionality for user authentication. It contains utility files that support authentication processes, smart contract utilities, reusable UI components, and Next.js project instructions. The template serves as a reference for implementing Magic in own projects and provides links to resources and information about Next.js deployment options."}
{"code": "    - `GetMetadata.tsx` retrieves metadata information about the authenticated user. This will rehydrate the user session every time it is rendered. It does this when calling the `getInfo` function. The user session is rehydrated whenever `getInfo` is invoked\n    - `UpdateEmail.tsx` allows the user to update their email address.\n\n### Utility Functions\nThe `/src/utils` directory includes utility files that support various aspects of the application:\n- `common.ts` manages user authentication processes. The `logout` function handle the process of logging out a user and clearing their authentication data, while `saveUserInfo` saves the user's token, login method, and address to local storage.\n- `network.ts` defines network configurations and utilities, such as URLs, chain IDs, tokens, and block explorer links.\n- `showToast.ts` handles customizable toast notifications.", "explanation": "Here is a concise summary:\n\n**Block Summary**\n\nThis block contains utility files that support authentication processes, including:\n\n* Retrieving user metadata (`GetMetadata`)\n* Updating user email address (`UpdateEmail`)\n* Utility functions:\n\t+ Managing user authentication (`common.ts`)\n\t+ Defining network configurations and utilities (`network.ts`)\n\t+ Handling toast notifications (`showToast.ts`)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 4, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/README.md':\n\n**Next.js Dedicated Wallet Template**\n\nThis template provides a structured project setup for passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, including custom hooks and login functionality for user authentication. It contains utility files that support authentication processes, smart contract utilities, reusable UI components, and Next.js project instructions. The template serves as a reference for implementing Magic in own projects and provides links to resources and information about Next.js deployment options."}
{"code": "- `smartContract.ts` contains functions and configurations for interacting with smart contracts, such as retrieving contract IDs, determining testnet status, generating hash links, and defining contract ABIs.\n\nThese utilities are essential for supporting various aspects of the application.\n\n### UI Components\nThe `/src/components/ui` directory contains reusable UI components for building the user interface. This includes components for creating and styling cards (`Card`, `CardHeader`, `CardLabel`), layout elements for the dashboard (`Dashboard`), separators (`Divider`), error messages (`ErrorText`), form elements (`FormButton`, `FormInput`), redirection handling within the Magic dashboard (`MagicDashboardRedirect`), spacing elements (`Spacer`), loading indicators (`Spinner`), and displaying transaction history (`TransactionHistory`).\n## Next.js\n", "explanation": "Here is a concise summary:\n\n**Block Summary**\n\nThis block contains two main components:\n\n1. **Smart Contract Utilities**: A set of functions and configurations for interacting with smart contracts, including retrieving contract IDs, testnet status, and generating hash links.\n2. **Reusable UI Components**: A directory containing UI components for building the user interface, such as cards, layout elements, form inputs, and loading indicators.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 5, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/README.md':\n\n**Next.js Dedicated Wallet Template**\n\nThis template provides a structured project setup for passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, including custom hooks and login functionality for user authentication. It contains utility files that support authentication processes, smart contract utilities, reusable UI components, and Next.js project instructions. The template serves as a reference for implementing Magic in own projects and provides links to resources and information about Next.js deployment options."}
{"code": "This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n### Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n### Learn More\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Summary:** This is a Next.js project template with instructions for getting started, including running a development server and accessing API routes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 6, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/README.md':\n\n**Next.js Dedicated Wallet Template**\n\nThis template provides a structured project setup for passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, including custom hooks and login functionality for user authentication. It contains utility files that support authentication processes, smart contract utilities, reusable UI components, and Next.js project instructions. The template serves as a reference for implementing Magic in own projects and provides links to resources and information about Next.js deployment options."}
{"code": "To learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n### Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n", "explanation": "Here is a concise summary:\n\nThis block provides links to resources and information about Next.js, including documentation, tutorials, and deployment options on Vercel.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 7, "total_chunks": 7}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/README.md':\n\n**Next.js Dedicated Wallet Template**\n\nThis template provides a structured project setup for passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, including custom hooks and login functionality for user authentication. It contains utility files that support authentication processes, smart contract utilities, reusable UI components, and Next.js project instructions. The template serves as a reference for implementing Magic in own projects and provides links to resources and information about Next.js deployment options."}
{"code": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n}\n\nmodule.exports = nextConfig\n", "explanation": "**Summary**\n\nThis block is a configuration file for Next.js, exporting a `nextConfig` object that enables React Strict Mode.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/next.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the file 'scaffolds/nextjs-dedicated-wallet/template/next.config.js':\n\n**Summary**: Configuration file for Next.js enabling React Strict Mode."}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "This block is a configuration for Tailwind CSS and Autoprefixer, exporting a set of plugins with default configurations.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe `postcss.config.js` file configures Tailwind CSS and Autoprefixer for automatic CSS prefixing and vendor support in the Next.js project."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "This block is an SVG icon, specifically a \"Star Rating\" symbol with a heart-like shape, likely used for user feedback or rating purposes in a digital interface.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/public/info.svg':\n\nA Star Rating icon featuring a heart-shaped design, likely used for user feedback and ratings in digital interfaces."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This is an SVG (Scalable Vector Graphics) block.\n\n**Purpose:** Display a graphical icon.\n\n**Functionality:** Renders a visual representation of a specific object or concept, using XML code and vector graphics.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'link.svg' file is an SVG block that displays a graphical icon, using vector graphics to render a visual representation of a specific object or concept."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block appears to be a graphical SVG element, specifically a path element, that represents an icon or graphic image. It is likely used for visual representation in a digital context, such as a website or application.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'link.svg' file is an SVG block that displays a graphical icon, using vector graphics to render a visual representation of a specific object or concept."}
{"code": "</svg>\n", "explanation": "This block contains an SVG (Scalable Vector Graphics) element, which is likely used for rendering graphical content on a web page.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'link.svg' file is an SVG block that displays a graphical icon, using vector graphics to render a visual representation of a specific object or concept."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG (Scalable Vector Graphics) element, which is a graphical representation of icons or images using XML code. The specific purpose and functionality of this block cannot be determined without more context, but it appears to represent some type of icon or image.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThis is an SVG icon file named \"link_white.svg\", representing an image or logo with white fill color. Its purpose and functionality are unknown without context."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block is a SVG path element, which appears to be a graphical representation of an icon or logo. It consists of a series of geometric shapes and lines that define its visual appearance. The \"fill\" attribute specifies the color \"#FFFFFF\", indicating it should be filled with white color.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThis is an SVG icon file named \"link_white.svg\", representing an image or logo with white fill color. Its purpose and functionality are unknown without context."}
{"code": "</svg>", "explanation": "This is not a block with a clear purpose or functionality. It appears to be an SVG (Scalable Vector Graphics) element, likely used for visual representation on a webpage. The code itself doesn't provide any specific information about its intended use or function.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThis is an SVG icon file named \"link_white.svg\", representing an image or logo with white fill color. Its purpose and functionality are unknown without context."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "**SVG Icon Block**\n\nThis block is a graphical icon, comprised of two paths with white fills, defined within an SVG container. It has a width and height of 32 pixels and uses a viewBox to specify its rendering bounds. The icon's purpose is not explicitly stated, but it appears to be some form of logo or favicon.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'logo.svg' file is a 32x32 pixel SVG icon consisting of two paths with white fills, likely serving as a logo or favicon."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This is an SVG code block, specifically a path element, which defines a graphical shape (likely a rectangle) with white fill color.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'logo.svg' file is a 32x32 pixel SVG icon consisting of two paths with white fills, likely serving as a logo or favicon."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 127.14 96.36\"><defs><style>.cls-1{fill:#5865f2;}</style></defs><g id=\"\u56fe\u5c42_2\" data-name=\"\u56fe\u5c42 2\"><g id=\"Discord_Logos\" data-name=\"Discord Logos\"><g id=\"Discord_Logo_-_Large_-_White\" data-name=\"Discord Logo - Large - White\"><path class=\"cls-1\" d=\"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z\"/></g></g></g></svg>", "explanation": "This is an SVG code snippet that represents a Discord logo icon. It defines a graphical image with specific shape and color properties.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Discord.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/public/social/Discord.svg':\n\nA Discord logo icon represented as an SVG image, defining its shape and color properties."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#039be5\" d=\"M24 5A19 19 0 1 0 24 43A19 19 0 1 0 24 5Z\"/><path fill=\"#fff\" d=\"M26.572,29.036h4.917l0.772-4.995h-5.69v-2.73c0-2.075,0.678-3.915,2.619-3.915h3.119v-4.359c-0.548-0.074-1.707-0.236-3.897-0.236c-4.573,0-7.254,2.415-7.254,7.917v3.323h-4.701v4.995h4.701v13.729C22.089,42.905,23.032,43,24,43c0.875,0,1.729-0.08,2.572-0.194V29.036z\"/></svg>", "explanation": "This block is an SVG icon that represents a cloud-like shape with a blue fill and white outline. It appears to be a graphical representation of a \"speech bubble\" or a similar communication-related concept, likely used as a UI element or icon.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Facebook.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe file 'scaffolds/nextjs-dedicated-wallet/template/public/social/Facebook.svg' is an SVG icon representing a speech bubble-like shape with a blue fill and white outline, likely used as a UI element for communication-related purposes."}
{"code": "<svg width=\"98\" height=\"96\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z\" fill=\"#24292f\"/></svg>", "explanation": "This block is an SVG icon, specifically a graphical representation of a logo or symbol, which serves as a visual element on a webpage.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Github.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary:\n\nThe 'Github.svg' file contains an SVG icon representing a graphical logo for use on a webpage."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"705.6\" height=\"720\" viewBox=\"0 0 186.69 190.5\" xmlns:v=\"https://vecta.io/nano\"><g transform=\"translate(1184.583 765.171)\"><path clip-path=\"none\" mask=\"none\" d=\"M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z\" fill=\"#4285f4\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z\" fill=\"#34a853\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z\" fill=\"#fbbc05\"/><path d=\"M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z\" fill=\"#ea4335\" clip-path=\"none\" mask=\"none\"/></g></svg>", "explanation": "This block is an SVG image, containing four colored shapes with varying levels of transparency, arranged in a specific design pattern.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Google.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe file \"scaffolds/nextjs-dedicated-wallet/template/public/social/Google.svg\" is an SVG image featuring four colored shapes with varying levels of transparency, arranged in a specific design pattern."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.6, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 2400 2800\" style=\"enable-background:new 0 0 2400 2800;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#FFFFFF;}\n\t.st1{fill:#9146FF;}\n</style>\n<title>Asset 2</title>\n<g>\n\t<polygon class=\"st0\" points=\"2200,1300 1800,1700 1400,1700 1050,2050 1050,1700 600,1700 600,200 2200,200 \t\"/>\n\t<g>\n\t\t<g id=\"Layer_1-2\">\n\t\t\t<path class=\"st1\" d=\"M500,0L0,500v1800h600v500l500-500h400l900-900V0H500z M2200,1300l-400,400h-400l-350,350v-350H600V200h1600\n\t\t\t\tV1300z\"/>\n\t\t\t<rect x=\"1700\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t\t<rect x=\"1150\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) code that represents a graphical asset, specifically a blue shape with white fill on a light blue background.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Twitch.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe file \"scaffolds/nextjs-dedicated-wallet/template/public/social/Twitch.svg\" is an SVG representing a dedicated Twitch logo, featuring a light blue background with a blue shape and white fill."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 248 204\" style=\"enable-background:new 0 0 248 204;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#1D9BF0;}\n</style>\n<g id=\"Logo_1_\">\n\t<path id=\"white_background\" class=\"st0\" d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26", "explanation": "This block is an SVG (Scalable Vector Graphics) file that defines a logo design. It contains a vector path with a blue fill color (#1D9BF0), which represents the logo's graphical elements. The SVG file uses XML markup language to specify its structure and visual properties.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg':\n\n**Twitter Logo SVG**\n\nA scalable vector graphic (SVG) file defining a logo design with a blue fill color (#1D9BF0), specifying coordinates and curves for a visual shape."}
{"code": "\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"/>\n</g>\n</svg>\n", "explanation": "This is an SVG path definition, likely used for graphics or design purposes, specifying coordinates and curves for a visual shape.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg':\n\n**Twitter Logo SVG**\n\nA scalable vector graphic (SVG) file defining a logo design with a blue fill color (#1D9BF0), specifying coordinates and curves for a visual shape."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from '@/components/ui/Header'\n<% loginMethods.forEach(authType => { %>\n  <%-`import ${authType.replaceAll(' ', '')} from './auth/${authType.replaceAll(' ', '')}';`-%>\n  <% }) %>\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-<%= Math.min(loginMethods.length, 3) %> grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      <% loginMethods.forEach(authType => { %>\n      <% if (authType !== \"Social Logins\") { %>\n        <%-`<${authType.replaceAll(' ', '')} token={token} setToken={setToken} />`-%>\n      <% } %>\n  \t\t<% }) %>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "**Purpose:** A React component for a login page.\n\n**Functionality:**\n\n* Imports various authentication methods (e.g., Google, Facebook) based on `loginMethods` array.\n* Renders a header with these authentication options as grid items.\n* Allows users to select an auth method and logs in using the corresponding function.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file:\n\n**Login.tsx**\n\nA React login page component that renders a header with multiple authentication methods (e.g., Google, Facebook) as grid items, allowing users to select an auth method and log in using the corresponding function."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '@/components/ui/Spinner';\nimport Image from 'next/image';\nimport discord from 'public/social/Discord.svg';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\n\nconst Discord = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Summary:**\n\nThis code block is a React functional component named `Discord` that handles user authentication via Discord OAuth. It checks for login status, retrieves user metadata, and sets an authentication token using the `magic` library from Magic Provider. The component displays a loading spinner while authenticating.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file:\n\n**Discord Auth Component**\n\nHandles user authentication via Discord OAuth using Magic Provider.\nDisplays loading spinner during authentication process.\nUpon login, stores user info and token in local storage."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'discord',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"discord\">Discord Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "Here is a concise summary:\n\n**Purpose:** Handle Discord login process with Magic OAuth.\n\n**Functionality:**\n\n* Calls `login()` function when button is clicked.\n* `login()` redirects user to Discord login page using Magic OAuth.\n* After login, stores user info and token in local storage.\n* Displays spinner while authenticating.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file:\n\n**Discord Auth Component**\n\nHandles user authentication via Discord OAuth using Magic Provider.\nDisplays loading spinner during authentication process.\nUpon login, stores user info and token in local storage."}
{"code": "            <Image src={discord} alt=\"Discord\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Discord</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Discord;\n", "explanation": "This block is a button that allows users to sign in or continue with their Discord account, containing an icon and corresponding text label.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file:\n\n**Discord Auth Component**\n\nHandles user authentication via Discord OAuth using Magic Provider.\nDisplays loading spinner during authentication process.\nUpon login, stores user info and token in local storage."}
{"code": "import { useMagic } from '@/hooks/MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveUserInfo } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });", "explanation": "**Summary:**\n\nThis block is a React component (`EmailOTP`) that handles email-based login with Magic (a authentication library) using One-Time Passwords (OTPs). It allows users to input their email, validates the format, and initiates a login attempt if valid, displaying a progress spinner and toast notifications as needed.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\n**Purpose:** Login card component for email OTP authentication.\n\n**Functionality:** Handles user input, validates email format, initiates login attempt with progress spinner and error handling, rehydrating user session upon successful login."}
{"code": "        // Rehydrates the user session whenever getInfo is invoked\n        const metadata = await magic?.user.getInfo();\n\n        if (!token || !metadata?.publicAddress) {\n          throw new Error('Magic login failed');\n        }\n\n        setToken(token);\n        saveUserInfo(token, 'EMAIL', metadata?.publicAddress);\n        setEmail('');\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }", "explanation": "Here is a concise summary:\n\n**Purpose:** Rehydrate user session after login.\n\n**Functionality:** Retrieves user metadata, sets token, saves user info, and updates UI state with error handling if login fails.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\n**Purpose:** Login card component for email OTP authentication.\n\n**Functionality:** Handles user input, validates email format, initiates login attempt with progress spinner and error handling, rehydrating user session upon successful login."}
{"code": "    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);\n            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** A login card component for email OTP authentication.\n\n**Functionality:** Accepts user input for an email address, displays error messages if invalid, and triggers a login process upon button click or when the login token exists.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\n**Purpose:** Login card component for email OTP authentication.\n\n**Functionality:** Handles user input, validates email format, initiates login attempt with progress spinner and error handling, rehydrating user session upon successful login."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport facebook from 'public/social/Facebook.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Facebook = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component that handles Facebook login functionality.\n\n**Functionality:** Uses the Magic Provider hook to authenticate users via Facebook OAuth, saving user information and setting an authentication token. Displays a loading spinner while authenticating.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\n**Facebook Social Login Component:**\n\nThis React component enables Facebook login functionality by authenticating users via OAuth and saving user information, displaying a loading spinner during authentication. It handles login requests, saves user data on success, logs errors on failure, and provides a \"Continue with Facebook\" button to initiate the login process."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'facebook',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"facebook\">Facebook Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Handle Facebook social login functionality.\n\n**Functionality:** \n\n1. Calls `checkLogin()` function on mount.\n2. When user clicks \"Facebook Login\" button, it redirects to Facebook for authentication.\n3. Upon successful login, saves user information to storage and sets loading flag to false.\n4. If login fails, logs the error and sets loading flag to false.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\n**Facebook Social Login Component:**\n\nThis React component enables Facebook login functionality by authenticating users via OAuth and saving user information, displaying a loading spinner during authentication. It handles login requests, saves user data on success, logs errors on failure, and provides a \"Continue with Facebook\" button to initiate the login process."}
{"code": "            <Image src={facebook} alt=\"Facebook\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Facebook</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Facebook;\n", "explanation": "A button that allows users to log in with their Facebook account, consisting of a small Facebook icon and the text \"Continue with Facebook\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\n**Facebook Social Login Component:**\n\nThis React component enables Facebook login functionality by authenticating users via OAuth and saving user information, displaying a loading spinner during authentication. It handles login requests, saves user data on success, logs errors on failure, and provides a \"Continue with Facebook\" button to initiate the login process."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport github from 'public/social/Github.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Github = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Purpose:** This block handles GitHub login functionality.\n\n**Functionality:**\n\n* Uses the `magic` library to authenticate with GitHub\n* Checks if a user is already logged in using local storage\n* Retrieves user information from GitHub upon successful authentication\n* Sets a token to store user authentication credentials.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file uses Magic OAuth to handle GitHub login functionality, checking for existing authentication, logging in via redirect, and updating loading status, allowing users to login or continue with their GitHub credentials."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'github',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"github\">Github Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "Here is a concise summary:\n\nThis block handles social login functionality, specifically GitHub login with Magic OAuth. It checks for user authentication, logs in via GitHub redirect, and updates loading status in local storage.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file uses Magic OAuth to handle GitHub login functionality, checking for existing authentication, logging in via redirect, and updating loading status, allowing users to login or continue with their GitHub credentials."}
{"code": "            <Image src={github} alt=\"Github\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Github</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Github;\n", "explanation": "A button component that, when clicked, allows users to continue or login with their GitHub account credentials.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file uses Magic OAuth to handle GitHub login functionality, checking for existing authentication, logging in via redirect, and updating loading status, allowing users to login or continue with their GitHub credentials."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport google from 'public/social/Google.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Google = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Summary:**\n\nThis block is a React functional component that handles Google OAuth login. It uses the `useMagic` hook to interact with the Magic Provider, checks for authentication status, and updates the token when logged in successfully.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx':\n\n**Component Purpose:** Handles Google OAuth login using Magic, updates user info, and displays a loading indicator while authenticating users."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'google',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"google\">Google Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "Here is a concise summary of the block:\n\n**Functionality:** Social login and authentication flow.\n\n**Purpose:** To log in users using Google OAuth with Magic, update user info, and display a loading indicator while authenticating.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx':\n\n**Component Purpose:** Handles Google OAuth login using Magic, updates user info, and displays a loading indicator while authenticating users."}
{"code": "            <Image src={google} alt=\"Google\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Google</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Google;\n", "explanation": "A login button using a Google logo image, allowing users to continue with their Google account.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx':\n\n**Component Purpose:** Handles Google OAuth login using Magic, updates user info, and displays a loading indicator while authenticating users."}
{"code": "import { useState } from 'react';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveUserInfo } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport FormInput from '@/components/ui/FormInput';\n\nconst SMSOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!phone.match(/^\\+?\\d{10,14}$/)) {\n      setPhoneError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setPhoneError(false);\n        const token = await magic?.auth.loginWithSMS({\n          phoneNumber: phone,\n        });", "explanation": "**Summary**\n\nThis block is a React component that handles SMS-based login functionality using the Magic SDK. It takes in user input (phone number), validates it, and initiates a login process with Magic, displaying a progress spinner while waiting for the response. If an error occurs, it displays a toast message; otherwise, it saves the user's information upon successful login.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**Purpose:** Handles SMS-based login functionality using Magic SDK, validating user input and initiating login process upon successful phone number entry.\n\n**Key Functions:**\n\n* Validates user-provided phone number\n* Initiates login with Magic upon button click\n* Displays progress spinner during login attempt\n* Saves user info upon successful login\n* Displays error message for invalid phone numbers"}
{"code": "        // Rehydrates the user session whenever getInfo is invoked\n        const metadata = await magic?.user.getInfo();\n\n        if (!token || !metadata?.publicAddress) {\n          throw new Error('Magic login failed');\n        }\n\n        setToken(token);\n        saveUserInfo(token, 'EMAIL', metadata?.publicAddress);\n        setPhone('');\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }", "explanation": "Here is a concise summary:\n\n**Block Purpose:** Rehydrate user session upon login completion.\n\n**Functionality:** Retrieves user metadata, validates login, saves user info, and updates state (login in progress flag). Handles errors with error messaging and updates state.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**Purpose:** Handles SMS-based login functionality using Magic SDK, validating user input and initiating login process upon successful phone number entry.\n\n**Key Functions:**\n\n* Validates user-provided phone number\n* Initiates login with Magic upon button click\n* Displays progress spinner during login attempt\n* Saves user info upon successful login\n* Displays error message for invalid phone numbers"}
{"code": "    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"sms\">SMS Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (phoneError) setPhoneError(false);\n            setPhone(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : '+11234567890'}\n          value={phone}\n        />\n        {phoneError && (\n          <span className=\"self-start text-xs font-semibold text-red-700 justify-self-start\">\n            Enter a valid phone number\n          </span>\n        )}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : phone.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default SMSOTP;\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A login form for SMS login functionality.\n\n**Functionality:** Accepts phone number input, validates it, and triggers login/signup process when button clicked. Displays error message if invalid phone number entered.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**Purpose:** Handles SMS-based login functionality using Magic SDK, validating user input and initiating login process upon successful phone number entry.\n\n**Key Functions:**\n\n* Validates user-provided phone number\n* Initiates login with Magic upon button click\n* Displays progress spinner during login attempt\n* Saves user info upon successful login\n* Displays error message for invalid phone numbers"}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport twitch from 'public/social/Twitch.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitch = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A Twitch login component that uses Magic SDK for authentication.\n\n**Functionality:** The component checks if the user is already logged in using local storage, then authenticates with Magic SDK to retrieve an ID token. If successful, it saves the user info and updates the `token` state.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx':\n\n**Purpose:** Handles social login with Magic OAuth for Twitch, enabling users to log in or register using their Twitch account.\n\n**Functionality:** Authenticates user on mount and button click, redirects to Twitch login page if needed, updates loading flag after login completion."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitch',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitcg\">Twitch Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handles social login using Magic OAuth, specifically for Twitch.\n\n**Functionality:**\n\n1. Calls `checkLogin()` function on mount.\n2. When social login button is clicked:\n\t* Checks if token exists (length > 0). If yes, does nothing.\n\t* If no token, calls `login()` function to redirect to Twitch login page.\n3. When login completes (success or error):\n\t* Updates loading flag to \"false\" in local storage and state.\n\nIn summary: This block enables social login with Magic OAuth for Twitch, handles the login process, and updates the loading flag accordingly.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx':\n\n**Purpose:** Handles social login with Magic OAuth for Twitch, enabling users to log in or register using their Twitch account.\n\n**Functionality:** Authenticates user on mount and button click, redirects to Twitch login page if needed, updates loading flag after login completion."}
{"code": "            <Image src={twitch} alt=\"Twitch\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Twitch</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitch;\n", "explanation": "This block is a button that allows users to log in or register using their Twitch account.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx':\n\n**Purpose:** Handles social login with Magic OAuth for Twitch, enabling users to log in or register using their Twitch account.\n\n**Functionality:** Authenticates user on mount and button click, redirects to Twitch login page if needed, updates loading flag after login completion."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport twitter from 'public/social/Twitter.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitter = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A Twitter login component that uses Magic's OAuth library to authenticate users.\n\n**Functionality:**\n\n* Uses `useMagic` hook to initialize Magic's authentication provider\n* Checks if user is already logged in via local storage\n* If not, attempts to retrieve an ID token using Magic's OAuth library and saves the user info using `saveUserInfo`\n* Displays a spinner while authentication is in progress", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis component handles Twitter login using Magic's OAuth library, allowing users to authenticate and retrieve their info while displaying a spinner during authentication."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitter',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitter\">Twitter Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handles social login flow with Twitter.\n\n**Functionality:**\n\n* Calls `login` function when button is clicked or token length is 0.\n* If login is successful, saves user info and sets loading flag to false.\n* If login fails, logs error message and sets loading flag to false.\n* Displays a spinner while authentication is in progress.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis component handles Twitter login using Magic's OAuth library, allowing users to authenticate and retrieve their info while displaying a spinner during authentication."}
{"code": "            <Image src={twitter} alt=\"Twitter\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Twitter</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitter;\n", "explanation": "This block is a button that allows users to log in or register using their Twitter account, featuring an icon of Twitter and text \"Continue with Twitter\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis component handles Twitter login using Magic's OAuth library, allowing users to authenticate and retrieve their info while displaying a spinner during authentication."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport useWeb3 from '@/hooks/Web3';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { getFaucetUrl, getNetworkToken, isEip1559Supported } from '@/utils/network';\nimport showToast from '@/utils/showToast';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { TxnParams } from '@/utils/types';\n\nconst SendTransaction = () => {\n  const web3 = useWeb3();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);\n  const [hash, setHash] = useState('');", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component for sending transactions.\n\n**Functionality:**\n\n* Allows users to input a recipient address and amount.\n* Displays a form with input fields and buttons.\n* Uses Web3.js to interact with blockchain.\n* Handles transaction processing, display of success/failure messages, and error handling.\n* Includes additional UI components such as loading indicators and history logs.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**SendTransactionCard.tsx**\n\nA React component for sending cryptocurrency transactions on a blockchain network, such as Ethereum.\n\n**Key Features:**\n\n* Input form with recipient address and amount fields\n* Sends transaction with specified parameters using Web3.js\n* Updates UI with success or error messages upon transaction completion or failure\n* Displays history logs after successful transaction"}
{"code": "  const [toAddressError, setToAddressError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const sendTransaction = useCallback(async () => {\n    if (!web3?.utils.isAddress(toAddress)) {\n      return setToAddressError(true);\n    }\n    if (isNaN(Number(amount))) {\n      return setAmountError(true);\n    }\n    setDisabled(true);\n\n    const txnParams: TxnParams = {\n      from: publicAddress,\n      to: toAddress,\n      value: web3.utils.toWei(amount, 'ether'),\n    };\n\n    if (isEip1559Supported()) {\n      const feeData = await web3.eth.calculateFeeData();\n      txnParams.maxFeePerGas = BigInt(feeData.maxFeePerGas);\n      txnParams.maxPriorityFeePerGas = BigInt(feeData.maxPriorityFeePerGas);\n    } else {\n      txnParams.gasPrice = await web3.eth.getGasPrice();\n    }\n\n    web3.eth", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Validate user input for sending a cryptocurrency transaction.\n\n**Functionality:**\n\n* Handles errors for recipient address and amount inputs.\n* Enables/disables send button based on valid input.\n* Prepares transaction parameters (from, to, value) for execution.\n* Calculates EIP-1559 fees or gas price based on Ethereum network support.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**SendTransactionCard.tsx**\n\nA React component for sending cryptocurrency transactions on a blockchain network, such as Ethereum.\n\n**Key Features:**\n\n* Input form with recipient address and amount fields\n* Sends transaction with specified parameters using Web3.js\n* Updates UI with success or error messages upon transaction completion or failure\n* Displays history logs after successful transaction"}
{"code": "      .sendTransaction(txnParams as any)\n      .on('transactionHash', (txHash) => {\n        setHash(txHash);\n        console.log('Transaction hash:', txHash);\n      })\n      .then((receipt) => {\n        showToast({\n          message: 'Transaction Successful',\n          type: 'success',\n        });\n        setToAddress('');\n        setAmount('');\n        console.log('Transaction receipt:', receipt);\n      })\n      .catch((error) => {\n        console.error('Transaction error:', error);\n        setDisabled(false);\n        showToast({\n          message: 'Transaction Failed: ' + error.message,\n          type: 'error',\n        });\n      });\n\n  }, [web3, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      {getFaucetUrl() && (\n        <div>\n          <a href={getFaucetUrl()} target=\"_blank\" rel=\"noreferrer\">\n            <FormButton onClick={() => null} disabled={false}>\n              Get Test {getNetworkToken()}", "explanation": "Here is a concise summary:\n\n**Purpose:** Send a transaction on a blockchain network (e.g., Ethereum) using Web3.\n\n**Functionality:**\n\n1. Sends a transaction with specified parameters.\n2. Triggers an event when the transaction hash is available.\n3. Updates UI upon successful transaction receipt or error:\n\t* Displays success message and resets form fields.\n\t* Displays error message and resets form fields on failure.\n4. Re-enabled after failed transaction.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**SendTransactionCard.tsx**\n\nA React component for sending cryptocurrency transactions on a blockchain network, such as Ethereum.\n\n**Key Features:**\n\n* Input form with recipient address and amount fields\n* Sends transaction with specified parameters using Web3.js\n* Updates UI with success or error messages upon transaction completion or failure\n* Displays history logs after successful transaction"}
{"code": "              <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n            </FormButton>\n          </a>\n          <Divider />\n        </div>\n      )}\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput\n        value={amount}\n        onChange={(e: any) => setAmount(e.target.value)}\n        placeholder={`Amount (${getNetworkToken()})`}\n      />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        Send Transaction\n      </FormButton>\n\n      {hash ? (\n        <>\n          <Spacer size={20} />\n          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "**Summary:**\n\nThis code block represents a card component containing:\n\n* An input form for sending transactions\n* A button to send the transaction (disabled until valid recipient address and amount are entered)\n* Error messages for invalid recipient address or amount\n* A button to view transaction history once the transaction has been sent.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**SendTransactionCard.tsx**\n\nA React component for sending cryptocurrency transactions on a blockchain network, such as Ethereum.\n\n**Key Features:**\n\n* Input form with recipient address and amount fields\n* Sends transaction with specified parameters using Web3.js\n* Updates UI with success or error messages upon transaction completion or failure\n* Displays history logs after successful transaction"}
{"code": "import { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getContractId, abi } from '@/utils/smartContract';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport useWeb3 from '@/hooks/Web3';\nimport FormInput from '@/components/ui/FormInput';\nimport FormButton from '@/components/ui/FormButton';\nimport showToast from '@/utils/showToast';\nimport Spacer from '@/components/ui/Spacer';\n\nconst SmartContract = () => {\n  const { magic } = useMagic();\n  const web3 = useWeb3();\n  const [contractAddress, setContractAddress] = useState<string | undefined>(undefined);\n  const [value, setValue] = useState<number | undefined>(undefined);\n  const [newValue, setNewValue] = useState<string>('');\n  const [copied, setCopied] = useState('Copy');", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A React component for interacting with a smart contract.\n\n**Functionality:** Displays a card UI with form inputs to input values, copy contract address, and submit changes to the contract using Magic and Web3 hooks.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx':\n\n**Purpose:** A React component for interacting with a smart contract, enabling users to view and update contract information using Magic and Web3 hooks.\n\n**Functionality:** Displays a card UI for inputting values, copying the contract address, submitting changes, and updating the stored value while ensuring sufficient funds are available before executing transactions on the blockchain."}
{"code": "  const [updating, setUpdating] = useState<boolean>(false);\n  const [hash, setHash] = useState<string>(\"\");\n\n  useEffect(() => {\n    const initialize = async () => {\n      const address = getContractId();\n      setContractAddress(address);\n\n      if (web3 && address) {\n        const contract = new web3.eth.Contract(abi, address);\n\n        try {\n          const value = await contract.methods.retrieve().call();\n          setValue(value);\n        } catch (error) {\n          console.error('Error retrieving value:', error);\n        }\n      }\n    };\n\n    initialize();\n  }, [web3, updating]);\n\n  const submit = async () => {\n    if (web3 && contractAddress) {\n      const contract = new web3.eth.Contract(abi, contractAddress);\n      setUpdating(true);\n\n      try {\n        if (!newValue) {\n          throw new Error('No value entered');\n        }\n\n        const accounts = await web3.eth.getAccounts();\n        const accountBalance = await web3.eth.getBalance(accounts[0]);\n\n        const gasPrice = await web3.eth.getGasPrice();", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** Initialize and manage interactions with a smart contract using Web3.\n\n**Functionality:**\n\n* Initialize the contract address and retrieve initial value.\n* Update the value in the contract when submitted (with gas price calculations).\n* Track an \"updating\" state to prevent multiple simultaneous updates.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx':\n\n**Purpose:** A React component for interacting with a smart contract, enabling users to view and update contract information using Magic and Web3 hooks.\n\n**Functionality:** Displays a card UI for inputting values, copying the contract address, submitting changes, and updating the stored value while ensuring sufficient funds are available before executing transactions on the blockchain."}
{"code": "        console.log(`Current gas price: ${gasPrice}`);\n\n        // Estimate gas limit\n        const gasLimit = await contract.methods.store(Number(newValue)).estimateGas({\n          from: accounts[0]\n        });\n        console.log(`Estimated gas limit: ${gasLimit}`);\n\n        // Check if account balance is sufficient\n        const transactionCost = BigInt(gasPrice) * BigInt(gasLimit);\n        if (BigInt(accountBalance) < transactionCost) {\n          throw new Error(`Insufficient funds for gas * price + value: have ${accountBalance}, need ${transactionCost}`);\n        }\n\n        // Send the transaction\n        await contract.methods.store(Number(newValue)).send({\n          from: accounts[0],\n          gasPrice: gasPrice,\n          gas: gasLimit\n        })\n          .on('transactionHash', (txHash) => {\n            setHash(txHash);\n            console.log('Transaction hash:', txHash);\n          })\n          .then((receipt) => {\n            showToast({ message: 'Value updated!', type: 'success' });", "explanation": "**Functionality Summary**\n\nThis block:\n\n1. Logs current gas price.\n2. Estimates gas limit for a transaction.\n3. Checks if account balance is sufficient to cover transaction cost.\n4. Sends the transaction with estimated gas limit and logs the transaction hash.\n\nIn essence, it ensures sufficient funds before executing a value update on the blockchain.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx':\n\n**Purpose:** A React component for interacting with a smart contract, enabling users to view and update contract information using Magic and Web3 hooks.\n\n**Functionality:** Displays a card UI for inputting values, copying the contract address, submitting changes, and updating the stored value while ensuring sufficient funds are available before executing transactions on the blockchain."}
{"code": "            console.log('Transaction receipt:', receipt);\n            setNewValue('');\n          })\n          .catch((error) => {\n            console.error('Error submitting value:', error);\n            showToast({ message: error.message, type: 'error' });\n          });\n\n        setUpdating(false);\n        setValue(await contract.methods.retrieve().call());\n      } catch (error: any) {\n        showToast({ message: error.message, type: 'error' });\n        console.error('Error submitting value:', error);\n        setUpdating(false);\n      }\n    }\n  };\n\n  const copy = useCallback(() => {\n    if (contractAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(contractAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, contractAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"Wallet\">Smart Contract</CardHeader>\n      <CardLabel\n        leftHeader=\"Contract Address\"", "explanation": "Here is a concise summary:\n\nThis block:\n\n* Handles submitting values to a smart contract\n* Logs transaction receipts and errors\n* Updates UI state (e.g., updating, copied value)\n* Allows copying of contract address with a toast notification", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx':\n\n**Purpose:** A React component for interacting with a smart contract, enabling users to view and update contract information using Magic and Web3 hooks.\n\n**Functionality:** Displays a card UI for inputting values, copying the contract address, submitting changes, and updating the stored value while ensuring sufficient funds are available before executing transactions on the blockchain."}
{"code": "        rightAction={!contractAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>}\n      />\n      <div className=\"code\">{contractAddress}</div>\n      <Divider />\n      <div>\n        <div>\n          <strong>Stored Value: </strong>{value !== undefined ? value.toString() : \"...loading\"}\n        </div>\n        <Spacer size={20} />\n        <FormInput\n          type=\"number\"\n          value={newValue}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNewValue(e.target.value)}\n          placeholder=\"Enter new value\"\n        />\n        <FormButton onClick={submit} disabled={updating}>\n          {updating ? \"Updating value\" : \"Submit\"}\n        </FormButton>\n      </div>\n    </Card>\n  );\n};\n\nexport default SmartContract;\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Display smart contract information and allow user interaction.\n\n**Functionality:**\n\n* Show contract address with a copy button.\n* Display stored value (with loading indicator if not available).\n* Allow user to input new value through form input and submit button.\n* Update stored value when submission is successful.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx':\n\n**Purpose:** A React component for interacting with a smart contract, enabling users to view and update contract information using Magic and Web3 hooks.\n\n**Functionality:** Displays a card UI for inputting values, copying the contract address, submitting changes, and updating the stored value while ensuring sufficient funds are available before executing transactions on the blockchain."}
{"code": "import { useCallback, useEffect, useMemo, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport { logout } from '@/utils/common';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport useWeb3 from '@/hooks/Web3';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getNetworkName, getNetworkToken } from '@/utils/network';\n\nconst UserInfo = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const web3 = useWeb3();\n\n  const [balance, setBalance] = useState('...');\n  const [copied, setCopied] = useState('Copy');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const [publicAddress] = useState(localStorage.getItem('user'));\n\n  const getBalance = useCallback(async () => {\n    if (publicAddress && web3) {", "explanation": "**Summary:**\n\nThis block is a React component named `UserInfo` that displays user information, including balance and public address. It uses various hooks and utility functions to:\n\n* Retrieve user token and set it in local storage\n* Display user balance and refresh it periodically\n* Handle copy-to-clipboard functionality\n* Utilize Web3 and Magic.js libraries for authentication and network-related data\n\nThe component uses React's `useState` and `useCallback` hooks to manage state and memoize functions.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the `UserInfoCard` component:\n\n**Summary:** The `UserInfoCard` displays user information, including balance and public address, utilizing Web3 and Magic.js libraries for authentication and data retrieval. It updates and refreshes balance periodically, provides copy-to-clipboard functionality, and allows users to disconnect from Magic login on button click."}
{"code": "      const balance = await web3.eth.getBalance(publicAddress);\n      if (balance == BigInt(0)) {\n        setBalance('0');\n      } else {\n        setBalance(web3.utils.fromWei(balance, 'ether'));\n      }\n      console.log('BALANCE: ', balance);\n    }\n  }, [web3, publicAddress]);\n\n  const refresh = useCallback(async () => {\n    setIsRefreshing(true);\n    await getBalance();\n    setTimeout(() => {\n      setIsRefreshing(false);\n    }, 500);\n  }, [getBalance]);\n\n  useEffect(() => {\n    if (web3) {\n      refresh();\n    }\n  }, [web3, refresh]);\n\n  useEffect(() => {\n    setBalance('...');\n  }, [magic]);\n\n  const disconnect = useCallback(async () => {\n    if (magic) {\n      await logout(setToken, magic);\n    }\n  }, [magic, setToken]);\n\n  const copy = useCallback(() => {\n    if (publicAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(publicAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, publicAddress]);\n\n  return (\n    <Card>", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Update and display user's Ethereum balance.\n\n**Functionality:**\n\n* Retrieves and displays Ethereum balance using Web3 API.\n* Refreshes balance when Web3 connection changes or every 500ms when refreshing.\n* Sets initial balance to '...' while waiting for magic variable value. \n* Provides a copy-to-clipboard feature for public address.\n* Allows user to disconnect from Magic login on button click.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the `UserInfoCard` component:\n\n**Summary:** The `UserInfoCard` displays user information, including balance and public address, utilizing Web3 and Magic.js libraries for authentication and data retrieval. It updates and refreshes balance periodically, provides copy-to-clipboard functionality, and allows users to disconnect from Magic login on button click."}
{"code": "      <CardHeader id=\"Wallet\">Wallet</CardHeader>\n      <CardLabel leftHeader=\"Status\" rightAction={<div onClick={disconnect}>Disconnect</div>} isDisconnect />\n      <div className=\"flex-row\">\n        <div className=\"green-dot\" />\n        <div className=\"connected\">Connected to {getNetworkName()}</div>\n      </div>\n      <Divider />\n      <CardLabel leftHeader=\"Address\" rightAction={!publicAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>} />\n      <div className=\"code\">{publicAddress?.length == 0 ? 'Fetching address..' : publicAddress}</div>\n      <Divider />\n      <CardLabel\n        leftHeader=\"Balance\"\n        rightAction={\n          isRefreshing ? (\n            <div className=\"loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            <div onClick={refresh}>Refresh</div>\n          )\n        }\n      />\n      <div className=\"code\">\n        {balance.substring(0, 7)} {getNetworkToken()}\n      </div>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n", "explanation": "This block is a user information card that displays:\n\n* Wallet status (connected/disconnected)\n* Connected network\n* Public wallet address with option to copy\n* Current balance on the connected network with option to refresh", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the `UserInfoCard` component:\n\n**Summary:** The `UserInfoCard` displays user information, including balance and public address, utilizing Web3 and Magic.js libraries for authentication and data retrieval. It updates and refreshes balance periodically, provides copy-to-clipboard functionality, and allows users to disconnect from Magic login on button click."}
{"code": "import React, { useState } from 'react';\nimport Disconnect from '../wallet-methods/Disconnect';\nimport GetIdToken from '../wallet-methods/GetIdToken';\nimport GetMetadata from '../wallet-methods/GetMetadata';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { LoginMethod } from '@/utils/common';\n<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n<%-`import UpdateEmail from '../wallet-methods/UpdateEmail'`-%>\n<% }%>\n\nconst WalletMethods = ({ token, setToken }: LoginProps) => {\n  const [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n    localStorage.getItem('loginMethod') as LoginMethod,\n  );\n  return (\n    <Card>\n      <CardHeader id=\"methods\">User Methods</CardHeader>\n\t  <% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n\t  \t<%-`{loginMethod && loginMethod == 'EMAIL' && (\n\t\t\t<>", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** A React component that manages wallet methods, including authentication and metadata retrieval.\n\n**Functionality:** It allows users to select a login method (e.g., email OTP), displays user methods, and updates email information if \"EmailOTP\" login method is selected.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Purpose:** A React component displaying wallet methods.\n\n**Functionality:** Renders card components for various wallet functions, including updating email, retrieving ID token and metadata, and disconnecting."}
{"code": "\t\t\t\t<UpdateEmail />\n\t\t\t\t<Divider />\n\t\t\t</>\n\t\t)}`-%>\n\t  <% }%>\n      <GetIdToken />\n      <Divider />\n      <GetMetadata />\n      <Divider />\n      <Disconnect token={token} setToken={setToken} />\n    </Card>\n  );\n};\n\nexport default WalletMethods;\n", "explanation": "**Purpose:** A React component that displays wallet-related methods.\n\n**Functionality:** It renders a series of card components, each containing different wallet functions, including: \n\n1. `UpdateEmail` (update email functionality)\n2. `GetIdToken` (retrieve ID token)\n3. `GetMetadata` (retrieve metadata)\n4. `Disconnect` (disconnect from the token)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Purpose:** A React component displaying wallet methods.\n\n**Functionality:** Renders card components for various wallet functions, including updating email, retrieving ID token and metadata, and disconnecting."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { logout } from '@/utils/common';\nimport { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst Disconnect = ({ setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const disconnect = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      await logout(setToken, magic);\n      setDisabled(false);\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic, setToken]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={disconnect} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[115px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'disconnect()'\n        )}\n      </button>", "explanation": "**Summary**\n\nThis block is a React component that allows users to disconnect from a Magic provider, effectively logging out of an account. It renders a button with a \"Disconnect\" label that triggers a logout process when clicked, displaying a spinner animation while processing.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary**\n\nThe `Disconnect` component renders a button to log out of an account connected to a Magic provider, displaying a spinner animation during logout processing."}
{"code": "      <div className=\"wallet-method-desc\">Disconnects user from dApp.</div>\n    </div>\n  );\n};\n\nexport default Disconnect;\n", "explanation": "This block is a React component named \"Disconnect\" that displays a description of disconnecting a user from a decentralized application (dApp).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary**\n\nThe `Disconnect` component renders a button to log out of an account connected to a Magic provider, displaying a spinner animation during logout processing."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetIdToken = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getWalletType = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const idToken = await magic.user.getIdToken();\n      setDisabled(false);\n      console.log('ID Token: ' + idToken);\n      showToast({\n        message: 'Please check console for the ID Token Log',\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getWalletType} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[86px]\">\n            <Spinner />\n          </div>\n        ) : (", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Get an ID Token from a Magic user account.\n\n**Functionality:** A button that, when clicked, retrieves an ID Token using the `magic.user.getIdToken()` method and displays it in the console with a success message. It also shows a loading spinner while processing.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx':\n\n**Purpose:** Generates an ID Token for authentication, verifying user identity through Magic.\n\nThis code snippet retrieves and displays an ID Token via `magic.user.getIdToken()`, providing a proof of user identity."}
{"code": "          'getIdToken()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Generates a Decentralized Id Token which acts as a proof of authentication to resource servers.\n      </div>\n    </div>\n  );\n};\n\nexport default GetIdToken;\n", "explanation": "Here is a concise summary:\n\nThis block generates an \"Id Token\" for authentication purposes, acting as proof of user identity.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx':\n\n**Purpose:** Generates an ID Token for authentication, verifying user identity through Magic.\n\nThis code snippet retrieves and displays an ID Token via `magic.user.getIdToken()`, providing a proof of user identity."}
{"code": "import React, { useCallback, useState } from 'react';\nimport showToast from '@/utils/showToast';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetMetadata = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getMetadata = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      // Rehydrates the user session whenever getInfo is invoked\n      const userInfo = await magic.user.getInfo();\n      setDisabled(false);\n      showToast({\n        message: `Public Address: ${userInfo.publicAddress}`,\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getMetadata} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[220px]\">\n            <Spinner />\n          </div>", "explanation": "**Summary:**\n\nThis block is a React component named `GetMetadata`. It fetches user metadata from the Magic API when clicked, displaying a public address in a toast message upon success. If an error occurs, it logs the error and resets the disabled state. A spinner is displayed while fetching data.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary:** The `GetMetadata` React component fetches user metadata from Magic API on click, displaying a public address in a toast message upon success or logging errors and resetting state otherwise."}
{"code": "        ) : (\n          'getInfo()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">Retrieves information for the authenticated user.</div>\n    </div>\n  );\n};\n\nexport default GetMetadata;\n", "explanation": "A button component that retrieves user information when clicked, with a descriptive text below it.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary:** The `GetMetadata` React component fetches user metadata from Magic API on click, displaying a public address in a toast message upon success or logging errors and resetting state otherwise."}
{"code": "import React, { useCallback, useState } from 'react';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Spacer from '@/components/ui/Spacer';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\nimport FormInput from '@/components/ui/FormInput';\nimport showToast from '@/utils/showToast';\nimport { RPCError } from 'magic-sdk';\n\nconst UpdateEmail = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n\n  const updateEmail = useCallback(async () => {\n    if (!magic) return;\n    try {\n      if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n        setEmailError(true);\n        setDisabled(false);\n      } else {\n        setDisabled(true);\n        await magic.auth.updateEmailWithUI({ email, showUI: true });\n        showToast({ message: 'Email Updated!', type: 'success' });", "explanation": "**Summary**\n\nThis block is a React functional component named \"UpdateEmail\" that updates a user's email address using the Magic SDK. It allows users to input their new email, validates it, and then sends an update request to the Magic API. If successful, it displays a success toast notification.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\n**UpdateEmail Component**\n\nUpdates user's email address using Magic SDK when button clicked or input changes. Displays error message for invalid email input and success toast notification on successful update."}
{"code": "        setDisabled(false);\n        setEmail('');\n      }\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n      if (error instanceof RPCError) {\n        showToast({ message: error.message, type: 'error' });\n      } else {\n        showToast({ message: 'Update email failed', type: 'error' });\n      }\n    }\n  }, [magic, email]);\n\n  const handleEmailChange = (e: any) => {\n    setEmailError(false);\n    setEmail(e.target.value);\n  };\n\n  return (\n    <div className=\"wallet-method-container\">\n      <FormInput value={email} onChange={handleEmailChange} placeholder=\"New Email\" />\n      <button className=\"wallet-method\" onClick={updateEmail} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[76px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'updateEmail()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Initiates the update email flow that allows a user to change their email address.\n      </div>", "explanation": "Here is a summary of the purpose and functionality:\n\n**Purpose:** Update a user's email address.\n\n**Functionality:** A button updates a user's email when clicked, with error handling for RPC errors. The email can be changed via an input field, triggering an update when the input changes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\n**UpdateEmail Component**\n\nUpdates user's email address using Magic SDK when button clicked or input changes. Displays error message for invalid email input and success toast notification on successful update."}
{"code": "      {emailError ? (\n        <div className=\"mb-[-10px]\">\n          <Spacer size={20} />\n          <ErrorText>Enter a valid email!</ErrorText>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UpdateEmail;\n", "explanation": "**Purpose:** Displays an error message for invalid email input.\n\n**Functionality:** Conditionally renders a message below the email input field if the entered email is not valid, otherwise does nothing.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\n**UpdateEmail Component**\n\nUpdates user's email address using Magic SDK when button clicked or input changes. Displays error message for invalid email input and success toast notification on successful update."}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "**Summary:** A reusable `Card` component that wraps its child elements with a `<div>` element of class \"card\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `Card` component wraps its child elements in a `<div>` with the class \"card\", making it a reusable UI container for displaying content."}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A reusable React component for rendering a card header.\n\n**Functionality:** Displays an `<h1>` element with a customizable `id` attribute, containing child content passed as props.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/CardHeader.tsx':\n\n**Reusable Card Header Component**: A customizable React component that displays an `<h1>` element with an `id` attribute, containing child content passed as props."}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "**Summary:**\n\nThis React component (`CardLabel`) displays a card label with an optional header on the left and action button on the right, which can be customized based on its disconnect state.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `CardLabel` component displays a customizable card with a header on the left and an action button on the right."}
{"code": "import React from 'react';\nimport WalletMethods from '../magic/cards/WalletMethodsCard';\nimport SendTransaction from '../magic/cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from '@/components/magic/cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\nimport SmartContract from '../magic/cards/SmartContract';\nimport { isTestnet } from '@/utils/smartContract';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n        {isTestnet() && <SmartContract />}\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component that renders the dashboard page.\n\n**Functionality:** Displays various cards, including user info, send transaction, wallet methods, and smart contract (if on testnet), with navigation links at the bottom.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Dashboard.tsx':\n\n**Dashboard Component:** A React component that renders the dashboard page, featuring cards for user info, transactions, wallet methods, and smart contract details (on testnet), with navigation links at the bottom."}
{"code": "import classNames from 'classnames';\nimport Link from 'next/link';\n\nconst DevLinks = ({ primary = false, footer = false }: { primary?: boolean; footer?: boolean }) => (\n  <div className={`links ${footer ? 'footer-links' : ''}`}>\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://magic.link/docs/home/welcome\" target=\"_blank\" rel=\"noreferrer\">\n        Dev Docs\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://dashboard.magic.link/signup\" target=\"_blank\" rel=\"noreferrer\">\n        Dashboard\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://discord.gg/magiclabs\" target=\"_blank\" rel=\"noreferrer\">\n        Discord\n      </a>\n    </div>\n  </div>\n);\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A reusable React component for displaying a set of links with customizable styling.\n\n**Functionality:** Renders three links (Dev Docs, Dashboard, Discord) in a flexible layout, with optional primary and footer styles.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/DevLinks.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\nThe `DevLinks` component is a reusable React UI element that displays three customizable links (Dev Docs, Dashboard, Discord) in a flexible layout, with optional styling for primary and footer sections."}
{"code": "export default DevLinks;\n", "explanation": "This block exports a component named \"DevLinks\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/DevLinks.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\nThe `DevLinks` component is a reusable React UI element that displays three customizable links (Dev Docs, Dashboard, Discord) in a flexible layout, with optional styling for primary and footer sections."}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "A simple React component:\n\n**Purpose:** A reusable divider element.\n**Functionality:** Renders a basic HTML `<div>` with a CSS class \"divider\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Divider.tsx':\n\n\"A reusable Divider component that renders a simple HTML `<div>` with the 'divider' CSS class.\""}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "**Summary**\n\nThis is a reusable React component named `ErrorText`. Its purpose is to display error messages in a standardized way. It accepts children (content) as props and renders it within a div with class 'error'.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `ErrorText` component displays error messages in a standardized way, rendering child content within a div with class 'error'."}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "**Summary:** A reusable React button component with customizable child content, click event handler, and disable functionality.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary:** A reusable FormButton component that can be customized with user-defined content and functionality."}
{"code": "import React from 'react'\n\ninterface Props {\n  value?: string\n  type?: string\n  onChange: (e: any) => void\n  placeholder: string\n}\n\nconst FormInput = ({ value, type, onChange, placeholder }: Props) => {\n  return (\n    <input\n      type={type ?? 'text'}\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "**Summary:**\n\nA reusable React input form component that takes in a `value`, `type` (defaulting to text), `onChange` event, and `placeholder` as props, rendering an `<input>` element with these properties.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary:** A reusable React form input component that renders an `<input>` element based on provided `value`, `type`, `onChange`, and `placeholder` props."}
{"code": "import Image from 'next/image';\nimport Logo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <div className=\"flex flex-col gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <DevLinks />\n      <p className=\"text-sm font-semibold text-white\">Take a look at our <a href=\"https://github.com/magiclabs/make-magic-app/blob/master/scaffolds/nextjs-dedicated-wallet/template/README.md\" target='_blank' className=\"cursor-pointer text-[#6851ff]\">developer guide</a> to learn more about this template</p>\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "This block of code defines a reusable UI component called \"Header\". Its purpose is to display a logo, title text (\"Magic\"), and demo text, along with links to developer resources.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `Header` component displays a logo, title text (\"Magic\"), and demo text, accompanied by links to developer resources, making it a reusable UI element for dedicated wallet templates."}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Redirect users to the Magic dashboard for signup.\n\n**Functionality:** A React component that redirects users to a specific URL when clicked, displaying a branded logo, text, and an \"Info\" icon with no direct action.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx':\n\n**A React component that redirects users to the Magic dashboard for signup, displaying a branded logo, text, and an \"Info\" icon with no direct action. Requires an API key set in environment variables.**"}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "**Summary:** \n\nThis block prompts the user to set an API key in their environment variables, provides instructions on how to obtain it, and includes a button to trigger further action.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx':\n\n**A React component that redirects users to the Magic dashboard for signup, displaying a branded logo, text, and an \"Info\" icon with no direct action. Requires an API key set in environment variables.**"}
{"code": "import React from 'react'\n\nconst Spacer = ({ size }: { size: number }) => {\n  return <div style={{ height: `${size}px` }} />\n}\n\nexport default Spacer\n", "explanation": "**Summary**\n\nThis block defines a reusable React component called \"Spacer\" that renders an empty `div` element with a specified height, allowing for vertical spacing in a UI layout.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `Spacer` component is a reusable React element that adds vertical spacing by rendering an empty `div` with a specified height."}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "**Summary:**\n\nThis block is a React functional component named `Spinner` that renders an animated SVG loading indicator with a blue color scheme. It can be used to display a spinning animation while data is being loaded or processed.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `Spinner` component is a React functional component that renders an animated blue SVG loading indicator for displaying a spinning animation while data is being loaded or processed."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "This block is an SVG (Scalable Vector Graphics) component that renders a spinning animation, likely used as a loading indicator or progress spinner.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `Spinner` component is a React functional component that renders an animated blue SVG loading indicator for displaying a spinning animation while data is being loaded or processed."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "Here is a concise summary:\n\n**Component Name:** `TransactionHistory`\n\n**Purpose:** Displays a button that links to a blockchain transaction history explorer when clicked.\n\n**Functionality:** Retrieves the user's public address from local storage, generates a link to the explorer using the `getBlockExplorer` utility function, and renders an anchor tag with a button and icon.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\n**TransactionHistory Component**: A UI component that displays a clickable button leading to a blockchain transaction history explorer, retrieving user public address from local storage and generating explorer link using `getBlockExplorer` utility function."}
{"code": "import { getChainId, getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\n\nexport type Magic = MagicBase<OAuthExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n\n  useEffect(() => {\n    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        network: {\n          rpcUrl: getNetworkUrl(),\n          chainId: getChainId(),\n        },\n        extensions: [new OAuthExtension()],\n      });\n\n      setMagic(magic);\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n    };", "explanation": "Here is a concise summary:\n\n**Purpose:** Provides a Magic SDK instance with OAuth extension, initialized with a MAGIC API KEY from environment variables.\n\n**Functionality:**\n\n* Creates a Magic context using `createContext` and a provider component (`MagicProvider`) that wraps the app.\n* Initializes the Magic SDK instance with the provided API key and OAuth extension when rendered.\n* Exposes the Magic instance through the context, allowing it to be accessed via the `useMagic` hook.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx':\n\n**Summary:** Provides a Magic SDK instance with OAuth extension via a context, exposing it through the `useMagic` hook for app-wide access."}
{"code": "  }, [magic]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;", "explanation": "**Summary**\n\nThe `MagicProvider` block provides a context for magic functionality, allowing components to access and utilize it. It returns a `MagicContext.Provider` component with a `value` prop, wrapping the provided `children`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx':\n\n**Summary:** Provides a Magic SDK instance with OAuth extension via a context, exposing it through the `useMagic` hook for app-wide access."}
{"code": "import { Web3 } from 'web3';\nimport { useEffect, useState } from 'react';\nimport { useMagic } from './MagicProvider';\n\nconst useWeb3 = () => {\n  const { magic } = useMagic();\n  const [web3, setWeb3] = useState<Web3 | null>(null);\n\n  useEffect(() => {\n    if (magic) {\n      setWeb3(new Web3((magic as any).rpcProvider));\n    } else {\n      console.log('Magic is not initialized');\n    }\n  }, [magic]);\n\n  return web3;\n};\n\nexport default useWeb3;", "explanation": "Here is a concise summary:\n\nThis block, `useWeb3`, provides a React hook that initializes and returns a Web3 instance using an RPC provider from the MagicProvider. If the MagicProvider is initialized, it sets up the Web3 instance; otherwise, it logs a message indicating that Magic is not initialized.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/hooks/Web3.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**Web3 Hook**\n\nProvides a React hook (`useWeb3`) to initialize and return a Web3 instance using an RPC provider from MagicProvider, with fallback logging if Magic is not initialized."}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Define the main application component for Next.js apps.\n\n**Functionality:** Renders the specified `Component` with its associated `pageProps`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/pages/_app.tsx':\n\nDefines the main application component for Next.js apps, rendering a specific Component with its associated page props."}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "**Summary:**\n\nThis block is a Next.js document component that sets up the basic HTML structure for a web page, including language and scripting tags. It serves as a wrapper around the main content of the app.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary:** The `_document.tsx` file in this template is a Next.js document component that wraps the app's main content with basic HTML structure, including language and scripting tags."}
{"code": "import MagicProvider from '@/hooks/MagicProvider';\n\nimport { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from '@/components/magic/Login';\nimport Dashboard from '@/components/ui/Dashboard';\nimport MagicDashboardRedirect from '@/components/ui/MagicDashboardRedirect';\n\nexport default function Home() {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    setToken(localStorage.getItem('token') ?? '');\n  }, [setToken]);\n\n  return (\n    <MagicProvider>\n      <ToastContainer />\n      {process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n        token.length > 0 ? (\n          <Dashboard token={token} setToken={setToken} />\n        ) : (\n          <Login token={token} setToken={setToken} />\n        )\n      ) : (\n        <MagicDashboardRedirect />\n      )}\n    </MagicProvider>\n  );\n}\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** This code defines the Home page component for a React application.\n\n**Functionality:**\n\n* Checks if a Magic API token exists in local storage.\n* Renders either:\n\t+ A login form (if no token is present).\n\t+ A dashboard with access to account features (if a valid token is present).\n\t+ A redirect to the Magic Dashboard (if the NEXT_PUBLIC_MAGIC_API_KEY environment variable is not set).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/pages/index.tsx':\n\n**Home Page Component:**\n\nThe code defines the Home page component for a React application, rendering either a login form or a dashboard with account features depending on the presence and validity of a Magic API token in local storage. If no token is present or the NEXT_PUBLIC_MAGIC_API_KEY environment variable is not set, it redirects to the Magic Dashboard."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** This block sets up a website's styles using Tailwind CSS.\n\n**Functionality:** It imports fonts, configures color schemes (light/dark), and applies design elements such as typography, spacing, and colors to HTML elements like the body, nav bar, and specific elements (.active, .nft).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**This block defines CSS styles for various HTML elements, including:**\n\n* Spacing and layout for a list of NFTs\n* Styles for a container element with responsive top margin\n* Customizations for a dropdown menu and its options\n* Animations and effects for rotating an element\n\nIn essence, this block sets up visual styling rules for a web application or website.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px] bg-no-repeat;\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 transition-[0.1s] text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {", "explanation": "Here is a concise summary:\n\nThis block defines CSS styles for various UI components, including:\n\n* Global text and layout settings\n* Styles for the home page (flexbox layout)\n* Styles for the login page (background color and layout)\n* Grid layout for login methods\n* Styles for individual login method grid items\n* Styles for a login button (including hover and active states)\n\nNote: This appears to be written in Tailwind CSS syntax.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": "  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {\n  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;", "explanation": "**Purpose:** This block defines a set of styles for various HTML elements using CSS.\n\n**Functionality:** It sets up layout, spacing, typography, and hover/active effects for:\n\n* Links\n* Link dividers\n* Footer links\n* Wallet method containers and buttons\n* Customizing display on different screen sizes", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": "}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {\n  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n", "explanation": "This block appears to be a CSS code snippet, defining styles for a form layout. The functionality includes:\n\n* A wallet method description text style\n* A form input field with placeholder text and styling\n* A submit button with hover and active effects\n* A loading animation container with spinning effect.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": "@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];", "explanation": "Here is a concise summary:\n\n**Keyframes:** Animates rotation from 0 to 360 degrees.\n\n**Card Container:**\n\n* Styles a container with a fixed width, flexbox layout, shadow, and borders.\n* Applies styles to its child elements (header, label container, etc.).\n\n**Other Elements:**\n\n* `.toast`: A notification toast with a fixed position and style.\n* `.action-button` and `.disconnect-button`: Styled buttons with hover and active effects.\n* `.code`: A styled code snippet display.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": "  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {\n  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Styles**\n\nThis block contains a collection of CSS styles (SCSS code) that define various visual layouts and designs for a web application.\n\n**Key Styles**\n\n* Define layout classes for error messages, dividers, flex containers, and more\n* Style an app header container with background image and shadow effects\n* Design a redirect container and card with background images and styling\n* Apply styles to links (all: unset)\n\nOverall, this block provides a set of reusable CSS styles that can be applied throughout the application to maintain consistency in design and layout.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": "  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {\n  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Block:** CSS styles for a button component.\n\n**Purpose:** Define visual styles for buttons, including colors, sizes, shapes, and hover/active effects.\n\n**Functionality:** Styles are applied conditionally based on states (enabled/disabled) and interactions (hover/active).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css':\n\n**Purpose:** This CSS block sets up visual styling rules for a web application or website, using Tailwind CSS syntax.\n\n**Functionality:** It defines styles for various UI components, including layout, spacing, typography, colors, and effects for elements such as links, buttons, forms, cards, toasts, and more. The styles are designed to be reusable throughout the application, maintaining consistency in design and layout."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveUserInfo = (token: string, loginMethod: LoginMethod, userAddress: string) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n  localStorage.setItem('user', userAddress);\n};\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Provides functionality for user authentication, logout, and saving user information.\n\n**Functionality:**\n\n* `logout`: Logs out user with Magic authentication and clears local storage.\n* `saveUserInfo`: Saves user token, login method, and address to local storage.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/utils/common.ts':\n\nThis file provides utility functions for user authentication and management in a Next.js application, including logout functionality and saving user information locally."}
{"code": "export enum Network {\n  POLYGON_AMOY = 'polygon-amoy',\n  POLYGON = 'polygon',\n  ETHEREUM_SEPOLIA = 'ethereum-sepolia',\n  ETHEREUM = 'ethereum',\n  ETHERLINK = 'etherlink',\n  ETHERLINK_TESTNET = 'etherlink-testnet',\n  ZKSYNC = 'zksync',\n  ZKSYNC_SEPOLIA = 'zksync-sepolia',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'https://polygon-rpc.com/';\n    case Network.POLYGON_AMOY:\n      return 'https://rpc-amoy.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'https://eth-sepolia.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    case Network.ETHEREUM:\n      return 'https://eth-mainnet.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    case Network.ETHERLINK:\n      return 'https://node.mainnet.etherlink.com';\n    case Network.ETHERLINK_TESTNET:\n      return 'https://node.ghostnet.etherlink.com';\n    case Network.ZKSYNC:\n      return 'https://mainnet.era.zksync.io';\n    case Network.ZKSYNC_SEPOLIA:", "explanation": "Here is a concise summary:\n\n**Purpose:** Define a set of blockchain networks and provide functions to retrieve their corresponding URLs.\n\n**Functionality:** The `Network` enum lists various blockchain networks, and the `getNetworkUrl()` function uses environment variables to return the URL for each network.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts':\n\n**Purpose:** This module provides utility functions for interacting with various blockchain networks.\n\n**Functionality:** It exports functions to retrieve blockchain-related data, such as RPC URLs, chain IDs, token symbols, faucet URLs, block names, and block explorer URLs, based on environment variables and predefined cases."}
{"code": "      return 'https://zksync-era-sepolia.blockpi.network/v1/rpc/public';\n    default:\n      throw new Error('Network not supported');\n  }\n};\n\nexport const getChainId = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 137;\n    case Network.POLYGON_AMOY:\n      return 80002;\n    case Network.ETHEREUM_SEPOLIA:\n      return 11155111;\n    case Network.ZKSYNC:\n      return 324;\n    case Network.ZKSYNC_SEPOLIA:\n      return 300;\n    case Network.ETHEREUM:\n      return 1;\n    case Network.ETHERLINK:\n      return 42793;\n    case Network.ETHERLINK_TESTNET:\n      return 128123;\n  }\n};\n\nexport const getNetworkToken = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n    case Network.POLYGON:\n      return 'MATIC';\n    case Network.ETHEREUM:\n    case Network.ETHEREUM_SEPOLIA:\n    case Network.ZKSYNC:\n    case Network.ZKSYNC_SEPOLIA:\n      return 'ETH';\n    case Network.ETHERLINK:\n    case Network.ETHERLINK_TESTNET:\n      return 'XTZ';\n  }\n};\n", "explanation": "Here is a concise summary:\n\nThis block exports three functions that provide blockchain-related data based on environment variables:\n\n1. `getBlockApiUrl()`: Returns the RPC URL for the blockchain network.\n2. `getChainId()`: Returns the chain ID for the specified blockchain network.\n3. `getNetworkToken()`: Returns the token symbol (e.g. \"MATIC\", \"ETH\", or \"XTZ\") for the specified blockchain network.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts':\n\n**Purpose:** This module provides utility functions for interacting with various blockchain networks.\n\n**Functionality:** It exports functions to retrieve blockchain-related data, such as RPC URLs, chain IDs, token symbols, faucet URLs, block names, and block explorer URLs, based on environment variables and predefined cases."}
{"code": "export const getFaucetUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return 'https://faucet.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'https://sepoliafaucet.com/';\n    case Network.ETHERLINK_TESTNET:\n      return 'https://faucet.etherlink.com/';\n    case Network.ZKSYNC_SEPOLIA:\n      return 'https://faucet.quicknode.com/ethereum/sepolia';\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'Polygon (Mainnet)';\n    case Network.POLYGON_AMOY:\n      return 'Polygon (Amoy)';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'Ethereum (Sepolia)';\n    case Network.ETHEREUM:\n      return 'Ethereum (Mainnet)';\n    case Network.ETHERLINK:\n      return 'Etherlink (Mainnet)';\n    case Network.ETHERLINK_TESTNET:\n      return 'Etherlink (Testnet)';\n    case Network.ZKSYNC:\n      return 'zkSync (Mainnet)';\n    case Network.ZKSYNC_SEPOLIA:", "explanation": "Here is a concise summary:\n\n**Purpose:** Returns the URL for a blockchain faucet based on the network environment.\n\n**Functionality:** A function that takes no arguments, checks the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable, and returns the corresponding faucet URL or network name based on a series of predefined cases.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts':\n\n**Purpose:** This module provides utility functions for interacting with various blockchain networks.\n\n**Functionality:** It exports functions to retrieve blockchain-related data, such as RPC URLs, chain IDs, token symbols, faucet URLs, block names, and block explorer URLs, based on environment variables and predefined cases."}
{"code": "      return 'zkSync (Sepolia)';\n  }\n};\n\nexport const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return `https://polygonscan.com/address/${address}`;\n    case Network.POLYGON_AMOY:\n      return `https://www.oklink.com/amoy/address/${address}`;\n    case Network.ETHEREUM:\n      return `https://etherscan.io/address/${address}`;\n    case Network.ETHEREUM_SEPOLIA:\n      return `https://sepolia.etherscan.io/address/${address}`;\n    case Network.ETHERLINK:\n      return `https://explorer.etherlink.com/address/${address}`;\n    case Network.ETHERLINK_TESTNET:\n      return `https://testnet-explorer.etherlink.com/address/${address}`;\n    case Network.ZKSYNC:\n      return `https://explorer.zksync.io/address/${address}`;\n    case Network.ZKSYNC_SEPOLIA:\n      return `https://sepolia.explorer.zksync.io/address/${address}`;\n  }\n};\n\nexport const isEip1559Supported = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Returns a string with the name of a blockchain network or generates a URL for a block explorer.\n\n**Functionality:**\n\n* `getBlockName`: returns a string with the name of a specific blockchain network (e.g. \"zkSync (Sepolia)\").\n* `getBlockExplorer`: returns a URL for a block explorer based on the specified blockchain network.\n* `isEip1559Supported`: checks whether EIP-1559 is supported on the current blockchain network.\n\nNote: These functions appear to be part of a larger application or library that interacts with various blockchain networks.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts':\n\n**Purpose:** This module provides utility functions for interacting with various blockchain networks.\n\n**Functionality:** It exports functions to retrieve blockchain-related data, such as RPC URLs, chain IDs, token symbols, faucet URLs, block names, and block explorer URLs, based on environment variables and predefined cases."}
{"code": "    case Network.ETHEREUM_SEPOLIA:\n    case Network.ETHEREUM:\n      return true;\n    case Network.ZKSYNC:\n    case Network.ZKSYNC_SEPOLIA:\n    case Network.POLYGON:\n    case Network.POLYGON_AMOY:\n    case Network.ETHERLINK:\n    case Network.ETHERLINK_TESTNET:\n      return false;\n  }\n};\n", "explanation": "**Conditional Functionality**\n\nThis block checks if a network is Ethereum (mainnet or testnet) or Seppolia, returning `true` for those cases, and `false` otherwise.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts':\n\n**Purpose:** This module provides utility functions for interacting with various blockchain networks.\n\n**Functionality:** It exports functions to retrieve blockchain-related data, such as RPC URLs, chain IDs, token symbols, faucet URLs, block names, and block explorer URLs, based on environment variables and predefined cases."}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "**Purpose:** To display a customizable toast notification.\n\n**Functionality:** The `showToast` function takes in an object with a `message` and optional `type` (defaulting to `'default'`) properties. It then uses the provided type to determine which type of toast notification to show, with options including `success`, `error`, `info`, and `warning`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\nThe `showToast` function displays a customizable toast notification with various themes (success, error, info, warning) at the top-center of the screen."}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "**Purpose:** Display a toast notification.\n**Functionality:** Shows an alert message at the top-center of the screen, customizable with options such as auto-close, theme, and draggable functionality.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\nThe `showToast` function displays a customizable toast notification with various themes (success, error, info, warning) at the top-center of the screen."}
{"code": "import { Network } from \"./network\";\n\nexport const getContractId = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return '0xabBb65DD49c18e1ee504C92a83f8f60eC0726e1b';\n    case Network.ETHEREUM_SEPOLIA:\n      return '0xa5bf55cC9afF6E0Ab59D8Fdd835c63983F124d03';\n    case Network.ZKSYNC_SEPOLIA:\n      return '0xDA39B00b285B6344E420Fe6F4FC0Aa4Ee5A4312d';\n  }\n};\n\nexport const isTestnet = (): boolean => {\n  const testnets: Network[] = [Network.POLYGON_AMOY, Network.ETHEREUM_SEPOLIA, Network.ZKSYNC_SEPOLIA];\n  const currentNetwork = process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK as Network | undefined;\n\n  if (currentNetwork && testnets.includes(currentNetwork)) {\n    return true;\n  }\n  return false;\n};\n\nexport const getHashLink = (hash: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return `https://www.oklink.com/amoy/tx/${hash}`;\n    case Network.ETHEREUM_SEPOLIA:", "explanation": "Here is a concise summary:\n\nThis code block provides three functions for interacting with blockchain networks.\n\n1. **getContractId**: Returns a contract ID based on the current blockchain network (e.g., Polygon Amony, Ethereum Sepolia, or ZkSync Sepolia).\n2. **isTestnet**: Checks if the current network is a testnet (true) or not (false), using an array of known testnets.\n3. **getHashLink**: Returns a link to view a transaction hash on a blockchain explorer (e.g., Oklink for Polygon Amony, etc.) based on the current network.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/smartContract.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the code block:\n\nThis file (`smartContract.ts`) provides utility functions for interacting with blockchain networks, including:\n\n* Generating contract IDs based on network type\n* Checking if the current network is a testnet\n* Creating links to view Ethereum transaction hashes on various explorers (e.g., Etherscan, ZkSync explorer)\n\nIt also exports an ABI definition for interacting with a contract."}
{"code": "      return `https://sepolia.etherscan.io/tx/${hash}`;\n    case Network.ZKSYNC_SEPOLIA:\n      return `https://sepolia.explorer.zksync.io/tx/${hash}`;\n  }\n};\n\nexport const abi = [\n  {\n    \"inputs\": [],\n    \"name\": \"retrieve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"num\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"store\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];", "explanation": "Here is a concise summary:\n\n**Purpose:** Function to generate Ethereum transaction links based on network type.\n\n**Functionality:** Returns a URL for an Ethereum transaction link, depending on the specified network (e.g., Etherscan or ZkSync explorer). \n\n**Additional**: An ABI (Application Binary Interface) definition for interacting with a contract is also exported.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/smartContract.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the code block:\n\nThis file (`smartContract.ts`) provides utility functions for interacting with blockchain networks, including:\n\n* Generating contract IDs based on network type\n* Checking if the current network is a testnet\n* Creating links to view Ethereum transaction hashes on various explorers (e.g., Etherscan, ZkSync explorer)\n\nIt also exports an ABI definition for interacting with a contract."}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type TxnParams = {\n  from: string | null;\n  to: string | null;\n  value: string;\n  maxFeePerGas?: bigint;\n  maxPriorityFeePerGas?: bigint;\n  gasPrice?: string;\n};\n\n\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Defines data types and imports for a React component, specifically for handling login and transaction parameters.\n\n**Functionality:** \n\n* Defines `LoginProps` type with `token` and `setToken` properties.\n* Defines `TxnParams` type with parameters for a transaction.\n* Imports `Dispatch` and `SetStateAction` from React.\n* Re-exports the `Magic` component.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file:\n\n**Summary:** This TypeScript file defines data types and imports for handling login and transaction parameters in a Next.js React application, including `LoginProps`, `TxnParams`, and imports from React."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "This block is a Tailwind CSS configuration file.\n\n**Purpose:** Defines how Tailwind should look for and process HTML content in the project.\n\n**Functionality:** Scans specified directories for HTML files, applies styles and classes as defined in the `theme` section, and enables plugins if listed.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/tailwind.config.js':\n\n**Summary:** Defines Tailwind CSS configuration for the project, scanning specified directories for HTML files and applying styles based on the `theme` section."}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "This block configures a TypeScript compiler setup with various options, including:\n\n* Targeting ES5 syntax\n* Enabling JavaScript and certain libraries\n* Strict compilation and file name casing rules\n* Outputting no compiled code (likely for development purposes)\n* Resolving modules using Node.js semantics and JSON modules\n* Excluding the `node_modules` directory from compilation.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file:\n\n`tsconfig.json`: Configures TypeScript compiler to target ES5, enable JavaScript libraries, enforce strict rules, and exclude `node_modules`."}
{"code": "import { Flags } from '../../core/flags';\nimport BaseScaffold, { ExecaCommand } from '../../core/types/BaseScaffold';\nimport { AuthTypePrompt, NpmClientPrompt, PublishableApiKeyPrompt } from '../prompts';\n\nexport type Data = NpmClientPrompt.Data & PublishableApiKeyPrompt.Data & AuthTypePrompt.Data;\n\nexport const flags: Flags<Partial<Data>> = {\n  ...NpmClientPrompt.flags,\n  ...PublishableApiKeyPrompt.flags,\n  ...AuthTypePrompt.flags,\n};\n\nexport const definition = {\n  shortDescription: 'A dedicated wallet scaffold for Next.js using Flow',\n  featured: true,\n};\n\nexport default class FlowDedicatedScaffold extends BaseScaffold {\n  public templateName = 'nextjs-flow-dedicated-wallet';\n\n  private data: Data;\n\n  public installationCommand: ExecaCommand = { command: 'npm', args: ['install'] };\n\n  public startCommand: ExecaCommand = { command: 'npm', args: ['run', 'dev'] };\n\n  public source: string | string[] = [\n    './public/favicon.ico',\n    './public/logo.svg',\n    './public/info.svg',\n    './public/link.svg',", "explanation": "Here is a concise summary:\n\n**Purpose:** A scaffold for creating a dedicated wallet using Next.js with Flow.\n\n**Functionality:** Generates a template for a dedicated wallet, prompts user for authentication and NPM client details, and provides commands for installation and development.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `scaffold.ts` file creates a Next.js template for a dedicated wallet using Flow, guiding users through authentication and setup, while also updating login methods data and dependencies in a separate context."}
{"code": "    './public/link_white.svg',\n    './public/redirect_bg.png',\n    './public/login_bg.png',\n    './.env.example',\n    './.eslintrc.json',\n    './.gitignore',\n    './package.json',\n    './postcss.config.js',\n    './tailwind.config.js',\n    './tsconfig.json',\n    './README.md',\n    './src/components/ui',\n    './src/components/magic/cards',\n    './src/components/magic/wallet-methods/Disconnect.tsx',\n    './src/components/magic/wallet-methods/GetIdToken.tsx',\n    './src/components/magic/wallet-methods/GetMetadata.tsx',\n    './src/components/magic/Dashboard.tsx',\n    './src/components/magic/DevLinks.tsx',\n    './src/components/magic/Header.tsx',\n    './src/components/magic/Login.tsx',\n    './src/components/magic/MagicProvider.tsx',\n    './src/components/magic/MagicDashboardRedirect.tsx',\n    './src/pages',\n    './src/styles',\n    './src/utils',\n  ];\n\n  constructor(data: Data) {\n    super();\n    this.data = data;\n\n    if (typeof this.source !== 'string') {", "explanation": "Here is a summary of the purpose and functionality:\n\n**This block appears to be a list of file paths**, likely used in a development or build context, such as a project's source files, configurations, and dependencies.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `scaffold.ts` file creates a Next.js template for a dedicated wallet using Flow, guiding users through authentication and setup, while also updating login methods data and dependencies in a separate context."}
{"code": "      this.data.loginMethods = this.data.loginMethods.map((authType) =>\n        AuthTypePrompt.mapInputToLoginMethods(authType),\n      );\n      this.data.loginMethods.forEach((authType) => {\n        (this.source as string[]).push(`./src/components/magic/auth/${authType.replaceAll(' ', '')}.tsx`);\n        if (\n          authType === 'Discord' ||\n          authType === 'Facebook' ||\n          authType === 'Github' ||\n          authType === 'Google' ||\n          authType === 'Twitch' ||\n          authType === 'Twitter'\n        ) {\n          (this.source as string[]).push(`./public/social/${authType.replaceAll(' ', '')}.svg`);\n        }\n        if (authType.replaceAll(' ', '') === 'EmailOTP') {\n          (this.source as string[]).push('./src/components/magic/wallet-methods/UpdateEmail.tsx');\n        }\n      });\n    }\n  }\n}\n", "explanation": "**Purpose:** Update login methods data and source dependencies.\n\n**Functionality:** Maps through existing login methods, updates them with new values using `AuthTypePrompt`, and pushes corresponding component and asset files to a source array.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `scaffold.ts` file creates a Next.js template for a dedicated wallet using Flow, guiding users through authentication and setup, while also updating login methods data and dependencies in a separate context."}
{"code": "# Publishable API Key found in the Magic Dashboard\nNEXT_PUBLIC_MAGIC_API_KEY=<%= publishableApiKey %>\n\n# The RPC URL for the blockchain network\nNEXT_PUBLIC_BLOCKCHAIN_NETWORK=<%= network %>", "explanation": "Here is a concise summary:\n\n**Purpose:** Set environment variables for a Next.js project.\n\n**Functionality:** Exposes API key and blockchain network settings as public variables, allowing them to be accessed globally in the project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/.env.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/.env.example':\n\n**Summary:** Defines environment variables for a Next.js project, exposing API keys and blockchain network settings publicly."}
{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block is a configuration for a code formatter or linter, specifying:\n\n* It extends the \"next/core-web-vitals\" ruleset\n* Enforces single quotes for strings (\"quotes\")\n* Requires indentation with 2 spaces per level (\"indent\")", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/.eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the `.eslintrc.json` file:\n\nConfigures ESLint to extend \"next/core-web-vitals\" rules, enforce single quotes for strings, and require 2-space indentation."}
{"code": "This scaffold is meant to help you bootstrap your own projects with Magic's [Dedicated Wallet](https://magic.link/docs/auth/overview). Magic is a developer SDK that integrates with your application to enable passwordless Web3 onboarding.\n\nThe folder structure of this scaffold is designed to encapsulate all things Magic into one place so you can easily add or remove components and functionality. For example, all Magic-specific components are in the `src/components/magic` directory while generic UI components are in the `src/components/ui` directory.\n\n## Next.js\n\nThis is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n### Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n", "explanation": "**Summary**\n\nThis is a Next.js project scaffold that helps developers quickly start a new project using Magic's Dedicated Wallet SDK for passwordless Web3 onboarding, providing an organized folder structure for easy component management.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/README.md", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'scaffolds/nextjs-flow-dedicated-wallet/template/README.md' file:\n\n**Project Overview**\n\nThis Next.js project scaffold enables passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, providing an organized folder structure for easy component management."}
{"code": "You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n### Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Guide for editing pages and using API routes in a Next.js project.\n\n**Functionality:**\n\n* Edit `pages/index.tsx` file to update page content\n* Access API endpoints at [http://localhost:3000/api/hello]\n* Use `pages/api` directory as API route mapping", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/README.md", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'scaffolds/nextjs-flow-dedicated-wallet/template/README.md' file:\n\n**Project Overview**\n\nThis Next.js project scaffold enables passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, providing an organized folder structure for easy component management."}
{"code": "You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n### Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n", "explanation": "**Summary:** \n\nThis block promotes the Vercel Platform for deploying Next.js applications, encouraging users to check out the official GitHub repository and contribute feedback or code.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/README.md", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'scaffolds/nextjs-flow-dedicated-wallet/template/README.md' file:\n\n**Project Overview**\n\nThis Next.js project scaffold enables passwordless Web3 onboarding using Magic's Dedicated Wallet SDK, providing an organized folder structure for easy component management."}
{"code": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n}\n\nmodule.exports = nextConfig\n", "explanation": "This block is a Next.js configuration file that enables strict mode for React applications in development.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/next.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe `next.config.js` file enables strict mode for React apps during development in a dedicated wallet setup using Next.js and Flow."}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "This block configures a set of CSS preprocessors for use in a JavaScript project, specifically:\n\n* `tailwindcss`: enables TailwindCSS framework\n* `autoprefixer`: adds browser prefixes for CSS properties \n\nIt exports this configuration as a module, making it available for use elsewhere in the project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/postcss.config.js':\n\nConfigures PostCSS with Tailwind CSS and Autoprefixer for CSS preprocessing and browser compatibility."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) image, specifically a icon of a calendar or planner, used for visual representation in digital interfaces.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`info.svg`: A Scalable Vector Graphics (SVG) icon of a calendar/planner, used for visual representation."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG (Scalable Vector Graphics) element, likely used for graphical representation or icon display in a digital interface.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\nThis file is an SVG icon, likely used for graphical representation in a digital interface, containing path-based graphical code."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block appears to be a SVG path, which is a graphical code used to draw shapes and icons on a digital canvas. The specific purpose and functionality of this block cannot be determined without further context or information about how it is being used.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\nThis file is an SVG icon, likely used for graphical representation in a digital interface, containing path-based graphical code."}
{"code": "</svg>\n", "explanation": "This block contains SVG (Scalable Vector Graphics) code.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\nThis file is an SVG icon, likely used for graphical representation in a digital interface, containing path-based graphical code."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block appears to be an SVG (Scalable Vector Graphics) code snippet, likely used for icon or graphic representation purposes within a web page or application.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file contains an SVG code for a white link icon, used to visually represent links on a web page or application."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block appears to be an SVG path element, which is a graphical representation of a shape or icon. Its purpose is to draw a specific graphic with a white fill color (#FFFFFF), but its exact functionality and intended use cannot be determined without more context.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file contains an SVG code for a white link icon, used to visually represent links on a web page or application."}
{"code": "</svg>", "explanation": "This is an HTML tag closing an SVG (Scalable Vector Graphics) element. It denotes the end of an SVG diagram or graphic within a webpage.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file contains an SVG code for a white link icon, used to visually represent links on a web page or application."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "This block is an SVG (Scalable Vector Graphics) code that represents a logo or icon with two interlocking circles, typically used as a favicon.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'logo.svg' file in `scaffolds/nextjs-flow-dedicated-wallet/template/public` is an SVG code that represents a white interlocking circles logo, typically used as a favicon."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This block appears to be an SVG (Scalable Vector Graphics) code snippet, which is used to render a graphical icon or shape. Specifically, it defines a path with a white fill color, likely intended for display purposes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'logo.svg' file in `scaffolds/nextjs-flow-dedicated-wallet/template/public` is an SVG code that represents a white interlocking circles logo, typically used as a favicon."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 127.14 96.36\"><defs><style>.cls-1{fill:#5865f2;}</style></defs><g id=\"\u56fe\u5c42_2\" data-name=\"\u56fe\u5c42 2\"><g id=\"Discord_Logos\" data-name=\"Discord Logos\"><g id=\"Discord_Logo_-_Large_-_White\" data-name=\"Discord Logo - Large - White\"><path class=\"cls-1\" d=\"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z\"/></g></g></g></svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) image, specifically a Discord logo in blue color.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Discord.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "The file 'Discord.svg' contains a blue-colored Discord logo designed using Scalable Vector Graphics (SVG)."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#039be5\" d=\"M24 5A19 19 0 1 0 24 43A19 19 0 1 0 24 5Z\"/><path fill=\"#fff\" d=\"M26.572,29.036h4.917l0.772-4.995h-5.69v-2.73c0-2.075,0.678-3.915,2.619-3.915h3.119v-4.359c-0.548-0.074-1.707-0.236-3.897-0.236c-4.573,0-7.254,2.415-7.254,7.917v3.323h-4.701v4.995h4.701v13.729C22.089,42.905,23.032,43,24,43c0.875,0,1.729-0.08,2.572-0.194V29.036z\"/></svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) icon that appears to be a circular shape with a blue fill (#039be5) and white lines. Its purpose is likely decorative or illustrative, possibly representing a globe or other round object.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Facebook.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe \"Facebook.svg\" file is an SVG icon that represents a circular shape with a blue fill and white lines, likely used decoratively or illustratively."}
{"code": "<svg width=\"98\" height=\"96\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z\" fill=\"#24292f\"/></svg>", "explanation": "This block is an SVG icon with a simple, grayscale image of a cloud or a stylized shape, likely used as a decorative element in digital design.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Github.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`Github.svg`: A grayscale, stylized cloud icon for decorative use."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"705.6\" height=\"720\" viewBox=\"0 0 186.69 190.5\" xmlns:v=\"https://vecta.io/nano\"><g transform=\"translate(1184.583 765.171)\"><path clip-path=\"none\" mask=\"none\" d=\"M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z\" fill=\"#4285f4\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z\" fill=\"#34a853\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z\" fill=\"#fbbc05\"/><path d=\"M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z\" fill=\"#ea4335\" clip-path=\"none\" mask=\"none\"/></g></svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) image, containing multiple colored shapes. The purpose of this code is to render a graphical representation on a web page or other digital medium.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Google.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Google.svg**: A scalable vector graphics (SVG) file representing Google's logo, composed of colored shapes."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.6, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 2400 2800\" style=\"enable-background:new 0 0 2400 2800;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#FFFFFF;}\n\t.st1{fill:#9146FF;}\n</style>\n<title>Asset 2</title>\n<g>\n\t<polygon class=\"st0\" points=\"2200,1300 1800,1700 1400,1700 1050,2050 1050,1700 600,1700 600,200 2200,200 \t\"/>\n\t<g>\n\t\t<g id=\"Layer_1-2\">\n\t\t\t<path class=\"st1\" d=\"M500,0L0,500v1800h600v500l500-500h400l900-900V0H500z M2200,1300l-400,400h-400l-350,350v-350H600V200h1600\n\t\t\t\tV1300z\"/>\n\t\t\t<rect x=\"1700\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t\t<rect x=\"1150\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) code snippet, which represents a graphical image with two-colored shapes and lines. The purpose of this code is to create a visual asset for use in digital media, likely as a background or icon.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitch.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe `Twitch.svg` file is an SVG code snippet that creates a visual asset with two-colored shapes and lines, intended for use as a background or icon."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 248 204\" style=\"enable-background:new 0 0 248 204;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#1D9BF0;}\n</style>\n<g id=\"Logo_1_\">\n\t<path id=\"white_background\" class=\"st0\" d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26", "explanation": "This block is an SVG (Scalable Vector Graphics) file that defines a logo graphic with a blue background and white shape. It uses XML tags and styles to render the image on a webpage or other compatible platform.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitter.svg':\n\nThis is an SVG logo graphic with a blue background and white shape, used to render a design within HTML documents."}
{"code": "\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"/>\n</g>\n</svg>\n", "explanation": "This block appears to be a fragment of SVG (Scalable Vector Graphics) code. Its purpose is likely to render a graphic or icon within an HTML document. The functionality is to display a specific shape or design, as defined by the numerical coordinates and curves (e.g., \"c\" for cubic Bezier curve).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitter.svg':\n\nThis is an SVG logo graphic with a blue background and white shape, used to render a design within HTML documents."}
{"code": "import React from 'react';\nimport WalletMethods from './cards/WalletMethodsCard';\nimport SendTransaction from './cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from './cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "**Summary:**\n\nThis React component, named `Dashboard`, renders a user dashboard with several cards containing information and functionality:\n\n* User info (e.g., profile details)\n* Send transaction\n* Wallet methods\n* Links to developer resources\n\nIt also includes a header and a spacer for visual separation.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Dashboard.tsx':\n\nThe `Dashboard` component renders a user dashboard with cards containing essential information, transaction functionality, and developer resources, including a header and visual spacer."}
{"code": "import classNames from 'classnames'\nimport Link from 'next/link'\n\nconst DevLinks = ({\n\tprimary = false,\n\tfooter = false,\n}: {\n\tprimary?: boolean\n\tfooter?: boolean\n}) => (\n\t<div className={`links ${footer ? 'footer-links' : ''}`}>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://magic.link/docs/home/welcome'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDev Docs\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://dashboard.magic.link/signup'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDashboard\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://discord.gg/magiclabs'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDiscord\n\t\t\t</a>\n\t\t</div>\n\t</div>\n)\n\nexport default DevLinks\n", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** A reusable React component to display dev-related links with customizable styles.\n\n**Functionality:** It renders three links (Dev Docs, Dashboard, Discord) with color scheme variations based on props (`primary` and `footer`).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/DevLinks.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/DevLinks.tsx':\n\n**DevLinks Component:**\nA reusable React component displaying customizable dev-related links (Dev Docs, Dashboard, Discord) with color scheme variations based on props."}
{"code": "import Image from 'next/image';\nimport MagicLogo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <Image src={MagicLogo} alt=\"magic-logo\" className=\"magic-logo\" />\n      <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n      <h3 className=\"demo-sub-header\">Demo</h3>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "Here is a concise summary:\n\n**Header Component**\n\nA React component that renders a website header with a logo, title, and developer links.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Header.tsx':\n\n**Header Component: Logo, Title, & Developer Links**\n\nA React component rendering a website header with logo, title, and links to developer resources."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from './Header'\n<% loginMethods.forEach(authType => { %>\n<%-`import ${authType.replaceAll(' ', '')} from './auth/${authType.replaceAll(' ', '')}';`-%>\n<% }) %>\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-<%= Math.min(loginMethods.length, 3) %> grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      <% loginMethods.forEach(authType => { %>\n      <% if (authType !== \"Social Logins\") { %>\n        <%-`<${authType.replaceAll(' ', '')} token={token} setToken={setToken} />`-%>\n      <% } %>\n  \t\t<% }) %>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "**Summary:**\n\nThis block is a React component (`Login`) that imports various authentication methods from separate files, based on the `loginMethods` array. It renders a login page with a header and a grid containing each authentication method as a separate component, passing `token` and `setToken` props to each one.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary:**\n\nThe `Login` component in `Magic/Login.tsx` renders a login page with various authentication methods, importing from separate files based on the `loginMethods` array, and passes relevant props (`token` and `setToken`) to each method."}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Redirects users to the Magic Dashboard signup page.\n\n**Functionality:** A React component that displays the Magic logo, text, and an icon, with a redirect link to the Magic Dashboard when clicked.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx':\n\n**Summary:** A React component that redirects users to the Magic Dashboard signup page, displaying a prompt to set environment variables for API keys before proceeding."}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "**Purpose:** Prompt user to set environment variable for Magic API key.\n\n**Functionality:** Displays a message and a \"Get API keys\" button, allowing user to proceed with obtaining API keys.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx':\n\n**Summary:** A React component that redirects users to the Magic Dashboard signup page, displaying a prompt to set environment variables for API keys before proceeding."}
{"code": "import { getNetwork, getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { FlowExtension } from '@magic-ext/flow';\nimport * as fcl from '@onflow/fcl';\n\nexport type Magic = MagicBase<OAuthExtension[] & FlowExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n\n  useEffect(() => {\n    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        extensions: [\n          new OAuthExtension(),\n          new FlowExtension({\n            rpcUrl: getNetworkUrl(),", "explanation": "Here is a concise summary:\n\n**Purpose:** Create a context for managing the Magic SDK in a React application.\n\n**Functionality:** \n\n* Provides access to the Magic SDK instance through the `useMagic` hook.\n* Initializes the Magic SDK instance with API key, OAuth, and Flow extensions.\n* Updates the state of the Magic SDK instance when it's initialized or reinitialized.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**MagicProvider.tsx**: Provides a React context for managing Magic SDK instances, initializing with API key, OAuth, and Flow extensions, and updating state on reinitialization."}
{"code": "            network: getNetwork() as string,\n          }),\n        ],\n      });\n      setMagic(magic);\n      fcl.config().put('accessNode.api', getNetworkUrl());\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n    };\n  }, [magic]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;\n", "explanation": "**Summary:**\n\nThis is a React component, `MagicProvider`, that provides a context for managing magic tokens and network settings.\n\nIt sets up a provider with `magic` as the initial value and updates it when necessary. It also configures an access node API endpoint based on the current network. The component returns a provider that wraps its child components, making them accessible to the context.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**MagicProvider.tsx**: Provides a React context for managing Magic SDK instances, initializing with API key, OAuth, and Flow extensions, and updating state on reinitialization."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '@/components/ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport discord from 'public/social/Discord.svg';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\n\nconst Discord = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handle Discord login authentication using Magic OAuth.\n\n**Functionality:**\n\n* Uses React hooks to manage state and effects.\n* Checks if user is already authenticated on page load.\n* Initiates OAuth flow with Discord via Magic API when user clicks login button (not shown in this code snippet).\n* Saves token to local storage upon successful login.\n* Displays a loading indicator (Spinner) while authentication is in progress.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx':\n\nThis component implements Discord social login functionality, initiating OAuth flow with Magic API when clicked, saving token to local storage upon successful login, and displaying a loading indicator while authentication is in progress."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'discord',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"discord\">Discord Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={discord} alt=\"Discord\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Implement Discord social login functionality.\n\n**Functionality:**\n\n* Calls `login()` function when user clicks the \"Discord Login\" button or tries to login without a token.\n* Checks if authentication is in progress using `isAuthLoading` state, displaying a Spinner while loading.\n* Uses `magic.oauth.loginWithRedirect` from the Magic OAuth library to initiate Discord login and redirect the user to the application.\n* Sets and updates a loading flag in local storage when starting or completing the login process.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx':\n\nThis component implements Discord social login functionality, initiating OAuth flow with Magic API when clicked, saving token to local storage upon successful login, and displaying a loading indicator while authentication is in progress."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Discord</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Discord;\n", "explanation": "A UI button that, when clicked, likely redirects the user to a login or authorization flow for Discord integration.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx':\n\nThis component implements Discord social login functionality, initiating OAuth flow with Magic API when clicked, saving token to local storage upon successful login, and displaying a loading indicator while authentication is in progress."}
{"code": "import { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });\n        if (token) {", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Email OTP login component.\n\n**Functionality:** Handles user's email input, validates it, and attempts to log in with Magic SDK using an OTP code. Displays a loading spinner while logging in and shows error messages if necessary.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Email/OTP Input Block**\n\nCollects user's email input, validates it, and logs in using Magic SDK with OTP code. Displays loading spinner, error messages, and clears email field upon completion."}
{"code": "          saveToken(token, setToken, 'EMAIL');\n          setEmail('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);", "explanation": "**Block Purpose:** Handle login process for email-based authentication.\n\n**Functionality:**\n\n* Attempts to log in using provided credentials.\n* Saves a token after successful login.\n* Clears email input field.\n* Catches errors, logs them, and displays error messages.\n* Sets login progress indicator to false upon completion.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Email/OTP Input Block**\n\nCollects user's email input, validates it, and logs in using Magic SDK with OTP code. Displays loading spinner, error messages, and clears email field upon completion."}
{"code": "            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "Here is a concise summary:\n\n**Email/OTP Input Block**\n\n* Collects user's email input\n* Displays an error message if input is invalid (using `emailError` state)\n* Enables/disables login button based on input validity and login progress\n* Triggers login process when button is clicked", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Email/OTP Input Block**\n\nCollects user's email input, validates it, and logs in using Magic SDK with OTP code. Displays loading spinner, error messages, and clears email field upon completion."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport facebook from 'public/social/Facebook.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Facebook = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A React component for handling Facebook login authentication.\n\n**Functionality:**\n\n* Uses the `MagicProvider` hook to access OAuth magic.\n* Checks if a user is already authenticated using local storage.\n* If not, uses Facebook OAuth to authenticate the user.\n* Saves the authentication token and sets the auth loading flag when successful.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx':\n\n**Facebook Login Component**\n\nA React component that facilitates Facebook login functionality by handling authentication using Magic OAuth library, checking for existing user sessions, and displaying a \"Continue with Facebook\" button within a Card container."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'facebook',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"facebook\">Facebook Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={facebook} alt=\"Facebook\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary:\n\n**Functionality:**\n\n* Checks if user is logged in using Magic OAuth library (function `checkLogin()`)\n* Logs error messages for social login issues\n* Displays a spinner while authentication is in progress\n* Calls Facebook login with redirect when button clicked\n\n**Purpose:** \n\n* Facilitate Facebook login functionality", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx':\n\n**Facebook Login Component**\n\nA React component that facilitates Facebook login functionality by handling authentication using Magic OAuth library, checking for existing user sessions, and displaying a \"Continue with Facebook\" button within a Card container."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Facebook</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Facebook;\n", "explanation": "This block is a React component that renders a \"Continue with Facebook\" button within a Card container, allowing users to authenticate or connect with their Facebook account.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx':\n\n**Facebook Login Component**\n\nA React component that facilitates Facebook login functionality by handling authentication using Magic OAuth library, checking for existing user sessions, and displaying a \"Continue with Facebook\" button within a Card container."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport github from 'public/social/Github.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Github = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Summary**\n\nThis block is a React component named `Github` that facilitates login via GitHub OAuth using the Magic library. It checks for an existing authentication session and, if none exists, redirects the user to authenticate through GitHub, after which it saves the token.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe `Github` React component handles GitHub login functionality using Magic OAuth, prompting users to authenticate and displaying a loading indicator while logging in."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'github',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"github\">Github Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={github} alt=\"Github\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handles GitHub social login functionality, displaying a loading indicator while logging in.\n\n**Functionality:**\n\n* Calls `login()` function when user clicks the \"Github Login\" button.\n* Logs in with GitHub using Magic OAuth library.\n* Displays a loading spinner while authenticating.\n* Sets and updates a loading flag to manage the authentication process.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe `Github` React component handles GitHub login functionality using Magic OAuth, prompting users to authenticate and displaying a loading indicator while logging in."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Github</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Github;\n", "explanation": "**Summary:**\n\nThis block is a button component that prompts users to continue with GitHub authorization.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe `Github` React component handles GitHub login functionality using Magic OAuth, prompting users to authenticate and displaying a loading indicator while logging in."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport google from 'public/social/Google.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Google = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handle Google login authentication using Magic Provider.\n\n**Functionality:** \n\n* Uses `useMagic` hook to access Magic Provider.\n* Retrieves user profile data through Magic's OAuth API.\n* Saves the obtained token using the `saveToken` function.\n* Displays a spinner while waiting for authentication result.\n* Updates local storage with authentication status.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and holistic summary:\n\n**Google Auth Component**: Handles Google login authentication, displaying a spinner while loading and logging in with Google when clicked. Uses Magic Provider to retrieve user profile data, save tokens, and update local storage status. Includes button toggle for login status and logs in using the Magic OAuth library on click."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'google',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"google\">Google Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={google} alt=\"Google\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary:\n\n**Purpose:** Handles Google social login functionality, displaying a spinner while loading and logging in with Google when clicked.\n\n**Functionality:** \n\n* Checks if user is already logged in (via `checkLogin()` hook)\n* Displays a \"Google Login\" button\n* Toggles a spinner display based on authentication status\n* Logs in with Google using the Magic OAuth library when button is clicked", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and holistic summary:\n\n**Google Auth Component**: Handles Google login authentication, displaying a spinner while loading and logging in with Google when clicked. Uses Magic Provider to retrieve user profile data, save tokens, and update local storage status. Includes button toggle for login status and logs in using the Magic OAuth library on click."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Google</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Google;\n", "explanation": "A React component block.\n\nPurpose: Authenticates user using Google account.\n\nFunctionality: A button that allows users to sign in or register with their Google credentials.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and holistic summary:\n\n**Google Auth Component**: Handles Google login authentication, displaying a spinner while loading and logging in with Google when clicked. Uses Magic Provider to retrieve user profile data, save tokens, and update local storage status. Includes button toggle for login status and logs in using the Magic OAuth library on click."}
{"code": "import { useState } from 'react';\nimport { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport FormInput from '@/components/ui/FormInput';\n\nconst SMSOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!phone.match(/^\\+?\\d{10,14}$/)) {\n      setPhoneError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setPhoneError(false);\n        const token = await magic?.auth.loginWithSMS({\n          phoneNumber: phone,\n        });\n        if (token) {", "explanation": "Here is a concise summary:\n\n**Purpose:** Handle SMS-based login functionality.\n\n**Functionality:** \n\n* Collects and validates phone number input.\n* Initiates login with SMS verification using `magic.auth.loginWithSMS`.\n* Updates UI state to show loading indicator while logging in.\n* Displays error message if phone number format is incorrect.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**Purpose:** Handle SMS-based login functionality, displaying errors and notifications as needed.\n\n**Functionality:** Collects phone number input, validates format, initiates login with SMS verification, updates UI state, and displays error messages for exceptions."}
{"code": "          saveToken(token, setToken, 'SMS');\n          setPhone('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"sms\">SMS Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (phoneError) setPhoneError(false);", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handle login attempts via SMS, displaying errors and notifications as needed.\n\n**Functionality:**\n\n* Save login token and update phone input field.\n* Catch and display error messages for various login exceptions (e.g., expired link, rate limit exceeded).\n* Clear login in-progress indicator upon completion.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**Purpose:** Handle SMS-based login functionality, displaying errors and notifications as needed.\n\n**Functionality:** Collects phone number input, validates format, initiates login with SMS verification, updates UI state, and displays error messages for exceptions."}
{"code": "            setPhone(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : '+11234567890'}\n          value={phone}\n        />\n        {phoneError && (\n          <span className=\"self-start text-xs font-semibold text-red-700 justify-self-start\">\n            Enter a valid phone number\n          </span>\n        )}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : phone.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default SMSOTP;\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A login/login/signup form that accepts phone number input and triggers a login process.\n\n**Functionality:** Accepts phone number input, displays error message if invalid, and enables/disables a \"Log in / Sign up\" button based on input validity and login progress.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**Purpose:** Handle SMS-based login functionality, displaying errors and notifications as needed.\n\n**Functionality:** Collects phone number input, validates format, initiates login with SMS verification, updates UI state, and displays error messages for exceptions."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitch from 'public/social/Twitch.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitch = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Authenticate a user with Twitch using Magic OAuth.\n\n**Functionality:**\n\n* Checks if the user is already authenticated using `localStorage`.\n* Uses the Magic Provider's `magic` instance to retrieve an ID token from Twitch.\n* Saves the ID token and sets the authentication flag to true.\n* Displays a loading indicator while authentication is in progress.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary:\n\n**Twitch Authentication Component**\n\nThis component facilitates user authentication with Twitch using Magic OAuth. It checks for existing authentication, retrieves an ID token from Twitch, and updates local storage and component state upon success or failure, displaying a loading indicator during the process."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitch',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitcg\">Twitch Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitch} alt=\"Twitch\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary:\n\n**Purpose:** Handles Twitch social login flow.\n\n**Functionality:**\n\n* Calls `login()` function when button is clicked.\n* Starts loading animation while waiting for authentication.\n* If authentication fails, logs error message to console.\n* Updates local storage and component state with authentication status.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary:\n\n**Twitch Authentication Component**\n\nThis component facilitates user authentication with Twitch using Magic OAuth. It checks for existing authentication, retrieves an ID token from Twitch, and updates local storage and component state upon success or failure, displaying a loading indicator during the process."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitch</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitch;\n", "explanation": "This block is a button that allows users to continue with their Twitch account on a login or registration page, likely triggering an authentication process.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary:\n\n**Twitch Authentication Component**\n\nThis component facilitates user authentication with Twitch using Magic OAuth. It checks for existing authentication, retrieves an ID token from Twitch, and updates local storage and component state upon success or failure, displaying a loading indicator during the process."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitter from 'public/social/Twitter.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitter = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A React component that facilitates Twitter login using Magic.\n\n**Functionality:**\n\n* Checks if user is already logged in with Magic OAuth\n* If not, redirects user to Magic for authentication\n* Upon successful login, saves token and sets loading flag to false.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `Twitter.tsx` component:\n\n**Purpose:** Handles Twitter social login using Magic.\n\n**Functionality:** Redirects user to Magic for authentication if not logged in, displaying a spinner while authenticating and logging error messages on failure."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitter',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitter\">Twitter Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitter} alt=\"Twitter\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handles Twitter social login using Magic, displaying a loading spinner while authenticating.\n\n**Functionality:**\n\n* Checks if user has already logged in (via `checkLogin` hook)\n* If not logged in, initiates Twitter OAuth login with redirect to app origin\n* Displays a spinner while authentication is in progress, then logs error messages if authentication fails.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `Twitter.tsx` component:\n\n**Purpose:** Handles Twitter social login using Magic.\n\n**Functionality:** Redirects user to Magic for authentication if not logged in, displaying a spinner while authenticating and logging error messages on failure."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitter</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitter;\n", "explanation": "This block is a button that, when clicked, allows users to continue with their Twitter account.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `Twitter.tsx` component:\n\n**Purpose:** Handles Twitter social login using Magic.\n\n**Functionality:** Redirects user to Magic for authentication if not logged in, displaying a spinner while authenticating and logging error messages on failure."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { useMagic } from '../MagicProvider';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\nimport { getFaucetUrl, getNetwork } from '@/utils/network';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport * as fcl from '@onflow/fcl';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\n\nconst SendTransaction = () => {\n  const { magic } = useMagic();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A React component for sending transactions.\n\n**Functionality:** Allows users to input recipient address and amount, validates inputs, and enables/disables send button accordingly. Uses Flow's Magic API and displays transaction history and progress.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**SendTransactionCard**: A React component that enables users to send transactions on a blockchain by inputting recipient address and amount, validating inputs, and handling transaction sending using Flow's Magic API, with features including error management, hash result display, button enable/disable, and UI state updates."}
{"code": "  const [toAddressError, setToAddressError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const [hash, setHash] = useState('');\n  const [transactionLoading, setTransactionLoading] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const sendTransaction = useCallback(async () => {\n    if (!magic) {\n      return;\n    }\n    try {\n      setTransactionLoading(true);\n\n      const response = await fcl.mutate({\n        //cadence: transaction,\n        template: 'https://flix.flow.com/v1/templates?name=transfer-flow',\n        args: (arg, t) => [arg(Number(amount).toFixed(2), t.UFix64), arg(toAddress, t.Address)],\n        proposer: magic.flow.authorization,\n        authorizations: [magic.flow.authorization],\n        payer: magic.flow.authorization,\n        limit: 999,\n      });\n      setHash(response);", "explanation": "Here is a summary of the block:\n\n**Purpose:** Manage state and functionality for sending a transaction on a blockchain.\n\n**Functionality:** \n\n* Stores errors for toAddress and amount fields\n* Displays hash result after successful transaction\n* Enables/disables button based on input validity (toAddress and amount)\n* Handles transaction sending using FCL mutate function", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**SendTransactionCard**: A React component that enables users to send transactions on a blockchain by inputting recipient address and amount, validating inputs, and handling transaction sending using Flow's Magic API, with features including error management, hash result display, button enable/disable, and UI state updates."}
{"code": "      console.log('response: ', JSON.stringify(response));\n\n      console.log('Waiting for transaction to be sealed');\n      var data = await fcl.tx(response).onceSealed();\n      console.log('sealed: ', JSON.stringify(data));\n\n      if (data.status === 4 && data.statusCode === 0) {\n        alert('Transaction successful');\n      } else {\n        alert('Transaction Failed! Check console for more details');\n        console.log('transaction error: ' + data.errorMessage);\n      }\n      setTransactionLoading(false);\n      setToAddress('');\n      setAmount('');\n    } catch (e) {\n      setTransactionLoading(false);\n      alert('Transaction Failed! Check console for more details');\n      console.log(e);\n    }\n  }, [magic, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      {getNetwork() == 'testnet' && (\n        <div>\n          <a href={getFaucetUrl()} target=\"_blank\" rel=\"noreferrer\">", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Confirm and handle the sealing of a transaction on a blockchain network.\n\n**Functionality:** \n\n1. Wait for a transaction to be sealed.\n2. Check if the transaction was successful (status 4, status code 0).\n3. Display an alert accordingly (success or failure).\n4. Log any errors in the console.\n5. Update the UI state by setting loading flags and clearing input fields.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**SendTransactionCard**: A React component that enables users to send transactions on a blockchain by inputting recipient address and amount, validating inputs, and handling transaction sending using Flow's Magic API, with features including error management, hash result display, button enable/disable, and UI state updates."}
{"code": "            <FormButton onClick={() => null} disabled={false}>\n              Get Test FLOW\n              <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n            </FormButton>\n          </a>\n          <Divider />\n        </div>\n      )}\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput value={amount} onChange={(e: any) => setAmount(e.target.value)} placeholder={`Amount (FLOW)`} />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        {transactionLoading ? (\n          <div className=\"w-full loading-container\">\n            <Spinner />\n          </div>\n        ) : (\n          'Send Transaction'\n        )}\n      </FormButton>\n\n      {hash ? (\n        <>\n          <Spacer size={20} />", "explanation": "**Summary:**\n\nThis block contains a form with input fields for \"Receiving Address\" and \"Amount (FLOW)\" and two buttons: \"Get Test FLOW\" and \"Send Transaction\". The \"Get Test FLOW\" button is clickable, while the \"Send Transaction\" button is disabled unless valid address and amount are provided.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**SendTransactionCard**: A React component that enables users to send transactions on a blockchain by inputting recipient address and amount, validating inputs, and handling transaction sending using Flow's Magic API, with features including error management, hash result display, button enable/disable, and UI state updates."}
{"code": "          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "This block renders a \"Send Transaction\" component, which includes a `<TransactionHistory />` component within a `<Card>`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**SendTransactionCard**: A React component that enables users to send transactions on a blockchain by inputting recipient address and amount, validating inputs, and handling transaction sending using Flow's Magic API, with features including error management, hash result display, button enable/disable, and UI state updates."}
{"code": "import {useCallback, useEffect, useState} from 'react'\nimport Divider from '@/components/ui/Divider'\nimport {LoginProps} from '@/utils/types'\nimport {logout} from '@/utils/common'\nimport {useMagic} from '../MagicProvider'\nimport Card from '@/components/ui/Card'\nimport CardHeader from '@/components/ui/CardHeader'\nimport CardLabel from '@/components/ui/CardLabel'\nimport Spinner from '@/components/ui/Spinner'\nimport {getNetworkName} from '@/utils/network'\nimport {convertAccountBalance} from '@/utils/flowUtils'\nimport * as fcl from '@onflow/fcl'\n\nconst UserInfo = ({token, setToken}: LoginProps) => {\n\tconst {magic} = useMagic()\n\n\tconst [balance, setBalance] = useState('...')\n\tconst [copied, setCopied] = useState('Copy')\n\tconst [isRefreshing, setIsRefreshing] = useState(false)\n\n\tconst [publicAddress, setPublicAddress] = useState(\n\t\tlocalStorage.getItem('user')\n\t)\n\n\tuseEffect(() => {\n\t\tconst checkLoginandGetBalance = async () => {\n\t\t\tconst isLoggedIn = await magic?.user.isLoggedIn()\n\t\t\tif (isLoggedIn) {\n\t\t\t\ttry {", "explanation": "Here is a concise summary:\n\n**Block Summary**\n\nThis block retrieves user information, displays it in a card component, and provides functionality for copying the public address and refreshing the balance.\n\nIt uses React hooks (`useState`, `useCallback`, `useEffect`) to manage state and side effects, and leverages external libraries and components (e.g., `MagicProvider`, `Card`, `Spinner`).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThis component displays user information in a card, including public address and FLOW balance, with real-time updates using the Magic library. It allows users to copy their public address to the clipboard, refresh the balance, and disconnect from the Magic service."}
{"code": "\t\t\t\t\tconst metadata = await magic?.user.getInfo()\n\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\tlocalStorage.setItem('user', metadata?.publicAddress!)\n\t\t\t\t\t\tsetPublicAddress(metadata?.publicAddress!)\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('error in fetching address: ' + e)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => checkLoginandGetBalance(), 5000)\n\t}, [])\n\n\tconst getBalance = useCallback(async () => {\n\t\tif (publicAddress) {\n\t\t\tconst account = await fcl.account(publicAddress)\n\t\t\tsetBalance(convertAccountBalance(account.balance))\n\t\t}\n\t}, [magic, publicAddress])\n\n\tconst refresh = useCallback(async () => {\n\t\tsetIsRefreshing(true)\n\t\tawait getBalance()\n\t\tsetTimeout(() => {\n\t\t\tsetIsRefreshing(false)\n\t\t}, 500)\n\t}, [getBalance])\n\n\tuseEffect(() => {\n\t\tif (magic) {\n\t\t\trefresh()\n\t\t}\n\t}, [magic, refresh])\n\n\tuseEffect(() => {\n\t\tsetBalance('...')\n\t}, [magic])\n\n\tconst disconnect = useCallback(async () => {\n\t\tif (magic) {\n\t\t\tawait logout(setToken, magic)\n\t\t}\n\t}, [magic, setToken])\n\n\tconst copy = useCallback(() => {\n\t\tif (publicAddress && copied === 'Copy') {", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** Fetch user metadata and update balance information in real-time.\n\n**Functionality:**\n\n* Fetches user metadata every 5 seconds using the `magic` library.\n* Updates local storage with the public address if metadata is received.\n* Uses the public address to fetch account balance and updates it in the UI.\n* Has a refresh functionality that updates the balance when the `magic` library changes or when the user interacts with the app.\n* Allows users to disconnect from the `magic` service.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThis component displays user information in a card, including public address and FLOW balance, with real-time updates using the Magic library. It allows users to copy their public address to the clipboard, refresh the balance, and disconnect from the Magic service."}
{"code": "\t\t\tsetCopied('Copied!')\n\t\t\tnavigator.clipboard.writeText(publicAddress)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetCopied('Copy')\n\t\t\t}, 1000)\n\t\t}\n\t}, [copied, publicAddress])\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardHeader id='Wallet'>Wallet</CardHeader>\n\t\t\t<CardLabel\n\t\t\t\tleftHeader='Status'\n\t\t\t\trightAction={<div onClick={disconnect}>Disconnect</div>}\n\t\t\t\tisDisconnect\n\t\t\t/>\n\t\t\t<div className='flex-row'>\n\t\t\t\t<div className='green-dot' />\n\t\t\t\t<div className='connected'>Connected to {getNetworkName()}</div>\n\t\t\t</div>\n\t\t\t<Divider />\n\t\t\t<CardLabel\n\t\t\t\tleftHeader='Address'\n\t\t\t\trightAction={\n\t\t\t\t\t!publicAddress ? (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div onClick={copy}>{copied}</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<div className='code'>\n\t\t\t\t{publicAddress?.length == 0\n\t\t\t\t\t? 'Fetching address..'\n\t\t\t\t\t: publicAddress}\n\t\t\t</div>\n\t\t\t<Divider />\n\t\t\t<CardLabel\n\t\t\t\tleftHeader='Balance'\n\t\t\t\trightAction={\n\t\t\t\t\tisRefreshing ? (\n\t\t\t\t\t\t<div className='loading-container'>\n\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div onClick={refresh}>Refresh</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>", "explanation": "**Block Purpose:**\n\nCopies a public address to the clipboard on click, displaying \"Copy\" for 1 second before changing to \"Copied!\".\n\n**Functionality:**\n\n* Toggles between \"Copy\" and \"Copied!\" text after copying\n* Uses `navigator.clipboard.writeText` to copy the public address\n* Updates UI based on state variables (`copied`, `publicAddress`)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThis component displays user information in a card, including public address and FLOW balance, with real-time updates using the Magic library. It allows users to copy their public address to the clipboard, refresh the balance, and disconnect from the Magic service."}
{"code": "\t\t\t<div className='code'>{balance} FLOW</div>\n\t\t</Card>\n\t)\n}\n\nexport default UserInfo\n", "explanation": "A JSX block displaying a user's FLOW balance in a Card component.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThis component displays user information in a card, including public address and FLOW balance, with real-time updates using the Magic library. It allows users to copy their public address to the clipboard, refresh the balance, and disconnect from the Magic service."}
{"code": "import React, {useState} from 'react'\nimport Disconnect from '../wallet-methods/Disconnect'\nimport Divider from '@/components/ui/Divider'\nimport {LoginProps} from '@/utils/types'\nimport Card from '@/components/ui/Card'\nimport CardHeader from '@/components/ui/CardHeader'\nimport {LoginMethod} from '@/utils/common'\nimport GetIdToken from '../wallet-methods/GetIdToken'\nimport GetMetadata from '../wallet-methods/GetMetadata'\n<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n<%-`import UpdateEmail from '../wallet-methods/UpdateEmail'`-%>\n<% }%>\n\nconst WalletMethods = ({token, setToken}: LoginProps) => {\n\tconst [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n\t\tlocalStorage.getItem('loginMethod') as LoginMethod\n\t)\n\treturn (\n\t\t<Card>\n\t\t\t<CardHeader id='methods'>Wallet Methods</CardHeader>\n\t\t\t<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n\t\t\t\t<%-`{loginMethod && loginMethod == 'EMAIL' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<UpdateEmail />", "explanation": "Here is a concise summary:\n\n**Purpose:** Display wallet methods for user authentication.\n\n**Functionality:** A component that lists available login methods (e.g., Email OTP, GetIdToken, GetMetadata) and allows users to switch between them, with dynamic import of specific components based on the selected method.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Component:** WalletMethodsCard\n\n**Purpose:** Display wallet methods for user authentication.\n\n**Functionality:** Lists available login methods and allows users to switch between them, with dynamic import of specific components."}
{"code": "\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</>\n\t\t\t\t)}`-%>\n\t\t\t<% }%>\n\t\t\t<GetIdToken />\n\t\t\t<Divider />\n\t\t\t<GetMetadata />\n\t\t\t<Divider />\n\t\t\t<Disconnect token={token} setToken={setToken} />\n\t\t</Card>\n\t)\n}\n\nexport default WalletMethods\n", "explanation": "This block appears to be a React component named \"WalletMethods\". It contains a series of components that interact with authentication and user metadata, including:\n\n* Getting an ID token\n* Displaying dividers between sections\n* Disconnecting from an unknown service (possibly authentication)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Component:** WalletMethodsCard\n\n**Purpose:** Display wallet methods for user authentication.\n\n**Functionality:** Lists available login methods and allows users to switch between them, with dynamic import of specific components."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {logout} from '@/utils/common'\nimport {LoginProps} from '@/utils/types'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\n\nconst Disconnect = ({setToken}: LoginProps) => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst disconnect = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tawait logout(setToken, magic)\n\t\t\tsetDisabled(false)\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic, setToken])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={disconnect}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[115px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'disconnect()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tDisconnects user from dApp.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Disconnect\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component that facilitates user logout/disconnection from an application.\n\n**Functionality:** Allows users to disconnect from an app, displaying a loading state during disconnection, with options to manage token access via `setToken` prop.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the 'Disconnect.tsx' file:\n\n**Summary:** A React component that enables user logout/disconnection from an application, showing a loading state during disconnection and managing token access through the `setToken` prop."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {useMagic} from '../MagicProvider'\nimport showToast from '@/utils/showToast'\nimport Spinner from '@/components/ui/Spinner'\n\nconst GetIdToken = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst getWalletType = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tconst idToken = await magic.user.getIdToken()\n\t\t\tsetDisabled(false)\n\t\t\tconsole.log('ID Token: ' + idToken)\n\t\t\tshowToast({\n\t\t\t\tmessage: 'Please check console for the ID Token Log',\n\t\t\t\ttype: 'success',\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={getWalletType}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[86px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'getIdToken()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Retrieve an ID token from the Magic user authentication service.\n\n**Functionality:** A button that, when clicked, retrieves an ID token using `magic.user.getIdToken()` and displays a success message. The button is disabled while the operation is in progress.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Purpose:** Retrieves an ID token from Magic's user authentication service.\n\n**Functionality:** A button that, when clicked, gets an ID token using `magic.user.getIdToken()` and displays a success message, disabling the button during processing."}
{"code": "\t\t\t\tGenerates a Decentralized Id Token which acts as a proof of\n\t\t\t\tauthentication to resource servers.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GetIdToken\n", "explanation": "**Summary:**\n\nThe `GetIdToken` block generates an authentication token (Decentralized Id Token) used to prove identity to resource servers.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Purpose:** Retrieves an ID token from Magic's user authentication service.\n\n**Functionality:** A button that, when clicked, gets an ID token using `magic.user.getIdToken()` and displays a success message, disabling the button during processing."}
{"code": "import React, {useCallback, useState} from 'react'\nimport showToast from '@/utils/showToast'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\n\nconst GetMetadata = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst getMetadata = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tconst userInfo = await magic.user.getInfo()\n\t\t\tsetDisabled(false)\n\t\t\tshowToast({\n\t\t\t\tmessage: `Public Address: ${userInfo.publicAddress}`,\n\t\t\t\ttype: 'success',\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={getMetadata}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[220px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'getInfo()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tRetrieves information for the authenticated user.\n\t\t\t</div>\n\t\t</div>", "explanation": "**Summary:**\n\nThis block is a React component called `GetMetadata`. Its purpose is to retrieve metadata (public address) for the authenticated user using the `magic` API. When clicked, it displays a button that shows a loading indicator or \"getInfo()\" text, and upon success, shows a toast notification with the public address.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**File Summary:**\n\nThe `GetMetadata.tsx` file exports a React component called `GetMetadata`, which retrieves public address metadata using the `magic` API, displaying a toast notification with the result upon success."}
{"code": "\t)\n}\n\nexport default GetMetadata\n", "explanation": "This is a JavaScript export statement, used to make the `GetMetadata` function available for use elsewhere in an application.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**File Summary:**\n\nThe `GetMetadata.tsx` file exports a React component called `GetMetadata`, which retrieves public address metadata using the `magic` API, displaying a toast notification with the result upon success."}
{"code": "import React, {useCallback, useState} from 'react'\nimport ErrorText from '@/components/ui/ErrorText'\nimport Spacer from '@/components/ui/Spacer'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\nimport FormInput from '@/components/ui/FormInput'\nimport showToast from '@/utils/showToast'\nimport {RPCError} from 'magic-sdk'\n\nconst UpdateEmail = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\tconst [email, setEmail] = useState('')\n\tconst [emailError, setEmailError] = useState(false)\n\n\tconst updateEmail = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tif (\n\t\t\t\t!email.match(\n\t\t\t\t\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetEmailError(true)\n\t\t\t\tsetDisabled(false)\n\t\t\t} else {\n\t\t\t\tsetDisabled(true)\n\t\t\t\tawait magic.auth.updateEmailWithUI({email, showUI: true})\n\t\t\t\tshowToast({message: 'Email Updated!', type: 'success'})\n\t\t\t\tsetDisabled(false)\n\t\t\t\tsetEmail('')\n\t\t\t}\n\t\t} catch (error) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Update email address using Magic SDK.\n\n**Functionality:** A form input field that validates and updates the user's email address with Magic, displaying a success message or error if invalid input is provided.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx':\n\n**Summary:** This code enables users to update their email address using the Magic SDK, validating input and displaying success or error messages accordingly."}
{"code": "\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t\tif (error instanceof RPCError) {\n\t\t\t\tshowToast({message: error.message, type: 'error'})\n\t\t\t} else {\n\t\t\t\tshowToast({message: 'Update email failed', type: 'error'})\n\t\t\t}\n\t\t}\n\t}, [magic, email])\n\n\tconst handleEmailChange = (e: any) => {\n\t\tsetEmailError(false)\n\t\tsetEmail(e.target.value)\n\t}\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<FormInput\n\t\t\t\tvalue={email}\n\t\t\t\tonChange={handleEmailChange}\n\t\t\t\tplaceholder='New Email'\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={updateEmail}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[76px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'updateEmail()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tInitiates the update email flow that allows a user to change\n\t\t\t\ttheir email address.\n\t\t\t</div>\n\t\t\t{emailError ? (\n\t\t\t\t<div className='mb-[-10px]'>\n\t\t\t\t\t<Spacer size={20} />\n\t\t\t\t\t<ErrorText>Enter a valid email!</ErrorText>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n", "explanation": "Here is a summary of the purpose and functionality:\n\n**Purpose:** Update user's email address.\n\n**Functionality:** \n\n* Handle input change for new email\n* Disable/enable update button based on disabled state\n* Trigger updateEmail function when button clicked\n* Display error message if email update fails.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx':\n\n**Summary:** This code enables users to update their email address using the Magic SDK, validating input and displaying success or error messages accordingly."}
{"code": "export default UpdateEmail\n", "explanation": "This is a JavaScript export statement, which makes the `UpdateEmail` function or component available for use elsewhere in the application.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx':\n\n**Summary:** This code enables users to update their email address using the Magic SDK, validating input and displaying success or error messages accordingly."}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "**Purpose:** A reusable React component for rendering a basic card layout.\n\n**Functionality:** Accepts child components or text as content, and returns a `<div>` element with the class \"card\" containing that content.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n\"A basic React Card component, accepting child components or text as content, and returning a styled <div> container.\""}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "**Summary**\n\nA React component (CardHeader) that renders a `<h1>` element with a customizable `id` attribute, displaying provided children content as its text.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n\"A customizable CardHeader React component that displays provided content in an `<h1>` tag.\""}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "**Summary:**\n\nThis block is a React component named `CardLabel`. Its purpose is to render a card label with customizable content on both sides. It accepts props for:\n\n* Left header\n* Right action (button)\n* Disconnection status\n* Additional custom props\n\nIt returns a container div with the left header and optional right action button, depending on the input props.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `CardLabel` component:\n\n**Summary:** A customizable React component that displays a card label with a left header and an optional right action button, allowing for dynamic content display."}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "**Summary:**\n\nA simple React component named \"Divider\" that renders a basic HTML `<div>` element with a class name of \"divider\". \n\n(Note: No actual visual divider or functionality is implemented, just a container.)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`Divider.tsx`: A basic React component rendering a simple `<div>` container with class \"divider\"."}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "**Purpose:** A reusable React component for displaying error messages.\n\n**Functionality:** Renders a `<div>` element with a class name of \"error\" and contains the passed children (error message).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file, `ErrorText.tsx`, is a reusable React component that displays an error message as a styled `<div>` element with a class name of \"error\"."}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "This block is a React component:\n\n**FormButton**\n\nPurpose: A customizable button for forms.\n\nFunctionality: Accepts children, an onClick event handler, and a disabled state flag, rendering a styled button with those properties.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `FormButton` component:\n\n**Summary:** \nA customizable React button for forms that accepts children, click handlers, and a disabled state, rendering a styled button with these attributes."}
{"code": "import React from 'react'\n\ninterface Props {\n\tvalue: string\n\tonChange: (e: any) => void\n\tplaceholder: string\n}\n\nconst FormInput = ({value, onChange, placeholder}: Props) => {\n  return (\n    <input\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "This block is a React component named `FormInput`. It takes in three props: `value`, `onChange`, and `placeholder`, and returns an `<input>` element with those properties set.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/FormInput.tsx':\n\n**Summary:**\n\n`FormInput.tsx`: A reusable React component that renders an `<input>` element with customizable value, onChange event handler, and placeholder text."}
{"code": "import React from 'react'\n\nconst Spacer = ({size}: {size: number}) => {\n\treturn <div style={{height: `${size}px`}} />\n}\n\nexport default Spacer\n", "explanation": "This block defines a reusable \"Spacer\" component in React, which creates a blank div element with a specified height (in pixels) that can be used to add space between other elements on a page.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spacer.tsx':\n\nThis reusable Spacer component adds customizable vertical spacing between UI elements, allowing for flexible layout control in React applications."}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "**Summary:**\n\nThis block is a React component named `Spinner` that renders a loading animation (a spinning icon) using an SVG.\n\n**Functionality:**\n\n* Displays a spinning icon when rendered.\n* The icon animates when rendered, indicating a loading state.\n* Can be used in UI components to display progress or loading status.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Spinner.tsx**\n\nA React component that displays a spinning SVG icon, indicating a loading state, allowing UI components to visually represent progress or loading status."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "This block is an SVG icon, specifically a spinner or loading animation. Its purpose is to display a visual representation of progress or activity while waiting for data to load.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Spinner.tsx**\n\nA React component that displays a spinning SVG icon, indicating a loading state, allowing UI components to visually represent progress or loading status."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** Display a link to a user's transaction history on a blockchain.\n\n**Functionality:** Uses the `getBlockExplorer` function to generate a URL for the user's transaction history, which is then linked in an \"action button\" with a icon.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/TransactionHistory.tsx':\n\n**Displays a link to a user's transaction history on a blockchain, utilizing the `getBlockExplorer` function to generate a URL for the link.**"}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "**Purpose:** Next.js application entry point.\n\n**Functionality:** Returns the main application component with passed props, bootstrapping the app with global styles.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n\"The `_app.tsx` file serves as the entry point for the Next.js application, returning the main application component while bootstrapping the app with global styles.\""}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "This block is a Next.js document component, responsible for rendering the basic HTML structure of an application. Its primary function is to initialize the page setup, allowing subsequent components to render within it.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n\"The `_document` component initializes the basic HTML structure for a Next.js application, setting up the foundation for other components to render within.\""}
{"code": "import MagicProvider from '../components/magic/MagicProvider'\nimport {useEffect, useState} from 'react'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Login from '@/components/magic/Login'\nimport Dashboard from '@/components/magic/Dashboard'\nimport MagicDashboardRedirect from '@/components/magic/MagicDashboardRedirect'\n\nexport default function Home() {\n\tconst [token, setToken] = useState('')\n\n\tuseEffect(() => {\n\t\tsetToken(localStorage.getItem('token') ?? '')\n\t}, [setToken])\n\n\treturn (\n\t\t<MagicProvider>\n\t\t\t<ToastContainer />\n\t\t\t{process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n\t\t\t\ttoken.length > 0 ? (\n\t\t\t\t\t<Dashboard token={token} setToken={setToken} />\n\t\t\t\t) : (\n\t\t\t\t\t<Login token={token} setToken={setToken} />\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<MagicDashboardRedirect />\n\t\t\t)}\n\t\t</MagicProvider>\n\t)\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** This React component, `Home`, handles user authentication and routing.\n\n**Functionality:** It checks for an existing token in local storage, renders either a login or dashboard page based on its presence, and redirects to a setup page if no API key is provided.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary:\n\nThis `Home` component handles user authentication and routing by checking local storage for an existing token, rendering a login or dashboard page accordingly, and redirecting to a setup page if necessary."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** This block configures the visual style of a web application, including typography, colors, and layout.\n\n**Functionality:**\n\n* Imports Google Fonts (Inter)\n* Applies Tailwind CSS configuration\n* Defines custom variables for colors and layouts\n* Styles HTML elements (e.g., nav bar, list items, NFT details) using utility classes from Tailwind CSS.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Define styles for various HTML elements using Tailwind CSS.\n\n**Functionality:**\n\n* Apply spacing, positioning, and layout rules to specific elements (e.g., `.nft`, `.cards-container`, etc.)\n* Define responsive design rules based on screen width (e.g., media queries)\n* Style dropdown menus (`.network-dropdown`) and their options (`.network-dropdown-option`)\n* Style active network indicators (`.active-network`)\n\nOverall, this block sets up a set of reusable styles for a UI component or layout.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px];\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {\n  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {", "explanation": "Here is a concise summary:\n\nThis block defines CSS styles for various UI components, including typography, layout, colors, and interactions, specifically for a login page and home page, as well as individual elements such as buttons and links.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": "  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Styles and layouts for UI components**\n\nThis code defines styles, layouts, and behaviors for various HTML elements on a webpage, including links, buttons, footers, wallet methods, and form inputs. It uses Tailwind CSS utility classes to apply styling rules, transitions, and media queries for responsive design.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": "  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {", "explanation": "Here is a concise summary:\n\n**CSS Block**\n\nThis block defines styles for various UI components, including:\n\n* A form input field with rounded corners and border\n* A form button with hover and active effects\n* A loading container with centered text and animation\n\nThe block uses Tailwind CSS utility classes to define the styles.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": "    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];\n  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {", "explanation": "**Summary**\n\nThis block appears to be a collection of CSS classes for styling a web application's UI components, including:\n\n* Cards with headers, labels, and content\n* Toast notifications\n* Action buttons and disconnect buttons\n* Code blocks with monospace font and background color\n\nThe code defines styles for layout, typography, colors, borders, and animations.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": "  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {\n  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {", "explanation": "Here is a summary of each block:\n\n* `@apply` statements: Define CSS classes with shortcuts, applying various styles and properties.\n* `.divider`: A horizontal divider element with some padding and border.\n* `.flex-row`: A flexbox container with centering items horizontally.\n* `.green-dot`: A small green dot icon with a specific size, background color, and margin.\n* `.connected`: A text element with some padding and margin.\n* `a` (anchor) element: Unsets all default styles for anchor elements.\n* `.app-header-container`: The main header container element with various styles, including a background image.\n* `.redirect-container`: A full-screen container element with a background image.\n* `.redirect-card`: A card element with some padding and shadow effect.\n* `.social-login-button`: A social login button element with some styles and a disabled state.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": "  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "This block defines styles for a social login button and an API button.\n\n**Social Login Button:**\n\n* Default style: opacity 50%\n* Hover: change cursor to pointer, add gradient background\n* Active: apply opacity 50% and scale down slightly, maintain gradient background\n\n**API Button:**\n\n* Style: solid blue background, white text, centered layout, rounded edges", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines reusable styles for various UI components using Tailwind CSS utility classes, covering typography, colors, layout, spacing, and interactions, with specific styles for elements like cards, buttons, forms, and loading indicators."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveToken = (token: string, setToken: Dispatch<SetStateAction<string>>, loginMethod: LoginMethod) => {\n  localStorage.setItem('token', token);\n  setToken(token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n};\n", "explanation": "Here is a concise summary:\n\n**Authentication Functions**\n\nThis block exports two functions for managing user authentication:\n\n1. `logout`: Logs out the user, clears local storage, and resets token state.\n2. `saveToken`: Saves an authentication token to local storage, updates the token state, and sets the login method.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/common.ts':\n\n**Common Utilities**\n\nThis block exports utility functions for user management:\n\n* `logout`: Logs out the user and resets token state.\n* Authentication helpers, including `saveToken` to update token state."}
{"code": "export const convertAccountBalance = (amount: number) => {\n\treturn (amount / 10 ** 8).toString()\n}\n", "explanation": "Here is a concise summary:\n\n**Function:** Converts an account balance amount by dividing it by 100,000,000 (10^8) and returning as a string representation.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/flowUtils.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Unfortunately, you haven't provided any code block summaries for me to work with. Please provide the actual code block summaries or the content of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/flowUtils.ts', so I can assist you in creating a concise and holistic summary of that file."}
{"code": "export enum Network {\n  FLOW_MAINNET = 'flow-mainnet',\n  FLOW_TESTNET = 'flow-testnet',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return 'https://rest-mainnet.onflow.org';\n    case Network.FLOW_TESTNET:\n      return 'https://rest-testnet.onflow.org';\n    default:\n      throw new Error('Network not supported');\n  }\n};\n\nexport const getNetwork = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return 'mainnet';\n    case Network.FLOW_TESTNET:\n      return 'testnet';\n  }\n};\n\nexport const getFaucetUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_TESTNET:\n      return 'https://testnet-faucet.onflow.org/fund-account/';\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return 'Flow (Mainnet)';\n    case Network.FLOW_TESTNET:\n      return 'Flow (Testnet)';\n  }\n};\n", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Define network constants and functions for interacting with Flow blockchain.\n\n**Functionality:**\n\n* Enum `Network` defines two values: FLOW_MAINNET and FLOW_TESTNET.\n* Four functions return:\n\t+ Network URL (e.g. mainnet or testnet API endpoint)\n\t+ Network name (e.g. \"Flow (Mainnet)\" or \"Flow (Testnet)\")\n\t+ Faucet URL (for testnet only)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**network.ts**: Defines constants and functions for interacting with Flow blockchain, including network URLs, names, and faucets, with an additional `getBlockExplorer` function for retrieving blockchain explorer URLs."}
{"code": "export const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return `https://flowscan.org/account/${address}`;\n    case Network.FLOW_TESTNET:\n      return `https://testnet.flowscan.org/account/${address}`;\n  }\n};\n", "explanation": "This block is a function named `getBlockExplorer` that returns the URL of a blockchain explorer based on the specified network (mainnet or testnet) and address provided as input.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**network.ts**: Defines constants and functions for interacting with Flow blockchain, including network URLs, names, and faucets, with an additional `getBlockExplorer` function for retrieving blockchain explorer URLs."}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Displays a toast notification with a custom message.\n\n**Functionality:** Uses `react-toastify` to display a customizable toast notification in one of four types: success, error, info, or warning (default). The notification can be customized with its own settings, such as position, auto-close duration, and theme.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/showToast.ts':\n\nDisplays a customizable toast notification using `react-toastify`, with options for message type (info, error, success, or warning), position, theme, and auto-close duration."}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "This code block is a toast notification function named `showToast`. It displays a message to the user for a specified time (3000ms) with customizable options, such as position, theme, and interactive behavior. \n\nThere are two types of notifications: \n- `info`: displays a standard informational message\n- `error`: displays an error message with a darker background color (`'light'` theme)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/showToast.ts':\n\nDisplays a customizable toast notification using `react-toastify`, with options for message type (info, error, success, or warning), position, theme, and auto-close duration."}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Define types for React component props.\n\n**Functionality:** Import necessary modules, define a `LoginProps` type with `token` and `setToken` properties, and re-export an external `Magic` type.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/types.ts':\n\n**Summary:** This file defines types for React component props, importing necessary modules and exporting an external Magic type, with a specific LoginProps type containing token and setToken properties."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "**Purpose:** Configures Tailwind CSS settings.\n\n**Functionality:** Specifies content sources, customizes themes, and enables plugins for a Tailwind CSS project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file (`tailwind.config.js`) configures Tailwind CSS settings by specifying content sources, customizing themes, and enabling plugins."}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Configuration block for a compiler (likely TypeScript).\n\n**Functionality:** Specifies compilation options, file inclusions/exclusions, and module resolution settings for a project.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/tsconfig.json':\n\n**Holistic Summary:**\nThe `tsconfig.json` file is a configuration block that specifies compilation options, inclusions/exclusions, and module resolution settings for a TypeScript project."}
{"code": "import { Flags } from '../../core/flags';\nimport BaseScaffold, { ExecaCommand } from '../../core/types/BaseScaffold';\nimport { AuthTypePrompt, NpmClientPrompt, PublishableApiKeyPrompt } from '../prompts';\n\nexport type Data = NpmClientPrompt.Data & PublishableApiKeyPrompt.Data & AuthTypePrompt.Data;\n\nexport const flags: Flags<Partial<Data>> = {\n  ...NpmClientPrompt.flags,\n  ...PublishableApiKeyPrompt.flags,\n  ...AuthTypePrompt.flags,\n};\n\nexport const definition = {\n  shortDescription: 'A dedicated wallet scaffold for Next.js using Solana',\n  featured: true,\n};\n\nexport default class SolanaDedicatedScaffold extends BaseScaffold {\n  public templateName = 'nextjs-solana-dedicated-wallet';\n\n  private data: Data;\n\n  public installationCommand: ExecaCommand = { command: 'npm', args: ['install'] };\n\n  public startCommand: ExecaCommand = { command: 'npm', args: ['run', 'dev'] };\n\n  public source: string | string[] = [\n    './public/favicon.ico',\n    './public/logo.svg',\n    './public/info.svg',\n    './public/link.svg',", "explanation": "Here is a summary of the block:\n\n**Purpose:** Defines a scaffold for creating a dedicated wallet application using Solana in Next.js.\n\n**Functionality:**\n\n* Imports flags and prompts from other modules\n* Combines prompts' data types into a single `Data` type\n* Exposes flags, definition, and commands (installation and start) to create the scaffold\n* Defines a template name and source files for the application", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts':\n\nThis scaffold defines a template for creating a dedicated Solana wallet application in Next.js, exposing flags, commands, and source files for setup and initialization purposes."}
{"code": "    './public/link_white.svg',\n    './public/redirect_bg.png',\n    './public/login_bg.png',\n    './.env.example',\n    './.eslintrc.json',\n    './.gitignore',\n    './package.json',\n    './postcss.config.js',\n    './tailwind.config.js',\n    './tsconfig.json',\n    './README.md',\n    './src/components/ui',\n    './src/components/magic/cards',\n    './src/components/magic/wallet-methods/Disconnect.tsx',\n    './src/components/magic/wallet-methods/GetIdToken.tsx',\n    './src/components/magic/wallet-methods/GetMetadata.tsx',\n    './src/components/magic/Dashboard.tsx',\n    './src/components/magic/DevLinks.tsx',\n    './src/components/magic/Header.tsx',\n    './src/components/magic/Login.tsx',\n    './src/components/magic/MagicProvider.tsx',\n    './src/components/magic/MagicDashboardRedirect.tsx',\n    './src/pages',\n    './src/styles',\n    './src/utils',\n  ];\n\n  constructor(data: Data) {\n    super();\n    this.data = data;\n\n    if (typeof this.source !== 'string') {", "explanation": "This appears to be a list of file paths. \n\nThe purpose is to list various configuration files, code modules, and other resources that are part of a project.\n\nFunctionality: It's likely used for setup or initialization purposes in an application or tool, possibly indicating what needs to be configured or loaded.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts':\n\nThis scaffold defines a template for creating a dedicated Solana wallet application in Next.js, exposing flags, commands, and source files for setup and initialization purposes."}
{"code": "      this.data.loginMethods = this.data.loginMethods.map((authType) =>\n        AuthTypePrompt.mapInputToLoginMethods(authType),\n      );\n      this.data.loginMethods.forEach((authType) => {\n        (this.source as string[]).push(`./src/components/magic/auth/${authType.replaceAll(' ', '')}.tsx`);\n        if (\n          authType === 'Discord' ||\n          authType === 'Facebook' ||\n          authType === 'Github' ||\n          authType === 'Google' ||\n          authType === 'Twitch' ||\n          authType === 'Twitter'\n        ) {\n          (this.source as string[]).push(`./public/social/${authType.replaceAll(' ', '')}.svg`);\n        }\n        if (authType.replaceAll(' ', '') === 'EmailOTP') {\n          (this.source as string[]).push('./src/components/magic/wallet-methods/UpdateEmail.tsx');\n        }\n      });\n    }\n  }\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Map login methods to corresponding UI components and SVG icons.\n\n**Functionality:**\n\n* Updates `loginMethods` array with transformed data\n* Pushes component files and SVG icon paths into the `source` array based on each auth type\n* Handles specific cases for certain auth types (e.g., social media, email OTP)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts':\n\nThis scaffold defines a template for creating a dedicated Solana wallet application in Next.js, exposing flags, commands, and source files for setup and initialization purposes."}
{"code": "# Publishable API Key found in the Magic Dashboard\nNEXT_PUBLIC_MAGIC_API_KEY=<%= publishableApiKey %>\n\n# The blockchain network\nNEXT_PUBLIC_BLOCKCHAIN_NETWORK=<%= network %>", "explanation": "This block defines two environment variables:\n\n1. `NEXT_PUBLIC_MAGIC_API_KEY`: A publishable API key for the Magic Dashboard.\n2. `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: The blockchain network name.\n\nThese variables are used in a Next.js application, likely for API calls and blockchain interactions.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/.env.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/.env.example':\n\nThis file defines two environment variables for a Next.js app: `NEXT_PUBLIC_MAGIC_API_KEY` (Magic API key) and `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` (blockchain network name), used for API calls and blockchain interactions."}
{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block appears to be a configuration file (likely in JSON format) that sets up formatting rules for code editing, specifically:\n\n* Extends the Next.js Core Web Vitals plugin\n* Enforces single quotes and 2-space indentation in code.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/.eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'scaffolds/nextjs-solana-dedicated-wallet/template/.eslintrc.json' file:\n\n**Configuration File for Code Formatting**\n\nConfigures ESLint with rules from Next.js Core Web Vitals plugin, enforcing single quotes and 2-space indentation."}
{"code": "This scaffold is meant to help you bootstrap your own projects with Magic's [Dedicated Wallet](https://magic.link/docs/auth/overview). Magic is a developer SDK that integrates with your application to enable passwordless Web3 onboarding.\n\nThe folder structure of this scaffold is designed to encapsulate all things Magic into one place so you can easily add or remove components and functionality. For example, all Magic-specific components are in the `src/components/magic` directory while generic UI components are in the `src/components/ui` directory.\n\n## Next.js\n\nThis is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n### Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** To help developers bootstrap projects using Magic's Dedicated Wallet SDK for passwordless Web3 onboarding.\n\n**Functionality:** A Next.js project scaffold that organizes Magic-specific components and generic UI components, allowing for easy addition or removal of features.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/README.md", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/README.md':\n\nThis template provides a scaffold for building Next.js projects with Magic's Dedicated Wallet SDK, allowing for easy integration of Web3 onboarding features. It includes a guide for editing pages and API routes, as well as instructions for deploying the app using Vercel."}
{"code": "You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n### Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Guide for editing and accessing Next.js pages and API routes.\n\n**Functionality:**\n\n* Edit pages in `pages/index.tsx` and see auto-updates\n* Access API routes at [http://localhost:3000/api/hello] (editable in `pages/api/hello.ts`)\n* Use `next/font` to optimize custom Google Font", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/README.md", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/README.md':\n\nThis template provides a scaffold for building Next.js projects with Magic's Dedicated Wallet SDK, allowing for easy integration of Web3 onboarding features. It includes a guide for editing pages and API routes, as well as instructions for deploying the app using Vercel."}
{"code": "You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n### Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n", "explanation": "Here is a concise summary:\n\n**Purpose:** To inform users about deploying their Next.js app using Vercel, and provide links to relevant resources.\n\n**Functionality:** Provides a link to deploy on Vercel and directs users to documentation for further information.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/README.md", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/README.md':\n\nThis template provides a scaffold for building Next.js projects with Magic's Dedicated Wallet SDK, allowing for easy integration of Web3 onboarding features. It includes a guide for editing pages and API routes, as well as instructions for deploying the app using Vercel."}
{"code": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n}\n\nmodule.exports = nextConfig\n", "explanation": "**Summary**\n\nThis block exports a configuration object for Next.js, setting `reactStrictMode` to `true`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/next.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/next.config.js':\n\n\"Enables strict React mode in Next.js configuration.\""}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "This block exports a configuration object for a Node.js module, specifying two CSS plugin configurations:\n\n* `tailwindcss`: enables Tailwind CSS functionality\n* `autoprefixer`: enables Autoprefixer functionality for vendor prefixing in CSS rules.\n\nIn short: it configures plugins for CSS processing.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/postcss.config.js':\n\nConfigures PostCSS with Tailwind CSS and Autoprefixer plugins for CSS vendor prefixing and utilities."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "This block is an SVG image that displays a checkbox icon.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point holistic summary:\n\n`info.svg`: An SVG icon displaying a checkbox."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This is an SVG (Scalable Vector Graphics) code block, which appears to be an icon or graphic element with a width and height of 24 pixels. \n\nFunctionality: None explicitly stated.\n\nPurpose: Possibly decorative or illustrative, used in digital contexts such as web pages or documents.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg':\n\nThis is a custom-designed SVG icon with a width and height of 24 pixels, likely used for decorative or illustrative purposes in digital contexts such as web pages."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block is a SVG path element that defines a complex geometric shape, likely used for visual representation or graphics purposes. It appears to be a custom-designed icon or symbol with specific shapes and lines, but its exact purpose and functionality depend on the context in which it's being used.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg':\n\nThis is a custom-designed SVG icon with a width and height of 24 pixels, likely used for decorative or illustrative purposes in digital contexts such as web pages."}
{"code": "</svg>\n", "explanation": "This appears to be an SVG (Scalable Vector Graphics) element, likely containing visual content such as images or graphics.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg':\n\nThis is a custom-designed SVG icon with a width and height of 24 pixels, likely used for decorative or illustrative purposes in digital contexts such as web pages."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG (Scalable Vector Graphics) element, which is a code snippet used to display graphics and icons on web pages. It defines a small image with a size of 24x24 pixels.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`link_white.svg` is a 24x24 pixel Scalable Vector Graphics (SVG) file defining a geometric shape for visual display on web pages or UI designs."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block appears to be a graphical SVG path element, likely used in a UI or design context, defining a geometric shape with specific coordinates and curves. The purpose is to display this shape visually, possibly as a button or icon, on a screen.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`link_white.svg` is a 24x24 pixel Scalable Vector Graphics (SVG) file defining a geometric shape for visual display on web pages or UI designs."}
{"code": "</svg>", "explanation": "This appears to be an SVG (Scalable Vector Graphics) file, likely containing graphical content.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`link_white.svg` is a 24x24 pixel Scalable Vector Graphics (SVG) file defining a geometric shape for visual display on web pages or UI designs."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "This block is an SVG (Scalable Vector Graphics) image that displays a logo icon, consisting of two white paths within a 32x32 pixel container.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'logo.svg' file is a 32x32 pixel Scalable Vector Graphics (SVG) image displaying a logo icon consisting of two white paths within a circular or elliptical shape."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) path element, which defines a geometric shape ( likely a circle or ellipse) with a white fill color.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThe 'logo.svg' file is a 32x32 pixel Scalable Vector Graphics (SVG) image displaying a logo icon consisting of two white paths within a circular or elliptical shape."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 127.14 96.36\"><defs><style>.cls-1{fill:#5865f2;}</style></defs><g id=\"\u56fe\u5c42_2\" data-name=\"\u56fe\u5c42 2\"><g id=\"Discord_Logos\" data-name=\"Discord Logos\"><g id=\"Discord_Logo_-_Large_-_White\" data-name=\"Discord Logo - Large - White\"><path class=\"cls-1\" d=\"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z\"/></g></g></g></svg>", "explanation": "This is an SVG (Scalable Vector Graphics) image that represents a Discord logo, specifically in a white color scheme.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Discord.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Discord.svg':\n\n**Discord Logo (White Color Scheme)**: An SVG image representing the Discord logo in a white color scheme."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#039be5\" d=\"M24 5A19 19 0 1 0 24 43A19 19 0 1 0 24 5Z\"/><path fill=\"#fff\" d=\"M26.572,29.036h4.917l0.772-4.995h-5.69v-2.73c0-2.075,0.678-3.915,2.619-3.915h3.119v-4.359c-0.548-0.074-1.707-0.236-3.897-0.236c-4.573,0-7.254,2.415-7.254,7.917v3.323h-4.701v4.995h4.701v13.729C22.089,42.905,23.032,43,24,43c0.875,0,1.729-0.08,2.572-0.194V29.036z\"/></svg>", "explanation": "This block is an SVG icon that displays a blue globe with white lines and text overlays, likely representing a travel or location-based service.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Facebook.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Facebook.svg':\n\n**Summary:** A Facebook-branded SVG icon featuring a blue globe with white lines and text overlays, representing a global online presence."}
{"code": "<svg width=\"98\" height=\"96\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z\" fill=\"#24292f\"/></svg>", "explanation": "This is an SVG icon block, which appears to be a graphics representation of a complex shape with various colors and lines. Its purpose and functionality are not specified in the provided text.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Github.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary**: An SVG icon file named \"Github.svg\" containing a graphical representation of a complex shape with various colors and lines, likely used as an emblem or logo for a social media platform."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"705.6\" height=\"720\" viewBox=\"0 0 186.69 190.5\" xmlns:v=\"https://vecta.io/nano\"><g transform=\"translate(1184.583 765.171)\"><path clip-path=\"none\" mask=\"none\" d=\"M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z\" fill=\"#4285f4\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z\" fill=\"#34a853\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z\" fill=\"#fbbc05\"/><path d=\"M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z\" fill=\"#ea4335\" clip-path=\"none\" mask=\"none\"/></g></svg>", "explanation": "This is an SVG block, a vector graphics image. It serves no functional purpose other than visual representation.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Google.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Google Logo (SVG)**: A non-functional, vector graphics image serving only as a logo for visual representation."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.6, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 2400 2800\" style=\"enable-background:new 0 0 2400 2800;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#FFFFFF;}\n\t.st1{fill:#9146FF;}\n</style>\n<title>Asset 2</title>\n<g>\n\t<polygon class=\"st0\" points=\"2200,1300 1800,1700 1400,1700 1050,2050 1050,1700 600,1700 600,200 2200,200 \t\"/>\n\t<g>\n\t\t<g id=\"Layer_1-2\">\n\t\t\t<path class=\"st1\" d=\"M500,0L0,500v1800h600v500l500-500h400l900-900V0H500z M2200,1300l-400,400h-400l-350,350v-350H600V200h1600\n\t\t\t\tV1300z\"/>\n\t\t\t<rect x=\"1700\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t\t<rect x=\"1150\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) file, which is a text-based format for describing 2D graphics. The purpose of this file is to render a graphical representation with shapes, colors, and other visual elements.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitch.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Template Public Social Icon:**\nThe `Twitch.svg` file is an SVG (Scalable Vector Graphics) icon that renders a 2D graphic representation using shapes and colors."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 248 204\" style=\"enable-background:new 0 0 248 204;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#1D9BF0;}\n</style>\n<g id=\"Logo_1_\">\n\t<path id=\"white_background\" class=\"st0\" d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26", "explanation": "This block is an SVG (Scalable Vector Graphics) code snippet that defines a graphical logo. It includes styling information, shapes, and colors to render a specific image.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary**: The file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitter.svg' contains SVG code that defines a graphical Twitter logo, using shapes and colors to render a specific image on a web page or document."}
{"code": "\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"/>\n</g>\n</svg>\n", "explanation": "This appears to be a snippet of SVG (Scalable Vector Graphics) code that defines a single path element within an SVG document. \n\nFunctionality: Draws a specific curved line or shape on a canvas. \n\nPurpose: Adds graphical content to a web page or document.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary**: The file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitter.svg' contains SVG code that defines a graphical Twitter logo, using shapes and colors to render a specific image on a web page or document."}
{"code": "import React from 'react';\nimport WalletMethods from './cards/WalletMethodsCard';\nimport SendTransaction from './cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from './cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A React functional component that renders a dashboard.\n\n**Functionality:** Displays user information, send transaction functionality, wallet methods, and dev links in a card-based layout.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Dashboard.tsx':\n\n**Dashboard Component**: A React functional component that displays user info, send transaction functionality, wallet methods, and dev links in an interactive card-based layout."}
{"code": "import classNames from 'classnames'\nimport Link from 'next/link'\n\nconst DevLinks = ({\n\tprimary = false,\n\tfooter = false,\n}: {\n\tprimary?: boolean\n\tfooter?: boolean\n}) => (\n\t<div className={`links ${footer ? 'footer-links' : ''}`}>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://magic.link/docs/home/welcome'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDev Docs\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://dashboard.magic.link/signup'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDashboard\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://discord.gg/magiclabs'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDiscord\n\t\t\t</a>\n\t\t</div>\n\t</div>\n)\n\nexport default DevLinks\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** A customizable component for displaying links (Dev Docs, Dashboard, Discord) with optional styling variations based on its context (primary or footer section).\n\n**Functionality:** It displays three links in a row, separated by dividers, and allows users to customize the appearance through props (`primary` and `footer`).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/DevLinks.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and to-the-point summary:\n\n\"This component renders customizable Dev Links (Dev Docs, Dashboard, Discord) with optional styling variations based on its context (primary or footer section).\""}
{"code": "import Image from 'next/image';\nimport Logo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <div className=\"flex flex-col gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "This block is a React component named `Header` that renders:\n\n* A logo image\n* The text \"Magic\" in bold font\n* The text \"Demo\" with lower opacity and normal font\n\nIt's likely used as a header or navigation bar for an application.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `Header` component:\n\n**Summary:** A React component that renders a logo image, along with bold \"Magic\" text and less opaque \"Demo\" text, suitable for use in an application's header or navigation bar."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from './Header'\n<% loginMethods.forEach(authType => { %>\n<%-`import ${authType.replaceAll(' ', '')} from './auth/${authType.replaceAll(' ', '')}';`-%>\n<% }) %>\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-<%= Math.min(loginMethods.length, 3) %> grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      <% loginMethods.forEach(authType => { %>\n      <% if (authType !== \"Social Logins\") { %>\n        <%-`<${authType.replaceAll(' ', '')} token={token} setToken={setToken} />`-%>\n      <% } %>\n  \t\t<% }) %>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "**Summary:**\n\nThis block is a React component called `Login`. It imports various authentication methods, renders a header, and displays login interfaces for each method (except \"Social Logins\"). The component expects `token` and `setToken` props from its parent.\n\n**Key Functionality:**\n\n* Imports authentication methods based on the `loginMethods` array\n* Renders a header and a grid of login interfaces\n* Exposes a `Login` component for use in other parts of the application", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise and holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Login.tsx':\n\n**Summary:** This React component, `Login`, displays login interfaces for various authentication methods, including Magic Link and others, rendering a header and grid layout. It expects `token` and `setToken` props from its parent."}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Redirect user to Magic Dashboard Signup page.\n\n**Functionality:** A React component that displays a logo, branding, and a redirect button when clicked, opening the Magic Dashboard Signup page in a new tab.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx':\n\nThis component redirects users to the Magic Dashboard Signup page while prompting them to set an API key via environment variable, providing instructions and a button to access further information."}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Prompt user to set API key in environment variable.\n\n**Functionality:** Display instruction text and button to get API keys, allowing user to access further information.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx':\n\nThis component redirects users to the Magic Dashboard Signup page while prompting them to set an API key via environment variable, providing instructions and a button to access further information."}
{"code": "import { getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { SolanaExtension } from '@magic-ext/solana';\nimport { Connection } from '@solana/web3.js';\n\nexport type Magic = MagicBase<OAuthExtension[] & SolanaExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n  connection: Connection | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n  connection: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n  const [connection, setConnection] = useState<Connection | null>(null);\n\n  useEffect(() => {\n    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        extensions: [", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A React context provider for managing user authentication with Magic, an OAuth and Solana-based solution.\n\n**Functionality:** Creates a `MagicContext` that provides a `magic` object (an instance of `MagicBase`) and a `connection` object (a Solana Web3 connection) to its children components. The `MagicProvider` component initializes the magic and connection objects when the application is loaded, using environment variables for authentication.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file:\n\n**MagicProvider.tsx**: A React context provider that initializes Magic OAuth and Solana Web3 connections via environment variables, and provides them as props to child components."}
{"code": "          new OAuthExtension(),\n          new SolanaExtension({\n            rpcUrl: getNetworkUrl(),\n          }),\n        ],\n      });\n      const connection = new Connection(getNetworkUrl());\n      setMagic(magic);\n      setConnection(connection);\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n      connection,\n    };\n  }, [magic, connection]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;\n", "explanation": "**Summary:**\n\nThis code defines a React component called `MagicProvider`. It initializes an OAuth extension and a Solana blockchain connection using provided URLs, and then passes these values as props to its children components through a context provider.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file:\n\n**MagicProvider.tsx**: A React context provider that initializes Magic OAuth and Solana Web3 connections via environment variables, and provides them as props to child components."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '@/components/ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport discord from 'public/social/Discord.svg';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\n\nconst Discord = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary:\n\n**Purpose:** Authenticate login using Discord OAuth.\n**Functionality:** Uses MagicProvider to obtain user profile data via OAuth, saves token, and sets authentication flag.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and to-the-point summary:\n\n**Purpose:** Handle Discord login functionality.\n\n**Functionality:** Authenticates user via Discord OAuth, displaying a loading indicator while authenticating, and updates local storage with authentication status."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'discord',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"discord\">Discord Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={discord} alt=\"Discord\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handle Discord login functionality.\n\n**Functionality:**\n\n* Checks if user is already logged in (using `checkLogin()`).\n* If not, allows login with Discord using `login()` function.\n* Displays a loading indicator while authenticating.\n* Updates a flag in local storage to indicate authentication status.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and to-the-point summary:\n\n**Purpose:** Handle Discord login functionality.\n\n**Functionality:** Authenticates user via Discord OAuth, displaying a loading indicator while authenticating, and updates local storage with authentication status."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Discord</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Discord;\n", "explanation": "This block is a button that, when clicked, continues with a Discord-related action.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise and to-the-point summary:\n\n**Purpose:** Handle Discord login functionality.\n\n**Functionality:** Authenticates user via Discord OAuth, displaying a loading indicator while authenticating, and updates local storage with authentication status."}
{"code": "import { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });\n        if (token) {", "explanation": "Here is a concise summary:\n\n**Purpose:** Email login component with OTP verification.\n\n**Functionality:** \n\n* Retrieves `magic` instance from parent provider\n* Handles user input for email address\n* Validates email format on submit\n* Initiates login process using `magic.auth.loginWithEmailOTP`\n* Saves token upon successful login", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**Email OTP Login Component**\n\nHandles email-based login with one-time password (OTP) verification. Accepts user input, validates email format, initiates login process via `magic.auth.loginWithEmailOTP`, saves token upon success, and clears input on successful login. Catches errors, logs, and displays error message to user."}
{"code": "          saveToken(token, setToken, 'EMAIL');\n          setEmail('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);", "explanation": "**Summary:**\n\nThis block handles a login attempt with an email-based OTP system. It:\n\n* Saves a token and clears the email input on successful login.\n* Catches errors, logs them, and displays an error message to the user based on the error type.\n* Resets a \"login in progress\" flag after attempting to log in.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**Email OTP Login Component**\n\nHandles email-based login with one-time password (OTP) verification. Accepts user input, validates email format, initiates login process via `magic.auth.loginWithEmailOTP`, saves token upon success, and clears input on successful login. Catches errors, logs, and displays error message to user."}
{"code": "            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "Here is a concise summary:\n\n**Email Input Field**\n\n* Accepts user input (email) and stores it in `email` state\n* Displays error message if email is invalid (`emailError`)\n* Enables login button when email is valid and not empty, or when already logged in (via token)\n* Submits form data to handle login on click.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n**Email OTP Login Component**\n\nHandles email-based login with one-time password (OTP) verification. Accepts user input, validates email format, initiates login process via `magic.auth.loginWithEmailOTP`, saves token upon success, and clears input on successful login. Catches errors, logs, and displays error message to user."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport facebook from 'public/social/Facebook.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Facebook = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Facebook login integration.\n\n**Functionality:** Uses the MagicProvider library to authenticate with Facebook, retrieves user profile data, saves an authentication token, and updates the UI with a loading indicator or success message.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx':\n\n**Purpose:** Handles Facebook social login functionality.\n\n**Functionality:** Initiates Facebook login, displays a loading indicator, and updates UI with success message after authentication."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'facebook',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"facebook\">Facebook Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={facebook} alt=\"Facebook\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Purpose:** This code block handles Facebook social login functionality.\n\n**Functionality:**\n\n* Checks if user is already logged in (via `checkLogin()` function)\n* If not, initiates Facebook login using Magic OAuth API\n* Displays a spinner during the login process\n* Updates a loading flag in local storage and a React state variable (`isAuthLoading`) to track login status", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx':\n\n**Purpose:** Handles Facebook social login functionality.\n\n**Functionality:** Initiates Facebook login, displays a loading indicator, and updates UI with success message after authentication."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Facebook</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Facebook;\n", "explanation": "This block is a button that allows users to continue with their Facebook account for login or authentication purposes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx':\n\n**Purpose:** Handles Facebook social login functionality.\n\n**Functionality:** Initiates Facebook login, displays a loading indicator, and updates UI with success message after authentication."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport github from 'public/social/Github.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Github = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Authenticate with GitHub using Magic OAuth.\n\n**Functionality:**\n\n* Uses Magic Provider to get authentication data\n* Checks if user is already logged in by reading from local storage\n* When authenticated, retrieves user profile data from GitHub\n* Saves authentication token using `saveToken` utility function\n* Displays a loading spinner while authenticating.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx':\n\nThis code handles the GitHub social login flow, including authentication, profile data retrieval, token saving, and state updates. It also displays a loading spinner during authentication and provides a clickable button to initiate the login process."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'github',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"github\">Github Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={github} alt=\"Github\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handle GitHub social login flow, display loading indicator, and update authentication state.\n\n**Functionality:**\n\n* Checks for existing token and logs in if empty\n* Initiates GitHub OAuth login with redirect to original URL\n* Displays spinner while authenticating\n* Updates local storage and application state with authentication status", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx':\n\nThis code handles the GitHub social login flow, including authentication, profile data retrieval, token saving, and state updates. It also displays a loading spinner during authentication and provides a clickable button to initiate the login process."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Github</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Github;\n", "explanation": "A brief summary of this block:\n\n* Purpose: A clickable button to continue with GitHub authentication.\n* Functionality: Triggers a \"Continue with Github\" action when clicked.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx':\n\nThis code handles the GitHub social login flow, including authentication, profile data retrieval, token saving, and state updates. It also displays a loading spinner during authentication and provides a clickable button to initiate the login process."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport google from 'public/social/Google.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Google = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Handle Google OAuth login using Magic Provider.\n\n**Functionality:**\n\n1. Checks if user has already logged in.\n2. Uses Magic Provider to authenticate with Google.\n3. Retrieves redirect result from Google.\n4. Saves token to local storage.\n5. Updates state to indicate authentication is complete.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx':\n\nHandles Google social login, authenticating users using Magic Provider, displaying a loading indicator, logging errors, and updating local storage with authentication status."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'google',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"google\">Google Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={google} alt=\"Google\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** Handles Google social login functionality, displays loading indicator, and logs errors.\n\n**Functionality:**\n\n* Tries to authenticate user using Google OAuth\n* Displays a spinner while authentication is in progress\n* Logs any authentication errors\n* Updates local storage with authentication status (loading or completed)", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx':\n\nHandles Google social login, authenticating users using Magic Provider, displaying a loading indicator, logging errors, and updating local storage with authentication status."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Google</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Google;\n", "explanation": "A button that initiates a \"Continue with Google\" authentication flow.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx':\n\nHandles Google social login, authenticating users using Magic Provider, displaying a loading indicator, logging errors, and updating local storage with authentication status."}
{"code": "import { useState } from 'react';\nimport { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport FormInput from '@/components/ui/FormInput';\n\nconst SMSOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!phone.match(/^\\+?\\d{10,14}$/)) {\n      setPhoneError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setPhoneError(false);\n        const token = await magic?.auth.loginWithSMS({\n          phoneNumber: phone,\n        });\n        if (token) {", "explanation": "Here is a concise summary:\n\n**Purpose:** Handles SMS-based login flow with Magic, a digital identity provider.\n\n**Functionality:**\n\n* Collects user's phone number via input form.\n* Validates phone number format.\n* Submits phone number for authentication using Magic's `loginWithSMS` method.\n* Displays a loading spinner and error message if necessary.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**This component handles SMS-based login flow with Magic, collecting phone numbers, validating formats, and submitting them for authentication. It also displays loading spinners, error messages, and provides input field validation. Additionally, it handles login errors and toggles state after completion.**"}
{"code": "          saveToken(token, setToken, 'SMS');\n          setPhone('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"sms\">SMS Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (phoneError) setPhoneError(false);", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** Handle login errors after attempting SMS login.\n\n**Functionality:**\n\n* Logs error message to console\n* Displays error message to user with `showToast` component if the error is an instance of `RPCError`\n* Toggles `loginInProgress` state to false upon completion.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**This component handles SMS-based login flow with Magic, collecting phone numbers, validating formats, and submitting them for authentication. It also displays loading spinners, error messages, and provides input field validation. Additionally, it handles login errors and toggles state after completion.**"}
{"code": "            setPhone(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : '+11234567890'}\n          value={phone}\n        />\n        {phoneError && (\n          <span className=\"self-start text-xs font-semibold text-red-700 justify-self-start\">\n            Enter a valid phone number\n          </span>\n        )}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : phone.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default SMSOTP;\n", "explanation": "Here is a concise summary:\n\nThis block is an input field for a phone number, with validation and error handling. It also has a login button that triggers a login process when clicked, either by sending an SMS/OTP or using existing authentication (if token exists).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx':\n\n**This component handles SMS-based login flow with Magic, collecting phone numbers, validating formats, and submitting them for authentication. It also displays loading spinners, error messages, and provides input field validation. Additionally, it handles login errors and toggles state after completion.**"}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitch from 'public/social/Twitch.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitch = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Authenticate a user through Twitch using OAuth magic.\n\n**Functionality:**\n\n* Uses `useMagic` hook to retrieve authentication data\n* Checks if user is already authenticated (loading flag)\n* If authenticated, uses Magic OAuth to get user profile data and save token\n* Displays loading spinner until authentication is complete", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary:\n\nThis code handles Twitch login flow using Magic OAuth, allowing users to authenticate and display their profile data while showing a loading indicator until authentication is complete."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitch',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitcg\">Twitch Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitch} alt=\"Twitch\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Handle Twitch login flow with Magic OAuth.\n\n**Functionality:**\n\n* Checks login status every time `magic` or `setToken` changes.\n* Calls `login()` function when no token exists, starting the authentication process.\n* Displays a loading indicator (`Spinner`) while authentication is in progress.\n* Sets and updates a flag to indicate if the user is currently authenticating.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary:\n\nThis code handles Twitch login flow using Magic OAuth, allowing users to authenticate and display their profile data while showing a loading indicator until authentication is complete."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitch</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitch;\n", "explanation": "This block is a button that allows users to continue or authenticate with their Twitch account.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary:\n\nThis code handles Twitch login flow using Magic OAuth, allowing users to authenticate and display their profile data while showing a loading indicator until authentication is complete."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitter from 'public/social/Twitter.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitter = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Login using Twitter OAuth with Magic provider.\n\n**Functionality:**\n\n* Uses `useMagic` hook from `../MagicProvider` to access Magic provider.\n* Checks if user is logged in via `localStorage`.\n* If logged in, uses Magic's `oauth.getRedirectResult()` method to retrieve user profile data.\n* Saves the token using `saveToken` function and updates state accordingly.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file:\n\nThis file, `Twitter.tsx`, authenticates a user using their Twitter account via OAuth redirect, leveraging the Magic provider for functionality. When clicked, it initiates a login process with Twitter, retrieving user profile data upon successful authentication, and updates local storage and React state accordingly."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitter',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitter\">Twitter Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitter} alt=\"Twitter\" height={24} width={24} className=\"mr-6\" />", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Authenticate user with Twitter account using OAuth redirect.\n\n**Functionality:**\n\n* Checks if authentication is already in progress.\n* If not, initiates login process by calling `login()` function which:\n\t+ Sets loading flag to true.\n\t+ Redirects to Twitter for authentication.\n* Updates local storage and React state with loading status.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file:\n\nThis file, `Twitter.tsx`, authenticates a user using their Twitter account via OAuth redirect, leveraging the Magic provider for functionality. When clicked, it initiates a login process with Twitter, retrieving user profile data upon successful authentication, and updates local storage and React state accordingly."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitter</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitter;\n", "explanation": "A React component block.\n\n**Purpose:** A button to continue with Twitter authentication.\n\n**Functionality:** Clicking this button initiates a continuation of the Twitter login process.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file:\n\nThis file, `Twitter.tsx`, authenticates a user using their Twitter account via OAuth redirect, leveraging the Magic provider for functionality. When clicked, it initiates a login process with Twitter, retrieving user profile data upon successful authentication, and updates local storage and React state accordingly."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { useMagic } from '../MagicProvider';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\n\nconst SendTransaction = () => {\n  const { magic, connection } = useMagic();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);\n  const [toAddressError, setToAddressError] = useState(false);", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** A React component for sending transactions ( likely Solana-related).\n\n**Functionality:** Allows users to input a recipient address and amount, validate inputs, and initiate a transaction when form is submitted.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThis React component enables users to send transactions on the Solana blockchain by inputting recipient addresses and amounts, validating inputs, and initiating transactions. It handles sending signed transactions, updating UI state, and displaying success or error messages."}
{"code": "  const [amountError, setAmountError] = useState(false);\n  const [airdropLoading, setAirdropLoading] = useState(false);\n  const [hash, setHash] = useState('');\n  const [transactionLoading, setTransactionLoadingLoading] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const handleAirdrop = useCallback(async () => {\n    try {\n      setAirdropLoading(true);\n      await connection?.requestAirdrop(new PublicKey(publicAddress as string), 2 * LAMPORTS_PER_SOL);\n      setAirdropLoading(false);\n      showToast({ message: 'Airdropped 2 SOL!', type: 'success' });\n    } catch (e: any) {\n      setAirdropLoading(false);\n      if ((e.message as string).includes('429')) {\n        showToast({ message: 'Limit reaced', type: 'error' });\n      } else {\n        showToast({\n          message: 'Something went wrong. Check console for more details',", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** Manage state and handle air drop functionality for a user's public address.\n\n**Functionality:**\n\n* Stores and updates various state values (e.g., errors, loading states)\n* Handles air drop request using `connection.requestAirdrop`\n* Updates UI with success/failure messages and error handling.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThis React component enables users to send transactions on the Solana blockchain by inputting recipient addresses and amounts, validating inputs, and initiating transactions. It handles sending signed transactions, updating UI state, and displaying success or error messages."}
{"code": "          type: 'error',\n        });\n      }\n      console.log(e);\n    }\n  }, [connection]);\n\n  const sendTransaction = useCallback(async () => {\n    const userPublicKey = new PublicKey(publicAddress as string);\n    const receiverPublicKey = new PublicKey(toAddress as string);\n    if (!PublicKey.isOnCurve(receiverPublicKey.toBuffer())) {\n      return setToAddressError(true);\n    }\n    if (isNaN(Number(amount))) {\n      return setAmountError(true);\n    }\n    setDisabled(true);\n\n    try {\n      setTransactionLoadingLoading(true);\n      const hash = await connection?.getLatestBlockhash();\n      if (!hash) return;\n\n      const transaction = new Transaction({\n        feePayer: userPublicKey,\n        ...hash,\n      });\n\n      const lamportsAmount = Number(amount) * LAMPORTS_PER_SOL;\n\n      console.log('amount: ' + lamportsAmount);\n\n      const transfer = SystemProgram.transfer({\n        fromPubkey: userPublicKey,\n        toPubkey: receiverPublicKey,\n        lamports: lamportsAmount,\n      });\n\n      transaction.add(transfer);\n", "explanation": "**Summary:**\n\nThis block handles sending a transaction on Solana blockchain.\n\n* It checks if public addresses are valid and amount is numeric.\n* If valid, it creates a new transaction with fee payer and latest blockhash.\n* It adds transfer instruction to send funds from sender's account to receiver's account.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThis React component enables users to send transactions on the Solana blockchain by inputting recipient addresses and amounts, validating inputs, and initiating transactions. It handles sending signed transactions, updating UI state, and displaying success or error messages."}
{"code": "      const signedTransaction = await magic?.solana.signTransaction(transaction, {\n        requireAllSignatures: false,\n        verifySignatures: true,\n      });\n\n      const signature = await connection?.sendRawTransaction(\n        Buffer.from(signedTransaction?.rawTransaction as string, 'base64'),\n      );\n\n      setHash(signature ?? '');\n      showToast({\n        message: `Transaction successful sig: ${signature}`,\n        type: 'success',\n      });\n      setTransactionLoadingLoading(false);\n      setDisabled(false);\n      setToAddress('');\n      setAmount('');\n    } catch (e: any) {\n      setTransactionLoadingLoading(false);\n      setDisabled(false);\n      setToAddress('');\n      setAmount('');\n      showToast({ message: 'Transaction failed', type: 'error' });\n      console.log(e);\n    }\n  }, [connection, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      <div>\n        <FormButton onClick={handleAirdrop} disabled={airdropLoading}>", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Send a signed transaction on Solana blockchain.\n\n**Functionality:** Signs, sends, and verifies a transaction using Magic and the Solana connection, updates UI state accordingly, and displays success or error messages.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThis React component enables users to send transactions on the Solana blockchain by inputting recipient addresses and amounts, validating inputs, and initiating transactions. It handles sending signed transactions, updating UI state, and displaying success or error messages."}
{"code": "          {airdropLoading ? (\n            <div className=\"w-full loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            'Airdrop 2 SOL'\n          )}\n        </FormButton>\n        <Divider />\n      </div>\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput value={amount} onChange={(e: any) => setAmount(e.target.value)} placeholder={`Amount (SOL)`} />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        {transactionLoading ? (\n          <div className=\"w-full loading-container\">\n            <Spinner />\n          </div>\n        ) : (\n          'Send Transaction'\n        )}\n      </FormButton>\n      {hash ? (\n        <>\n          <Spacer size={20} />", "explanation": "Here is a concise summary:\n\nThis block contains a form for sending SOL tokens, with fields for recipient address, amount, and buttons to send or cancel the transaction. It also displays loading indicators during execution and error messages if input is invalid.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThis React component enables users to send transactions on the Solana blockchain by inputting recipient addresses and amounts, validating inputs, and initiating transactions. It handles sending signed transactions, updating UI state, and displaying success or error messages."}
{"code": "          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "The `<TransactionHistory />` component is rendered within a `Card` element when a condition is met, effectively displaying transaction history data in a visual container.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThis React component enables users to send transactions on the Solana blockchain by inputting recipient addresses and amounts, validating inputs, and initiating transactions. It handles sending signed transactions, updating UI state, and displaying success or error messages."}
{"code": "import { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport { logout } from '@/utils/common';\nimport { useMagic } from '../MagicProvider';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getNetworkName } from '@/utils/network';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\n\nconst UserInfo = ({ token, setToken }: LoginProps) => {\n  const { magic, connection } = useMagic();\n\n  const [balance, setBalance] = useState('...');\n  const [copied, setCopied] = useState('Copy');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const [publicAddress, setPublicAddress] = useState(localStorage.getItem('user'));\n\n  useEffect(() => {\n    const checkLoginandGetBalance = async () => {\n      const isLoggedIn = await magic?.user.isLoggedIn();", "explanation": "Here is a concise summary:\n\n**Purpose:** Display user information, including balance and public address.\n\n**Functionality:**\n\n* Retrieves user login status and balance using Magic SDK\n* Updates display with user's public address from local storage\n* Displays spinner while refreshing data\n* Allows copying of public address button", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\n**Purpose:** Display user's Solana address, balance, and allow refresh.\n\n**Functionality:**\n\n* Retrieves public address and updates display with loader\n* Displays SOL balance and allows refreshing\n* Provides copy-to-clipboard functionality for public address"}
{"code": "      if (isLoggedIn) {\n        try {\n          const metadata = await magic?.user.getInfo();\n          if (metadata) {\n            localStorage.setItem('user', metadata?.publicAddress!);\n            setPublicAddress(metadata?.publicAddress!);\n          }\n        } catch (e) {\n          console.log('error in fetching address: ' + e);\n        }\n      }\n    };\n    setTimeout(() => checkLoginandGetBalance(), 5000);\n  }, []);\n\n  const getBalance = useCallback(async () => {\n    if (publicAddress && connection) {\n      const balance = await connection.getBalance(new PublicKey(publicAddress));\n      if (balance == 0) {\n        setBalance('0');\n      } else {\n        setBalance((balance / LAMPORTS_PER_SOL).toString());\n      }\n      console.log('BALANCE: ', balance);\n    }\n  }, [connection, publicAddress]);\n\n  const refresh = useCallback(async () => {\n    setIsRefreshing(true);\n    await getBalance();\n    setTimeout(() => {\n      setIsRefreshing(false);\n    }, 500);\n  }, [getBalance]);\n\n  useEffect(() => {\n    if (connection) {", "explanation": "Here is a concise summary:\n\n**Purpose:** Fetch user's balance from Solana blockchain when they're logged in.\n\n**Functionality:**\n\n1. Check login status every 5 seconds.\n2. If logged in, retrieve user metadata and store public address in local storage.\n3. Use stored public address to fetch balance from Solana connection.\n4. Update balance state with fetched value.\n5. Allow refreshing of balance by calling `refresh` function, which updates balance state.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\n**Purpose:** Display user's Solana address, balance, and allow refresh.\n\n**Functionality:**\n\n* Retrieves public address and updates display with loader\n* Displays SOL balance and allows refreshing\n* Provides copy-to-clipboard functionality for public address"}
{"code": "      refresh();\n    }\n  }, [connection, refresh]);\n\n  useEffect(() => {\n    setBalance('...');\n  }, [magic]);\n\n  const disconnect = useCallback(async () => {\n    if (magic) {\n      await logout(setToken, magic);\n    }\n  }, [magic, setToken]);\n\n  const copy = useCallback(() => {\n    if (publicAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(publicAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, publicAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"Wallet\">Wallet</CardHeader>\n      <CardLabel leftHeader=\"Status\" rightAction={<div onClick={disconnect}>Disconnect</div>} isDisconnect />\n      <div className=\"flex-row\">\n        <div className=\"green-dot\" />\n        <div className=\"connected\">Connected to {getNetworkName()}</div>\n      </div>\n      <Divider />\n      <CardLabel leftHeader=\"Address\" rightAction={!publicAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>} />", "explanation": "Here is a summary of the purpose and functionality of this code block:\n\n**Purpose:** This code manages a user's wallet connection, balance, and public address.\n\n**Functionality:**\n\n* Refreshes the connection state when needed.\n* Updates the balance based on magic value changes.\n* Allows the user to disconnect from their account.\n* Enables copying of the public address to clipboard.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\n**Purpose:** Display user's Solana address, balance, and allow refresh.\n\n**Functionality:**\n\n* Retrieves public address and updates display with loader\n* Displays SOL balance and allows refreshing\n* Provides copy-to-clipboard functionality for public address"}
{"code": "      <div className=\"code\">{publicAddress?.length == 0 ? 'Fetching address..' : publicAddress}</div>\n      <Divider />\n      <CardLabel\n        leftHeader=\"Balance\"\n        rightAction={\n          isRefreshing ? (\n            <div className=\"loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            <div onClick={refresh}>Refresh</div>\n          )\n        }\n      />\n      <div className=\"code\">{balance} SOL</div>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n", "explanation": "Here is a concise summary:\n\n**Block Purpose:** Display user information, including Solana address and balance.\n\n**Functionalities:**\n\n* Show \"Fetching address...\" while loading public address\n* Display public address once available\n* Display SOL balance\n* Provide refresh functionality with loading animation or text label.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\n**Purpose:** Display user's Solana address, balance, and allow refresh.\n\n**Functionality:**\n\n* Retrieves public address and updates display with loader\n* Displays SOL balance and allows refreshing\n* Provides copy-to-clipboard functionality for public address"}
{"code": "import React, {useState} from 'react'\nimport Disconnect from '../wallet-methods/Disconnect'\nimport Divider from '@/components/ui/Divider'\nimport {LoginProps} from '@/utils/types'\nimport Card from '@/components/ui/Card'\nimport CardHeader from '@/components/ui/CardHeader'\nimport {LoginMethod} from '@/utils/common'\nimport GetIdToken from '../wallet-methods/GetIdToken'\nimport GetMetadata from '../wallet-methods/GetMetadata'\n<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n<%-`import UpdateEmail from '../wallet-methods/UpdateEmail'`-%>\n<% }%>\n\nconst WalletMethods = ({token, setToken}: LoginProps) => {\n\tconst [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n\t\tlocalStorage.getItem('loginMethod') as LoginMethod\n\t)\n\treturn (\n\t\t<Card>\n\t\t\t<CardHeader id='methods'>Wallet Methods</CardHeader>\n\t\t\t<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n\t\t\t\t<%-`{loginMethod && loginMethod == 'EMAIL' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<UpdateEmail />", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Render a card with wallet methods, including authentication options and account management.\n\n**Functionality:**\n\n* Conditionally imports and renders additional components based on available login methods.\n* Displays a list of wallet methods using `Card` and `CardHeader` components.\n* Stores and retrieves the current login method from local storage using `useState`.\n* Allows users to update their email address if \"EmailOTP\" is an enabled login method.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\nThis React component, `WalletMethods`, displays a card with user authentication options and account management details, conditionally rendering additional components based on available login methods. It allows users to update their email address if \"EmailOTP\" is enabled."}
{"code": "\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</>\n\t\t\t\t)}`-%>\n\t\t\t<% }%>\n\t\t\t<GetIdToken />\n\t\t\t<Divider />\n\t\t\t<GetMetadata />\n\t\t\t<Divider />\n\t\t\t<Disconnect token={token} setToken={setToken} />\n\t\t</Card>\n\t)\n}\n\nexport default WalletMethods\n", "explanation": "**Summary:**\n\nThis React component, `WalletMethods`, contains a sequence of functional components that perform various actions related to user authentication and metadata retrieval.\n\n**Key Components:**\n\n1. `<GetIdToken />`: Retrieves an ID token.\n2. `<GetMetadata />`: Retrieves user metadata.\n3. `<Disconnect />`: Disconnects the user (with `token` and `setToken` props).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\nThis React component, `WalletMethods`, displays a card with user authentication options and account management details, conditionally rendering additional components based on available login methods. It allows users to update their email address if \"EmailOTP\" is enabled."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {logout} from '@/utils/common'\nimport {LoginProps} from '@/utils/types'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\n\nconst Disconnect = ({setToken}: LoginProps) => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst disconnect = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tawait logout(setToken, magic)\n\t\t\tsetDisabled(false)\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic, setToken])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={disconnect}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[115px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'disconnect()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tDisconnects user from dApp.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Disconnect\n", "explanation": "**Purpose:** A button that disconnects a user from a dApp when clicked.\n\n**Functionality:**\n\n* Checks if magic is available before proceeding.\n* Toggles a disabled state on the button while processing.\n* Calls logout function with setToken and magic as arguments.\n* Displays a spinner animation during processing.\n* Updates disabled state to false upon completion or error.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `Disconnect.tsx` file:\n\n**Summary:** A clickable button that disconnects a user from a dApp, toggling a disabled state while processing."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {useMagic} from '../MagicProvider'\nimport showToast from '@/utils/showToast'\nimport Spinner from '@/components/ui/Spinner'\n\nconst GetIdToken = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst getWalletType = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tconst idToken = await magic.user.getIdToken()\n\t\t\tsetDisabled(false)\n\t\t\tconsole.log('ID Token: ' + idToken)\n\t\t\tshowToast({\n\t\t\t\tmessage: 'Please check console for the ID Token Log',\n\t\t\t\ttype: 'success',\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={getWalletType}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[86px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'getIdToken()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>", "explanation": "**Summary:**\n\nThis block is a React component called `GetIdToken`. It retrieves an ID token using the Magic library, updates the UI accordingly, and displays a success message with instructions to check the console for the log. The functionality includes:\n\n* Using the Magic library to get an ID token\n* Displaying a loading state while waiting for the token\n* Showing a success message when the token is obtained", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe `GetIdToken` component retrieves an ID token using Magic, displays a loading state while waiting, and shows a success message with instructions to check the console once obtained."}
{"code": "\t\t\t\tGenerates a Decentralized Id Token which acts as a proof of\n\t\t\t\tauthentication to resource servers.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GetIdToken\n", "explanation": "This block generates an \"Id Token\" that proves user authentication for access to decentralized resources.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\nThe `GetIdToken` component retrieves an ID token using Magic, displays a loading state while waiting, and shows a success message with instructions to check the console once obtained."}
{"code": "import React, { useCallback, useState } from 'react';\nimport showToast from '@/utils/showToast';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetMetadata = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getMetadata = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const userInfo = await magic.user.getInfo();\n      setDisabled(false);\n      showToast({\n        message: `Public Address: ${userInfo.publicAddress}`,\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getMetadata} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[220px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'getInfo()'\n        )}\n      </button>", "explanation": "Here is a concise summary:\n\n**Purpose:** Retrieves user metadata from Magic.\n\n**Functionality:** \n\n* Fetches user info when button clicked\n* Displays spinner while fetching (disables button)\n* Shows success toast with public address upon completion\n* Catches errors and logs them to console", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx':\n\n**Purpose:** Retrieves user metadata from Magic.\n\n**Functionality:** Fetches user info on button click, displays progress indicator, and shows success message with public address upon completion."}
{"code": "      <div className=\"wallet-method-desc\">Retrieves information for the authenticated user.</div>\n    </div>\n  );\n};\n\nexport default GetMetadata;\n", "explanation": "**Purpose:** Retrieves metadata information for the authenticated user.\n\n**Functionality:** Returns user data through a function or method, likely \"GetMetadata\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx':\n\n**Purpose:** Retrieves user metadata from Magic.\n\n**Functionality:** Fetches user info on button click, displays progress indicator, and shows success message with public address upon completion."}
{"code": "import React, {useCallback, useState} from 'react'\nimport ErrorText from '@/components/ui/ErrorText'\nimport Spacer from '@/components/ui/Spacer'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\nimport FormInput from '@/components/ui/FormInput'\nimport showToast from '@/utils/showToast'\nimport {RPCError} from 'magic-sdk'\n\nconst UpdateEmail = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\tconst [email, setEmail] = useState('')\n\tconst [emailError, setEmailError] = useState(false)\n\n\tconst updateEmail = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tif (\n\t\t\t\t!email.match(\n\t\t\t\t\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetEmailError(true)\n\t\t\t\tsetDisabled(false)\n\t\t\t} else {\n\t\t\t\tsetDisabled(true)\n\t\t\t\tawait magic.auth.updateEmailWithUI({email, showUI: true})\n\t\t\t\tshowToast({message: 'Email Updated!', type: 'success'})\n\t\t\t\tsetDisabled(false)\n\t\t\t\tsetEmail('')\n\t\t\t}\n\t\t} catch (error) {", "explanation": "Here is a concise summary of the purpose and functionality of this code block:\n\n**Purpose:** Update user email address using Magic Authentication SDK.\n\n**Functionality:**\n\n1. Retrieves user data from `MagicProvider`.\n2. Handles form input for new email address.\n3. Validates new email format on submit.\n4. Enables/disables submit button based on validation.\n5. Submits updated email request to Magic Authentication SDK.\n6. Displays success toast message and resets form fields on successful update.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file:\n\n**Purpose:** Update user email address using Magic Authentication SDK.\n\n**Functionality:** Validates, submits, and displays toast message upon successful update of user email via form input and Magic Provider API."}
{"code": "\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t\tif (error instanceof RPCError) {\n\t\t\t\tshowToast({message: error.message, type: 'error'})\n\t\t\t} else {\n\t\t\t\tshowToast({message: 'Update email failed', type: 'error'})\n\t\t\t}\n\t\t}\n\t}, [magic, email])\n\n\tconst handleEmailChange = (e: any) => {\n\t\tsetEmailError(false)\n\t\tsetEmail(e.target.value)\n\t}\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<FormInput\n\t\t\t\tvalue={email}\n\t\t\t\tonChange={handleEmailChange}\n\t\t\t\tplaceholder='New Email'\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={updateEmail}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[76px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'updateEmail()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tInitiates the update email flow that allows a user to change\n\t\t\t\ttheir email address.\n\t\t\t</div>\n\t\t\t{emailError ? (\n\t\t\t\t<div className='mb-[-10px]'>\n\t\t\t\t\t<Spacer size={20} />\n\t\t\t\t\t<ErrorText>Enter a valid email!</ErrorText>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Handle update email button click.\n\n**Functionality:** Updates email address when button clicked, displaying error messages if updates fails or invalid input is provided.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file:\n\n**Purpose:** Update user email address using Magic Authentication SDK.\n\n**Functionality:** Validates, submits, and displays toast message upon successful update of user email via form input and Magic Provider API."}
{"code": "export default UpdateEmail\n", "explanation": "This line exports a component named \"UpdateEmail\" as the default export.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file:\n\n**Purpose:** Update user email address using Magic Authentication SDK.\n\n**Functionality:** Validates, submits, and displays toast message upon successful update of user email via form input and Magic Provider API."}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "Here is a concise summary:\n\n**Purpose:** A reusable UI component (Card) for rendering content within a container.\n\n**Functionality:** Accepts children elements or components, wraps them in a `<div class=\"card\">` element, and returns it.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Card.tsx':\n\n**Card Component:** A reusable UI container that wraps children elements or components within a `<div class=\"card\">` element."}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "**Summary**\n\nThe `CardHeader` component is a reusable React header element that accepts children content and an ID prop, returning an `<h1>` tag with the provided attributes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n\"The CardHeader component is a reusable React header element that displays child content within an `<h1>` tag.\""}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** A reusable React component for displaying card labels with optional left header, right action, and disconnect button.\n\n**Functionality:** Renders a container div with two child elements: a fixed left label and an optional right action (or disconnect) button that toggles based on props.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\n**CardLabel.tsx**: A reusable React component displaying a card with customizable label, optional header, and toggleable action/disconnect button."}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "**Purpose:** A reusable React component for creating a simple divider element.\n\n**Functionality:** Renders a basic HTML `<div>` element with a class name of 'divider'.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Summary:**\n`Divider.tsx`: A simple, reusable React component that renders a basic HTML `<div>` element for creating dividers in UI layouts."}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "**Summary:**\n\nThis block is a React functional component named `ErrorText`. Its purpose is to render a customizable error message by wrapping the provided child content in a `<div>` with class name 'error'.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary:\n\n`ErrorText`: A customizable error message component that wraps child content in a `<div>` with class name 'error'."}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "**Summary:**\n\nThis is a React component named `FormButton`. It's a reusable button element that can be customized with children content, an onClick event handler, and a disabled state.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`FormButton`: A customizable, reusable button component for React applications."}
{"code": "import React from 'react'\n\ninterface Props {\n\tvalue: string\n\tonChange: (e: any) => void\n\tplaceholder: string\n}\n\nconst FormInput = ({value, onChange, placeholder}: Props) => {\n  return (\n    <input\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "**Summary:**\n\nThis is a React functional component, `FormInput`, that renders an HTML input element with dynamic values and event handlers. It expects props for value, onChange, and placeholder, and exports as a default module.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`FormInput`: A React functional component rendering a customizable HTML input field with dynamic values and event handling capabilities."}
{"code": "import React from 'react'\n\nconst Spacer = ({size}: {size: number}) => {\n\treturn <div style={{height: `${size}px`}} />\n}\n\nexport default Spacer\n", "explanation": "This block is a reusable React component called \"Spacer\", which takes a single prop (\"size\") and returns a div element with that height, effectively adding space in a UI layout.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n**Spacer.tsx**: A reusable React component that adds vertical space to a UI layout by returning a `div` element with a specified height."}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "**Summary:**\n\nThis block is a React functional component named \"Spinner\" that renders a loading animation icon using SVG elements. It has no props or state, but can be styled through class names like \"flex\", \"animate-spin\", etc.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary:\n\n**Spinner Component**: A reusable React component rendering an SVG loading animation icon with customizable fill color, ideal for displaying spinning animations in applications."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "The purpose of this block is to render a customizable SVG spinner animation, where the fill color can be changed using the `fill` attribute.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary:\n\n**Spinner Component**: A reusable React component rendering an SVG loading animation icon with customizable fill color, ideal for displaying spinning animations in applications."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "Here is a summary of the block:\n\n**Purpose:** A React component that renders a link to display transaction history.\n\n**Functionality:** Displays a \"Transaction History\" button with an icon, which links to a blockchain explorer website when clicked. The link is generated based on the user's public address stored in local storage.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis component renders a \"Transaction History\" button that links to a blockchain explorer site when clicked, with the link dynamically generated from the user's public address stored in local storage."}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "Here is a concise summary:\n\nThis block imports global CSS styles and serves as the entry point for Next.js applications, rendering child components with their respective props.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/_app.tsx':\n\n\"Global CSS styles are imported and serve as the entry point for a Next.js application, rendering child components with their respective props.\""}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "**Summary:**\n\nThis block is a Next.js document component that defines the HTML structure for a web page, including language settings, head content, main app rendering, and script loading.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a concise summary of the file:\n\n\"The `nextjs-solana-dedicated-wallet` template's `_document.tsx` file defines the basic HTML structure for web pages, including language settings, head content, main app rendering, and script loading.\""}
{"code": "import MagicProvider from '../components/magic/MagicProvider'\nimport {useEffect, useState} from 'react'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Login from '@/components/magic/Login'\nimport Dashboard from '@/components/magic/Dashboard'\nimport MagicDashboardRedirect from '@/components/magic/MagicDashboardRedirect'\n\nexport default function Home() {\n\tconst [token, setToken] = useState('')\n\n\tuseEffect(() => {\n\t\tsetToken(localStorage.getItem('token') ?? '')\n\t}, [setToken])\n\n\treturn (\n\t\t<MagicProvider>\n\t\t\t<ToastContainer />\n\t\t\t{process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n\t\t\t\ttoken.length > 0 ? (\n\t\t\t\t\t<Dashboard token={token} setToken={setToken} />\n\t\t\t\t) : (\n\t\t\t\t\t<Login token={token} setToken={setToken} />\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<MagicDashboardRedirect />\n\t\t\t)}\n\t\t</MagicProvider>\n\t)\n}\n", "explanation": "Here is a concise summary of the block:\n\n**Home page component**\n\nThis React component handles user authentication using the Magic Provider, displaying either a login form or dashboard depending on the presence of an authentication token in local storage.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/index.tsx':\n\n**Home page component**: Authenticates users with Magic Provider, displaying login form if no token exists in local storage, otherwise showing dashboard."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Tailwind CSS Configuration**\n\nThis block configures Tailwind CSS, importing fonts from Google Fonts and setting up utility classes for styling. It also defines custom CSS variables (`--foreground-rgb`, etc.) and applies them to HTML elements using Tailwind's `@apply` directive.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Styles for UI Components**\n\nThis block defines styles for various user interface components, including:\n\n* Spacing and positioning for `.nft` elements\n* Container styles for `.cards-container`\n* Dropdown menu styles for `.network-dropdown`, `.active-network`, and related classes\n* Logo styling for `.magic-logo`\n\nThe styles are written in a CSS-like syntax using the Tailwind CSS utility-first approach.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px] bg-no-repeat;\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 transition-[0.1s] text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A set of CSS styles for various HTML elements, primarily related to login and home page layouts.\n\n**Functionality:** Defines styles for text, layout, and button interactions on the home page, login page, and login button.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": "  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {\n  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;", "explanation": "**Summary**\n\nThis block is a collection of Tailwind CSS classes that style various UI components, including:\n\n* A link container with responsive padding\n* A link divider\n* A footer links section\n* Wallet method containers with hover and active effects.\n\nThese classes apply styles such as flexbox layouts, colors, typography, and animations to create a consistent design across different screen sizes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": "}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {\n  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n", "explanation": "Here is a concise summary:\n\nThis block defines styles for UI components, including:\n\n* A wallet method description (text)\n* A form input field\n* A form button with hover and active states\n* A loading container with a spinning animation\n\nThese styles are likely used in a web application to display user interfaces.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": "@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];", "explanation": "Here is a concise summary of the code block:\n\n**Purpose:** Define styles for UI components using Tailwind CSS classes.\n\n**Functionality:** The code defines keyframes for animation, styles for cards, card headers, labels, buttons (action/disconnect), and a toast notification component.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": "  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {\n  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**CSS Styles**\n\nThis block defines various CSS styles for a web application, including typography, layout, colors, and background images. The styles are organized into classes such as `.error`, `.divider`, `.flex-row`, etc., which can be applied to HTML elements to style them consistently throughout the app.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": "  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {\n  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "Here is a concise summary:\n\nThis block defines styles for two types of buttons: `.social-login-button` and `.api-button`. It sets layout, colors, borders, and interactions (hover, active, disabled) for these buttons using Tailwind CSS utility classes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis block defines various CSS styles using Tailwind CSS for a web application, covering typography, layout, colors, background images, and animations. It includes styles for UI components such as wallet methods, forms, buttons, loading containers, error messages, social login buttons, API buttons, cards, headers, labels, and toast notifications. The styles are organized into classes that can be applied to HTML elements to style them consistently throughout the app."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveToken = (token: string, setToken: Dispatch<SetStateAction<string>>, loginMethod: LoginMethod) => {\n  localStorage.setItem('token', token);\n  setToken(token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n};\n", "explanation": "**Purpose:** Handles user authentication functionality.\n\n**Functionality:** Provides functions for logging out and saving tokens, allowing users to securely store and manage their login credentials.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\nThis file (`common.ts`) provides utilities for user authentication in Next.js, specifically handling logout functionality and token management to ensure secure login credential storage and management."}
{"code": "export enum Network {\n  SOLANA_DEVNET = 'solana-devnet',\n  SOLANA_MAINNET_BETA = 'solana-mainnet',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.SOLANA_DEVNET:\n      return 'https://solana-devnet.g.alchemy.com/v2/NUZZICdM-417xyZwDhka3615uai5GQFr';\n    case Network.SOLANA_MAINNET_BETA:\n      return 'https://solana-mainnet.g.alchemy.com/v2/9nCoa06gjvDwYyTdV5ruBp2Qe4_wZnaO';\n    default:\n      throw new Error('Network not supported');\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.SOLANA_DEVNET:\n      return 'Solana (Devnet)';\n    case Network.SOLANA_MAINNET_BETA:\n      return 'Solana (Mainnet Beta)';\n  }\n};\n\nexport const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.SOLANA_DEVNET:\n      return `https://explorer.solana.com/address/${address}?cluster=devnet`;\n    case Network.SOLANA_MAINNET_BETA:", "explanation": "**Purpose:** This block of code provides functions to determine network settings for a blockchain application.\n\n**Functionality:**\n\n1. **Enum**: Defines two network types: SOLANA_DEVNET and SOLANA_MAINNET_BETA.\n2. **getNetworkUrl**: Returns the API URL for the specified network based on an environment variable.\n3. **getNetworkName**: Returns the human-readable name of the network based on an environment variable.\n4. **getBlockExplorer**: Returns a block explorer URL for a given address and network, using Alchemy's APIs.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `network.ts` file:\n\n\"This TypeScript file defines utility functions for determining network settings in a Solana-based application. It includes constants (network types), functions to retrieve API URLs, human-readable network names, and block explorer URLs using Alchemy's APIs.\""}
{"code": "      return `https://explorer.solana.com/address/${address}`;\n  }\n};\n", "explanation": "This block appears to be a JavaScript function that returns a URL for a Solana blockchain explorer, linking an address with the string `${address}`.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `network.ts` file:\n\n\"This TypeScript file defines utility functions for determining network settings in a Solana-based application. It includes constants (network types), functions to retrieve API URLs, human-readable network names, and block explorer URLs using Alchemy's APIs.\""}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "Here is a concise summary:\n\n**Purpose:** Display a customizable toast notification.\n\n**Functionality:** Shows a message in a pop-up window with various styles (info, success, error, warning) for a specified duration, with options to customize appearance and behavior.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\n**ShowToast utility**: Displays customizable toast notifications in various styles (info, success, error, warning) for a specified duration, with options to customize appearance and behavior."}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "This block is a toast notification function that displays alerts with customizable options, such as position, duration, and theme. It allows for two types of notifications: \"info\" (default) and \"error\".", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary:\n\n**ShowToast utility**: Displays customizable toast notifications in various styles (info, success, error, warning) for a specified duration, with options to customize appearance and behavior."}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Defines types for a login component, including props and state management.\n\n**Functionality:** Provides props (token and setToken) and imports Magic type from another module.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here's a holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/types.ts':\n\nThis file defines types for a dedicated wallet component, specifically providing props (token and setToken) for managing token state."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "This is a Tailwind CSS configuration file, which specifies:\n\n* The source files for theme utilization\n* Customized background image gradients\n* No additional plugins are being used.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the `tailwind.config.js` file:\n\n**Tailwind Config File**\n\nConfigures Tailwind CSS with no additional plugins, using custom theme utilities and gradients for backgrounds."}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "This block is a configuration object for a TypeScript compiler, defining settings for compilation, including target library, module system, and file name casing consistency.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary:\n\n`tsconfig.json`: A TypeScript compiler configuration file setting target library, module system, and file naming conventions for consistent compilation."}
{"code": "/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport type { Flags } from 'core/flags';\nimport type { ValuesOf } from 'core/types/utility-types';\nimport { ExecaCommand } from 'core/types/BaseScaffold';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { Select, MultiSelect, Input } = require('enquirer');\n\nexport namespace ProjectNamePrompt {\n  export type Data = {\n    projectName: string;\n  };\n\n  export const askProjectName = async () =>\n    new Input({\n      name: 'projectName',\n      message: 'What is your project named?',\n      initial: 'awesome-magic-app',\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    projectName: {\n      type: String,\n      description: 'The name of your project.',\n    },\n  };\n}\n\nexport namespace ConfigurationPrompt {\n  export type Data = {\n    configuration: string;\n  };\n\n  export const askConfiguration = async () =>\n    new Select({\n      name: 'configuration',\n      message: 'Select a configuration to start with:',\n      choices: [", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Define prompts for project configuration, including project name and configuration selection.\n\n**Functionality:** Provides two prompts:\n\n1. `askProjectName`: Asks user for a project name and returns it as a string.\n2. `askConfiguration`: Presents a list of configurations to choose from and returns the selected configuration as a string.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "        { name: 'quickstart', message: 'Quickstart (Nextjs, Dedicated Wallet, Polygon Testnet, Email OTP)' },\n        { name: 'custom', message: 'Custom Setup (Choose product, network, etc.)' },\n      ],\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    configuration: {\n      type: String,\n      description: 'The configuration type of your project.',\n    },\n  };\n}\n\nexport namespace ProductPrompt {\n  export type Data = {\n    product: string;\n  };\n\n  export const flags: Flags<Partial<Data>> = {\n    product: {\n      type: String,\n      description: 'The product type of your project.',\n    },\n  };\n}\n\nexport namespace PublishableApiKeyPrompt {\n  export type Data = {\n    publishableApiKey: string;\n  };\n\n  const validate = (value: string) =>\n    value === '' || value.startsWith('pk')\n      ? true\n      : '--publishable-api-key should look like `pk_live_...` or `pk_test_...`';\n\n  export const publishableApiKeyPrompt = async () =>\n    new Input({", "explanation": "Here is a concise summary:\n\nThis block defines a set of prompts with corresponding flags for user input, specifically for setting up project configurations and product types. It also includes validation logic for a publishable API key prompt.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "      message: 'Enter Magic publishable API key from https://dashboard.magic.link:',\n      // @ts-ignore\n      hint: '(leave blank to skip for now)',\n      validate,\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    publishableApiKey: {\n      type: String,\n      description: 'The Magic publishable API key for your app.',\n    },\n  };\n}\n\nexport namespace NpmClientPrompt {\n  const clients = ['npm', 'yarn'];\n\n  export type Data = {\n    npmClient: ValuesOf<typeof clients>;\n  };\n\n  export const flags: Flags<Partial<Data>> = {\n    npmClient: {\n      type: String,\n      validate: (value: string) => (clients.includes(value) ? true : `\\`${value}\\` is not a valid NPM client.`),\n      description: 'The NPM client of your choice. (one of: npm, yarn)',\n    },\n  };\n\n  export function getInstallCommand(data: Data) {\n    return data.npmClient === 'yarn' ? ['yarn', 'install'] : ['npm', 'install'];\n  }\n\n  export function getStartCommand(packageJsonScript: string): ExecaCommand | ((data: Data) => ExecaCommand) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** This code defines a prompt for users to input their Magic publishable API key and select an NPM client (npm or yarn).\n\n**Functionality:**\n\n* Asks user to enter their Magic publishable API key\n* Validates the input as either 'leave blank' or a valid API key\n* Prompts user to choose an NPM client (either npm or yarn)\n* Uses the chosen NPM client to generate install and start commands.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "    return (data: Data) => {\n      return data.npmClient === 'npm'\n        ? { command: 'npm', args: ['run', packageJsonScript] }\n        : { command: 'yarn', args: [packageJsonScript] };\n    };\n  }\n}\n\nexport namespace BlockchainNetworkPrompt {\n  export type Data = {\n    network: string;\n  };\n\n  export const chainPrompt = async () =>\n    new Select({\n      name: 'chain',\n      message: 'Which blockchain do you want to use?',\n      choices: [\n        { name: 'evm', message: 'EVM (Ethereum, Etherlink, Polygon, etc.)' },\n        { name: 'solana', message: 'Solana' },\n        { name: 'flow', message: 'Flow' },\n      ],\n    }).run();\n\n  export const solanaNetworkPrompt = async () =>\n    new Select({\n      name: 'network',\n      message: 'Which network would you like to use?',\n      hint: 'We recommend starting with a test network',\n      choices: [\n        { name: 'solana-mainnet', message: 'Mainnet' },\n        { name: 'solana-devnet', message: 'Devnet' },\n      ],\n    }).run();\n", "explanation": "Here is a concise summary:\n\n**Function Block Summary**\n\nThis block returns an object with a \"command\" and \"args\" property, based on whether the `npmClient` is set to `'npm'` or not. If `'npm'`, it sets \"command\" to `'npm'` and \"args\" to run a script from `packageJsonScript`. Otherwise, it sets \"command\" to `'yarn'` and \"args\" to run the same script.\n\n**Exported Functions**\n\nTwo functions are exported:\n\n* `chainPrompt`: Asynchronously prompts the user to select a blockchain (EVM, Solana, or Flow) using a dropdown menu.\n* `solanaNetworkPrompt`: Asynchronously prompts the user to select a Solana network (Mainnet or Devnet).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "  export const flowNetworkPrompt = async () =>\n    new Select({\n      name: 'network',\n      message: 'Which network would you like to use?',\n      hint: 'We recommend starting with a test network',\n      choices: [\n        { name: 'flow-mainnet', message: 'Mainnet' },\n        { name: 'flow-testnet', message: 'Testnet' },\n      ],\n    }).run();\n\n  export const evmNetworkPrompt = async () =>\n    new Select({\n      name: 'network',\n      message: 'Which network would like to use?',\n      hint: 'We recommend starting with a test network',\n      choices: [\n        { name: 'ethereum', message: 'Ethereum (Mainnet)' },\n        { name: 'ethereum-sepolia', message: 'Ethereum (Sepolia Testnet)' },\n        { name: 'etherlink', message: 'Etherlink (Mainnet)' },\n        { name: 'etherlink-testnet', message: 'Etherlink (Testnet)' },\n        { name: 'polygon', message: 'Polygon (Mainnet)' },\n        { name: 'polygon-amoy', message: 'Polygon (Amoy Testnet)' },\n        { name: 'zksync', message: 'zkSync (Mainnet)' },", "explanation": "Here is a concise summary:\n\nThis block exports two async functions, `flowNetworkPrompt` and `evmNetworkPrompt`, which display interactive prompts to select a network using the `Select` function from an inquirer library. The prompts offer choices for different networks (e.g. Mainnet, Testnets) to connect to.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "        { name: 'zksync-sepolia', message: 'zkSync (Sepolia Testnet)' },\n      ],\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    network: {\n      alias: 'n',\n      type: String,\n      description: 'The blockchain network to use',\n    },\n  };\n}\n\nexport namespace AuthTypePrompt {\n  const authMethods = [\n    { name: 'Email OTP' },\n    { name: 'SMS OTP', hint: '(Must toggle on at https://dashboard.magic.link)' },\n    {\n      name: 'Social Logins',\n      hint: '(Must configure at https://dashboard.magic.link)',\n      choices: ['Google', 'Github', 'Discord', 'Twitter', 'Twitch'],\n    },\n  ];\n\n  export type Data = {\n    loginMethods: string[];\n  };\n\n  export const loginMethodsPrompt = async () =>\n    new MultiSelect({\n      message:\n        'How do you want your users to log in to their wallet? See Magic docs for help (https://magic.link/docs/auth/overview)',\n      hint: '(<space> to select, <return> to submit)',\n      choices: authMethods,\n      validate: (value: string | any[]) => {", "explanation": "Here is a concise summary:\n\n**Purpose:** Prompt user for authentication methods.\n\n**Functionality:** Allows user to select multiple login options from a list, with hints and validation.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "        if (!value.length) {\n          return `Please use spacebar to select at least one login option.`;\n        }\n\n        return true;\n      },\n      result(names: string[]) {\n        return names.filter((x: string) => !x.includes('Social Logins'));\n      },\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    loginMethods: {\n      type: [String],\n      description: `The auth method(s) of your choice. You can provide this flag multiple times to select multiple methods. (one of: ${authMethods\n        .map((method) => (method.choices ? method.choices.map((choice) => choice).join(', ') : method.name))\n        .join(', ')})`,\n      validate: () => {\n        const invalid: string[] = [];\n\n        if (invalid.length) {\n          return `Received unknown auth method(s): (${invalid.join(', ')})`;\n        }\n      },\n    },\n  };\n\n  export const mapInputToLoginMethods = (input: string) => {\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('emailotp')) {\n      return 'EmailOTP';\n    }\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Validate login methods input by user.\n\n**Functionality:**\n\n* Ensures at least one login option is selected.\n* Filters out login options containing \"Social Logins\".\n* Validates login method(s) provided by user, allowing multiple selections from a list of predefined auth methods.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('smsotp')) {\n      return 'SMSOTP';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('google')) {\n      return 'Google';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('github')) {\n      return 'Github';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('discord')) {\n      return 'Discord';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('twitter')) {\n      return 'Twitter';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('twitch')) {\n      return 'Twitch';\n    }\n\n    return input;\n  };\n}\n", "explanation": "**Functionality:** This block checks for specific keywords in an input string, returning a corresponding value if found.\n\n**Purpose:** To identify and categorize user inputs based on presence of certain keywords (e.g. \"SMSOTP\", \"Google\", etc.).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scaffolds/prompts.ts':\n\nThis module defines a set of prompts for project configuration, authentication methods, and network selection. It provides functions to ask users for input, validate their responses, and generate commands based on user selections. The prompts cover various aspects such as project name, Magic publishable API key, NPM client choice, blockchain/network selection, and login method validation."}
{"code": "#!/usr/bin/env ts-node-script\n\nimport fs from 'fs';\nimport path from 'path';\nimport { promisify } from 'util';\nimport Terser from 'terser';\n\nconst readFilePromise = promisify(fs.readFile);\nconst writeFilePromise = promisify(fs.writeFile);\n\n/**\n * Gets all JavaScript file paths from `dir` recursively.\n */\nfunction getAllFiles(dir: string, recursionState: string[] = []) {\n  const files = fs.readdirSync(dir);\n\n  files.forEach((file) => {\n    if (fs.statSync(`${dir}/${file}`).isDirectory()) {\n      recursionState = getAllFiles(`${dir}/${file}`, recursionState);\n    } else {\n      recursionState.push(path.join(__dirname, '..', dir, '/', file));\n    }\n  });\n\n  return recursionState.filter((filePath) => filePath.match(/\\.js$/));\n}\n\n/**\n * Minify all the files given by `filePaths`.\n */\nasync function minifyFiles(filePaths: string[]) {\n  await Promise.all([\n    filePaths.map(async (filePath) => {\n      const { code }: any = await Terser.minify(await readFilePromise(filePath, 'utf8'), { compress: true });", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Minifies JavaScript files recursively in a specified directory.\n\n**Functionality:** Uses `terser` to minify all `.js` files found in the directory and its subdirectories, storing the results in the original files.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/minify.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scripts/minify.ts':\n\n**Minifies JavaScript files in ./dist directory recursively using terser, overwriting original files with minified versions.**"}
{"code": "      return writeFilePromise(filePath, code);\n    }),\n  ]);\n}\n\nconsole.log('Optimizing dist files...');\nconst files = getAllFiles('./dist');\nminifyFiles(files);\n", "explanation": "**Summary**\n\nThis block of code optimizes JavaScript files in a directory by minifying them using an external function `minifyFiles()`. It first retrieves all files from the specified directory (`./dist`) and then passes them to the `minifyFiles()` function for processing.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/minify.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the file 'scripts/minify.ts':\n\n**Minifies JavaScript files in ./dist directory recursively using terser, overwriting original files with minified versions.**"}
{"code": "#!/usr/bin/env ts-node-script\n\nimport path from 'path';\nimport fs from 'fs';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore - `@vercel/ncc` is not typed\nimport ncc from '@vercel/ncc';\nimport parse from 'parse-package-name';\nimport bytes from 'bytes';\nimport JSON5 from 'json5';\nimport JSONstringifyCompact from 'json-stringify-pretty-compact';\n\nconsole.log();\nconsole.log(`Pre-compiling dependencies...`);\nconsole.log();\n\nconst baseDir = path.resolve(__dirname, '..', 'compiled');\n\n// Cleanup current state of `compiled/*` directory...\nconst cleanups = fs.readdirSync(baseDir).filter((i) => fs.statSync(path.join(baseDir, i)).isDirectory());\nfor (const dir of cleanups) {\n  fs.rmSync(path.join(baseDir, dir), { recursive: true });\n}\n\n// Pre-compile certain node_modules defined in `compiled/config.jsonc`\nconst pkgs = JSON5.parse(fs.readFileSync(path.join(baseDir, 'config.jsonc')).toString('utf-8'));\nPromise.all<number>(\n  pkgs.map(async (pkg: any) => {\n    await precompileDependency(pkg);", "explanation": "**Purpose:** Pre-compiles dependencies for a project.\n\n**Functionality:** \n\n1. Cleans up an existing `compiled` directory.\n2. Reads configuration from `compiled/config.jsonc`.\n3. Iterates through configured packages, pre-compiling each one using the `precompileDependency` function.\n4. Uses various libraries (e.g., `@vercel/ncc`, `parse-package-name`) to facilitate the process.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/ncc.ts", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file `scripts/ncc.ts`:\n\n**Purpose:** Pre-compiles dependencies for a project by cleaning up existing compiled files, reading configuration, pre-compiling each package, and writing compiled code to the file system.\n\n**Functionality:**\n\n* Cleans up existing compiled files\n* Iterates through configured packages and pre-compiles each one using various libraries\n* Writes compiled code to the file system with LICENSE and package.json files\n* Updates TSConfig paths and writes updated tsconfig.json file\n* Handles errors by logging them and exiting the process\n\n**Key Features:**\n\n* Uses helper functions to extract metadata from package.json and write minimal package.json files\n* Supports minification and es6 target for compiled packages"}
{"code": "    const footprint = await getDirectorySize(path.join(baseDir, pkg));\n    console.log(`\u2713 ${pkg} (${bytes(footprint)})`);\n    return footprint;\n  }),\n)\n  .then((result) => {\n    console.log();\n    console.log(`Total footprint: ${bytes(result.reduce((acc, next) => acc + next, 0))}`);\n    console.log();\n\n    updateTSConfigPaths();\n  })\n  .catch(handleError);\n\n/**\n * Get the size of a directory's contents, recursively.\n */\nasync function getDirectorySize(dir: string): Promise<number> {\n  const listing = (await fs.promises.readdir(dir)).map((i) => path.join(dir, i));\n\n  return listing.reduce(async (acc, curr) => {\n    if (fs.statSync(curr).isDirectory()) {\n      return Promise.resolve((await acc) + (await getDirectorySize(curr)));\n    }\n\n    const { size } = fs.statSync(curr);\n    return Promise.resolve((await acc) + size);\n  }, Promise.resolve(0));\n}\n\n/**\n * Pre-compile a node_module dependnecy using `@vercel/ncc`.\n */\nasync function precompileDependency(input: string) {\n  // Parse the specified package information", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Measure and report the total size of dependencies in a Node.js project.\n\n**Functionality:** \n\n1. Get the size of each directory's contents recursively using `getDirectorySize`.\n2. Log the size of each dependency.\n3. Sum up the sizes of all dependencies and log the total footprint.\n4. Update TSConfig paths using `updateTSConfigPaths` (not shown in this code snippet).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/ncc.ts", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file `scripts/ncc.ts`:\n\n**Purpose:** Pre-compiles dependencies for a project by cleaning up existing compiled files, reading configuration, pre-compiling each package, and writing compiled code to the file system.\n\n**Functionality:**\n\n* Cleans up existing compiled files\n* Iterates through configured packages and pre-compiles each one using various libraries\n* Writes compiled code to the file system with LICENSE and package.json files\n* Updates TSConfig paths and writes updated tsconfig.json file\n* Handles errors by logging them and exiting the process\n\n**Key Features:**\n\n* Uses helper functions to extract metadata from package.json and write minimal package.json files\n* Supports minification and es6 target for compiled packages"}
{"code": "  // and resolve a destination path\n  const pkg = parse(input);\n  const destination = path.join(baseDir, pkg.name);\n\n  /**\n   * Write a file with the given data to `[root]/compiled/[pkg.name]`.\n   */\n  const write = (file: string, data: any) => {\n    if (file && data) {\n      fs.writeFileSync(file, data, { encoding: 'utf-8' });\n    }\n  };\n\n  /**\n   * Once the dependency is built using `@vercel/ncc`,\n   * write the output to `[root]/compiled/[pkg.name]`.\n   */\n  const postBuild = ({ code }: any) => {\n    if (!fs.existsSync(destination)) {\n      fs.mkdirSync(destination, { recursive: true });\n    }\n\n    write(path.join(destination, 'index.js'), code);\n    writeLicense();\n    writePackageJson();\n  };\n\n  /**\n   * Write a LICENSE file for the dependency currently being compiled.\n   */\n  const writeLicense = () => {\n    const pkgPath = path.join(__dirname, '../node_modules', pkg.name);\n    const licensePath = [\n      path.join(pkgPath, './LICENSE'),\n      path.join(pkgPath, './LICENSE.md'),", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Write compiled dependencies to a file system.\n\n**Functionality:**\n\n* Parses input data into a package object\n* Resolves destination path for writing compiled code\n* Writes output from `@vercel/ncc` build to `[root]/compiled/[pkg.name]`\n* Writes LICENSE and package.json files to the same directory", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/ncc.ts", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file `scripts/ncc.ts`:\n\n**Purpose:** Pre-compiles dependencies for a project by cleaning up existing compiled files, reading configuration, pre-compiling each package, and writing compiled code to the file system.\n\n**Functionality:**\n\n* Cleans up existing compiled files\n* Iterates through configured packages and pre-compiles each one using various libraries\n* Writes compiled code to the file system with LICENSE and package.json files\n* Updates TSConfig paths and writes updated tsconfig.json file\n* Handles errors by logging them and exiting the process\n\n**Key Features:**\n\n* Uses helper functions to extract metadata from package.json and write minimal package.json files\n* Supports minification and es6 target for compiled packages"}
{"code": "      path.join(pkgPath, './LICENSE.txt'),\n      path.join(pkgPath, './license'),\n      path.join(pkgPath, './license.md'),\n      path.join(pkgPath, './license.txt'),\n    ].find((file) => fs.existsSync(file));\n\n    if (licensePath) {\n      write(path.join(destination, 'LICENSE'), fs.readFileSync(licensePath));\n    }\n  };\n\n  /**\n   * Get the `package.json` file for the dependency currently being compiled.\n   */\n  const getPackageJson = () => {\n    const pkgJsonPath = path.join(__dirname, '../node_modules', pkg.name, 'package.json');\n    return JSON.parse(fs.readFileSync(pkgJsonPath).toString('utf-8'));\n  };\n\n  /**\n   * Write a minimal `package.json` file for the dependency currently being compiled.\n   */\n  const writePackageJson = () => {\n    const { name, version, author, license } = getPackageJson();\n\n    const data = `${JSON.stringify({\n      name,\n      version,\n      main: 'index.js',\n      ...(author ? { author } : undefined),\n      ...(license ? { license } : undefined),\n    })}\\n`;\n", "explanation": "Here is a summary of the code block:\n\n**Purpose:** Find and write the `LICENSE` file for a dependency being compiled.\n\n**Functionality:**\n\n* Finds one of multiple possible `LICENSE` files in the package directory\n* Writes the found `LICENSE` file to the destination directory\n\nAdditionally, two helper functions are defined:\n\n* **getPackageJson**: Extracts metadata from the `package.json` file of the current dependency.\n* **writePackageJson**: Generates a minimal `package.json` file for the current dependency.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/ncc.ts", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file `scripts/ncc.ts`:\n\n**Purpose:** Pre-compiles dependencies for a project by cleaning up existing compiled files, reading configuration, pre-compiling each package, and writing compiled code to the file system.\n\n**Functionality:**\n\n* Cleans up existing compiled files\n* Iterates through configured packages and pre-compiles each one using various libraries\n* Writes compiled code to the file system with LICENSE and package.json files\n* Updates TSConfig paths and writes updated tsconfig.json file\n* Handles errors by logging them and exiting the process\n\n**Key Features:**\n\n* Uses helper functions to extract metadata from package.json and write minimal package.json files\n* Supports minification and es6 target for compiled packages"}
{"code": "    write(path.join(destination, 'package.json'), data);\n  };\n\n  const externals = Object.keys(getPackageJson().peerDependencies ?? {});\n  return ncc(require.resolve(pkg.name), { cache: false, minify: true, quiet: true, target: 'es6', externals })\n    .then(postBuild)\n    .catch(handleError);\n}\n\nfunction updateTSConfigPaths() {\n  const pathToTSConfig = path.join(__dirname, '..', 'tsconfig.json');\n  // TSConfig depends on JSON5\n  const tsconfig = JSON5.parse(fs.readFileSync(pathToTSConfig).toString('utf-8'));\n\n  tsconfig.compilerOptions.paths = {\n    'core/*': ['core/*'],\n    'scaffolds/*': ['scaffolds/*'],\n    'compiled/*': ['compiled/*', 'node_modules/@types/*', 'node_modules/*'],\n  };\n\n  for (const pkg of pkgs) {\n    tsconfig.compilerOptions.paths[pkg] = [`compiled/${pkg}`, `node_modules/@types/${pkg}`, `node_modules/${pkg}`];\n  }\n\n  const data = JSONstringifyCompact(tsconfig, { maxLength: 120 });\n\n  fs.writeFileSync(pathToTSConfig, `${data}\\n`, { encoding: 'utf-8' });\n}\n\n/**", "explanation": "Here is a concise summary:\n\n**Block Purpose:** Update `package.json` and `tsconfig.json` files.\n\n**Functionality:**\n\n1. Writes data to `package.json`.\n2. Updates `externals` variable based on `peerDependencies`.\n3. Builds package using `ncc` with minification and es6 target.\n4. Updates `paths` in `tsconfig.json` to point to compiled packages.\n5. Writes updated `tsconfig.json` file with compacted JSON format.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/ncc.ts", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file `scripts/ncc.ts`:\n\n**Purpose:** Pre-compiles dependencies for a project by cleaning up existing compiled files, reading configuration, pre-compiling each package, and writing compiled code to the file system.\n\n**Functionality:**\n\n* Cleans up existing compiled files\n* Iterates through configured packages and pre-compiles each one using various libraries\n* Writes compiled code to the file system with LICENSE and package.json files\n* Updates TSConfig paths and writes updated tsconfig.json file\n* Handles errors by logging them and exiting the process\n\n**Key Features:**\n\n* Uses helper functions to extract metadata from package.json and write minimal package.json files\n* Supports minification and es6 target for compiled packages"}
{"code": " * Log the given `err` and exit the process with status code `1`.\n */\nfunction handleError<T extends Error>(err: T) {\n  console.error(err);\n  process.exit(1);\n}\n", "explanation": "**Purpose:** Handles errors by logging them and exiting the process.\n\n**Functionality:** Logs an error message and immediately stops the process with a status code of 1.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/ncc.ts", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file `scripts/ncc.ts`:\n\n**Purpose:** Pre-compiles dependencies for a project by cleaning up existing compiled files, reading configuration, pre-compiling each package, and writing compiled code to the file system.\n\n**Functionality:**\n\n* Cleans up existing compiled files\n* Iterates through configured packages and pre-compiles each one using various libraries\n* Writes compiled code to the file system with LICENSE and package.json files\n* Updates TSConfig paths and writes updated tsconfig.json file\n* Handles errors by logging them and exiting the process\n\n**Key Features:**\n\n* Uses helper functions to extract metadata from package.json and write minimal package.json files\n* Supports minification and es6 target for compiled packages"}
{"code": "const { execSync, exec } = require('child_process');\nconst watch = require('watch');\nlet fs = require('fs-extra');\nconst { setupTsconfig, convertCommandToString, readTemplateDirs } = require('./utils');\nconst path = require('path');\n\nsetupTsconfig();\nconst { templateDevData } = require('../../scaffolds/dev-data');\n\nlet nextProcess = null;\n\nconst template = process.argv[2];\n\nif (!template) {\n  console.log('Please specify a template to use');\n  process.exit(1);\n}\n\nconst ejsData = templateDevData[template];\n\nconst scaffoldInstance = new (require(`../../scaffolds/${template}/scaffold.ts`).default)(ejsData);\n\nconsole.log('Rebuilding template...');\nfs.rmSync('./.template-dev', { recursive: true, force: true });\nfs.mkdir('./.template-dev');\n\nscaffoldInstance.source.forEach((source) => {\n  fs.cpSync(`./scaffolds/${template}/template/${source}`, `./.template-dev/${source}`, { recursive: true });\n});\n\nprocess.chdir('./.template-dev');\n\nconsole.log('Building EJS files...');", "explanation": "**Purpose:** A Node.js script that scaffolds a new project template using an EJS template engine.\n\n**Functionality:**\n\n1. Requires necessary dependencies.\n2. Sets up a TypeScript configuration.\n3. Retrieves template data from a specified template.\n4. Creates a new instance of the scaffold class corresponding to the template.\n5. Copies template files into a `.template-dev` directory.\n6. Changes directory to the `.template-dev` directory.\n7. Logs messages indicating the rebuilding and building of EJS files processes.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/template_dev/ejs_dev_script.js", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scripts/template_dev/ejs_dev_script.js':\n\n**Summary:** A Node.js script that uses EJS template engine to scaffold a new project by copying files from a template, setting up TypeScript configuration, and running development processes.\n\nThis combines the purpose and functionality of the two code block summaries you provided. Let me know if this is what you were looking for!"}
{"code": "readTemplateDirs(path.resolve(`./`), (err, filePaths) => {\n  if (err) {\n    console.log(err);\n  }\n\n  filePaths.forEach((filePath) => {\n    if (!filePath.includes('/public/') && !filePath.includes('/.next/')) {\n      const result = execSync(\n        `ejs .${filePath.replace(process.cwd(), '')} -i ${encodeURI(JSON.stringify(ejsData))} -o .${filePath.replace(\n          process.cwd(),\n          '',\n        )}`,\n      );\n    }\n  });\n\n  if (fs.existsSync('./.env.example')) {\n    fs.renameSync('./.env.example', './.env');\n  }\n\n  console.log('Installing dependencies...');\n  execSync(convertCommandToString(scaffoldInstance.installationCommand), { stdio: 'inherit' });\n\n  console.log('Running dev server...');\n  nextProcess = exec(convertCommandToString(scaffoldInstance.startCommand), { stdio: 'inherit' });\n  nextProcess.stdout.on('data', function (data) {\n    console.log(data);\n  });\n  console.log('Running dev server with process ID: ', nextProcess.pid);\n\n  watch.createMonitor(`../scaffolds/${template}`, function (monitor) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Initialize a Next.js project by installing dependencies, setting up environment variables, and running the dev server.\n\n**Functionality:**\n\n1. Reads template directories.\n2. Processes templates using EJS.\n3. Installs dependencies using npm.\n4. Runs the Next.js dev server.\n5. Watches for changes in the project directory.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/template_dev/ejs_dev_script.js", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scripts/template_dev/ejs_dev_script.js':\n\n**Summary:** A Node.js script that uses EJS template engine to scaffold a new project by copying files from a template, setting up TypeScript configuration, and running development processes.\n\nThis combines the purpose and functionality of the two code block summaries you provided. Let me know if this is what you were looking for!"}
{"code": "    console.log('Watching for changes in template files...');\n    monitor.on('created', function (f, stat) {\n      console.log('Created:', f);\n      fs.copyFileSync(f, `./${f.split('template')[1]}`);\n    });\n    monitor.on('changed', function (f, curr, prev) {\n      console.log('Changed:', f);\n      fs.copyFileSync(f, `./${f.split('template')[1]}`);\n    });\n    monitor.on('removed', function (f, stat) {\n      console.log('Removed:', f);\n      fs.rmSync(`./${f.split('template')[1]}`, { recursive: true, force: true });\n    });\n  });\n\n  process.on('beforeExit', () => {\n    console.log('Killing dev server...');\n    nextProcess.kill();\n    process.exit();\n  });\n\n  process.on('SIGTERM', () => {\n    console.log('Killing dev server...');\n    nextProcess.kill();\n    process.exit();\n  });\n\n  process.on('SIGINT', () => {\n    console.log('Killing dev server...');\n    nextProcess.kill();\n    process.exit();\n  });\n});\n", "explanation": "Here is a concise summary:\n\nThis block monitors template files for changes, copying new or updated files into the current directory, and removes any deleted files. It also sets up exit handlers to kill a child process and terminate itself when receiving termination signals (SIGTERM, SIGINT) or exiting normally (beforeExit).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/template_dev/ejs_dev_script.js", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a holistic summary of the file 'scripts/template_dev/ejs_dev_script.js':\n\n**Summary:** A Node.js script that uses EJS template engine to scaffold a new project by copying files from a template, setting up TypeScript configuration, and running development processes.\n\nThis combines the purpose and functionality of the two code block summaries you provided. Let me know if this is what you were looking for!"}
{"code": "const tsNode = require('ts-node');\nlet json = require('json5');\nlet fs = require('fs-extra');\n\n//setting up tsconfig for ts-node to compile the scaffold.ts file of any scaffold\nconst setupTsconfig = () => {\n  let tsconfig = {\n    compilerOptions: {\n      ...json.parse(fs.readFileSync(`./tsconfig.json`)).compilerOptions,\n    },\n    transpileOnly: true,\n  };\n\n  tsNode.register(tsconfig);\n};\n\nconst convertCommandToString = (command) => {\n  return command.command.concat(' ', command.args.join(' '));\n};\n\nconst readTemplateDirs = (root, done) => {\n  let filePaths = [];\n  fs.readdir(root, (err, files) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    let pending = files.length;\n    if (!pending) return done(null, filePaths);\n    files.forEach((file) => {\n      const stats = fs.statSync(`${root}/${file}`);\n      if (stats && stats.isDirectory()) {\n        readTemplateDirs(`${root}/${file}`, async (error, res) => {\n          filePaths = filePaths.concat(res);\n          if (!--pending) done(null, filePaths);", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Set up TypeScript compilation for scaffold files and read template directories.\n\n**Functionality:**\n\n* Load required modules (ts-node, json5, fs-extra)\n* Set up tsconfig for ts-node to compile scaffold.ts files\n* Convert command objects to strings\n* Recursively read template directory paths and store them in an array.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/template_dev/utils.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scripts/template_dev/utils.js':\n\n**Summary:** Utility functions for compiling TypeScript scaffold files and processing template directories, enabling efficient development setup and directory management."}
{"code": "        });\n      } else {\n        filePaths.push(`${root}/${file}`);\n        if (!--pending) done(null, filePaths);\n      }\n    });\n  });\n  return filePaths;\n};\n\nmodule.exports = {\n  setupTsconfig,\n  convertCommandToString,\n  readTemplateDirs,\n};\n", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Utility function to process template directories.\n\n**Functionality:** Recursively walks through template directory tree, gathering file paths until all files are processed (i.e., `pending` counter reaches 0). Returns an array of processed file paths.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/template_dev/utils.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise holistic summary of the file 'scripts/template_dev/utils.js':\n\n**Summary:** Utility functions for compiling TypeScript scaffold files and processing template directories, enabling efficient development setup and directory management."}
{"code": "{\n  \"extends\": \"../tsconfig.json\",\n\n  \"compilerOptions\": {\n    \"strict\": false,\n  },\n\n  \"include\": [\"**/*.ts\", \"**/*.tsx\"],\n}\n", "explanation": "This block is a JSON configuration file for a TypeScript compiler, specifying:\n\n* Inheritance from a parent configuration file (`../tsconfig.json`)\n* Compiler options:\n\t+ Disabling strict type checking\n* File inclusion patterns: `.ts` and `.tsx` files in the current directory and subdirectories", "metadata": {"repo": "magiclabs/make-magic-app", "file": "scripts/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'scripts/tsconfig.json' file:\n\n\"This TypeScript configuration inherits from parent settings, disables strict type checking, and includes all .ts and .tsx files in the project directory and its subdirectories.\""}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"module\": \"commonjs\",\n    \"lib\": [\"esnext\"],\n    \"outDir\": \"./dist\",\n    \"jsx\": \"react\",\n    \"declaration\": false,\n    \"sourceMap\": false,\n    \"downlevelIteration\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"allowJs\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"core/*\": [\"core/*\"],\n      \"scaffolds/*\": [\"scaffolds/*\"],\n      \"compiled/*\": [\"compiled/*\", \"node_modules/@types/*\", \"node_modules/*\"],\n      \"chalk\": [\"compiled/chalk\", \"node_modules/@types/chalk\", \"node_modules/chalk\"],\n      \"decamelize\": [\"compiled/decamelize\", \"node_modules/@types/decamelize\", \"node_modules/decamelize\"],\n      \"execa\": [\"compiled/execa\", \"node_modules/@types/execa\", \"node_modules/execa\"],\n      \"got\": [\"compiled/got\", \"node_modules/@types/got\", \"node_modules/got\"],\n      \"react\": [\"compiled/react\", \"node_modules/@types/react\", \"node_modules/react\"],", "explanation": "This block is a configuration object for a JavaScript compiler, likely Webpack or TSC (TypeScript Compiler). It sets various options such as:\n\n* Targeting ES6 syntax\n* Using CommonJS modules\n* Outputting compiled code to a \"dist\" directory\n* Enabling React JSX support and strict type checking\n\nThe block also defines several path aliases for convenience.", "metadata": {"repo": "magiclabs/make-magic-app", "file": "tsconfig.json", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'tsconfig.json' file:\n\n**TSConfig:**\n\n* Targets ES6 syntax\n* Uses CommonJS modules\n* Compiles to \"dist\" directory\n* Enables React JSX support & strict type checking\n\n**Dependencies:**\n\n* Lists dependencies with compiled and type versions (e.g., `react-is`, `tar`)\n\n**Project Settings:**\n\n* Includes specific files/directories (`core`, `scaffolds`)\n* Excludes specified file/directory (`scaffolds/*/template`)"}
{"code": "      \"react-is\": [\"compiled/react-is\", \"node_modules/@types/react-is\", \"node_modules/react-is\"],\n      \"tar\": [\"compiled/tar\", \"node_modules/@types/tar\", \"node_modules/tar\"],\n      \"wrap-ansi\": [\"compiled/wrap-ansi\", \"node_modules/@types/wrap-ansi\", \"node_modules/wrap-ansi\"],\n      \"yargs-parser\": [\"compiled/yargs-parser\", \"node_modules/@types/yargs-parser\", \"node_modules/yargs-parser\"]\n    }\n  },\n  \"include\": [\"core\", \"scaffolds\", \"scripts\", \"compiled\"],\n  \"exclude\": [\"scaffolds/*/template\"]\n}\n", "explanation": "This block defines a configuration object for a project, specifying:\n\n* A list of dependencies (e.g., `react-is`, `tar`, etc.) with their compiled and type versions.\n* A set of files to include in the project (e.g., `core`, `scaffolds`, etc.).\n* A specific file or directory to exclude from the project build (`scaffolds/*/template`).", "metadata": {"repo": "magiclabs/make-magic-app", "file": "tsconfig.json", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/make-magic-app`\n\n**Purpose:** A template for building Magic apps using React.\n\n**Content:** Boilerplate code and instructions for creating Magic apps, including setup, configuration, and example components.", "file_summary": "Here is a concise summary of the 'tsconfig.json' file:\n\n**TSConfig:**\n\n* Targets ES6 syntax\n* Uses CommonJS modules\n* Compiles to \"dist\" directory\n* Enables React JSX support & strict type checking\n\n**Dependencies:**\n\n* Lists dependencies with compiled and type versions (e.g., `react-is`, `tar`)\n\n**Project Settings:**\n\n* Includes specific files/directories (`core`, `scaffolds`)\n* Excludes specified file/directory (`scaffolds/*/template`)"}
