{"code": "# Example Avalanche\n\nExample Avalanche uses React as its framework.\n\n## Run it locally\n\n1. Clone https://github.com/magiclabs/example-avalanche.git\n1. Run `npm install` to get all the dependencies\n1. Run `npm start` to get `localhost:3000` up. Done!\n", "explanation": "**Purpose:** Instructions for running a React-based example project called \"Avalanche\".\n\n**Functionality:** A step-by-step guide on how to clone, install dependencies, and run the project locally.", "metadata": {"repo": "magiclabs/example-avalanche", "file": "README.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here is a concise and holistic summary of the file 'README.md':\n\n\"Avalanche\" React Project: A step-by-step guide to cloning, installing dependencies, and running this example project locally.\""}
{"code": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\t<meta name=\"theme-color\" content=\"#000000\">\n\t<!--\n      manifest.json provides metadata used when your web app is added to the\n      homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/\n    -->\n\t<link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\">\n\t<link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n\t<!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n\t<title>React App</title>\n</head>\n", "explanation": "This block is the HTML header section of a web page, defining metadata for search engines, mobile devices, and desktop applications. It includes links to external resources (manifest.json and favicon.ico) and sets the title of the page to \"React App\".", "metadata": {"repo": "magiclabs/example-avalanche", "file": "public/index.html", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of 'public/index.html':\n\n**Main Functionality:**\n\nA basic HTML template serving as a base for web applications.\n\n**Key Features:**\n\n1. Links to external resources (manifest.json, favicon.ico)\n2. Sets page title to \"React App\"\n3. Displays message if JavaScript is disabled\n4. Empty container element (#root) for rendering content\n\n**Purpose:**\n\nServes as a starting point for development and building web applications."}
{"code": "<body>\n\t<noscript>\n\t\tYou need to enable JavaScript to run this app.\n\t</noscript>\n\t<div id=\"root\"></div>\n\t<!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n</body>\n\n</html>", "explanation": "This is an HTML template file with a simple structure. It serves as a base for web applications and includes:\n\n* A \"noscript\" block that displays a message if JavaScript is disabled\n* An empty \"div\" element (id=\"root\") where content will be rendered\n* Basic instructions for development and building the application", "metadata": {"repo": "magiclabs/example-avalanche", "file": "public/index.html", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of 'public/index.html':\n\n**Main Functionality:**\n\nA basic HTML template serving as a base for web applications.\n\n**Key Features:**\n\n1. Links to external resources (manifest.json, favicon.ico)\n2. Sets page title to \"React App\"\n3. Displays message if JavaScript is disabled\n4. Empty container element (#root) for rendering content\n\n**Purpose:**\n\nServes as a starting point for development and building web applications."}
{"code": "import React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { Magic } from 'magic-sdk';\nimport { AvalancheExtension } from '@magic-ext/avalanche';\nimport { Avalanche, BN } from 'avalanche';\n\nconst magic = new Magic('pk_live_C5678C9C36A5A9E1', {\n  extensions: {\n    xchain: new AvalancheExtension({\n      rpcUrl: 'https://api.avax-test.network/ext/bc/X',\n      chainId: 'X',\n      networkId: 5,\n    }),\n  },\n});\n\nexport default function App() {\n  const [email, setEmail] = useState('');\n  const [publicAddress, setPublicAddress] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [sendAmount, setSendAmount] = useState(0);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userMetadata, setUserMetadata] = useState({});\n  const [txHash, setTxHash] = useState('');\n  const [sendingTransaction, setSendingTransaction] = useState(false);\n\n  useEffect(() => {", "explanation": "**Summary:**\n\nThis code block creates a React application that uses Magic (a login platform) and Avalanche (a blockchain network) to enable users to:\n\n* Login with their email address\n* Display their public address and balance on the Avalanche network\n* Send AVAX tokens to another address, displaying the transaction hash and status\n\n**Functionality:**\n\nThe code initializes a Magic instance with an API key, sets up a React state for user data (email, public address, balance, etc.), and uses the `useEffect` hook to handle interactions with the Avalanche network.", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/App.js", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of the file 'src/App.js':\n\nThis React application enables users to log in with their email address, display their public address and balance on the Avalanche network, and send AVAX tokens to another address. It uses Magic for authentication, retrieves user data from Magic and Avalanche blockchain, updates the application state, and allows users to send transactions while displaying relevant information such as balances and transaction status."}
{"code": "    magic.user.isLoggedIn().then(async magicIsLoggedIn => {\n      setIsLoggedIn(magicIsLoggedIn);\n      if (magicIsLoggedIn) {\n        const metadata = await magic.user.getMetadata();\n        getBalance(metadata.publicAddress);\n        setPublicAddress(metadata.publicAddress);\n        setUserMetadata(metadata);\n      }\n    });\n  }, [isLoggedIn]);\n\n  const getBalance = async address => {\n    // AVAX Fuji asset ID\n    const assetId = 'U8iRqJoiJm8xZHAacmvYyZVwqQx6uDNtQeP3CQ6fcgQk3JqnK';\n    const xchain = getXChain();\n    const getBalanceResponse = await xchain.getBalance(address, assetId);\n    const bal = new BN(getBalanceResponse.balance);\n    setBalance(bal.toString() / 1000000000);\n  };\n\n  const getXChain = () => {\n    let myNetworkID = 5; \n    let myBlockchainID = 'X';\n    let avalanche = new Avalanche(\n      new URL('https://api.avax-test.network/ext/bc/X').hostname,\n      443,\n      'https',\n      myNetworkID,\n      myBlockchainID,\n    );\n    return avalanche.XChain();\n  };\n\n  const login = async () => {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Authenticate user with Magic, fetch their balance on Avalanche blockchain, and update application state.\n\n**Functionality:**\n\n* Check if user is logged in using Magic API\n* If logged in, retrieve public address and metadata from Magic\n* Fetch user's balance on Avalanche blockchain using the XChain API\n* Update application state with the fetched data (public address, balance, etc.)", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/App.js", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of the file 'src/App.js':\n\nThis React application enables users to log in with their email address, display their public address and balance on the Avalanche network, and send AVAX tokens to another address. It uses Magic for authentication, retrieves user data from Magic and Avalanche blockchain, updates the application state, and allows users to send transactions while displaying relevant information such as balances and transaction status."}
{"code": "    await magic.auth.loginWithEmailOTP({ email });\n    setIsLoggedIn(true);\n  };\n\n  const logout = async () => {\n    await magic.user.logout();\n    setIsLoggedIn(false);\n  };\n\n  const handlerSendTransaction = async () => {\n    setSendingTransaction(true);\n    const metadata = await magic.user.getMetadata();\n    const assetId = 'U8iRqJoiJm8xZHAacmvYyZVwqQx6uDNtQeP3CQ6fcgQk3JqnK';\n    const xchain = getXChain();\n\n    let fromAddresses = [metadata.publicAddress];\n    let toAddresses = [destinationAddress];\n\n    const signedTx = await magic.xchain.signTransaction(\n      sendAmount * 100000000,\n      assetId,\n      toAddresses,\n      fromAddresses,\n      toAddresses,\n    );\n\n    console.log('signedTX', signedTx);\n\n    let txid = await xchain.issueTx(signedTx);\n    setSendingTransaction(false);\n\n    setTxHash(`https://testnet.avascan.info/blockchain/x/tx/${txid}`);\n\n    console.log('send transaction', txid);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isLoggedIn ? (\n        <div className=\"container\">", "explanation": "Here is a concise summary:\n\n**Functionality:**\n\n* Handles user authentication with Magic Auth\n* Logs in or out of the application based on user status\n* Sends an X-Chain transaction:\n\t+ Signs the transaction using Magic X-Chain\n\t+ Issues the signed transaction to the blockchain\n\t+ Updates UI with transaction ID and hash", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/App.js", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of the file 'src/App.js':\n\nThis React application enables users to log in with their email address, display their public address and balance on the Avalanche network, and send AVAX tokens to another address. It uses Magic for authentication, retrieves user data from Magic and Avalanche blockchain, updates the application state, and allows users to send transactions while displaying relevant information such as balances and transaction status."}
{"code": "          <h1>Please sign up or login</h1>\n          <input\n            type=\"email\"\n            name=\"email\"\n            required=\"required\"\n            placeholder=\"Enter your email\"\n            onChange={event => {\n              setEmail(event.target.value);\n            }}\n          />\n          <button onClick={login}>Send</button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"container\">\n            <h1>Current user: {userMetadata.email}</h1>\n            <button onClick={logout}>Logout</button>\n          </div>\n          <div className=\"container\">\n            <h1>Avalanche address</h1>\n            <div className=\"info\">\n              <a\n                href={`https://testnet.avascan.info/blockchain/x/address/${publicAddress}/transactions`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {publicAddress}\n              </a>\n          </div>\n          <button>", "explanation": "**Block Summary:**\n\nThis block is a user authentication system with two modes:\n\n1. **Sign up/Log in**: A form allowing users to enter their email address, which triggers a login action when submitted.\n2. **Logged-in user interface**: Displays the current user's email and provides a logout button.\n\nThe functionality revolves around managing user sessions and displaying relevant information when a user is logged in.", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/App.js", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of the file 'src/App.js':\n\nThis React application enables users to log in with their email address, display their public address and balance on the Avalanche network, and send AVAX tokens to another address. It uses Magic for authentication, retrieves user data from Magic and Avalanche blockchain, updates the application state, and allows users to send transactions while displaying relevant information such as balances and transaction status."}
{"code": "              <a href=\"https://core.app/tools/testnet-faucet/?token=c&subnet=c\" target=\"_blank\" rel=\"noreferrer\">\n                Faucet\n              </a>\n            </button>            \n            <button>\n              <a href=\"https://wallet.avax.network/\" target=\"_blank\" rel=\"noreferrer\">\n                Bridge\n              </a>\n            </button>\n          </div>\n          <div className=\"container\">\n            <h1>Balance</h1>\n            <div className=\"info\">{balance} avax</div>\n          </div>\n          <div className=\"container\">\n            <h1>Send AVAX Transaction</h1>\n            {txHash ? (\n              <div>\n                <div>Send transaction success</div>\n                <div className=\"info\">{txHash}</div>\n              </div>\n            ) : sendingTransaction ? (\n              <div className=\"sending-status\">Sending transaction</div>\n            ) : (\n              <div />\n            )}\n            <input\n              type=\"text\"\n              name=\"destination\"", "explanation": "Here is a summary of the purpose and functionality:\n\n**Buttons:**\n\n* \"Faucet\" button links to a testnet faucet for requesting AVAX tokens.\n* \"Bridge\" button links to an Avalanche wallet bridge.\n\n**Balance Section:**\n\nDisplays the user's current balance in AVAX tokens.\n\n**Send Transaction Section:**\n\nAllows users to send AVAX transactions. If a transaction is being sent, displays a \"Sending transaction\" status message. Once complete, displays a success message and shows the transaction hash.", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/App.js", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of the file 'src/App.js':\n\nThis React application enables users to log in with their email address, display their public address and balance on the Avalanche network, and send AVAX tokens to another address. It uses Magic for authentication, retrieves user data from Magic and Avalanche blockchain, updates the application state, and allows users to send transactions while displaying relevant information such as balances and transaction status."}
{"code": "              className=\"full-width\"\n              required=\"required\"\n              placeholder=\"Destination address\"\n              onChange={event => {\n                setDestinationAddress(event.target.value);\n              }}\n            />\n            <input\n              type=\"text\"\n              name=\"amount\"\n              className=\"full-width\"\n              required=\"required\"\n              placeholder=\"Amount in AVAX\"\n              onChange={event => {\n                setSendAmount(event.target.value);\n              }}\n            />\n            <button id=\"btn-send-txn\" onClick={handlerSendTransaction}>\n              Send Transaction\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n", "explanation": "Here is a concise summary:\n\n**Input Block:**\n\n* Collects user input for:\n\t+ Destination address (text field)\n\t+ Amount in AVAX (numeric field)\n* Requires both fields be filled\n* Submits transaction when \"Send Transaction\" button is clicked", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/App.js", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a holistic summary of the file 'src/App.js':\n\nThis React application enables users to log in with their email address, display their public address and balance on the Avalanche network, and send AVAX tokens to another address. It uses Magic for authentication, retrieves user data from Magic and Avalanche blockchain, updates the application state, and allows users to send transactions while displaying relevant information such as balances and transaction status."}
{"code": "import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n", "explanation": "This block of code initializes a React app by rendering the `App` component into an HTML element with the id \"root\".", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here is a concise and to the point summary:\n\n\"The `src/index.js` file initializes a React app by rendering the `App` component within an HTML element with id 'root'.\""}
{"code": ".App {\n  align-self: center;\n  justify-self: center;\n}\n\n#root {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  height: 100vh;\n  display: grid;\n  font-size: 18px;\n}\n\n.container {\n  width: 300px;\n  background-color: #eee;\n  text-align: center;\n  padding: 27px 18px;\n  margin-bottom: 27px;\n}\n\nh1 {\n  margin: 0;\n  padding-bottom: 18px;\n  font-size: 18px;\n}\n\n.info {\n  max-width: 21ch;\n  margin: 0 auto;\n  margin-bottom: 18px;\n  background-color: #ddd;\n  padding: 12px 24px;\n  word-wrap: break-word;\n  font-family: \"Lucida Console\", Monaco, monospace;\n  font-size: 15px;\n}\n\n.info a {\n  color: black;\n}\n\ninput,\nbutton {\n  padding: 9px;\n  font-size: 18px;\n  margin-bottom: 9px;\n}\n\ninput.full-width {\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 9px;\n  text-align: center;\n}\n\n.sending-status {\n  margin-bottom: 10px;\n}\n", "explanation": "**Summary**\n\nThis is a CSS stylesheet that defines styles for various HTML elements, including typography, layout, and visual design. It establishes a consistent look and feel across different components on the page.", "metadata": {"repo": "magiclabs/example-avalanche", "file": "src/styles.css", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't see a repository provided. If you provide the URL or details about the repository \"magiclabs/example-avalanche\", I'll be happy to explain its purpose and content in a concise manner!", "file_summary": "Here's a concise summary:\n\n**src/styles.css**: A CSS stylesheet establishing a consistent visual design and layout across HTML components through typography, colors, and other styling elements."}
