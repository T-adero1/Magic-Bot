{"code": "# Magic Wallet Services + Google OneTap Login Demo\n\nAn example app showcasing the simplicity of the Magic Wallet Services setup with Google as the identity provider.\n\n[Visit the deployed app here](https://mws-google.herokuapp.com/) \u2197\n\n## Prerequisites\n\n### Google One Tap\n\n- Sign into [Google Cloud Console](https://console.cloud.google.com/)\n- [Create a Project](https://console.cloud.google.com/projectcreate). Fill out the fields and click `CREATE`\n- Configure OAuth\n  1. **OAuth consent screen**\n     - Complete the **App information** and add to **App logo** if needed.\n     - In **App domain** include links to your `home page`, `privacy policy`, and `terms of service`. This will be needed for the Google verification process. If you're only testing it can be omitted.\n     - Select the user type (`internal` or `external`) and click `CREATE`\n     - Fill in the **App information** fields.\n     - Add the authorized domains to the **Authorized domains** section, and include `magic.link`.", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Showcase simplicity of Magic Wallet Services setup with Google as identity provider.\n\n**Functionality:** A demo app that uses Google OneTap login for authentication, requiring prerequisites such as setting up Google Cloud Console and configuring OAuth consent screen.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "README.md", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and holistic summary of the file 'README.md':\n\nThis repository demonstrates how to set up Magic Wallet Services integration with Google as an identity provider, showcasing a simple setup process for authentication using Google OneTap login. It also provides a step-by-step guide on setting up Magic Web Services (MWS) integration for a web application, including obtaining necessary API credentials, cloning the repository, and configuring environment variables."}
{"code": "     - Click `SAVE AND CONTINUE`\n  2. **Scopes**\n     - Include the necessary scopes or just skip this section if you're simply testing MWS as it is not required.\n     - Click `SAVE AND CONTINUE`\n  3. **Summary**\n     - Review the summary\n     - Click `BACK TO DASHBOARD`\n- Create Credentials\n  - Click the `Credentials` link in the left side-panel in the Google cloud console with your project selected\n  - Click `+ CREATE CREDENTIALS` and `OAuth client ID`\n  - Select an `Application type` and give it a name\n  - Enter your domain into the `Authorized Javascript Origins`\n  - Click `Create`\n  - You'll be presented with `Your client ID` and `Your Client Secret`. Please take note of these values. In this demo we will only use the `Client ID` and it will be required to share it with Magic during the Magic MWS Setup step\n\n### Magic\n\n- Create a [Magic account](https://magic.link/).\n- Create a Magic Auth application and retain the `Publishable API Key`.\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Setup Wizard**\n\n* Step 1: Save changes and continue through settings (scopes, summary)\n* Step 2: Create credentials for Google Cloud Console\n\t+ Create an OAuth client ID with authorized JavaScript origins\n\t+ Note Client ID for later use\n* Step 3: Set up Magic account\n\t+ Create a Magic Auth application and retain Publishable API Key", "metadata": {"repo": "magiclabs/example-mws-google", "file": "README.md", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and holistic summary of the file 'README.md':\n\nThis repository demonstrates how to set up Magic Wallet Services integration with Google as an identity provider, showcasing a simple setup process for authentication using Google OneTap login. It also provides a step-by-step guide on setting up Magic Web Services (MWS) integration for a web application, including obtaining necessary API credentials, cloning the repository, and configuring environment variables."}
{"code": "[Magic Web API docs](https://magic.link/docs/auth/api-reference/client-side-sdks/web)\n\n### Magic MWS Setup\n\n- Contact Magic and provide the Google `client ID` and Magic `Publishable API Key`.\n- Magic will return a `Provider ID`, please retain this.\n\n## Quickstart Instructions\n\n\ud83d\udea8 **Before you begin:** please read the [prerequisites](#prerequisites)\n\nClone this repo to your local machine:\n\n```bash\n$ git clone https://github.com/\n$ cd example-mws-google\n$ mv .env.example .env\n```\n\nTo install and set up the library, run:\n\n```bash\n$ npm install\n# or\n$ yarn install\n```\n\n### .env File\n\nInsert the following values obtained in the [prerequisites](#prerequisites) section, into the `.env` file\n\n```\nREACT_APP_MAGIC_PUBLISHABLE_KEY=\nREACT_APP_GOOGLE_CLIENT_ID=\nREACT_APP_MAGIC_PROVIDER_ID=\n```\n\n### Serving the App Locally\n\n```bash\n$ npm start\n# or\n$ yarn start\n```\n\n### Finally\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Set up Magic Web Services (MWS) integration for a web application.\n\n**Functionality:** Guide users through the process of setting up MWS, including: \n\n1. Obtaining necessary API credentials from Magic\n2. Cloning a repository to local machine\n3. Installing and setting up the library\n4. Configuring environment variables in a `.env` file\n5. Serving the application locally", "metadata": {"repo": "magiclabs/example-mws-google", "file": "README.md", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and holistic summary of the file 'README.md':\n\nThis repository demonstrates how to set up Magic Wallet Services integration with Google as an identity provider, showcasing a simple setup process for authentication using Google OneTap login. It also provides a step-by-step guide on setting up Magic Web Services (MWS) integration for a web application, including obtaining necessary API credentials, cloning the repository, and configuring environment variables."}
{"code": "When the browser is loaded with the app you can test functionality by clicking **`Login with Google`** to start the Google login process. You should see a login modal from Google appear onscreen. Click the continue button to sign in. You will be directed to the `profile` page where the user's name and email are populated from the Google ID token and the wallet's address is populated from **Magic**.\n", "explanation": "This block allows users to log in with their Google account, redirecting them to a profile page that populates their details and wallet address using Google ID tokens and Magic.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "README.md", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and holistic summary of the file 'README.md':\n\nThis repository demonstrates how to set up Magic Wallet Services integration with Google as an identity provider, showcasing a simple setup process for authentication using Google OneTap login. It also provides a step-by-step guide on setting up Magic Web Services (MWS) integration for a web application, including obtaining necessary API credentials, cloning the repository, and configuring environment variables."}
{"code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will", "explanation": "This block is an HTML document header, which defines the basic structure and metadata for a web page. It includes links to external files (e.g., favicon.ico, logo192.png, manifest.json) and sets various attributes such as charset, viewport, theme color, and description. The purpose of this code is to configure the web page's appearance and behavior in various contexts (e.g., mobile devices, desktops).", "metadata": {"repo": "magiclabs/example-mws-google", "file": "public/index.html", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a holistic summary of the file 'public/index.html':\n\nThis HTML template configures the appearance and behavior of a web page, including mobile and desktop compatibility, while also integrating Google Sign-In functionality and setting up basic page structure."}
{"code": "      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <script src=\"https://accounts.google.com/gsi/client\" async defer></script>\n    <title>MWS + Google</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n  </body>\n</html>\n", "explanation": "This block appears to be an HTML template file that:\n\n* Imports Google Sign-In Client SDK\n* Sets up a basic page structure with a title and empty div container\n* Provides instructions for configuring a non-root public URL through npm scripts.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "public/index.html", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a holistic summary of the file 'public/index.html':\n\nThis HTML template configures the appearance and behavior of a web page, including mobile and desktop compatibility, while also integrating Google Sign-In functionality and setting up basic page structure."}
{"code": "{\n  \"short_name\": \"MWS and Google\",\n  \"name\": \"MWS and Google One Tap Demo\",\n  \"icons\": [\n    {\n      \"src\": \"favicon.ico\",\n      \"sizes\": \"64x64 32x32 24x24 16x16\",\n      \"type\": \"image/x-icon\"\n    }\n  ],\n  \"start_url\": \".\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n", "explanation": "This block appears to be a web app manifest file, defining metadata for a Progressive Web App (PWA). Its purpose is to configure the PWA's display settings, colors, icons, and start URL.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "public/manifest.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'public/manifest.json':\n\n**Manifest JSON File**\n\nDefines metadata for a Progressive Web App (PWA), including display settings, colors, icons, and start URL."}
{"code": "# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\nDisallow:\n", "explanation": "This is a \"robots.txt\" file, which instructs search engine crawlers (bots) to not crawl or index specific pages on a website.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "public/robots.txt", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and to-the-point summary of the file 'public/robots.txt':\n\n\"Instructs search engines not to crawl or index certain web pages.\""}
{"code": "import React, { useEffect, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\n// Views\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport UserProfile from \"./components/UserProfile\";\n\nimport { UserContext } from \"./utils/UserContext\";\nimport Footer from \"./components/Footer\";\n\nexport default function App() {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    if (!user?.iss) {\n      const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n      storedUser?.iss ? setUser(storedUser) : setUser();\n    }\n  }, [user]);\n\n  return (\n    <>\n      <NavBar />\n      <UserContext.Provider value={[user, setUser]}>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/profile\" element={<UserProfile />} />\n        </Routes>\n      </UserContext.Provider>\n      <Footer />\n    </>\n  );\n}\n", "explanation": "Here is a concise summary:\n\nThis block defines a React app with a state management system using `useState` and `useEffect`. It renders a navigation bar, user profile routes, and a footer. The app also uses a context API to manage user data, which is stored in local storage.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/App.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'src/App.js':\n\n\"This React app utilizes state management with `useState` and `useEffect`, featuring a navigation bar, user profile routes, and footer, while storing user data via context API in local storage.\""}
{"code": "import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n", "explanation": "Here is a summary of the block:\n\n**Purpose:** Run unit test for App component\n**Functionality:** Renders App, checks if \"Learn React\" link is present on page", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/App.test.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and to-the-point holistic summary of the file 'src/App.test.js':\n\n`Renders the App component and verifies the presence of a \"Learn React\" link.`"}
{"code": "export default function Footer() {\n  return (\n    <footer>\n      <div id=\"footerInfo\">\n        <a href=\"https://magic.link/docs/home/welcome\">Magic Docs</a>\n        <a href=\"https://console.cloud.google.com/\">Google Cloud Console</a>\n      </div>\n    </footer>\n  );\n}\n", "explanation": "This block is a ReactJS component that renders a footer element, containing links to external resources: Magic Docs and Google Cloud Console.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/Footer.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here's a concise and to-the-point summary:\n\n**src/components/Footer.js**: A ReactJS component rendering a footer with links to external resources (Magic Docs & Google Cloud Console)."}
{"code": "/*global google*/\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { parseJWT } from \"../utils/parseJWT\";\nimport { UserContext } from \"../utils/UserContext\";\nimport { magic } from \"../utils/magic\";\n\nexport default function GoogleOneTapLogin() {\n  const [, setUser] = useContext(UserContext);\n  const [disabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    // preloading Magic assets before logging in\n    magic.preload();\n\n    // initiate Google login on load\n    handleGoogleLogin();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function handleMagicLogin(userToken) {\n    try {\n      const did = await magic.openid.loginWithOIDC({\n        jwt: userToken,\n        providerId: process.env.REACT_APP_MAGIC_PROVIDER_ID,\n      });\n\n      if (did) {\n        console.log(\"DID Token:\", did);\n        const magicUser = await magic.user.getMetadata();\n\n        // parse info from id token\n        const userInfo = parseJWT(userToken);\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Implement Google One Tap login functionality using Magic.\n\n**Functionality:**\n\n* Preload Magic assets on load.\n* Initiate Google login on load.\n* Handle user login with Magic's OpenID Connect (OIDC) API.\n* Parse JWT token to retrieve user information.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/GoogleOneTapLogin.js", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'src/components/GoogleOneTapLogin.js':\n\n**Google One Tap Login Component**: A React component that enables Google login functionality, preloads Magic assets on load, handles user login via Magic's OIDC API, and parses JWT tokens for user info. It also handles Google notification events and enables/disables features accordingly."}
{"code": "        // add magic wallet to user info\n        userInfo.wallet = magicUser;\n        localStorage.setItem(\"user\", JSON.stringify(userInfo));\n        setUser(userInfo);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function handleResponse(response) {\n    const token = response.credential;\n\n    try {\n      handleMagicLogin(token);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  function handleGoogleLogin() {\n    setDisabled(true);\n\n    try {\n      google.accounts.id.initialize({\n        client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        callback: handleResponse,\n      });\n\n      google.accounts.id.prompt((notification) => {\n        if (notification.isNotDisplayed()) {\n          console.log(\n            \"%c Google notification not displayed for reason:\",\n            \"color: orange; font-weight: bold;\",\n            notification.getNotDisplayedReason()\n          );\n\n          setDisabled(false);\n\n          throw new Error(\"Try clearing cookies and then login again.\");\n        }\n", "explanation": "Here is a concise summary of the purpose and functionality of these blocks:\n\n**Block 1:** Handles Magic Login by updating user info in storage and state.\n\n**Block 2:** Handles Google Login response, initializing Magic Login with received token.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/GoogleOneTapLogin.js", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'src/components/GoogleOneTapLogin.js':\n\n**Google One Tap Login Component**: A React component that enables Google login functionality, preloads Magic assets on load, handles user login via Magic's OIDC API, and parses JWT tokens for user info. It also handles Google notification events and enables/disables features accordingly."}
{"code": "        if (notification.isSkippedMoment()) {\n          console.log(\n            \"%c Google notification skipped for reason:\",\n            \"color: orange; font-weight: bold;\",\n            notification.getSkippedReason()\n          );\n\n          setDisabled(false);\n\n          throw new Error(\"Try clearing cookies and then login again.\");\n        }\n\n        if (notification.isDismissedMoment()) {\n          console.log(\n            \"%c Google notification dismissed for reason:\",\n            \"color: orange; font-weight: bold;\",\n            notification.getDismissedReason()\n          );\n\n          setDisabled(false);\n        }\n\n        if (notification.isDisplayed()) {\n          console.log(\n            \"%c Google notification displayed with moment type:\",\n            \"color: orange; font-weight: bold;\",\n            notification.getMomentType()\n          );\n\n          console.log(\"is display moment:\", notification.isDisplayMoment());\n        }\n      });\n    } catch (error) {\n      setUser();\n      console.error(error);\n    }", "explanation": "Here is a concise summary:\n\n**Purpose:** Handle Google notification events, logging reasons and enabling/disabling functionality.\n\n**Functionality:** Logs notification status (skipped, dismissed, displayed), enables/disable features based on notifications, and catches errors to prompt user login again.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/GoogleOneTapLogin.js", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'src/components/GoogleOneTapLogin.js':\n\n**Google One Tap Login Component**: A React component that enables Google login functionality, preloads Magic assets on load, handles user login via Magic's OIDC API, and parses JWT tokens for user info. It also handles Google notification events and enables/disables features accordingly."}
{"code": "  }\n\n  return (\n    <div className=\"oneTapContainer\">\n      <button\n        className=\"purple-btn\"\n        disabled={disabled}\n        onClick={handleGoogleLogin}\n      >\n        <strong>Login with Google</strong>\n      </button>\n    </div>\n  );\n}\n", "explanation": "**Summary:**\n\nThis block is a React functional component that renders a login button with Google functionality. It takes a `disabled` prop and uses it to enable or disable the button, allowing users to log in with their Google account when clicked.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/GoogleOneTapLogin.js", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'src/components/GoogleOneTapLogin.js':\n\n**Google One Tap Login Component**: A React component that enables Google login functionality, preloads Magic assets on load, handles user login via Magic's OIDC API, and parses JWT tokens for user info. It also handles Google notification events and enables/disables features accordingly."}
{"code": "import React, { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../utils/UserContext\";\nimport GoogleOneTapLogin from \"./GoogleOneTapLogin\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Home() {\n  const [user, setUser] = useContext(UserContext);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (user && user.iss) {\n      navigate(\"/profile\");\n    } else if (storedUser) {\n      setUser(storedUser);\n      navigate(\"/profile\");\n    }\n  }, [user, setUser, navigate]);\n\n  return (\n    <div id=\"home\">\n      <h1>Homepage</h1>\n      <div>This is the demo homepage. Please login with Google below.</div>\n      <GoogleOneTapLogin />\n    </div>\n  );\n}\n", "explanation": "**Summary**\n\nThis React component, `Home`, serves as a landing page for users to access after authentication. It checks local storage for a stored user object, redirects to `/profile` if found, or prompts login via GoogleOneTapLogin. If a user is already authenticated, it navigates directly to the profile page.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/Home.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'src/components/Home.js':\n\n**Summary**\n\nThe `Home` component serves as a post-authentication landing page, redirecting users with stored credentials to `/profile` or prompting login if not authenticated."}
{"code": "import React from \"react\";\nimport logo from \"../img/logo.png\";\n\nexport default function NavBar() {\n  return (\n    <header>\n      <div id=\"appName\">\n        <img id=\"logo\" src={logo} alt=\"logo\" />\n        MWS + Google One Tap Demo\n      </div>\n    </header>\n  );\n}\n", "explanation": "**Summary:**\n\nThis block is a React functional component that renders a navigation bar (NavBar) with a logo image and app name.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/NavBar.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and to-the-point summary:\n\n`src/components/NavBar.js`: A React functional component rendering a navigation bar with a logo and app name."}
{"code": "import React, { useContext } from \"react\";\nimport { UserContext } from \"../utils/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"../img/logo.png\";\n\nexport default function User() {\n  const [user, setUser] = useContext(UserContext);\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    setUser();\n    localStorage.removeItem(\"user\");\n\n    navigate(\"/\");\n  };\n\n  return (\n    <div id=\"user\">\n      {user?.iss && (\n        <div id=\"userProfile\">\n          <h1>\n            Hello {user.given_name} {user.family_name}!\n          </h1>\n          <div className=\"userImageWrapper\">\n            <img\n              src={user.picture || logo}\n              alt={`${user.given_name}'s avatar`}\n            />\n          </div>\n          <div className=\"label\">Email</div>\n          <div className=\"profile-info\">{user.email}</div>\n          {user.wallet && (\n            <>\n              <div className=\"label\">Address</div>", "explanation": "**Summary:**\n\nThis React functional component, `User`, displays user profile information and provides a logout functionality. It utilizes the `UserContext` hook to access the current user data and the `useNavigate` hook for routing. The component renders a greeting message, user image, email address, and address (if available). A handleLogout function is also defined to update the user context and remove local storage when the user logs out.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/UserProfile.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary:\n\nThe `UserProfile.js` file renders a React component that displays a user's profile information, including greeting message, image, email, and address (if available), with a logout functionality using the `UserContext` hook."}
{"code": "              <div className=\"profile-info\">{user.wallet.publicAddress}</div>\n            </>\n          )}\n        </div>\n      )}\n      <button className=\"purple-btn logout\" onClick={handleLogout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n", "explanation": "**Block Purpose:** Display user's public wallet address.\n\n**Functionality:** Renders a `div` element with the user's public wallet address, conditional on the presence of the `user` object.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/components/UserProfile.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary:\n\nThe `UserProfile.js` file renders a React component that displays a user's profile information, including greeting message, image, email, and address (if available), with a logout functionality using the `UserContext` hook."}
{"code": "import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./styles.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n", "explanation": "**Summary:**\n\nThis block sets up a React app, rendering the `App` component to the DOM with support for client-side routing using `react-router-dom`.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary:\n\n\"Sets up a React app with client-side routing, rendering the `App` component to the DOM.\""}
{"code": "* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#root {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 1em;\n  min-height: 100vh;\n  min-width: 100%;\n}\n\n/* NavBar */\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 1em;\n\n  padding: 0.5rem;\n  background-color: #000;\n}\n\n#appName {\n  display: flex;\n  align-items: center;\n  gap: 0.5em;\n\n  font-family: monospace;\n  color: #fff;\n  font-size: 2rem;\n}\n\n#logo {\n  width: 3rem;\n}\n\n#navButtons {\n  width: 60%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.5em;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.navLinks {\n  display: block;\n  width: fit-content;\n  cursor: pointer;\n  border-radius: 5px;\n  padding: 0.3em;\n  color: #fff;", "explanation": "**Summary**\n\nThis code defines basic CSS styles for a web application, including:\n\n* Global styles (e.g., box sizing, font family)\n* Styles for the main app container (`#root`)\n* A responsive navigation bar with logo, buttons, and a header\n* Font sizes and colors for specific elements (e.g., `#appName`)", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/styles.css", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a holistic summary of the file 'src/styles.css' in 2-3 sentences:\n\nThis CSS style sheet defines the visual appearance and layout of various website elements, including global styles, navigation bars, typography, colors, and layouts for specific sections such as user profiles and footers. It includes responsive design elements and styles for different HTML elements to create a cohesive look and feel across the site. Overall, this stylesheet provides a consistent aesthetic foundation for the web application."}
{"code": "  background-color: #6851FF;\n  transition: background-color 2s;\n}\n\n.navLinks:hover {\n  cursor: pointer;\n  background-color: #4535ae;\n}\n\n/* Home */\n\n#home {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  padding: 5em;\n}\n\n#home div{\n  font-size: large;\n}\n\n/* GoogleOneTap */\n\n.oneTapContainer {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.purple-btn {\n  border-radius: 5px;\n  padding: 1rem;\n\n  font-size: 1em;\n  color: white;\n  background-color: #6851ff;\n}\n\n/* Profile */\n\n#user {\n  flex-grow: 1;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n#userProfile {\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n\n  margin: 1em auto;\n  border-radius: 20px;\n  padding: 1rem;\n  text-align: center;\n  background-color: #6851ff2b;\n}\n\n.logout {\n  width: 50%;\n  margin: auto;\n}\n\n.userImageWrapper {\n  min-width: 200px;\n  min-height: 200px;\n  max-width: 300px;\n  max-height: 300px;", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Block Summary**\n\nThis block contains CSS styles for various elements on a website, including navigation links, layout containers, buttons, and user profile information. It defines colors, transitions, typography, and layouts for different sections of the site.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/styles.css", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a holistic summary of the file 'src/styles.css' in 2-3 sentences:\n\nThis CSS style sheet defines the visual appearance and layout of various website elements, including global styles, navigation bars, typography, colors, and layouts for specific sections such as user profiles and footers. It includes responsive design elements and styles for different HTML elements to create a cohesive look and feel across the site. Overall, this stylesheet provides a consistent aesthetic foundation for the web application."}
{"code": "  border: solid 2px black;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: #ffffff;\n}\n\n.userImageWrapper > img {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  transform: scale(1.04);\n}\n\n.label {\n  font-size: 1.5em;\n  font-weight: bold;\n}\n\n.profile-info {\n  width: 100%;\n  font-family: monospace;\n  font-size: 1.5em;\n\n  word-wrap: break-word;\n}\n\n/* Footer */\n\nfooter {\n  display: flex;\n  flex-direction: column;\n\n  border-top: solid 8px #6851ff75;\n  padding: 1em;\n  text-align: center;\n  background-color: #6851ff2b;\n}\n\n#footerInfo {\n  display: flex;\n  justify-content: space-around;\n  gap: 5em;\n\n  margin: auto;\n}\n\n", "explanation": "This block is a CSS style sheet that defines the layout and visual appearance of several HTML elements, including:\n\n* A circular image container with a black border\n* Image scaling and containment within this container\n* Label text formatting (bold, 1.5em)\n* Profile information display (monospace font, 1.5em)\n* Footer section styling, including color scheme and layout", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/styles.css", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a holistic summary of the file 'src/styles.css' in 2-3 sentences:\n\nThis CSS style sheet defines the visual appearance and layout of various website elements, including global styles, navigation bars, typography, colors, and layouts for specific sections such as user profiles and footers. It includes responsive design elements and styles for different HTML elements to create a cohesive look and feel across the site. Overall, this stylesheet provides a consistent aesthetic foundation for the web application."}
{"code": "import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);\n", "explanation": "**Summary:** This code creates a React Context API for managing user data, allowing components to access and share user information throughout the application.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/utils/UserContext.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise and to-the-point summary:\n\n`UserContext.js`: Manages user data through React Context API, enabling shared access to user information across the app."}
{"code": "import { Magic } from \"magic-sdk\";\nimport { OpenIdExtension } from \"@magic-ext/oidc\";\n\nexport const magic = new Magic(process.env.REACT_APP_MAGIC_PUBLISHABLE_KEY, {\n  extensions: [new OpenIdExtension()],\n});\n", "explanation": "Here is a summary of the block:\n\n**Initializes the Magic SDK with OIDC extension**\n\nSets up the Magic library with an OpenID Connect (OIDC) extension using environment variables for configuration.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/utils/magic.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise holistic summary of the file 'src/utils/magic.js':\n\n\"Configures the Magic SDK with OIDC extension using env vars.\""}
{"code": "export const parseJWT = (token) => {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    window\n      .atob(base64)\n      .split(\"\")\n      .map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n};\n", "explanation": "**Purpose:** Parses a JSON Web Token (JWT) into its payload.\n\n**Functionality:** Takes a JWT string as input, decodes it from base64, and returns the resulting JSON object.", "metadata": {"repo": "magiclabs/example-mws-google", "file": "src/utils/parseJWT.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't have information about a specific repository named \"magiclabs/example-mws-google\". Can you provide more context or clarify what you are looking for? I'd be happy to try and assist you.", "file_summary": "Here is a concise summary of the file 'src/utils/parseJWT.js':\n\n**Summary:** Parses a JSON Web Token (JWT) into its payload, returning a JSON object from a given JWT string."}
