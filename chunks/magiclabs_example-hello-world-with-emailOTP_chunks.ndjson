{"code": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Magic Hello World \ud83c\udf0e</title>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\" />\n\t\t<!-- 1\ufe0f\u20e3 Install Magic SDK -->\n\t\t<script src=\"https://auth.magic.link/sdk\"></script>\n\t\t<script>\n\t\t\t/* 2\ufe0f\u20e3 Initialize Magic Instance */\n\t\t\tlet magic = new Magic(\"pk_live_D5EA1E346A791DB7\");\n\n\t\t\t/* 3\ufe0f\u20e3 Implement Render Function */\n\t\t\tconst render = async () => {\n\t\t\t\tconst isLoggedIn = await magic.user.isLoggedIn();\n\n\t\t\t\t/* Show login form if user is not logged in */\n\t\t\t\tlet html = `\n          <h1>Please sign up or login</h1>\n          <form onsubmit=\"handleLogin(event)\">\n            <input type=\"email\" name=\"email\" required=\"required\" placeholder=\"Enter your email\" />\n            <button type=\"submit\">Send</button>\n          </form>\n        `;\n\n\t\t\t\tif (isLoggedIn) {\n\t\t\t\t\t/* Get user metadata including email */\n\t\t\t\t\tconst userMetadata = await magic.user.getMetadata();\n\t\t\t\t\thtml = `", "explanation": "**Summary:**\n\nThis block is an HTML snippet that serves as a login form for Magic, a digital identity platform. It checks if a user is logged in and displays a login form if not. If logged in, it retrieves user metadata and displays a greeting.\n\n**Key Functionality:**\n\n1. Initializes Magic instance with a live project key.\n2. Checks user login status using `magic.user.isLoggedIn()`.\n3. Renders a login form or displays user metadata (email) based on login status.", "metadata": {"repo": "magiclabs/example-hello-world-with-emailOTP", "file": "index.html", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "I don't see a specific repository provided in your message. If you'd like to provide one, I'll be happy to help explain its purpose and content!", "file_summary": "Here is a concise and to the point summary of the file 'index.html':\n\n\"**Login Form & User Profile**: A login form that renders with a greeting for logged-in users, displaying their email address and a logout button.\""}
{"code": "            <h1>Current user: ${userMetadata.email}</h1>\n            <button onclick=\"handleLogout()\">Logout</button>\n          `;\n\t\t\t\t}\n\n\t\t\t\tdocument.getElementById(\"app\").innerHTML = html;\n\t\t\t};\n\n\t\t\t/* 4\ufe0f\u20e3 Implement Login Handler */\n\t\t\tconst handleLogin = async (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst email = new FormData(e.target).get(\"email\");\n\t\t\t\tif (email) {\n\t\t\t\t\t/* One-liner login with email OTP \ud83e\udd2f */\n\t\t\t\t\tawait magic.auth.loginWithEmailOTP({ email });\n\t\t\t\t\trender();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/* 5\ufe0f\u20e3 Implement Logout Handler */\n\t\t\tconst handleLogout = async () => {\n\t\t\t\tawait magic.user.logout();\n\t\t\t\trender();\n\t\t\t};\n\t\t</script>\n\t</head>\n\t<body onload=\"render()\">\n\t\t<div id=\"app\">Loading...</div>\n\t</body>\n</html>\n", "explanation": "Here is a concise summary:\n\nThis block of code renders a HTML template with dynamic content, including the current user's email address and a logout button. It also handles login and logout functionality using the Magic Auth library.", "metadata": {"repo": "magiclabs/example-hello-world-with-emailOTP", "file": "index.html", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "I don't see a specific repository provided in your message. If you'd like to provide one, I'll be happy to help explain its purpose and content!", "file_summary": "Here is a concise and to the point summary of the file 'index.html':\n\n\"**Login Form & User Profile**: A login form that renders with a greeting for logged-in users, displaying their email address and a logout button.\""}
{"code": "{\n  \"infiniteLoopProtection\": true,\n  \"hardReloadOnChange\": false,\n  \"view\": \"browser\",\n  \"template\": \"static\"\n}\n", "explanation": "This block configures settings for rendering a view:\n\n* Enables infinite loop protection\n* Disables hard reload on change\n* Specifies the render mode as browser\n* Uses a static template", "metadata": {"repo": "magiclabs/example-hello-world-with-emailOTP", "file": "sandbox.config.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't see a specific repository provided in your message. If you'd like to provide one, I'll be happy to help explain its purpose and content!", "file_summary": "Here is a concise and to-the-point summary of the 'sandbox.config.json' file:\n\n\"Configures sandbox rendering settings, enabling safety features and specifying a static template for rendering views.\""}
{"code": "body {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  height: 100vh;\n  display: grid;\n  font-size: 18px;\n}\n\n#app {\n  align-self: center;\n  justify-self: center;\n  background-color: #eee;\n  text-align: center;\n  width: 300px;\n  padding: 27px 18px;\n}\n\nh1 {\n  margin: 0;\n  padding-bottom: 18px;\n  font-size: 18px;\n}\n\ninput {\n  margin-bottom: 9px;\n}\n\ninput,\nbutton {\n  padding: 9px;\n  font-size: 18px;\n}\n", "explanation": "Here is a concise summary:\n\nThis block defines styles for an HTML page, specifying layout, typography, and visual elements for various HTML tags (body, #app container, h1 headings, input fields, and buttons).", "metadata": {"repo": "magiclabs/example-hello-world-with-emailOTP", "file": "styles.css", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "I don't see a specific repository provided in your message. If you'd like to provide one, I'll be happy to help explain its purpose and content!", "file_summary": "However, I don't see any code block summaries provided. Could you please share them with me? I'll create a concise and holistic summary of the file 'styles.css' for you."}
