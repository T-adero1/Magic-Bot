{"code": "NEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY=\nMAGIC_SECRET_KEY=", "explanation": "This block appears to contain environment variables for a Magic SDK integration.\n\n* `NEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY`: Exposes a publishable key for public use in a Next.js application.\n* `MAGIC_SECRET_KEY`: Hides a secret key used by the Magic SDK, keeping it private and secure.", "metadata": {"repo": "magiclabs/example-nextjs", "file": ".env.local.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the '.env.local.example' file:\n\n\"This file defines environment variables for a Magic SDK integration, exposing a publishable key publicly while hiding a secret key privately.\""}
{"code": "# Demo\n\nLive at https://magic-nextjs.vercel.app/login\n\n# Quick Start Instructions\n\n```\n$ git clone https://github.com/magiclabs/example-nextjs\n$ cd example-nextjs\n$ mv .env.local.example .env.local // enter your Magic API keys in your env variables\n$ yarn install\n$ yarn dev // starts app in http://localhost:3000\n```\n\n## Environment Variables\n\n```\nNEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY=pk_live_123...\nMAGIC_SECRET_KEY=sk_live_123...\n```\n\n# Introduction\n\nMagic is a passwordless authentication sdk that lets you plug and play different auth methods into your app. Magic supports passwordless email login via magic links, social login (such as Login with Google), and WebAuthn (a protocol that lets users authenticate a hardware device using either a YubiKey or fingerprint). This app will walk through implementing magic link and social logins.\n\n## File Structure\n\n```txt\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 components\n\u2502   \u251c\u2500\u2500 email-form.js\n\u2502   \u251c\u2500\u2500 header.js\n\u2502   \u251c\u2500\u2500 layout.js\n\u2502   \u251c\u2500\u2500 loading.js\n\u2502   \u2514\u2500\u2500 social-logins.js\n\u251c\u2500\u2500 lib\n\u2502   \u251c\u2500\u2500 UserContext.js", "explanation": "**Block Purpose:** Instructions for setting up a Magic passwordless authentication SDK demo app.\n\n**Functionality:**\n\n* Provides a quick start guide for cloning and running the app.\n* Lists required environment variables for API keys.\n* Introduces Magic's authentication features (passwordless email login, social login, WebAuthn).\n* Shows file structure of the example app.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "\u2502   \u2514\u2500\u2500 magic.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 pages\n\u2502   \u251c\u2500\u2500 _app.js\n\u2502   \u251c\u2500\u2500 _document.js\n\u2502   \u251c\u2500\u2500 api\n\u2502   \u2502   \u2514\u2500\u2500 login.js\n\u2502   \u251c\u2500\u2500 callback.js\n\u2502   \u251c\u2500\u2500 index.js\n\u2502   \u251c\u2500\u2500 login.js\n\u2502   \u2514\u2500\u2500 profile.js\n\u251c\u2500\u2500 public\n\u2502   \u2514\u2500\u2500 (images)\n\u2514\u2500\u2500 yarn.lock\n```\n\n## Magic Setup\n\nYour Magic setup will depend on what login options you want. For magic links, minimal setup is required. For social logins, follow our [**documentation**](https://docs.magic.link/social-login) for configuration instructions.\n\nOnce you have social logins configured (if applicable), grab your API keys from Magic\u2019s dashboard and in `.env.local` enter your Test Publishable Key such as `NEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY=pk_test_1234567890` and your Test Secret Key such as `MAGIC_SECRET_KEY=sk_test_1234567890`.\n\n# Client\n\n## Keeping Track of the User\n", "explanation": "**Summary:**\n\nThis is a Next.js project directory, containing setup instructions for Magic authentication. The purpose is to provide a concise guide for setting up Magic login options, including social logins and magic links, with API key configuration required for both.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "This example app will keep track of the logged in user by using React's `useContext` hook. Inside `_app.js`, wrap the entire app in the `<UserContext.Provider>` so all child components down the component tree have access to see if the user is logged in or not (`UserContext` is exported from `lib/UserContext`). Once a user logs in with Magic, unless they log out, they'll remian logged in for 7 days until their session expires.\n\n```js\n// If isLoggedIn is true, set the UserContext with user data\n// Otherwise, redirect to /login and set UserContext to { user: null }\nuseEffect(() => {\n  setUser({ loading: true });\n  magic.user.isLoggedIn().then((isLoggedIn) => {\n    if (isLoggedIn) {\n      magic.user.getMetadata().then((userData) => setUser(userData));\n    } else {\n      Router.push('/login');\n      setUser({ user: null });\n    }\n  });\n}, []);\n\nreturn (\n  <UserContext.Provider value={[user, setUser]}>\n    <Layout>\n      <Component {...pageProps} />\n    </Layout>\n  </UserContext.Provider>\n);\n```\n\n## Magic Link Auth\n", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** This block manages user authentication with Magic Link.\n\n**Functionality:** It checks if a user is logged in using React's `useContext` hook, and updates the `UserContext` accordingly. If logged in, it stores user data; otherwise, redirects to the login page. The user remains logged in for 7 days or until their session expires.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "In `pages/login.js`, handle `magic.auth.loginWithMagicLink()` which is what triggers the magic link to be emailed to the user. It takes an object with two parameters, `email` and an optional `redirectURI`. Magic allows you to configure the email link to open up a new tab, bringing the user back to your application. With the redirect in place, a user will get logged in on both the original and new tab. Once the user clicks the email link, send the `didToken` to the server endpoint at `/api/login` to validate it, and if the token is valid, set the `UserContext` and redirect to the profile page.\n\n```js\nasync function handleLoginWithEmail(email) {\n  // Trigger Magic link to be sent to user\n  let didToken = await magic.auth.loginWithMagicLink({\n    email,\n    redirectURI: new URL('/callback', window.location.origin).href, // optional redirect back to your app after magic link is clicked\n  });\n\n  // Validate didToken with server\n  const res = await fetch('/api/login', {\n    method: 'POST',\n    headers: {", "explanation": "**Summary**\n\nThis block handles user login via email using Magic Link functionality. It triggers an email to be sent to the user, then validates a generated token on the server to authenticate and redirect the user to their profile page.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + didToken,\n    },\n  });\n\n  if (res.status === 200) {\n    // Set the UserContext to the now logged in user\n    let userMetadata = await magic.user.getMetadata();\n    await setUser(userMetadata);\n    Router.push('/profile');\n  }\n}\n```\n\n## Social Logins\n\nThe social login implementation is similar. `magic.oauth.loginWithRedirect()` takes an object with a `provider`, and a required `redirectURI` for where to redirect back to once the user authenticates with the social provider and with Magic. In this case, the user will get redirected to `http://localhost:3000/callback`.\n\n```js\nfunction handleLoginWithSocial(provider) {\n  magic.oauth.loginWithRedirect({\n    provider, // google, apple, etc\n    redirectURI: new URL('/callback', window.location.origin).href, // required redirect to finish social login\n  });\n}\n```\n\n## Handling Redirect\n", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Block Purpose:** Handle user login with Magic.\n\n**Functionality:**\n\n1. **Login**: Send a POST request to authenticate user with Magic.\n\t* Set `Content-Type` to `application/json`.\n\t* Include Bearer token (`didToken`) for authentication.\n2. **Redirect**: If successful, redirect user to `/profile` page.\n3. **Social Login**: Implement social login using `magic.oauth.loginWithRedirect()`.\n4. **Callback**: Handle redirect from social provider and complete login process.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "In the `/callback` page, check if the query parameters include a `provider`, and if so, finish the social login, otherwise, it\u2019s a user completing the email login.\n\n```js\n// The redirect contains a `provider` query param if the user is logging in with a social provider\nuseEffect(() => {\n  router.query.provider ? finishSocialLogin() : finishEmailRedirectLogin();\n}, [router.query]);\n\n// `getRedirectResult()` returns an object with user data from Magic and the social provider\nconst finishSocialLogin = async () => {\n  let result = await magic.oauth.getRedirectResult();\n  authenticateWithServer(result.magic.idToken);\n};\n\n// `loginWithCredential()` returns a didToken for the user logging in\nconst finishEmailRedirectLogin = () => {\n  if (router.query.magic_credential)\n    magic.auth.loginWithCredential().then((didToken) => authenticateWithServer(didToken));\n};\n\n// Send token to server to validate\nconst authenticateWithServer = async (didToken) => {\n  let res = await fetch('/api/login', {\n    method: 'POST',", "explanation": "**Block Purpose:** Handle social login redirects and email login completions.\n\n**Functionality:**\n\n* Check for `provider` query param in `/callback` page.\n* If present, finish social login with Magic's OAuth API.\n* Otherwise, complete email login with user-provided credential.\n* Authenticate user with server using obtained tokens.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + didToken,\n    },\n  });\n\n  if (res.status === 200) {\n    // Set the UserContext to the now logged in user\n    let userMetadata = await magic.user.getMetadata();\n    await setUser(userMetadata);\n    Router.push('/profile');\n  }\n};\n```\n\n## Logout\n\nUsers also need to be able to log out. In `header.js`, add a `logout` function to end the user's session with Magic, clear the user from the UserContext, and redirect back to the login page.\n\n```js\nconst logout = () => {\n  magic.user.logout().then(() => {\n    setUser({ user: null });\n    Router.push('/login');\n  });\n};\n```\n\n# Server\n\n## Validating the Auth Token (didToken)\n\nIn the `/api/login` route, simply verify the `DID token`, then send a `200` back to the client.\n\n```js\nexport default async function login(req, res) {\n  try {\n    const didToken = req.headers.authorization.substr(7);\n    await magic.token.validate(didToken);\n    res.status(200).json({ authenticated: true });", "explanation": "Here is a summary of the code block:\n\n**Purpose:** Implement login functionality using Magic, a authentication service.\n\n**Functionality:**\n\n* Send an authorization token with a `Content-Type` header in JSON format.\n* Check if the login request was successful (200 status code).\n\t+ If true, set the UserContext to the logged-in user and redirect to the profile page.\n* Implement logout functionality:\n\t+ End the user's Magic session and clear the UserContext.\n\t+ Redirect back to the login page.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n}\n```\n\nThat's it! You now have a working Next.js app that includes Magic authentication for both magic links and social logins.\n\n## Deploying to Vercel\n\nFollow [this guide](https://magic.link/posts/magic-link-nextjs) for deploying to Vercel\n", "explanation": "Here is a summary of the block:\n\n**Purpose:** Error handling for Next.js app, sending 500 error response with error message.\n\n**Functionality:** Catches any errors that occur during execution and returns a JSON response with a 500 status code and an error message.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "README.md", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'README.md':\n\n**Magic Authentication SDK Demo App**\n\nThis Next.js project demonstrates Magic's passwordless authentication features, including email login, social login, and WebAuthn. The app provides a quick start guide for setting up API keys and lists required environment variables.\n\nThe demo showcases Magic's login capabilities through various components:\n\n* Login functionality using Magic's authorization token\n* Social login with OAuth API integration\n* Email login with Magic Link token validation\n\nError handling is also implemented to catch any errors during execution, returning a 500 error response with an error message."}
{"code": "import { useState } from 'react';\nimport { Input, Icon, MonochromeIcons, CallToAction } from '@magiclabs/ui';\n\nconst EmailForm = ({ onEmailSubmit, disabled }) => {\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    onEmailSubmit(email);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <h3 className='form-header'>Login</h3>\n        <div className='input-wrapper'>\n          <Input\n            placeholder='Enter your email'\n            size='sm'\n            type='email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            prefix={<Icon inline type={MonochromeIcons.Envelope} size={22} />}\n          />\n        </div>\n        <div>\n          <CallToAction\n            leadingIcon={MonochromeIcons.PaperPlane}\n            color='primary'\n            size='sm'\n            disabled={disabled}\n            onClick={handleSubmit}\n          >\n            Send Magic Link\n          </CallToAction>\n        </div>", "explanation": "Here is a concise summary of the block:\n\n**Email Form Component**\n\n* Collects user's email address via input field\n* Submits email on form submission or when \"Send Magic Link\" button is clicked\n* Optionally disabled by parent component (e.g. if already logged in)", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/email-form.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'components/email-form.js':\n\n**EmailForm Component**\n\nA reusable React component that collects an email address, submits on form submission or button click, and can be optionally disabled by parent components."}
{"code": "      </form>\n      <style jsx>{`\n        form,\n        label {\n          display: flex;\n          flex-flow: column;\n          text-align: center;\n        }\n        .form-header {\n          font-size: 22px;\n          margin: 25px 0;\n        }\n        .input-wrapper {\n          width: 80%;\n          margin: 0 auto 20px;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default EmailForm;\n", "explanation": "**Summary:** \n\nThis block is a React component named \"EmailForm\". It defines an HTML form with CSS styles for layout, typography, and spacing, but does not contain any actual form elements or functionality. The purpose of this code snippet appears to be a reusable Email Form component that can be imported and used in other parts of the application.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/email-form.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the file 'components/email-form.js':\n\n**EmailForm Component**\n\nA reusable React component that collects an email address, submits on form submission or button click, and can be optionally disabled by parent components."}
{"code": "import { useContext } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { magic } from '../lib/magic';\nimport { UserContext } from '../lib/UserContext';\nimport { CallToAction, TextButton } from '@magiclabs/ui';\n\nconst Header = () => {\n  const [user, setUser] = useContext(UserContext);\n\n  const logout = () => {\n    magic.user.logout().then(() => {\n      setUser({ user: null });\n      Router.push('/login');\n    });\n  };\n\n  return (\n    <header>\n      <nav>\n        <ul>\n          {user?.loading ? (\n            // If loading, don't display any buttons specific to the loggedIn state\n            <div style={{ height: '38px' }}></div>\n          ) : user?.issuer ? (\n            <>\n              <li>\n                <Link href='/'>\n                  <TextButton color='primary' size='sm'>\n                    Home\n                  </TextButton>\n                </Link>\n              </li>\n              <li>\n                <Link href='/profile'>", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** A navigation header that displays links to home and profile pages, as well as a logout button.\n\n**Functionality:**\n\n* Displays a \"Home\" link\n* Displays a \"Profile\" link\n* Hides login-specific buttons when user is logging in\n* Allows the user to log out and redirect to login page", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/header.js", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the 'components/header.js' file:\n\nA navigation header component with links to home and profile pages, and a logout button for authenticated users, with a login call-to-action for unauthenticated users."}
{"code": "                  <TextButton color='primary' size='sm'>\n                    Profile\n                  </TextButton>\n                </Link>\n              </li>\n              <li>\n                <a>\n                  <TextButton color='warning' size='sm' onPress={logout}>\n                    Logout\n                  </TextButton>\n                </a>\n              </li>\n            </>\n          ) : (\n            <li>\n              <Link href='/login'>\n                <CallToAction color='primary' size='sm'>\n                  Login\n                </CallToAction>\n              </Link>\n            </li>\n          )}\n        </ul>\n      </nav>\n      <style jsx>{`\n        nav {\n          max-width: 45rem;\n          margin: 0 auto 50px;\n          padding: 1.25rem 1.25rem;\n          border-bottom: 1px solid #f0f0f0;\n        }\n        ul {\n          display: flex;\n          list-style: none;\n        }\n        li {\n          margin-right: 1.5rem;\n          line-height: 38px;\n        }\n        li:first-child {", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\nThis block is a navigation menu with two or three list items, depending on user authentication status. It contains a \"Profile\" link for logged-in users and a \"Logout\" button also for logged-in users. For non-logged-in users, it displays a \"Login\" call-to-action.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/header.js", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the 'components/header.js' file:\n\nA navigation header component with links to home and profile pages, and a logout button for authenticated users, with a login call-to-action for unauthenticated users."}
{"code": "          margin-left: auto;\n        }\n      `}</style>\n    </header>\n  );\n};\n\nexport default Header;\n", "explanation": "**Summary:** A React component that defines a header section with custom CSS styles.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/header.js", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the 'components/header.js' file:\n\nA navigation header component with links to home and profile pages, and a logout button for authenticated users, with a login call-to-action for unauthenticated users."}
{"code": "import Head from 'next/head';\nimport Header from './header';\n\nconst Layout = (props) => (\n  <>\n    <Head>\n      <title>Magic</title>\n      <link rel='icon' href='/favicon.ico' />\n    </Head>\n\n    <Header />\n    <main>\n      <div className='container'>{props.children}</div>\n    </main>\n    <style jsx global>{`\n      * {\n        font-family: sans-serif !important;\n        outline: none;\n      }\n      .container {\n        max-width: 42rem;\n        margin: 0 auto;\n        padding: 0 10px;\n      }\n    `}</style>\n  </>\n);\n\nexport default Layout;\n", "explanation": "**Layout Component**\n\nThis block defines a reusable layout component for a web application, providing a basic structure with:\n\n* A `<Head>` section for setting metadata (title, favicon)\n* A `<Header>` component\n* A main content area with customizable children components\n* Global CSS styles for font family and container styling.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/layout.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary of the `components/layout.js` file:\n\n**Layout Component**\n\nA reusable layout component that sets up basic web app structure, including metadata, header, main content area, and global styles."}
{"code": "const Loading = () => (\n  <div style={{ textAlign: 'center' }}>\n    <img src='./spinner.svg' height='50px' alt='Loading' />\n  </div>\n);\n\nexport default Loading;\n", "explanation": "A React functional component named \"Loading\". It displays a centered image of a spinning loading indicator (spinner.svg) with a height of 50px, serving as a visual cue for loading or processing activity.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/loading.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise summary:\n\nThe `components/loading.js` file defines a React functional component named \"Loading\" that displays a centered image spinner (`spinner.svg`) with a height of 50px, indicating loading or processing activity."}
{"code": "import { useState } from 'react';\n\nconst SocialLogins = ({ onSubmit }) => {\n  const providers = ['apple', 'google', 'facebook', 'github'];\n  const [isRedirecting, setIsRedirecting] = useState(false);\n\n  return (\n    <>\n      <div className='or-login-with'>Or login with</div>\n      {providers.map((provider) => {\n        return (\n          <div key={provider}>\n            <button\n              type='submit'\n              className='social-btn'\n              onClick={() => {\n                setIsRedirecting(true);\n                onSubmit(provider);\n              }}\n              key={provider}\n              style={{ backgroundImage: `url(${provider}.png)` }}\n            >\n              {/* turns \"google\" to \"Google\" */}\n              {provider.replace(/^\\w/, (c) => c.toUpperCase())}\n            </button>\n          </div>\n        );\n      })}\n      {isRedirecting && <div className='redirecting'>Redirecting...</div>}\n      <style jsx>{`\n        .or-login-with {\n          margin: 25px 0;\n          font-size: 12px;", "explanation": "**Summary:**\n\nThis block is a React component that renders social media login buttons for Apple, Google, Facebook, and GitHub providers. When a button is clicked, it submits the chosen provider and displays a \"Redirecting...\" message while processing the request. The `onSubmit` prop function is called with the selected provider when a button is clicked.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/social-logins.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a concise summary:\n\n`components/social-logins.js`: A React component that renders social media login buttons with styles for Apple, Google, Facebook, and GitHub providers."}
{"code": "          text-align: center;\n          color: gray;\n        }\n        .social-btn {\n          cursor: pointer;\n          border-radius: 50px;\n          margin-bottom: 20px;\n          border: 1px solid #8a8a8a;\n          padding: 9px 24px 9px 35px;\n          width: 80%;\n\n          background-color: #fff;\n          background-size: 20px;\n          background-repeat: no-repeat;\n          background-position: 23% 50%;\n        }\n        .redirecting {\n          color: gray;\n          font-size: 12px;\n          margin-bottom: 5px;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default SocialLogins;\n", "explanation": "This block is a CSS stylesheet that defines styles for three classes:\n\n* `.center`: Centers text alignment and sets color to gray.\n* `.social-btn`: Styles social media buttons with rounded corners, gray borders, and padding.\n* `.redirecting`: Sets font size and color of text.\n\nNo actual code or functionality is present in this block.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "components/social-logins.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a concise summary:\n\n`components/social-logins.js`: A React component that renders social media login buttons with styles for Apple, Google, Facebook, and GitHub providers."}
{"code": "import { createContext } from 'react';\n\nexport const UserContext = createContext(null);\n", "explanation": "This block creates a global React context named \"UserContext\" which can be used to share data across components in an application.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "lib/UserContext.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise and to-the-point holistic summary of the `lib/UserContext.js` file:\n\n\"Provides a reusable, application-wide UserContext that enables sharing of user-related data across React components.\""}
{"code": "import { Magic } from 'magic-sdk';\nimport { OAuthExtension } from '@magic-ext/oauth';\n\n// Create client-side Magic instance\nconst createMagic = (key) => {\n  return (\n    typeof window != 'undefined' &&\n    new Magic(key, {\n      extensions: [new OAuthExtension()],\n    })\n  );\n};\n\nexport const magic = createMagic(process.env.NEXT_PUBLIC_MAGIC_PUBLISHABLE_KEY);\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Initialize a client-side instance of the Magic SDK with an OAuth extension.\n\n**Functionality:** Creates a Magic instance using an API key, enabling authentication via OAuth.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "lib/magic.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a concise holistic summary of the file 'lib/magic.js':\n\n**Initializes a client-side Magic instance with OAuth capabilities**\n\nThis code creates a Magic SDK instance with an OAuth extension, allowing for client-side authentication using an API key."}
{"code": "import { useState, useEffect } from 'react';\nimport { UserContext } from '../lib/UserContext';\nimport Router from 'next/router';\nimport { magic } from '../lib/magic';\nimport Layout from '../components/layout';\nimport { ThemeProvider } from '@magiclabs/ui';\nimport '@magiclabs/ui/dist/cjs/index.css';\n\nfunction MyApp({ Component, pageProps }) {\n  const [user, setUser] = useState();\n\n  // If isLoggedIn is true, set the UserContext with user data\n  // Otherwise, redirect to /login and set UserContext to { user: null }\n  useEffect(() => {\n    setUser({ loading: true });\n    magic.user.isLoggedIn().then((isLoggedIn) => {\n      if (isLoggedIn) {\n        magic.user.getMetadata().then((userData) => setUser(userData));\n      } else {\n        Router.push('/login');\n        setUser({ user: null });\n      }\n    });\n  }, []);\n\n  return (\n    <ThemeProvider root>\n      <UserContext.Provider value={[user, setUser]}>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </UserContext.Provider>", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** Authentication wrapper for Next.js applications.\n\n**Functionality:** Checks user login status using Magic library, sets UserContext with user data if logged in, or redirects to /login page otherwise, and wraps app components with UserContext and ThemeProvider.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/_app.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a concise holistic summary of the file 'pages/_app.js':\n\n\"The `pages/_app.js` file provides an authentication wrapper for Next.js applications using the Magic library, setting user context and theme provider while handling login redirects.\""}
{"code": "    </ThemeProvider>\n  );\n}\n\nexport default MyApp;\n", "explanation": "This is a React JavaScript file that exports a functional component named \"MyApp\". It appears to be the main application component, wrapping other components with ThemeProvider.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/_app.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a concise holistic summary of the file 'pages/_app.js':\n\n\"The `pages/_app.js` file provides an authentication wrapper for Next.js applications using the Magic library, setting user context and theme provider while handling login redirects.\""}
{"code": "/**\n * Can delete file if not using @magiclabs/ui\n */\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { DEFAULT_THEME, getThemeVariables } from '@magiclabs/ui';\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html>\n        <Head>\n          <style\n            type='text/css'\n            dangerouslySetInnerHTML={{ __html: getThemeVariables(DEFAULT_THEME).toCSS() }}\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Customizes document settings for Next.js app.\n\n**Functionality:** Injects custom theme styles into HTML head, overriding default UI if not using @magiclabs/ui.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/_document.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a concise holistic summary of the file 'pages/_document.js':\n\n**Customizes Document Settings**: Injects custom theme styles into HTML head for Next.js app, overriding default UI when not using @magiclabs/ui."}
{"code": "import { Magic } from '@magic-sdk/admin';\n\n// Initiating Magic instance for server-side methods\nconst magic = new Magic(process.env.MAGIC_SECRET_KEY);\n\nexport default async function login(req, res) {\n  try {\n    const didToken = req.headers.authorization.substr(7);\n    await magic.token.validate(didToken);\n    res.status(200).json({ authenticated: true });\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n}\n", "explanation": "Here is a concise summary:\n\n**Purpose:** Verifies a user's authentication through the Magic Admin API.\n\n**Functionality:** Checks an incoming request for a valid DID token, returns a success response if authenticated, or errors if invalid.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/api/login.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise and holistic summary of the file 'pages/api/login.js':\n\n**Summary:** Verifies user authentication via Magic Admin API, ensuring valid DID tokens in requests and returning success responses for authentications while reporting errors for invalid ones."}
{"code": "import { useEffect, useContext } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { magic } from '../lib/magic';\nimport { UserContext } from '../lib/UserContext';\nimport Loading from '../components/loading';\n\nconst Callback = () => {\n  const router = useRouter();\n  const [user, setUser] = useContext(UserContext);\n\n  // The redirect contains a `provider` query param if the user is logging in with a social provider\n  useEffect(() => {\n    router.query.provider ? finishSocialLogin() : finishEmailRedirectLogin();\n  }, [router.query]);\n\n  // `getRedirectResult()` returns an object with user data from Magic and the social provider\n  const finishSocialLogin = async () => {\n    let result = await magic.oauth.getRedirectResult();\n    authenticateWithServer(result.magic.idToken);\n  };\n\n  // `loginWithCredential()` returns a didToken for the user logging in\n  const finishEmailRedirectLogin = () => {\n    if (router.query.magic_credential)", "explanation": "Here is a concise summary:\n\n**Purpose:** Handle Magic login callback, authenticating users with social providers or email.\n\n**Functionality:**\n\n* Checks for social provider query param in redirect URL\n* Uses `magic.oauth.getRedirectResult()` to fetch user data from Magic and social provider (if applicable)\n* Authenticates user on server-side using `authenticateWithServer()` function.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/callback.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise and holistic summary of the file 'pages/callback.js':\n\n**Purpose:** Handles Magic login callback, authenticating users with social providers or email, and validating tokens on the server-side."}
{"code": "      magic.auth.loginWithCredential().then((didToken) => authenticateWithServer(didToken));\n  };\n\n  // Send token to server to validate\n  const authenticateWithServer = async (didToken) => {\n    let res = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + didToken,\n      },\n    });\n\n    if (res.status === 200) {\n      // Set the UserContext to the now logged in user\n      let userMetadata = await magic.user.getMetadata();\n      await setUser(userMetadata);\n      Router.push('/profile');\n    }\n  };\n\n  return <Loading />;\n};\n\nexport default Callback;\n", "explanation": "Here is a concise summary:\n\nThis block logs in a user using Magic Auth, sends a token to the server for validation, and redirects the user to their profile page if authenticated successfully.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/callback.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise and holistic summary of the file 'pages/callback.js':\n\n**Purpose:** Handles Magic login callback, authenticating users with social providers or email, and validating tokens on the server-side."}
{"code": "import { useContext } from 'react';\nimport { UserContext } from '../lib/UserContext';\nimport Loading from '../components/loading';\n\nconst Home = () => {\n  const [user] = useContext(UserContext);\n\n  return <>{user?.loading ? <Loading /> : user?.issuer && <div>You're logged in!</div>}</>;\n};\n\nexport default Home;\n", "explanation": "This block is a React component named \"Home\" that:\n\n* Checks if a user is logged in using a context hook\n* Displays a loading indicator while waiting for user data\n* Shows a success message when the user is logged in", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a concise and holistic summary of the file 'pages/index.js':\n\n**Index Page Component**\n\nDisplays a loading indicator while checking user login status, then shows a success message upon successful authentication."}
{"code": "import { useState, useEffect, useContext } from 'react';\nimport Router from 'next/router';\nimport { magic } from '../lib/magic';\nimport { UserContext } from '../lib/UserContext';\nimport EmailForm from '../components/email-form';\nimport SocialLogins from '../components/social-logins';\n\nconst Login = () => {\n  const [disabled, setDisabled] = useState(false);\n  const [user, setUser] = useContext(UserContext);\n\n  // Redirec to /profile if the user is logged in\n  useEffect(() => {\n    user?.issuer && Router.push('/profile');\n  }, [user]);\n\n  async function handleLoginWithEmail(email) {\n    try {\n      setDisabled(true); // disable login button to prevent multiple emails from being triggered\n\n      // Trigger Magic link to be sent to user\n      let didToken = await magic.auth.loginWithMagicLink({\n        email,\n        redirectURI: new URL('/callback', window.location.origin).href, // optional redirect back to your app after magic link is clicked\n      });\n\n      // Validate didToken with server", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Login component that handles email login through Magic Links.\n\n**Functionality:**\n\n* Checks if user is logged in and redirects to /profile if true.\n* Handles email login with Magic Link:\n\t+ Disables login button during processing.\n\t+ Sends Magic Link to user's email.\n\t+ Redirects back to app after Magic Link is clicked.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/login.js", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a holistic summary of the file 'pages/login.js':\n\nThe `login.js` file handles user login through email or social media authentication, sending a Magic Link to the user's email upon request, and redirecting to the app's profile page if successful."}
{"code": "      const res = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + didToken,\n        },\n      });\n\n      if (res.status === 200) {\n        // Set the UserContext to the now logged in user\n        let userMetadata = await magic.user.getMetadata();\n        await setUser(userMetadata);\n        Router.push('/profile');\n      }\n    } catch (error) {\n      setDisabled(false); // re-enable login button - user may have requested to edit their email\n      console.log(error);\n    }\n  }\n\n  async function handleLoginWithSocial(provider) {\n    await magic.oauth.loginWithRedirect({\n      provider, // google, apple, etc\n      redirectURI: new URL('/callback', window.location.origin).href, // required redirect to finish social login\n    });\n  }\n\n  return (\n    <div className='login'>\n      <EmailForm disabled={disabled} onEmailSubmit={handleLoginWithEmail} />\n      <SocialLogins onSubmit={handleLoginWithSocial} />", "explanation": "Here is a summary of the purpose and functionality of this block:\n\n**Purpose:** Handle user login through email or social media authentication.\n\n**Functionality:**\n\n* Tries to log in via email using a POST request to `/api/login` with authorization token.\n* If successful, sets the UserContext and redirects to `/profile`.\n* Handles social media login (e.g. Google, Apple) by redirecting to a callback URL after user authentication.\n* Catches any errors and re-enables login button.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/login.js", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a holistic summary of the file 'pages/login.js':\n\nThe `login.js` file handles user login through email or social media authentication, sending a Magic Link to the user's email upon request, and redirecting to the app's profile page if successful."}
{"code": "      <style jsx>{`\n        .login {\n          max-width: 20rem;\n          margin: 40px auto 0;\n          padding: 1rem;\n          border: 1px solid #dfe1e5;\n          border-radius: 4px;\n          text-align: center;\n          box-shadow: 0px 0px 6px 6px #f7f7f7;\n          box-sizing: border-box;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Login;\n", "explanation": "This block is a CSS Stylesheet that defines a container class `.login` with visual styling properties. \n\n(In other words, it's code that makes a login box look pretty.)", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/login.js", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a holistic summary of the file 'pages/login.js':\n\nThe `login.js` file handles user login through email or social media authentication, sending a Magic Link to the user's email upon request, and redirecting to the app's profile page if successful."}
{"code": "import { useContext } from 'react';\nimport { UserContext } from '../lib/UserContext';\nimport Loading from '../components/loading';\n\nconst Profile = () => {\n  const [user] = useContext(UserContext);\n\n  return (\n    <>\n      {user?.loading ? (\n        <Loading />\n      ) : (\n        user?.issuer && (\n          <>\n            <div className='label'>Email</div>\n            <div className='profile-info'>{user.email}</div>\n\n            <div className='label'>User Id</div>\n            <div className='profile-info'>{user.issuer}</div>\n          </>\n        )\n      )}\n      <style jsx>{`\n        .label {\n          font-size: 12px;\n          color: #6851ff;\n          margin: 30px 0 5px;\n        }\n        .profile-info {\n          font-size: 17px;\n          word-wrap: break-word;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default Profile;\n", "explanation": "**Summary:**\n\nThis React component, \"Profile\", displays user information (email and issuer) if a valid user context is provided, otherwise it shows a loading indicator. It uses the UserContext hook from a custom library to fetch user data.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "pages/profile.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here is a concise and to-the-point summary of the file 'pages/profile.js':\n\n**Summary:** The \"Profile\" React component displays user info (email, issuer) with a loading indicator if no valid user context is provided, fetching data via UserContext hook."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n<path d=\"M2 50A48 48 0 0 0 98 50A48 49.9 0 0 1 2 50\" fill=\"#6851ff\" stroke=\"none\">\n  <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 50.95;360 50 50.95\"></animateTransform>\n</path>\n</svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) file that creates a rotating blue circle, with no background or border, and animation that repeats indefinitely every 1 second.", "metadata": {"repo": "magiclabs/example-nextjs", "file": "public/spinner.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Unfortunately, you didn't provide the repository details.\n\nHowever, based on the name \"magiclabs/example-nextjs\", I can make an educated guess:\n\n**Purpose:** This repository is likely a demonstration or example project for Next.js, a popular React-based framework for building server-rendered and statically generated web applications.\n\n**Content:** The contents of this repository probably include:\n\n* A basic Next.js project setup\n* Example code and configurations to demonstrate key features of Next.js\n* possibly some additional tools or scripts (e.g., Webpack, Babel)", "file_summary": "Here's a holistic summary of the 'public/spinner.svg' file:\n\n\"Rotating blue circle animation.\""}
