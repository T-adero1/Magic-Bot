{"code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Magic Hello World \ud83c\udf0e</title>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\" />\n    <!-- 1\ufe0f\u20e3 Install Magic SDK -->\n    <script src=\"https://auth.magic.link/sdk\"></script>\n    <script>\n      /* 2\ufe0f\u20e3 Initialize Magic Instance */\n      let magic = new Magic(\"pk_live_426277674FDA7FBE\");\n\n      /* 3\ufe0f\u20e3 Implement Render Function */\n      const render = async () => {\n        const isLoggedIn = await magic.user.isLoggedIn();\n\n        /* Show login form if user is not logged in */\n        let html = `\n          <h1>Please sign up or login</h1>\n          <form onsubmit=\"handleLogin(event)\">\n            <input type=\"text\" name=\"phone\" required=\"required\" placeholder=\"+13031010000\" />\n            <button type=\"submit\">Send</button>\n          </form>\n        `;\n\n        if (isLoggedIn) {\n          /* Get user metadata including phone */", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Display a login form with Magic, a digital identity platform.\n\n**Functionality:** Checks user's login status, displays a login form if not logged in, and shows user metadata (phone number) if logged in.", "metadata": {"repo": "magiclabs/example-sms", "file": "index.html", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/example-sms`\n\n**Purpose:** A basic example of an SMS sending application.\n\n**Content:** A simple implementation of sending an SMS using [Magic Labs' API](https://www.magiclabs.com/). The code demonstrates how to use the API to send a message.", "file_summary": "Here is a concise and holistic summary of the file 'index.html':\n\n**Summary:** This HTML file displays a login form with Magic digital identity platform, allowing users to log in, view metadata (phone number), and update their phone number. It uses JavaScript code to retrieve user data, generate UI content, and handle login functionality."}
{"code": "          const userMetadata = await magic.user.getMetadata();\n          html = `\n            <h2>You Are Logged in!</h2>\n            <div class=\"flex-col metadata\">\n                  <div>\n                    <h3>phone</h3>\n                    <span>${userMetadata.phoneNumber}</span>\n                  </div>\n                  <div>\n                    <h3>address</h3>\n                    <span>${userMetadata.publicAddress}</span>\n                  </div>\n            </div>\n            <hr>\n            <div class=\"flex-col methods\">\n              <button onclick=\"handleUpdatePhoneNumber()\">updatePhoneNumber</button>\n              <button onclick=\"handleLogout()\">Logout</button>\n            </div>\n          `;\n        }\n\n        document.getElementById(\"app\").innerHTML = html;\n      };\n\n      /* 4\ufe0f\u20e3 Implement Login Handler */\n      const handleLogin = async (e) => {\n        e.preventDefault();\n        const phoneNumber = new FormData(e.target).get(\"phone\");\n        if (phoneNumber) {", "explanation": "**Summary:**\n\nThis block retrieves user metadata, generates HTML content, and updates a DOM element with that content. It also defines an event handler for login functionality.\n\n**Key Functionality:**\n\n* Retrieves user metadata using `magic.user.getMetadata()`\n* Generates HTML content based on the retrieved metadata\n* Updates a DOM element (with ID \"app\") with the generated HTML\n* Defines an event handler `handleLogin` to handle login functionality", "metadata": {"repo": "magiclabs/example-sms", "file": "index.html", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/example-sms`\n\n**Purpose:** A basic example of an SMS sending application.\n\n**Content:** A simple implementation of sending an SMS using [Magic Labs' API](https://www.magiclabs.com/). The code demonstrates how to use the API to send a message.", "file_summary": "Here is a concise and holistic summary of the file 'index.html':\n\n**Summary:** This HTML file displays a login form with Magic digital identity platform, allowing users to log in, view metadata (phone number), and update their phone number. It uses JavaScript code to retrieve user data, generate UI content, and handle login functionality."}
{"code": "          /* One-liner login \ud83e\udd2f */\n          await magic.auth.loginWithSMS({ phoneNumber });\n          render();\n        }\n      };\n\n      /* 5\ufe0f\u20e3 Implement Logout Handler */\n      const handleLogout = async () => {\n        await magic.user.logout();\n        render();\n      };\n\n      const handleUpdatePhoneNumber = async () => {\n        try{\n          // Opens modal to begin update flow\n          await magic.user.updatePhoneNumber();\n        }catch(err){\n          console.error(err)\n        }\n      }\n    </script>\n  </head>\n  <body onload=\"render()\">\n    <div id=\"app\">\n      Loading...\n    </div>\n  </body>\n</html>\n", "explanation": "Here is a concise summary:\n\nThis block of code implements login, logout, and phone number update functionality using Magic Authentication library, rendering UI updates after each action.", "metadata": {"repo": "magiclabs/example-sms", "file": "index.html", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/example-sms`\n\n**Purpose:** A basic example of an SMS sending application.\n\n**Content:** A simple implementation of sending an SMS using [Magic Labs' API](https://www.magiclabs.com/). The code demonstrates how to use the API to send a message.", "file_summary": "Here is a concise and holistic summary of the file 'index.html':\n\n**Summary:** This HTML file displays a login form with Magic digital identity platform, allowing users to log in, view metadata (phone number), and update their phone number. It uses JavaScript code to retrieve user data, generate UI content, and handle login functionality."}
{"code": "{\n  \"infiniteLoopProtection\": true,\n  \"hardReloadOnChange\": false,\n  \"view\": \"browser\",\n  \"template\": \"static\"\n}\n", "explanation": "This block appears to be a configuration object, likely used in a development or testing environment. It sets three properties:\n\n* Infinite loop protection: Enabled (true)\n* Hard reload on change: Disabled (false)\n* View mode: Browser view\n* Template type: Static template", "metadata": {"repo": "magiclabs/example-sms", "file": "sandbox.config.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/example-sms`\n\n**Purpose:** A basic example of an SMS sending application.\n\n**Content:** A simple implementation of sending an SMS using [Magic Labs' API](https://www.magiclabs.com/). The code demonstrates how to use the API to send a message.", "file_summary": "Here is a concise summary of the file 'sandbox.config.json':\n\n\"Sandbox configuration settings: infinite loop protection enabled, hard reload disabled, browser view with static templates.\""}
{"code": "body {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  height: 100vh;\n  display: grid;\n  font-size: 18px;\n}\n\n#app {\n  align-self: center;\n  justify-self: center;\n  background-color: #eee;\n  text-align: center;\n  min-width: 380px;\n  padding: 27px 18px;\n}\n\nh1 {\n  margin: 0;\n  padding-bottom: 18px;\n  font-size: 18px;\n}\n\nh3{\n  margin: 0;\n}\n\ninput {\n  margin-bottom: 9px;\n  width: 60%;\n}\n\ninput,\nbutton {\n  padding: 9px;\n  font-size: 18px;\n}\n\n.flex-col {\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n}\n\n.flex-col span{\n  margin: auto;\n}\n\n.flex-col button{\n  width: 75%;\n  margin: auto;\n}\n\n.methods {\n  margin-top: 1em;\n}\n\n.metadata {\n  text-align: left;\n}", "explanation": "**CSS Styles Block**\n\nThis block defines various styles for an HTML document, including:\n\n* Global body styles (font family, height, display)\n* Styles for a container element (#app) with its children\n* Specific styles for headings (h1, h3), inputs, buttons, and flex containers.", "metadata": {"repo": "magiclabs/example-sms", "file": "styles.css", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Here is a concise explanation:\n\n**Repository:** `magiclabs/example-sms`\n\n**Purpose:** A basic example of an SMS sending application.\n\n**Content:** A simple implementation of sending an SMS using [Magic Labs' API](https://www.magiclabs.com/). The code demonstrates how to use the API to send a message.", "file_summary": "Here is a concise summary of `styles.css`:\n\n**Styles Summary**\n\nThis CSS file defines global styles for the document body and specific styles for elements such as headings, inputs, buttons, and containers, including layout and display rules."}
