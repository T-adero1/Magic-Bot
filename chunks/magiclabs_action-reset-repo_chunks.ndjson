{"code": "name: Rest Dev Branch to Master\non:\n  schedule:\n    - cron: \"0 1 * * *\"\njobs:\n  reset:\n    name: Runner\n    runs-on: ubuntu-latest\n    steps:\n      - name: Reset dev branch to master\n        uses: nicksnell/action-reset-repo@master\n        with:\n          reset_branch: dev\n", "explanation": "This block is designed to automate the process of resetting the Ruby development branch to the master branch in a Git repository using the Nicksell Action Reset Repository gem.\n\nThe function's purpose is to:\n- Retrieve the current branch (in this case, 'dev')\n- Update to the master branch\nThe function's functionality involves:\n- Deactivating the 'dev' branch (presumably causing it to migrate to the master branch) and activating the master branch.", "metadata": {"repo": "magiclabs/action-reset-repo", "file": ".github/workflows/testing.yml", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The purpose of this repository is to manage the \"action-reset\" feature in Magic Labs, a project that aims to simplify and automate system restoration after malicious attacks.\n\n**Content Overview**\n\n- It consists of a series of related repositories: `action-reset`, `magic-labs/`, and `actions` bundled together as a single action Reset function.\n- The action-reset function allows users to automatically reset their systems (hardware, software, or both) after they have been impacted by a security incident (e.g. hacking, malware infection).\n- This is an essential feature for organizations to mitigate downtime, minimize losses, and comply with regulatory requirements.", "file_summary": "**Holistic Summary of the `.github/workflows/testing.yml` file:**\n\nTo reset the Ruby development branch to the master branch in a Git repository, utilizes the Nicksell Action Reset Repository gem.\n\n**Usage:**\n\n1. Retrieves the current branch (`dev` in this case)\n2. Updates the master branch\n3. Activates the master branch, presumably causing it to migrate\n\nNote: The code is wrapped in a workflow that automates this process, ensuring a predefined step-by-step execution."}
{"code": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install -y git\n\nCOPY entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n", "explanation": "**Purpose:** \nThe purpose of this block is to configure Ubuntu 18.04-based machine as a node in a Docker container by installing Git and the start-up script for it.\n\n**Functionality:** \n1. It checks the system version using `ubuntu:18.04`.\n2. It updates the package list using `apt-get update`.\n3. It installs Git using `apt-get install -y git`.\n4. It copies the `entrypoint.sh` script to the `/entrypoint.sh` file.\n5. It makes the script executable using `chown --remove root.root entrypoint.sh` and `chmod +x entrypoint.sh`. This script will act as the entry point (start-up script) for the container.", "metadata": {"repo": "magiclabs/action-reset-repo", "file": "Dockerfile", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The purpose of this repository is to manage the \"action-reset\" feature in Magic Labs, a project that aims to simplify and automate system restoration after malicious attacks.\n\n**Content Overview**\n\n- It consists of a series of related repositories: `action-reset`, `magic-labs/`, and `actions` bundled together as a single action Reset function.\n- The action-reset function allows users to automatically reset their systems (hardware, software, or both) after they have been impacted by a security incident (e.g. hacking, malware infection).\n- This is an essential feature for organizations to mitigate downtime, minimize losses, and comply with regulatory requirements.", "file_summary": "**Holistic Summary: Dockerfile**\n\nInstalls and configures an Ubuntu 18.04-based machine as a Docker container. Setup:\n\n* Installs Git and its dependencies\n* Updates package list\n* Installs a custom entrypoint script (`/entrypoint.sh`)\n* Makes script executable\n* Copies script to container."}
{"code": "# Reset Git Branch\n\nReset a specific branch to another. Useful if you need a specific branch to be reset to say master at given intervals. NOTE: this action performs a _reset_ on the repository and is **destructive** - you will lose any changes made to the branch being reset. Be sure this is what you want to do before running.\n\n## Usage\n\nExample Workflow using a schedule.\n\n```yaml\nname: Rest Dev Branch to Master at 1am each day\non:\n  schedule:\n    - cron: \"0 1 * * *\"\njobs:\n  reset:\n    name: Runner\n    runs-on: ubuntu-latest\n    steps:\n      - name: Reset dev branch to master\n        uses: nicksnell/action-reset-repo@master\n        with:\n          reset_branch: dev\n```\n\n## Inputs\n\n| name | value | default | description |\n| ---- | ----- | ------- | ----------- |\n| github_token | string | | Token for the repo. Can be passed in using `${{ secrets.GITHUB_TOKEN }}`. |\n| base_branch | string | 'master' | Branch to be used to reset too |\n| reset_branch | string | - | Determines the branch to be reset |\n\n## License\n", "explanation": "**Summary:** This is a configuration block (yml file) that instructs Git on how to reset a specific branch to master at regular intervals. It provides a way to schedule changes to be reset using a cron job or as part of a job in a script.", "metadata": {"repo": "magiclabs/action-reset-repo", "file": "README.md", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "The purpose of this repository is to manage the \"action-reset\" feature in Magic Labs, a project that aims to simplify and automate system restoration after malicious attacks.\n\n**Content Overview**\n\n- It consists of a series of related repositories: `action-reset`, `magic-labs/`, and `actions` bundled together as a single action Reset function.\n- The action-reset function allows users to automatically reset their systems (hardware, software, or both) after they have been impacted by a security incident (e.g. hacking, malware infection).\n- This is an essential feature for organizations to mitigate downtime, minimize losses, and comply with regulatory requirements.", "file_summary": "**Holistic Summary of the 'README.md' File**\n\nThis configuration file ([README.md]) demonstrates Git's YAML syntax for setting up branch resetting, offering a method for time-interactive scheduling (cron usage) and tasks initialization (`script` uses) to implement changes into organization.\n\nAdditionally, the license used in this setup is the open-source `[MIT License]`, indicating its open-source origins."}
{"code": "The Dockerfile and associated scripts and documentation in this project are released under the [MIT License](LICENSE).\n", "explanation": "The purpose of this block is to declare the license under which the provided contents are released. \n\nIt is a statement of the license, as indicated by `[MIT License]`.", "metadata": {"repo": "magiclabs/action-reset-repo", "file": "README.md", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "The purpose of this repository is to manage the \"action-reset\" feature in Magic Labs, a project that aims to simplify and automate system restoration after malicious attacks.\n\n**Content Overview**\n\n- It consists of a series of related repositories: `action-reset`, `magic-labs/`, and `actions` bundled together as a single action Reset function.\n- The action-reset function allows users to automatically reset their systems (hardware, software, or both) after they have been impacted by a security incident (e.g. hacking, malware infection).\n- This is an essential feature for organizations to mitigate downtime, minimize losses, and comply with regulatory requirements.", "file_summary": "**Holistic Summary of the 'README.md' File**\n\nThis configuration file ([README.md]) demonstrates Git's YAML syntax for setting up branch resetting, offering a method for time-interactive scheduling (cron usage) and tasks initialization (`script` uses) to implement changes into organization.\n\nAdditionally, the license used in this setup is the open-source `[MIT License]`, indicating its open-source origins."}
{"code": "name: \"Reset Branch\"\ndescription: \"Reset a branch to given branch\"\ninputs:\n  github_token:\n    description: \"Token to authenticate with GitHub\"\n    required: true\n    default: ${{ github.token }}\n  base_branch:\n    description: \"Branch you want to use as the base to reset too\"\n    required: true\n    default: \"master\"\n  reset_branch:\n    description: \"Branch you want to reset\"\n    required: true\nruns:\n  using: \"docker\"\n  image: \"Dockerfile\"\n  args:\n    - ${{ inputs.base_branch }}\n    - ${{ inputs.reset_branch }}\n    - ${{ inputs.github_token }}\nbranding:\n  icon: \"git-merge\"\n  color: \"gray-dark\"\n", "explanation": "The \"Reset Branch\" script provides functionality to reset a branch to a specific branch on a GitHub repository, along with the required authentication token from the user.", "metadata": {"repo": "magiclabs/action-reset-repo", "file": "action.yml", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The purpose of this repository is to manage the \"action-reset\" feature in Magic Labs, a project that aims to simplify and automate system restoration after malicious attacks.\n\n**Content Overview**\n\n- It consists of a series of related repositories: `action-reset`, `magic-labs/`, and `actions` bundled together as a single action Reset function.\n- The action-reset function allows users to automatically reset their systems (hardware, software, or both) after they have been impacted by a security incident (e.g. hacking, malware infection).\n- This is an essential feature for organizations to mitigate downtime, minimize losses, and comply with regulatory requirements.", "file_summary": "Here's a concise summary of the `action.yml` file:\n\n**Reset Branch**\n- Retrieves auth token from user\n- Requests Git token from user\n- Requests repository token from user\n- Used to reset a branch to a specific branch on a GitHub repository via GitHub API."}
{"code": "#!/bin/bash -l\n\nBASE_BRANCH=$1\nRESET_BRANCH=$2\nGITHUB_TOKEN=$3\n\nif [[ -z \"${BASE_BRANCH}\" ]]; then\n  echo \"Missing \\$BASE_BRANCH\"\n  exit 1\nfi\n\nif [[ -z \"${RESET_BRANCH}\" ]]; then\n  echo \"Missing \\$RESET_BRANCH\"\n  exit 1\nfi\n\necho \"BASE_BRANCH=${BASE_BRANCH}\"\necho \"RESET_BRANCH=${RESET_BRANCH}\"\n\n\nmkdir _tmp && cd _tmp\n\ngit init\n\ngit config user.name \"${GITHUB_ACTOR}\"\ngit config user.email \"${GITHUB_ACTOR}@users.noreply.github.com\"\n\ngit remote add origin \"https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git\"\n\ngit fetch\n\ngit checkout $RESET_BRANCH\n\ngit reset --hard \"origin/${BASE_BRANCH}\"\n\ngit push --force origin $RESET_BRANCH\n\nrm -rf _tmp", "explanation": "This block, a bash script, serves the following purposes and functionalities:\n\n- **Verification**: It checks if two environment variables (`BASE_BRANCH` and `RESET_BRANCH`) and a GitHub token are provided, displaying an error message if either is not present.\n- **Directory creation and Git configuration**: It creates a temporary directory, initializes a Git repository, configures the GitHub user and email, and adds an authenticity token to the Git configuration.\n- **Remote setup**: It configures the GitHub remote with the token and checks out the `RESET_BRANCH` to a new branch's branch using `git reset --hard`. This is likely a step for setting up a new branch on the remote branch.\n- **Tagging and pushing**: Finally, it pushes the updated branch and removes the temporary directory.", "metadata": {"repo": "magiclabs/action-reset-repo", "file": "entrypoint.sh", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The purpose of this repository is to manage the \"action-reset\" feature in Magic Labs, a project that aims to simplify and automate system restoration after malicious attacks.\n\n**Content Overview**\n\n- It consists of a series of related repositories: `action-reset`, `magic-labs/`, and `actions` bundled together as a single action Reset function.\n- The action-reset function allows users to automatically reset their systems (hardware, software, or both) after they have been impacted by a security incident (e.g. hacking, malware infection).\n- This is an essential feature for organizations to mitigate downtime, minimize losses, and comply with regulatory requirements.", "file_summary": "Here is a concise, holistic summary of the file `entrypoint.sh`:\n\n`entrypoint.sh` checks environment conditions, configures Git, and imports a GitHub token. It then sets up a Git repository, creates a new branch using `git reset --hard`, and pushes it to GitHub, updating the test environment.\n\n**Purpose**: Set up a test environment on GitHub.\n\n**Conditions**:\n\n- `BASE_BRANCH`\n- `RESET_BRANCH`\n- `GITHUB_TOKEN`"}
