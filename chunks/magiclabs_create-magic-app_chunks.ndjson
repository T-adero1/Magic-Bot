{"code": "/scaffolds/*/template/\n/bin.js\n/compiled\n/dist\n.eslintrc.js\n", "explanation": "This block appears to be a project or repository setup for front-end development, likely for a web application. \n\nThe contents include:\n\n- Templates for creating new pages (scaffolds/*).\n- Bin package for building and managing the project.\n- Compiled and compiled templates (compiled).\n- JavaScript compilation result (dist).\n- ESLint configuration file (.eslintrc.js).\n\nThis setup suggests that the project utilizes a framework like Vue.js, Svelte, or React for front-end development and possibly a tool like Rollup or Webpack for bundling and compilation.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".eslintignore", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "This '.eslintignore' file is a setup configuration for a front-end project, likely utilizing a framework like Vue.js, Svelte, or React. It includes templates for new page creation, a bin package for project management, and compilation results, as well as a standard ESLint configuration file."}
{"code": "module.exports = {\n  root: true,\n\n  extends: ['@ikscodes/eslint-config'],\n\n  parserOptions: {\n    project: ['./tsconfig.json', './scripts/tsconfig.json']\n  },\n\n  rules: {\n    // Core ESLint rules\n    'no-alert': 0,\n    'no-empty': 0,\n    'consistent-return': 0,\n    'class-methods-use-this': 0,\n    'no-useless-constructor': 0,\n\n    // Import rules\n    'import/extensions': 0,\n    'import/no-extraneous-dependencies': 0,\n\n    // TypeScript rules\n    '@typescript-eslint/await-thenable': 0,\n    '@typescript-eslint/no-useless-constructor': 0,\n    '@typescript-eslint/no-empty-function': 0,\n    '@typescript-eslint/no-unsafe-return': 0,\n    '@typescript-eslint/no-unsafe-assignment': 0,\n    '@typescript-eslint/no-unsafe-member-access': 0,\n    '@typescript-eslint/no-floating-promises': 0,\n    '@typescript-eslint/no-namespace': 0,\n    '@typescript-eslint/no-unsafe-call': 0,\n    '@typescript-eslint/ban-types': 0,\n    '@typescript-eslint/explicit-module-boundary-types': 0,\n    '@typescript-eslint/restrict-template-expressions': 0,", "explanation": "This ESLint configuration block sets up a customized ruleset for a TypeScript project. It extends the base configuration from `@ikscodes/eslint-config`, allowing for various ESLint rules to be disabled or configured as needed.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".eslintrc.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise summary of the `.eslintrc.js` file:\n\nThis file configures ESLint settings for a TypeScript project, using an extended base configuration from @ikscodes/eslint-config and specifying TypeScript configuration file locations for a Webpack project."}
{"code": "  },\n\n  settings: {\n    'import/resolver': {\n      typescript: {\n        project: ['./tsconfig.json', './scripts/tsconfig.json'],\n      },\n    },\n  },\n}\n", "explanation": "This block is a configuration for a project's resolver in a build tool, most likely Webpack. It specifies the locations of TypeScript configuration files (`tsconfig.json` and `scripts/tsconfig.json`).", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".eslintrc.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise summary of the `.eslintrc.js` file:\n\nThis file configures ESLint settings for a TypeScript project, using an extended base configuration from @ikscodes/eslint-config and specifying TypeScript configuration file locations for a Webpack project."}
{"code": "---\nname: Bug Report\nabout: Use this template to report a bug.\ntitle: \"[DESCRIPTIVE BUG NAME]\"\nlabels: \ud83d\udc1b Bug Report, \ud83d\udd0d Needs Triage\n---\n\n### \u2705 Prerequisites\n\n- [ ] Did you perform a cursory search of open issues? Is this bug already reported elsewhere?\n- [ ] Are you running the latest SDK version?\n- [ ] Are you reporting to the correct repository (`make-magic`)?\n\n### \ud83d\udc1b Description\n\n[Description of the bug.]\n\n### \ud83e\udde9 Steps to Reproduce\n\n1. [First Step]\n2. [Second Step]\n3. [and so on...]\n\n### \ud83e\udd14 Expected behavior\n\n[What you expected to happen?]\n\n### \ud83d\ude2e Actual behavior\n\n[What actually happened? Please include any error stack traces you encounter.]\n\n### \ud83d\udcbb Code Sample\n\n[If possible, please provide a code repository, gist, code snippet or sample files to reproduce the issue.]\n\n### \ud83c\udf0e Environment\n\n| Software            | Version(s) |\n| ------------------- | ---------- |\n| `make-magic`        |\n| Node                |\n| `yarn`              |\n| Operating System    |\n", "explanation": "This block serves as a Bug Report template. Its functionality includes:\n\n- Asking users to verify if the issue is already reported\n- Requesting users to report to the correct repository\n- Guiding users to provide detailed information about the bug, including steps to reproduce, expected behavior, and actual behavior\n- Encouraging users to provide code samples or environment settings to facilitate issue clarification and resolution.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".github/ISSUE_TEMPLATE/bug_report.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "This '.github/ISSUE_TEMPLATE/bug_report.md' file serves as a bug report template for users to document and clarify bug issues. It requires users to:\n\n- Verify if the issue is already reported\n- Report in the correct repository\n- Provide detailed bug information, including:\n  - Steps to reproduce the issue\n  - Expected vs actual behavior\n- Offer supporting code samples or environment settings to enhance issue understanding and resolution."}
{"code": "---\nname: Feature Request\nabout: Use this template to request a new feature.\ntitle: \"[DESCRIPTIVE FEATURE NAME]\"\nlabels: \u2728Feature Request\n---\n\n### \u2705 Prerequisites\n\n- [ ] Did you perform a cursory search of open issues? Is this feature already requested elsewhere?\n- [ ] Are you reporting to the correct repository (`make-magic`)?\n\n### \u2728 Feature Request\n\n[Description of the feature.]\n\n## \ud83e\udde9 Context\n\n[Explain any additional context or rationale for this feature. What are you trying to accomplish?]\n\n## \ud83d\udcbb Examples\n\n[Do you have any example(s) for the requested feature? If so, describe/demonstrate your example(s) here.]\n", "explanation": "This is a template for submitting a feature request on a GitHub platform, likely for the \"make-magic\" repository. \n\nIt provides a structured format for users to propose a new feature by including:\n\n1. Prerequisites (checking if the feature is already requested elsewhere)\n2. Feature description and context (explanation for the requested feature)\n3. Examples (demonstration or references for the requested feature)", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".github/ISSUE_TEMPLATE/feature_request.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the '.github/ISSUE_TEMPLATE/feature_request.md' file:\n\nThis template provides a structured format for submitting feature requests on a GitHub platform. It consists of three main sections:\n\n1. Prerequisites: Checks if the feature is already requested previously to avoid duplications.\n2. Feature Description and Context: A detailed explanation of the requested feature, including any relevant background or motivations.\n3. Examples: Demonstrations or references to support the requested feature.\n\nThis template is intended to streamline and organize the feature request process, making it easier for users to propose new features and for developers to prioritize and implement them."}
{"code": "---\nname: Question\nabout: Use this template to request help or ask a question.\ntitle: \"[WHAT'S YOUR QUESTION?]\"\nlabels: \u2753Question\n---\n\n### \u2705 Prerequisites\n\n- [ ] Did you perform a cursory search of open issues? Is this question already asked elsewhere?\n- [ ] Are you reporting to the correct repository (`make-magic`)?\n\n### \u2753 Question\n\n[Ask your question here, please be as detailed as possible!]\n\n### \ud83c\udf0e Environment\n\n| Software            | Version(s) |\n| ------------------- | ---------- |\n| `make-magic`        |\n| Node                |\n| `yarn`              |\n| Operating System    |\n", "explanation": "This block is a template for requesting help or asking a question on a repository. It includes:\n\n- A title that prompts the user to ask a question\n- A check list of prerequisites (searching existing issues, using the correct repository, etc.)\n- A field for the user to ask their question\n- A section for providing details about the environment where the issue occurred.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".github/ISSUE_TEMPLATE/question.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "This Markdown file, located at `.github/ISSUE_TEMPLATE/question.md`, serves as a template for requesting help or asking a question on a repository. It includes key elements such as a title inviting users to ask a question, a checklist to ensure the user meets prerequisites, the main question field, and additional details about the environment where the issue occurred, making it a structured template for users to effectively assist developers based on the issue."}
{"code": "### \ud83d\udce6 Pull Request\n\n[Provide a general summary of the pull request here.]\n\n### \u2705 Fixed Issues\n\n- [List any fixed issues here like: Fixes #XXXX]\n\n### \ud83d\udea8 Test instructions\n\n[Describe any additional context required to test the PR/feature/bug fix.]\n\n### \u26a0\ufe0f Don't forget to add a [semver](https://semver.org/) label!\n\n- `patch`: Bug Fix?\n- `minor`: New Feature?\n- `major`: Breaking Change?\n- `skip-release`: It's unnecessary to publish this change.\n", "explanation": "This block serves as a documentation template for a pull request, describing:\n\n1. A summary of the pull request's purpose.\n2. Fixed issues (bug fixes, patches, etc.) associated with the pull request.\n3. Test instructions for verifying the changes.\n4. A requirement to include a semantic version label (semver) indicating the type of change (bug fix, new feature, breaking change, etc.).", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".github/PULL_REQUEST_TEMPLATE.md", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the '.github/PULL_REQUEST_TEMPLATE.md' file:\n\nThis template documents the details of a pull request, including:\n\n- Purpose of the changes\n- Fixes for existing issues (bug fixes, patches, etc.)\n- Test instructions for verifying the updated code\n- A semantic version label to categorize the change (semver)"}
{"code": "name: Publish\non:\n  push:\n    branches:\n      - 'master'\n      - 'main'\n      - 'staging'\n\nenv:\n  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n\njobs:\n  publish:\n    runs-on: ubuntu-20.04\n    name: Publish\n    environment: production\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          token: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Prepare repository\n        run: git fetch --unshallow --tags\n\n      - name: Setup node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 16\n          cache: 'yarn'\n\n      - name: Install dependencies\n        run: |\n          yarn -v\n          yarn install --immutable\n\n      - name: Build\n        run: yarn run build\n\n      - name: Create Release\n        run: yarn auto shipit -v\n", "explanation": "This YAML block appears to be a GitHub Actions workflow file, likely used to automate the process of publishing a project to a staging environment. \n\nIt is triggered when code is pushed to the 'master', 'main', or 'staging' branches, and performs the following steps:\n\n- Checks out the repository\n- Updates the repository to the latest tags\n- Sets up Node.js (specifically version 16) with yarn for dependency management\n- Installs dependencies\n- Builds the project\n- Creates a release with the 'auto shipit' command\n\nThe workflow utilizes GitHub environment variables, such as the GitHub token and NPM token, which are stored as secrets.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".github/workflows/publish.yml", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "This `.github/workflows/publish.yml` file is a GitHub Actions workflow that automates the process of publishing a project to a staging environment. It is triggered by pushes to the 'master', 'main', or 'staging' branches and performs the following steps:\n\n- Updates repository to latest tags\n- Sets up Node.js 16 with yarn for dependency management\n- Installs dependencies\n- Builds the project\n- Creates a GitHub release with the 'auto shipit' command.\n\nIt relies on GitHub credentials stored as secrets, including a GitHub token and NPM token."}
{"code": "name: Tests\nconcurrency:\n  group: tests-${{ github.ref }}\n  cancel-in-progress: true\non:\n  push:\n    branches:\n      - \"master\"\n      - \"main\"\n  pull_request:\n\njobs:\n  lint:\n    runs-on: ubuntu-20.04\n    name: Run linter and package audit\n    container:\n      image: node:16-slim\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 16\n          cache: 'yarn'\n      - run: |\n          yarn -v\n          yarn\n\n      - name: Lint\n        run: |\n          yarn run lint\n\n      - name: Audit Production Dependencies\n        run: yarn audit --groups dependencies\n\n  test:\n    runs-on: ubuntu-20.04\n    name: Run tests\n    container:\n      image: node:16-slim\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup node\n        uses: actions/setup-node@v3\n        with:\n          node-version: 16\n          cache: 'yarn'\n      - run: |\n          yarn -v\n          yarn\n\n      - name: Test\n        run: yarn run test\n", "explanation": "This block is a GitHub Actions workflow file that automates the testing process for a Node.js project. Its purpose is to:\n\n* Run linter and package audit jobs on push to commit and pull request events, ensuring code quality.\n* Run tests on push to master and main branches, ensuring code correctness.\n\nThe workflow consists of two jobs: \"lint\" and \"test\". The \"lint\" job runs a linter and audits production dependencies, while the \"test\" job runs the actual tests. Both jobs use a Node.js environment with the version specified in the workflow.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".github/workflows/test.yml", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and pointed summary of the `.github/workflows/test.yml` file:\n\nThe `.github/workflows/test.yml` file automates testing for a Node.js project. It runs a \"lint\" job on push to commit and pull request events, ensuring code quality, and a \"test\" job on push to master and main branches, ensuring code correctness. The workflow uses a Node.js environment and checks for linter and package audit results, along with actual test results."}
{"code": "yarn lint-staged\n", "explanation": "The block \"yarn lint-staged\" runs the Yarn lint-staged command, likely staging changes (file modifications) for linting without initializing a new Git repository.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".husky/pre-commit-1123", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "This block of code, found in the '.husky/pre-commit-1123' file, runs the `yarn lint-staged` command to lint staged file modifications without initializing a new Git repository."}
{"code": "{\n  \"*.{ts,tsx}\": [\n    \"eslint --fix\"\n  ]\n}\n", "explanation": "This block is a glob pattern in a configuration (likely a `.eslintrc.json` file). It specifies the file types to lint with ESLint with the `--fix` option.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".lintstagedrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise summary of the file '.lintstagedrc.json':\n\nThis configuration file specifies how to lint styled files in a Git repository. It lists file types (likely 'lint', 'js' and 'jsx' rather than 'styl' since it refers to styled components and may interpret this as the same thing) as paths where ESLint is used with the `--fix` option."}
{"code": "module.exports = require('@ikscodes/prettier-config');\n", "explanation": "This block exports a Prettier configuration, setting up formatting rules for code alignment and indentation.", "metadata": {"repo": "magiclabs/create-magic-app", "file": ".prettierrc.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "The '.prettierrc.js' file exports a configuration that controls code formatting rules in Prettier, including alignment and indentation settings."}
{"code": "# v5.1.0 (Mon Aug 7 2024)\n\n#### \ud83d\ude80 Enhancement\n\n- Adds etherlink mainnet\n\n# v5.0.3 (Mon Jul 29 2024)\n\n#### \ud83d\udca5 Breaking Change\n\n- Removes Universal support with associated flags, prompts, and templates\n- Adds architectural updates to EVM templates\n  \n#### Authors: 1\n\n- pbillingsby ([@PBillingsby](https://github.com/PBillingsby))\n\n# v4.13.0 (Fri Apr 12 2024)\n\n#### \ud83d\ude80 Enhancement\n\n- Adds Etherlink support\n  \n#### Authors: 1\n\n- Hunter Cote ([@hcote](https://github.com/hcote))\n\n# v4.12.0 (Mon Mar 11 2024)\n\n#### \ud83d\ude80 Enhancement\n\n- Adds zkSync support\n  \n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- pbillingsby ([@PBillingsby](https://github.com/PBillingsby))\n\n# v4.4.2 (Wed Sep 27 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Removes dependency on Zombi\n- Fixes issue caused by web3.js update\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.4.1 (Wed Sep 27 2023)\n\n#### \ud83d\ude80 Enhancement\n", "explanation": "This block appears to be a Changelog or release notes for a software development project, likely related to Ethereum or blockchain technology. The purpose of this block is to document the history of updates, enhancements, and changes made to the project from version v4.4.1 to the latest version (v5.1.0).\n\nThe functionality seems to be a record of notable updates, including additions, removals, and architectural changes, along with the release date and version number. The information includes the names of the authors and their GitHub handles.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 1, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Remove Universal option from prompts (it remains available in flags)\n\n---\n\n# v4.4.0 (Wed Sep 27 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Updates the UI design of the templates\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.3.1 (Fri Sep 15 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Enables anonymous usage tracking with a command to opt out\n- Updates Quickstart to use Dedicated Wallet\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.2.2 (Tue Sep 12 2023)\n\n#### \ud83d\udc1b Bug Fix\n\n- Fix bug where network isn't always added into template configuration\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.2.0 (Mon Sep 11 2023)\n\n#### \ud83d\ude80 Enhancement\n\n- Adds support for Solana and Flow\n- Minor updates to UI in templates\n\n#### Authors: 2\n", "explanation": "This block is a changelog or release notes summary for a project, likely a cryptocurrency or blockchain wallet. \n\nSummary:\n- The code block summarizes the changes, enhancements, and bug fixes in different versions of the project (v4.4.0, v4.3.1, v4.2.2, and v4.2.0).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 2, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v4.0.0 (Fri Aug 11 2023)\n\n#### \ud83d\udca5 Breaking Change\n\n- Major CLI tool overhaul [#89](https://github.com/magiclabs/create-magic-app/pull/89) ([@jamesrp13](https://github.com/jamesrp13))\n\n#### Authors: 2\n\n- James ([@jamesrp13](https://github.com/jamesrp13))\n- Aditya Kulkarni ([@AdityaKulkarni](https://github.com/AdityaKulkarni))\n\n---\n\n# v3.2.1 (Thu Jan 13 2022)\n\n#### \ud83d\udc1b Bug Fix\n\n- Remove 'colors' as a transitive dep by updating 'tsc-alias' [#70](https://github.com/magiclabs/create-magic-app/pull/70) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.2.0 (Tue Oct 26 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- New template: `plug-and-play` [#67](https://github.com/magiclabs/create-magic-app/pull/67) ([@smithki](https://github.com/smithki))", "explanation": "This block appears to be the version history of a Git project, specifically a CLI tool named \"create-magic-app\". \n\nIts purpose is to keep track of changes and updates made to the project over time, including breaking changes, bug fixes, and new features. The functionality is:\n\n- Displaying previous versions of the project\n- Describing the type and nature of changes made to the project\n- Notifying the author(s) associated with the change.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 3, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- add magic sms template [#65](https://github.com/magiclabs/create-magic-app/pull/65) ([@dgerrellsMagic](https://github.com/dgerrellsMagic))\n\n#### Authors: 2\n\n- [@dgerrellsMagic](https://github.com/dgerrellsMagic)\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.3 (Fri Aug 27 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update 'zombi' [#64](https://github.com/magiclabs/create-magic-app/pull/64) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.2 (Fri Aug 27 2021)\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Fix typo in post-shutdown logs ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.1 (Fri Aug 27 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Graceful Shutdown [#63](https://github.com/magiclabs/create-magic-app/pull/63) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.1.0 (Sat Aug 14 2021)\n\n#### \ud83d\ude80 Enhancement\n", "explanation": "This block appears to be a changelog or version history for a software project called \"Create Magic App\". \n\nIts purpose is to list all version updates, fixes, and enhancements made to the project over time. \n\nThe functionality allows users to track the changes and bug fixes made to the project, including a record of who made the changes and when.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 4, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- * Add microsoft OAuth login [#59](https://github.com/magiclabs/create-magic-app/pull/59) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v3.0.2 (Wed Aug 11 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Replace existing Hasura scaffold with a new and updated one [#62](https://github.com/magiclabs/create-magic-app/pull/62) ([@seemcat](https://github.com/seemcat))\n\n#### Authors: 1\n\n- Maricris ([@seemcat](https://github.com/seemcat))\n\n---\n\n# v3.0.1 (Mon Aug 09 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update templates to include `auth.magic.link/sdk` CDN references [#61](https://github.com/magiclabs/create-magic-app/pull/61) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v3.0.0 (Mon Aug 09 2021)\n\n#### \ud83d\udca5 Breaking Change\n\n- Add NodeJS-compatible interface [#54](https://github.com/magiclabs/create-magic-app/pull/54) ([@smithki](https://github.com/smithki))\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "This block appears to be a changelog (history of changes) for a project named \"create-magic-app\". It features a list of software releases (version 3.0.2, 3.0.1, and 3.0.0) with their corresponding dates, along with a brief description of the changes:\n\n* v3.0.2: Bug fix for the Hasura scaffold\n* v3.0.1: Bug fix updating templates with CDN references\n* v3.0.0: Breaking change adding NodeJS-compatible interface", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 5, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Chore: remove cfonts dependency [#55](https://github.com/magiclabs/create-magic-app/pull/55) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.11.0 (Mon Aug 02 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- [Hold merge]Add Twitch OAuth to the \"hello-world-social-login\" template [#58](https://github.com/magiclabs/create-magic-app/pull/58) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.10.0 (Fri Jul 09 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Svelte Template [#57](https://github.com/magiclabs/create-magic-app/pull/57) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.9.0 (Thu Jun 24 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Gatsby Template [#56](https://github.com/magiclabs/create-magic-app/pull/56) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n", "explanation": "This block is a version control log, specifically a changelog in hexadecimal format ('$x') for a project named 'create-magic-app'. \n\nIt displays updates, enhancements, or fixes made to the project, including adding new templates (Svelte and Gatsby) and social login features (Twitch OAuth).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 6, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.8.0 (Mon Jun 07 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Discord OAuth to the `\"hello-world-social-login\"` template [#53](https://github.com/magiclabs/create-magic-app/pull/53) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.7.1 (Tue May 25 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- * change success page link from referral to quickstart [#52](https://github.com/magiclabs/create-magic-app/pull/52) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.7.0 (Tue May 25 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- use redirection in quickstart template [#51](https://github.com/magiclabs/create-magic-app/pull/51) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.6.3 (Mon May 24 2021)\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "This block is a changelog for the \"create-magic-app\" repository on GitHub. It documents software releases, including version numbers, release dates, and the changes made in each version. The information includes the type of change (enhancement or bug fix), links to the corresponding GitHub pull requests, and the authors of the changes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 7, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Update `zombi` dependency and re-compile NCC dependencies [#50](https://github.com/magiclabs/create-magic-app/pull/50) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.6.2 (Fri May 21 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Detect invalid Social Login provider input in the interactive flow [#49](https://github.com/magiclabs/create-magic-app/pull/49) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.6.1 (Thu May 20 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- NIT for the quickstart template [#48](https://github.com/magiclabs/create-magic-app/pull/48) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n\n- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.6.0 (Wed May 19 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Jerryliu ch33208 create hello world template for magic dashboard [#45](https://github.com/magiclabs/create-magic-app/pull/45) ([@Ethella](https://github.com/Ethella))\n\n#### Authors: 1\n", "explanation": "This block appears to be the changelog for a GitHub repository \"create-magic-app\". \n\n- It provides updates to the `zombi` dependency and compiles NCC dependencies due to an issue in pull request #50.\n- It also lists bug fixes and enhancements made to the app in previous versions (v2.6.2, v2.6.1, and v2.6.0).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 8, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Jerry Liu ([@Ethella](https://github.com/Ethella))\n\n---\n\n# v2.5.0 (Wed May 05 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add template and scaffold for ExpressJS APIs [#44](https://github.com/magiclabs/create-magic-app/pull/44) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.4.2 (Fri Apr 30 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Nuxt Template minor update [#43](https://github.com/magiclabs/create-magic-app/pull/43) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.4.1 (Fri Apr 30 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Updated Nuxt Template [#42](https://github.com/magiclabs/create-magic-app/pull/42) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.4.0 (Thu Apr 29 2021)\n\n#### \ud83d\ude80 Enhancement\n", "explanation": "This block is a changelog listing the version history of the \"create-magic-app\" project. \n\n- Dates and version numbers indicate release dates and versions of the project.\n- Labels '\ud83d\ude80 Enhancement' and '\ud83d\udc1b Bug Fix' categorize the release types.\n- The '( [#number](link to pull request))' syntax includes references to GitHub pull requests associated with the changes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 9, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Add template and scaffold for Nuxt JS [#41](https://github.com/magiclabs/create-magic-app/pull/41) ([@shahbaz17](https://github.com/shahbaz17))\n\n#### Authors: 1\n\n- Mohammad Shahbaz Alam ([@shahbaz17](https://github.com/shahbaz17))\n\n---\n\n# v2.3.1 (Mon Apr 26 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- add template and scaffold for vue and magic guide [#40](https://github.com/magiclabs/create-magic-app/pull/40) ([@dgerrellsMagic](https://github.com/dgerrellsMagic))\n\n#### Authors: 1\n\n- [@dgerrellsMagic](https://github.com/dgerrellsMagic)\n\n---\n\n# v2.3.0 (Fri Apr 23 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- ch37324 add magic stripe scaffold [#39](https://github.com/magiclabs/create-magic-app/pull/39) ([@dgerrellsMagic](https://github.com/dgerrellsMagic))\n\n#### Authors: 1\n\n- [@dgerrellsMagic](https://github.com/dgerrellsMagic)\n\n---\n\n# v2.2.2 (Tue Apr 06 2021)\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Normalize file paths when downloading templates from repo ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n", "explanation": "This block appears to be a changelog for a GitHub repository. \n\nIts purpose is to document and track changes (additions, fixes, and enhancements) to the repository over time. \n\nThe functionality is simply a log of release notes, detailing the issues addressed, template and scaffold additions, authors, and dates.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 10, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "---\n\n# v2.2.1 (Tue Apr 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Rename script files to obey Windows pathing conventions [#38](https://github.com/magiclabs/create-magic-app/pull/38) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.2.0 (Thu Mar 25 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- auto jwt gen for hasura template [#37](https://github.com/magiclabs/create-magic-app/pull/37) ([@hcote](https://github.com/hcote))\n\n#### Authors: 1\n\n- Hunter Cote ([@hcote](https://github.com/hcote))\n\n---\n\n# v2.1.1 (Wed Feb 24 2021)\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Document Twitter in social login help flags ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.1.0 (Wed Feb 24 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add Twitter OAuth to Social Logins scaffold [#36](https://github.com/magiclabs/create-magic-app/pull/36) ([@smithki](https://github.com/smithki))", "explanation": "This block appears to be a changelog or version history of a software project, specifically a framework for creating Magic Apps. \n\nIt lists consecutive releases with tags for:\n\n- Bug fix: renaming script files for Windows compliance.\n- Enhancement: \n  - Adding auto-generated JWT for Hasura template.\n  - Implementing Twitter OAuth for social login.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 11, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- added nextjs, hasura templates. updated react template to include env\u2026 [#35](https://github.com/magiclabs/create-magic-app/pull/35) ([@hcote](https://github.com/hcote))\n\n#### Authors: 2\n\n- Hunter Cote ([@hcote](https://github.com/hcote))\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.0.3 (Fri Feb 12 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update dependencies [#34](https://github.com/magiclabs/create-magic-app/pull/34) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.0.2 (Fri Feb 12 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Add 'zombi', 'react', and 'react-is' as NCC dependencies [#32](https://github.com/magiclabs/create-magic-app/pull/32) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v2.0.1 (Wed Feb 10 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Updated BSC nomenclature with link to testnet faucet [#31](https://github.com/magiclabs/create-magic-app/pull/31) ([@seanli](https://github.com/seanli))\n", "explanation": "This block appears to be a GitHub project log, detailing version changes for a Create Magic App project. \n\nThe main aspects of this block include:\n\n- Adding NextJS and Hasura templates to the project.\n- Updating the React template to include environment variables.\n\nThe block consists of a series of version changes with related fixes and author information.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 12, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "#### Authors: 1\n\n- Sean Li ([@seanli](https://github.com/seanli))\n\n---\n\n# v2.0.0 (Mon Feb 08 2021)\n\n#### \ud83d\udca5 Breaking Change\n\n- Change '--public-api-key' to '--publishable-api-key' [#30](https://github.com/magiclabs/create-magic-app/pull/30) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.5 (Sun Feb 07 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Remove 'meow' dependency, parse flags with 'yargs-parser' [#29](https://github.com/magiclabs/create-magic-app/pull/29) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.4 (Sat Feb 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Fix 'decamelize' usage [#28](https://github.com/magiclabs/create-magic-app/pull/28) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.3 (Sat Feb 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "This block appears to display version history information for the \"create-magic-app\" project on GitHub, detailing changes made in each version, including the release date, type of change (bug fix or breaking change), and the author who made the change.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 13, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Use exit code 0 upon --help or --version [#27](https://github.com/magiclabs/create-magic-app/pull/27) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.2 (Sat Feb 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Update NCC dependencies [#26](https://github.com/magiclabs/create-magic-app/pull/26) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.1 (Sat Feb 06 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Add `--help` call-to-action upon reaching any validation message [#25](https://github.com/magiclabs/create-magic-app/pull/25) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.3.0 (Sat Feb 06 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add validation for template data provided as CLI flags [#24](https://github.com/magiclabs/create-magic-app/pull/24) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n", "explanation": "This block appears to be a changelog for a tool or project called \"create-magic-app\". \n\nKey functionality:\n- Validates template data provided as CLI flags (enhancement)\n- Displays helpful messages to the user, including a call-to-action to use `--help` when validation messages appear (bug fix)\n- Updates dependencies (bug fix)\n\nNo specific functionality or code is provided, but it outlines changes made to the tool.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 14, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.2.1 (Fri Feb 05 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Fix broken template interpolation in `hello-world-social-logins` [#23](https://github.com/magiclabs/create-magic-app/pull/23) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.2.0 (Fri Feb 05 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add social logins template [#22](https://github.com/magiclabs/create-magic-app/pull/22) ([@smithki](https://github.com/smithki))\n- Added Binance Smart Chain scaffold [#20](https://github.com/magiclabs/create-magic-app/pull/20) ([@seanli](https://github.com/seanli))\n\n#### \ud83d\udc1b Bug Fix\n\n- Included gas to allow contract deploy [#21](https://github.com/magiclabs/create-magic-app/pull/21) ([@seanli](https://github.com/seanli))\n\n#### Authors: 2\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n- Sean Li ([@seanli](https://github.com/seanli))\n\n---\n\n# v1.1.1 (Thu Feb 04 2021)\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "This block appears to be a change log or release notes for a project called `create-magic-app`. \n\nThe functionality is to provide a centralized documentation for changes made to the project. This includes:\n\n- Log of releases with version numbers and dates\n- Summary of changes or additions, marked as enhancements or bug fixes\n- Names and GitHub handles of authors involved in the changes\n\nNo specific code or text block is identified, but rather a framework for documenting changes to the project.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 15, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Small template updates [#19](https://github.com/magiclabs/create-magic-app/pull/19) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.1.0 (Thu Feb 04 2021)\n\n#### \ud83d\ude80 Enhancement\n\n- Add \"Hello world (React)\" template [#18](https://github.com/magiclabs/create-magic-app/pull/18) ([@smithki](https://github.com/smithki))\n- Document individual template options [#17](https://github.com/magiclabs/create-magic-app/pull/17) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.0.1 (Tue Feb 02 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Use `localhost` as the address for Hello World server [#16](https://github.com/magiclabs/create-magic-app/pull/16) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v1.0.0 (Tue Feb 02 2021)\n\n#### \ud83d\udca5 Breaking Change\n", "explanation": "This block appears to be a changelog for a specific software or application. \n\nPurpose: To record changes, additions, and bug fixes made to the application.\n\nFunctionality:\n- Traces the application's version history with a log of updates, enhancements, and fixes.\n- Documents changes made by an individual author, Ian K Smith.\n- Includes links to related issue or pull requests on a GitHub repository.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 16, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Road to v1 [#9](https://github.com/magiclabs/create-magic-app/pull/9) ([@smithki](https://github.com/smithki))\n\n#### \ud83d\ude80 Enhancement\n\n- Add basic hello world template [#13](https://github.com/magiclabs/create-magic-app/pull/13) ([@smithki](https://github.com/smithki))\n\n#### \ud83d\udc1b Bug Fix\n\n- Add option to change which branch templates are sourced from [#12](https://github.com/magiclabs/create-magic-app/pull/12) ([@smithki](https://github.com/smithki))\n- Remove 'pkg-up' dependency [#11](https://github.com/magiclabs/create-magic-app/pull/11) ([@smithki](https://github.com/smithki))\n- Fix NPM tarball omitting dist [#10](https://github.com/magiclabs/create-magic-app/pull/10) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.4 (Tue Feb 02 2021)\n\n#### \ud83d\udc1b Bug Fix\n\n- Add 'react' and 'react-is' dependencies [#14](https://github.com/magiclabs/create-magic-app/pull/14) ([@smithki](https://github.com/smithki))\n\n#### \ud83c\udfe0 Internal\n", "explanation": "This text appears to be a changelog or log of updates to a software project or codebase, referencing GitHub pull requests. The purpose and functionality can be summarized as follows:\n\n- The update provides an 'enhancement' to add a 'hello world' template.\n- There are bug fixes related to:\n  - Adding an option to source templates from specific branches.\n  - Removing the 'pkg-up' dependency.\n  - Fixing issues with NPM tarballs.\n  - Adding 'react' and 'react-is' dependencies for bug fix.\n- The updates are maintained by Ian K Smith (@smithki).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 17, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Introduce the new package name:  `make-magic` [#8](https://github.com/magiclabs/create-magic-app/pull/8) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.3 (Mon Dec 28 2020)\n\n#### \ud83d\udc1b Bug Fix\n\n- Make NPM client customizable [#7](https://github.com/magiclabs/create-magic-app/pull/7) ([@smithki](https://github.com/smithki))\n\n#### \ud83c\udfe0 Internal\n\n- Remove 'templates.zip' from 'package.json#files' [#5](https://github.com/magiclabs/create-magic-app/pull/5) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.2 (Tue Dec 22 2020)\n\n#### \ud83d\udc1b Bug Fix\n\n- Add template ENV files [#4](https://github.com/magiclabs/create-magic-app/pull/4) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n# v0.1.1 (Tue Dec 22 2020)\n\n#### \ud83d\udc1b Bug Fix\n", "explanation": "This block appears to be a changelog or release history for a project called \"create-magic-app\" on GitHub. The functionality is to document the changes made to the project in each version, including adding or removing features, bug fixes, and adjustments.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 18, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "- Fix bug where incorrect CWD was chosen during `yarn install` and `yarn dev`/`yarn start` effects [#3](https://github.com/magiclabs/create-magic-app/pull/3) ([@smithki](https://github.com/smithki))\n- Update README to reflect change in package name [#1](https://github.com/magiclabs/create-magic-app/pull/1) ([@smithki](https://github.com/smithki))\n\n#### \u26a0\ufe0f Pushed to `master`\n\n- Update package.json; simplify 'bin' field ([@smithki](https://github.com/smithki))\n- Change package name, 'create-magic-app' is unavailable for now ([@smithki](https://github.com/smithki))\n- Adjust CircleCI for this repo's specific use-case ([@smithki](https://github.com/smithki))\n- Initial commit ([@smithki](https://github.com/smithki))\n\n#### \ud83d\udcdd Documentation\n\n- Add CHANGELOG.md [#2](https://github.com/magiclabs/create-magic-app/pull/2) ([@smithki](https://github.com/smithki))\n\n#### Authors: 1\n\n- Ian K Smith ([@smithki](https://github.com/smithki))\n\n---\n\n", "explanation": "This block appears to be a Git commit log. \n\nThe main functions and purposes of this block are:\n\n- To fix a bug in yarn commands.\n- To update a package's default command name.\n- To update a README file.\n- To update the existing project's CircleCI configuration.\n\nThe functionality mainly deals with code-related updates for an open-source project named \"create-magic-app\".", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CHANGELOG.md", "chunk_number": 19, "total_chunks": 19}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here is a concise and holistic summary of the file 'CHANGELOG.md':\n\nThe CHANGELOG.md file is a version control log or changelog that documents the history of updates, enhancements, and changes made to the 'create-magic-app' project. It lists consecutive releases with release dates, version numbers, and a brief description of the changes. The updates include enhancements, bug fixes, and architectural changes, with references to corresponding GitHub pull requests and authors.\n\nKey functionality includes:\n\n* Tracking the project's version history\n* Documenting changes made to the project\n* Providing information about releases, including version numbers, release dates, and the changes made in each version\n* Including links to related issue or pull requests on a GitHub repository\n\nThe purpose of the CHANGELOG.md file is to provide a centralized documentation for changes made to the project, including logs of releases, summaries of changes or additions, and names and GitHub handles of authors involved in the changes."}
{"code": "# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via an **issue**. This can be a feature request or a bug report. After a maintainer has triaged your issue, you are welcome to collaborate on a pull request. If your change is small or uncomplicated, you are welcome to open an issue and pull request simultaneously.\n\nPlease note we have a **code of conduct**, please follow it in all your interactions with the project.\n\n## Setting up for Local Development\n\n1. Fork this repository.\n2. Clone your fork.\n3. Create a new branch in your local repository with the following pattern:\n\n- For bug fixes: `bug/[issue_number]/[descriptive_bug_name]`\n- For features: `feature/[issue_number]/[descriptive_feature_name]`\n- For chores/the rest: `chore/[descriptive_chore_name]`\n\n4. Install dependencies with Yarn: `yarn install`\n5. Add `./node_modules/.bin` to your system's [`PATH`](<https://en.wikipedia.org/wiki/PATH_(variable)>), if it's not already listed.", "explanation": "This block outlines the process for contributing to a specific repository. It includes:\n\n* Instructions for creating a fork and local branch for submission\n* Guidelines for submitting code changes, including creating an issue and collaborating on a pull request\n* Reminders about adhering to the project's code of conduct\n* Steps for installing dependencies and setting up the local development environment.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 1, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "6. Start building for development: `yarn dev`\n\n### Development Scripts\n\n| NPM Script          | Description                                     |\n| --------------------| ------------------------------------------------|\n| `yarn dev`          | Start building the CLI tool in development mode.|\n| `yarn build`        | Build the CLI tool for production.              |\n| `yarn clean`        | Run cleaning scripts.                           |\n| `yarn lint`         | Run the linter.                                 |\n| `yarn test`         | Run unit tests.                                 |\n| `yarn template-dev` | Run development command for a specific template. Most changes will hot-reload|\n\n## Opening a Pull Request\n\n1. Open a pull request from your fork/branch to the upstream `master` branch of _this_ repository.\n2. Add a label for the [semver](https://semver.org/) update corresponding to your changes: `patch`, `minor`, or `major`.", "explanation": "This block provides instructions on how to manage development and production scripts for a CLI tool. It includes scripts for:\n\n- Development: `yarn dev` (builds the CLI tool in development mode)\n- Production: `yarn build` (builds the CLI tool for production)\n- Cleaning: `yarn clean` (runs cleaning scripts)\n- Linter: `yarn lint` (runs the linter)\n- Unit tests: `yarn test` (runs unit tests)\n- Development for a specific template: `yarn template-dev` (runs development command for a specific template)\n\nThe block also provides guidance on opening a pull request, specifying the type of release (patch, minor, major) to request.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 2, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "3. A maintainer will review your code changes and offer feedback or suggestions if necessary. Once your changes are approved, a maintainer will merge the pull request for you and publish a release.\n\n## Cutting a release\n\nWe use [`auto`](https://github.com/intuit/auto) as our continuous delivery tool. Cutting a release is just a matter of merging to `master`. For pre-releases, you can create a `next` branch as the base for your experimental/W.I.P. feature. Please familiarize yourself with the [documentation for `auto`](https://intuit.github.io/auto/docs) if you are in a position to cut a release.\n\n## Community Templates\n\n### Adding a new template\n\n1. Fork the repository.\n2. Create a new branch `feat/<template_name>`.\n3. Create a new directory under `scaffolds` named `<template_name>`.\n4. Under that, create a `<template>` directory which will contain the source code.\n5. Create a `scaffold.ts` as well under the `<template_name>` directory.", "explanation": "This block explains the process for cutting a release and adds community templates to a repository. \n\n- Key functionality:\n  - Use of `auto` for continuous delivery.\n  - Reviewing and merging pull requests.\n  - Cutting a release by merging to `master`.\n  - Creating new community templates.\n\n- The process for creating a new template involves:\n  - Forking the repository.\n  - Creating a new branch and directory for the template.\n  - Adding a template's source code and a `scaffold` file under that directory.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 3, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "6. Modify `core/utils/templateMappings.ts` accordingly to include the new template.\n7. If your project uses `.env`, make sure it is named as `.env.example`\n\n### Updating existing template\n\n1. If there are changes in the template source itself, edit the template from `scaffolds/<template_name>/template`.\n2. If there are changes in the scaffold declaration, edit the `scaffolds/<template_name>/scaffold.ts`.\n3. Change `core/utils/templateMappings.ts` accordingly to incorporate new changes.\n\n### Adding / Updating prompts\n\nMagic CLI uses `enquirer` package to create prompts for the templates.\n\n#### Adding a new prompt\n\n1. Create the `<PromptNamespace>` in `scaffolds/prompts.ts`\n2. Make sure your prompt includes an exported type named `Data` and `flags` object. This will be used to show `--help` for the template specific options.\n3. If your prompt needs questions, export those questions in respective functions.\n\nHere's an example:\n\n```ts\nexport namespace GreetingPrompt {", "explanation": "**Summary:**\n\nThis block appears to be documentation for updating a system, possibly related to a templating engine or CLI system builder. The main tasks include:\n\n* Updating an existing template by modifying `core/utils/templateMappings.ts` and `scaffolds/<template_name>` files.\n* Adding or updating prompts for templates using the `enquirer` package by creating a `scaffolds/prompts.ts` file.\n\n**Functionality:**\n\n- Templating engine updates\n- Configuration file updates\n- CLI prompt configuration", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 4, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "  //This type will be used in `scaffold.ts` to determine the type of data on which the template depends on\n  export type Data = {\n    Name: string;\n  };\n\n  //This prompt will be called if the data is not provided in flag arguments when calling the CLI\n  export const askName = async () =>\n    new Input({\n      name: 'Name',\n      message: 'What is your name?',\n      initial: 'John Doe',\n    }).run();\n\n  //Used for declaring flags, their aliases and providing help description\n  export const flags: Flags<Partial<Data>> = {\n    Name: {\n      type: String,\n      description: 'Your name.',\n    },\n  };\n}\n```\n\n#### Updating a prompt\n\nEdit the `scaffolds/prompts.ts` to update the desired prompt.\n\n> Update the `scaffolds/<template_name>/scaffold.ts` files which depend on the newly added / edited templates appropriately. Also, make necessary changes to `core/utils/templateMappings.ts`.\n\n### EJS Templates\n", "explanation": "**Summary:**\nThis block is a TypeScript module that defines a data type `Data` and two functions: `askName` and `flags`. `askName` prompts the user to input their name. `flags` declares a terminal flag `Name` with description 'Your name.' to provide user input through the command line interface.\n\n**Functionality:**\n- Provides a data type `Data` to specify the structure of the data depending on the template.\n- Offers an asynchronous function `askName` to prompt the user for their name input.\n- Declares a set of terminal flags (in this case, `Name`) with a description for each flag, enabling the user to provide input through the command line interface.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 5, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "Magic CLI uses `ejs` package to embed Javascript templates in the code which needs to change dynamically based on CLI inputs. If your template uses EJS embedding, make sure to add default values for your template in the `scaffolds/dev-data.ts` file. Make sure that the properties in the default valies matches that of the flags on which your template depends on.\n\nYou can run and test the template with `npm run template-dev <template-name>` script to make sure that the template is working as expected.\n\n## Contributor Covenant Code of Conduct\n\n### Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n", "explanation": "This block is a documentation notice offering guidance on the use of EJS templates in the Magic CLI. \n\nKey points:\n\n- Embeds Javascript templates using EJS, which change dynamically based on CLI inputs.\n- Requires default values for templates in the `scaffolds/dev-data.ts` file.\n- Provides a script (`npm run template-dev <template-name>`) for testing templates. \n\nAdditionally, it is a standard contributor covenant code of conduct outlining the community's commitment to a respectful and inclusive environment.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 6, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "We pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n### Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without their explicit permission", "explanation": "This block outlines a community's code of conduct, emphasizing the importance of respect, inclusivity, and empathy in creating a positive environment. It defines acceptable and unacceptable behaviors, aiming to foster a healthy and diverse community.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 7, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n### Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n### Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n### Enforcement\n", "explanation": "This block outlines the purpose and functionality of a Code of Conduct for a community, including:\n\n- Defining unacceptable behavior in a professional setting\n- Clarifying the responsibilities of community leaders to enforce the code\n- Granting the right to remove, edit, or reject content deemed inappropriate\n- Specifying the scope of the code, including community spaces and representative roles.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 8, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "Instances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at [support@magic.link](mailto:support@magic.link).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n### Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n#### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n#### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n", "explanation": "This block provides guidelines for reporting and enforcing community behavior. \n\nIt outlines the reporting process to community leaders, who are responsible for reviewing and investigating complaints promptly and fairly, while respecting the privacy and security of the reporter. \n\nThe guidelines specify the consequences for reported behavior, including private warnings and potential public apologies, and cater to two scenarios of \"correction\" and \"warning\" for actions deemed in violation of the community Code of Conduct.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 9, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n#### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n#### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community", "explanation": "This block outlines the consequences for violating a community's Code of Conduct, including:\n\n1. A temporary ban (specified period) with no interaction allowed in community spaces or external channels.\n2. A permanent ban for serious or sustained violations, which will be enforced in accordance with the community's rules.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 10, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "standards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org),\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n", "explanation": "This block is a community code of conduct with the following purposes and functionalities:\n\n- Sets standards for acceptable behavior within the community.\n- Outlines consequences for inappropriate behavior, including a permanent ban.\n- Provides attribution to the original source (Contributor Covenant 2.0) and related resources (Community Impact Guidelines and FAQ).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "CONTRIBUTING.md", "chunk_number": 11, "total_chunks": 11}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and holistic summary of the file 'CONTRIBUTING.md':\n\nThe 'CONTRIBUTING.md' file provides a comprehensive guide for contributing to a project, including creating a fork and local branch, installing dependencies, and submitting code changes through pull requests. The document emphasizes the importance of following the project's code of conduct, which includes guidelines for managing development and production scripts, opening pull requests, and cutting releases.\n\nThe resource also provides instructions for updating templates, including modifying files and adding prompts for templates using Enquirer. Additionally, it introduces a TypeScript module with a data type `Data` and functions like `askName` and `flags` to handle user input through the command line interface.\n\nLastly, the document features a standard contributor covenant code of conduct, outlining the community's commitment to a respectful and inclusive environment, including consequences for violating the code, such as temporary and permanent bans.\n\nOverall, the 'CONTRIBUTING.md' file serves as a valuable resource for project contributors, outlining best practices, guiding their contributions, and establishing the community's expectations for behavior and conduct."}
{"code": "# \ud83e\ude84 `make-magic`\n\n> A tool for quickly scaffolding an app with Magic baked-in!\n\n<p align=\"center\">\n  <a href=\"https://github.com/magiclabs/create-magic-app/blob/master/LICENSE\">License</a> \u00b7\n  <a href=\"https://github.com/magiclabs/create-magic-app/blob/master/CONTRIBUTING.md\">Contributing Guide</a>\n</p>\n\n## \ud83d\ude80 Usage\n\nGetting started with the interactive scaffolding tool is easy. Just run the following command in your preferred shell:\n\n```zsh\nnpx make-magic\n```\n\nFollow the interactive prompts to customize your project. Done! \u2728\n\n### Programmatic API\n\n`make-magic` also supports a programmatic API, so you can generate boilerplate codes with Magic built-in from your own NodeJS scripts.\n\n```ts\nimport makeMagic from 'make-magic';\n\nawait makeMagic({\n  template: 'hello-world', // Same as --template, -t\n  projectName: 'my-app',   // Same as --project-name, -p\n  branch: 'master',        // Same as --branch, -b\n\n  // The same, arbitrary data you can pass to a template via CLI flags.\n  data: {\n    publishableApiKey: 'pk_live_...',", "explanation": "**Purpose:** The `make-magic` tool is a tool for quickly scaffolding an application with Magic.io built-in.\n\n**Functionality:**\n\n* Interactively creates a project with Magic.io\n* Supports a programmatic API for automated generation of boilerplate code\n* Allows customization of project templates, names, branches, and data", "metadata": {"repo": "magiclabs/create-magic-app", "file": "README.md", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and summarized version of the file 'README.md':\n\nThe `make-magic` tool is a utility for swift, interactive scaffolding of applications with Magic.io. It offers both a programmatic API for automated code generation and customization options for project templates, names, and data. Key features include:\n\n* Interactive project creation\n* Automatic boilerplate code generation\n* Customization of templates and data\n\nAdditional resources are available for users, including command-line help and detailed usage instructions."}
{"code": "    npmClient: 'yarn',\n  }\n})\n```\n\nSee `npx make-magic --help` for information about the available options. In general, most CLI flags map to camel-cased properties in the configuration given to `makeMagic({ ... })`.\n\nFor more information, you can print help text including template-specific options using `npx make-magic --help --template [i.e.: hello-world]`\n", "explanation": "This block is a configuration object for the `makeMagic` command, setting the default package manager to `yarn` (e.g. `npmClient: 'yarn'`). It also provides general instructions and links to additional information for using the `makeMagic` command, including a command-line help option and detailed usage.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "README.md", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a concise and summarized version of the file 'README.md':\n\nThe `make-magic` tool is a utility for swift, interactive scaffolding of applications with Magic.io. It offers both a programmatic API for automated code generation and customization options for project templates, names, and data. Key features include:\n\n* Interactive project creation\n* Automatic boilerplate code generation\n* Customization of templates and data\n\nAdditional resources are available for users, including command-line help and detailed usage instructions."}
{"code": "#!/usr/bin/env node\nrequire('./dist/core/cli.js');\n", "explanation": "This is a Node.js script that serves as the entry point for a command-line interface (CLI) application. It loads the core CLI functionality from a separate JavaScript file (`dist/core/cli.js`) and initializes the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "bin.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `create-magic-app` repository is a Node.js package created by Magic Labs. It provides a simple command-line interface (CLI) for building and deploying Magic Apps, which are web applications that integrate with Magic's APIs for user authentication.\n\nThe primary purpose of this repository is to streamline the process of creating, managing, and deploying Magic Apps.", "file_summary": "Here's a holistic summary of the 'bin.js' file:\n\nThe 'bin.js' file is the entry point for a Node.js CLI application. It loads the core CLI functionality from 'dist/core/cli.js' and initializes the application, serving as the main script for the application's command-line interface."}
{"code": "(()=>{var e={68:(e,t,n)=>{\"use strict\";e=n.nmd(e);const wrapAnsi16=(e,t)=>(...n)=>{const r=e(...n);return`\u001b[${r+t}m`};const wrapAnsi256=(e,t)=>(...n)=>{const r=e(...n);return`\u001b[${38+t};5;${r}m`};const wrapAnsi16m=(e,t)=>(...n)=>{const r=e(...n);return`\u001b[${38+t};2;${r[0]};${r[1]};${r[2]}m`};const ansi2ansi=e=>e;const rgb2rgb=(e,t,n)=>[e,t,n];const setLazyProperty=(e,t,n)=>{Object.defineProperty(e,t,{get:()=>{const r=n();Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true});return r},enumerable:true,configurable:true})};let r;const makeDynamicStyles=(e,t,s,o)=>{if(r===undefined){r=n(931)}const l=o?10:0;const c={};for(const[n,o]of Object.entries(r)){const r=n===\"ansi16\"?\"ansi\":n;if(n===t){c[r]=e(s,l)}else if(typeof o===\"object\"){c[r]=e(o[t],l)}}return c};function assembleStyles(){const e=new Map;const t={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};t.color.gray=t.color.blackBright;t.bgColor.bgGray=t.bgColor.bgBlackBright;t.color.grey=t.color.blackBright;t.bgColor.bgGrey=t.bgColor.bgBlackBright;for(const[n,r]of Object.entries(t)){for(const[n,s]of Object.entries(r)){t[n]={open:`\u001b[${s[0]}m`,close:`\u001b[${s[1]}m`};r[n]=t[n];e.set(s[0],s[1])}Object.defineProperty(t,n,{value:r,enumerable:false})}Object.defineProperty(t,\"codes\",{value:e,enumerable:false});t.color.close=\"\u001b[39m\";t.bgColor.close=\"\u001b[49m\";setLazyProperty(t.color,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,false)));setLazyProperty(t.color,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,false)));setLazyProperty(t.color,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,false)));setLazyProperty(t.bgColor,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,true)));setLazyProperty(t.bgColor,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,true)));setLazyProperty(t.bgColor,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,true)));return t}Object.defineProperty(e,\"exports\",{enumerable:true,get:assembleStyles})},818:(e,t,n)=>{\"use strict\";const r=n(68);const{stdout:s,stderr:o}=n(318);const{stringReplaceAll:l,stringEncaseCRLFWithFirstIndex:c}=n(415);const{isArray:i}=Array;const a=[\"ansi\",\"ansi\",\"ansi256\",\"ansi16m\"];const u=Object.create(null);const applyOptions=(e,t={})=>{if(t.level&&!(Number.isInteger(t.level)&&t.level>=0&&t.level<=3)){throw new Error(\"The `level` option should be an integer from 0 to 3\")}const n=s?s.level:0;e.level=t.level===undefined?n:t.level};class ChalkClass{constructor(e){return chalkFactory(e)}}const chalkFactory=e=>{const t={};applyOptions(t,e);t.template=(...e)=>chalkTag(t.template,...e);Object.setPrototypeOf(t,Chalk.prototype);Object.setPrototypeOf(t.template,t);t.template.constructor=()=>{throw new Error(\"`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.\")};t.template.Instance=ChalkClass;return t.template};function Chalk(e){return chalkFactory(e)}for(const[e,t]of Object.entries(r)){u[e]={get(){const n=createBuilder(this,createStyler(t.open,t.close,this._styler),this._isEmpty);Object.defineProperty(this,e,{value:n});return n}}}u.visible={get(){const e=createBuilder(this,this._styler,true);Object.defineProperty(this,\"visible\",{value:e});return e}};const h=[\"rgb\",\"hex\",\"keyword\",\"hsl\",\"hsv\",\"hwb\",\"ansi\",\"ansi256\"];for(const e of h){u[e]={get(){const{level:t}=this;return function(...n){const s=createStyler(r.color[a[t]][e](...n),r.color.close,this._styler);return createBuilder(this,s,this._isEmpty)}}}}for(const e of h){const t=\"bg\"+e[0].toUpperCase()+e.slice(1);u[t]={get(){const{level:t}=this;return function(...n){const s=createStyler(r.bgColor[a[t]][e](...n),r.bgColor.close,this._styler);return createBuilder(this,s,this._isEmpty)}}}}const f=Object.defineProperties((()=>{}),{...u,level:{enumerable:true,get(){return this._generator.level},set(e){this._generator.level=e}}});const createStyler=(e,t,n)=>{let r;let s;if(n===undefined){r=e;s=t}else{r=n.openAll+e;s=t+n.closeAll}return{open:e,close:t,openAll:r,closeAll:s,parent:n}};const createBuilder=(e,t,n)=>{const builder=(...e)=>{if(i(e[0])&&i(e[0].raw)){return applyStyle(builder,chalkTag(builder,...e))}return applyStyle(builder,e.length===1?\"\"+e[0]:e.join(\" \"))};Object.setPrototypeOf(builder,f);builder._generator=e;builder._styler=t;builder._isEmpty=n;return builder};const applyStyle=(e,t)=>{if(e.level<=0||!t){return e._isEmpty?\"\":t}let n=e._styler;if(n===undefined){return t}const{openAll:r,closeAll:s}=n;if(t.indexOf(\"\u001b\")!==-1){while(n!==undefined){t=l(t,n.close,n.open);n=n.parent}}const o=t.indexOf(\"\\n\");if(o!==-1){t=c(t,s,r,o)}return r+t+s};let g;const chalkTag=(e,...t)=>{const[r]=t;if(!i(r)||!i(r.raw)){return t.join(\" \")}const s=t.slice(1);const o=[r.raw[0]];for(let e=1;e<r.length;e++){o.push(String(s[e-1]).replace(/[{}\\\\]/g,\"\\\\$&\"),String(r.raw[e]))}if(g===undefined){g=n(500)}return g(e,o.join(\"\"))};Object.defineProperties(Chalk.prototype,u);const b=Chalk();b.supportsColor=s;b.stderr=Chalk({level:o?o.level:0});b.stderr.supportsColor=o;e.exports=b},500:e=>{\"use strict\";const t=/(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;const n=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;const r=/^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;const s=/\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;const o=new Map([[\"n\",\"\\n\"],[\"r\",\"\\r\"],[\"t\",\"\\t\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"0\",\"\\0\"],[\"\\\\\",\"\\\\\"],[\"e\",\"\u001b\"],[\"a\",\"\u0007\"]]);function unescape(e){const t=e[0]===\"u\";const n=e[1]===\"{\";if(t&&!n&&e.length===5||e[0]===\"x\"&&e.length===3){return String.fromCharCode(parseInt(e.slice(1),16))}if(t&&n){return String.fromCodePoint(parseInt(e.slice(2,-1),16))}return o.get(e)||e}function parseArguments(e,t){const n=[];const o=t.trim().split(/\\s*,\\s*/g);let l;for(const t of o){const o=Number(t);if(!Number.isNaN(o)){n.push(o)}else if(l=t.match(r)){n.push(l[2].replace(s,((e,t,n)=>t?unescape(t):n)))}else{throw new Error(`Invalid Chalk template style argument: ${t} (in style '${e}')`)}}return n}function parseStyle(e){n.lastIndex=0;const t=[];let r;while((r=n.exec(e))!==null){const e=r[1];if(r[2]){const n=parseArguments(e,r[2]);t.push([e].concat(n))}else{t.push([e])}}return t}function buildStyle(e,t){const n={};for(const e of t){for(const t of e.styles){n[t[0]]=e.inverse?null:t.slice(1)}}let r=e;for(const[e,t]of Object.entries(n)){if(!Array.isArray(t)){continue}if(!(e in r)){throw new Error(`Unknown Chalk style: ${e}`)}r=t.length>0?r[e](...t):r[e]}return r}e.exports=(e,n)=>{const r=[];const s=[];let o=[];n.replace(t,((t,n,l,c,i,a)=>{if(n){o.push(unescape(n))}else if(c){const t=o.join(\"\");o=[];s.push(r.length===0?t:buildStyle(e,r)(t));r.push({inverse:l,styles:parseStyle(c)})}else if(i){if(r.length===0){throw new Error(\"Found extraneous } in Chalk template literal\")}s.push(buildStyle(e,r)(o.join(\"\")));o=[];r.pop()}else{o.push(a)}}));s.push(o.join(\"\"));if(r.length>0){const e=`Chalk template literal is missing ${r.length} closing bracket${r.length===1?\"\":\"s\"} (\\`}\\`)`;throw new Error(e)}return s.join(\"\")}},415:e=>{\"use strict\";const stringReplaceAll=(e,t,n)=>{let r=e.indexOf(t);if(r===-1){return e}const s=t.length;let o=0;let l=\"\";do{l+=e.substr(o,r-o)+t+n;o=r+s;r=e.indexOf(t,o)}while(r!==-1);l+=e.substr(o);return l};const stringEncaseCRLFWithFirstIndex=(e,t,n,r)=>{let s=0;let o=\"\";do{const l=e[r-1]===\"\\r\";o+=e.substr(s,(l?r-1:r)-s)+t+(l?\"\\r\\n\":\"\\n\")+n;s=r+1;r=e.indexOf(\"\\n\",s)}while(r!==-1);o+=e.substr(s);return o};e.exports={stringReplaceAll:stringReplaceAll,stringEncaseCRLFWithFirstIndex:stringEncaseCRLFWithFirstIndex}},391:(e,t,n)=>{const r=n(510);const s={};for(const e of Object.keys(r)){s[r[e]]=e}const o={rgb:{channels:3,labels:\"rgb\"},hsl:{channels:3,labels:\"hsl\"},hsv:{channels:3,labels:\"hsv\"},hwb:{channels:3,labels:\"hwb\"},cmyk:{channels:4,labels:\"cmyk\"},xyz:{channels:3,labels:\"xyz\"},lab:{channels:3,labels:\"lab\"},lch:{channels:3,labels:\"lch\"},hex:{channels:1,labels:[\"hex\"]},keyword:{channels:1,labels:[\"keyword\"]},ansi16:{channels:1,labels:[\"ansi16\"]},ansi256:{channels:1,labels:[\"ansi256\"]},hcg:{channels:3,labels:[\"h\",\"c\",\"g\"]},apple:{channels:3,labels:[\"r16\",\"g16\",\"b16\"]},gray:{channels:1,labels:[\"gray\"]}};e.exports=o;for(const e of Object.keys(o)){if(!(\"channels\"in o[e])){throw new Error(\"missing channels property: \"+e)}if(!(\"labels\"in o[e])){throw new Error(\"missing channel labels property: \"+e)}if(o[e].labels.length!==o[e].channels){throw new Error(\"channel and label counts mismatch: \"+e)}const{channels:t,labels:n}=o[e];delete o[e].channels;delete o[e].labels;Object.defineProperty(o[e],\"channels\",{value:t});Object.defineProperty(o[e],\"labels\",{value:n})}o.rgb.hsl=function(e){const t=e[0]/255;const n=e[1]/255;const r=e[2]/255;const s=Math.min(t,n,r);const o=Math.max(t,n,r);const l=o-s;let c;let i;if(o===s){c=0}else if(t===o){c=(n-r)/l}else if(n===o){c=2+(r-t)/l}else if(r===o){c=4+(t-n)/l}c=Math.min(c*60,360);if(c<0){c+=360}const a=(s+o)/2;if(o===s){i=0}else if(a<=.5){i=l/(o+s)}else{i=l/(2-o-s)}return[c,i*100,a*100]};o.rgb.hsv=function(e){let t;let n;let r;let s;let o;const l=e[0]/255;const c=e[1]/255;const i=e[2]/255;const a=Math.max(l,c,i);const u=a-Math.min(l,c,i);const diffc=function(e){return(a-e)/6/u+1/2};if(u===0){s=0;o=0}else{o=u/a;t=diffc(l);n=diffc(c);r=diffc(i);if(l===a){s=r-n}else if(c===a){s=1/3+t-r}else if(i===a){s=2/3+n-t}if(s<0){s+=1}else if(s>1){s-=1}}return[s*360,o*100,a*100]};o.rgb.hwb=function(e){const t=e[0];const n=e[1];let r=e[2];const s=o.rgb.hsl(e)[0];const l=1/255*Math.min(t,Math.min(n,r));r=1-1/255*Math.max(t,Math.max(n,r));return[s,l*100,r*100]};o.rgb.cmyk=function(e){const t=e[0]/255;const n=e[1]/255;const r=e[2]/255;const s=Math.min(1-t,1-n,1-r);const o=(1-t-s)/(1-s)||0;const l=(1-n-s)/(1-s)||0;const c=(1-r-s)/(1-s)||0;return[o*100,l*100,c*100,s*100]};function comparativeDistance(e,t){return(e[0]-t[0])**2+(e[1]-t[1])**2+(e[2]-t[2])**2}o.rgb.keyword=function(e){const t=s[e];if(t){return t}let n=Infinity;let o;for(const t of Object.keys(r)){const s=r[t];const l=comparativeDistance(e,s);if(l<n){n=l;o=t}}return o};o.keyword.rgb=function(e){return r[e]};o.rgb.xyz=function(e){let t=e[0]/255;let n=e[1]/255;let r=e[2]/255;t=t>.04045?((t+.055)/1.055)**2.4:t/12.92;n=n>.04045?((n+.055)/1.055)**2.4:n/12.92;r=r>.04045?((r+.055)/1.055)**2.4:r/12.92;const s=t*.4124+n*.3576+r*.1805;const o=t*.2126+n*.7152+r*.0722;const l=t*.0193+n*.1192+r*.9505;return[s*100,o*100,l*100]};o.rgb.lab=function(e){const t=o.rgb.xyz(e);let n=t[0];let r=t[1];let s=t[2];n/=95.047;r/=100;s/=108.883;n=n>.008856?n**(1/3):7.787*n+16/116;r=r>.008856?r**(1/3):7.787*r+16/116;s=s>.008856?s**(1/3):7.787*s+16/116;const l=116*r-16;const c=500*(n-r);const i=200*(r-s);return[l,c,i]};o.hsl.rgb=function(e){const t=e[0]/360;const n=e[1]/100;const r=e[2]/100;let s;let o;let l;if(n===0){l=r*255;return[l,l,l]}if(r<.5){s=r*(1+n)}else{s=r+n-r*n}const c=2*r-s;const i=[0,0,0];for(let e=0;e<3;e++){o=t+1/3*-(e-1);if(o<0){o++}if(o>1){o--}if(6*o<1){l=c+(s-c)*6*o}else if(2*o<1){l=s}else if(3*o<2){l=c+(s-c)*(2/3-o)*6}else{l=c}i[e]=l*255}return i};o.hsl.hsv=function(e){const t=e[0];let n=e[1]/100;let r=e[2]/100;let s=n;const o=Math.max(r,.01);r*=2;n*=r<=1?r:2-r;s*=o<=1?o:2-o;const l=(r+n)/2;const c=r===0?2*s/(o+s):2*n/(r+n);return[t,c*100,l*100]};o.hsv.rgb=function(e){const t=e[0]/60;const n=e[1]/100;let r=e[2]/100;const s=Math.floor(t)%6;const o=t-Math.floor(t);const l=255*r*(1-n);const c=255*r*(1-n*o);const i=255*r*(1-n*(1-o));r*=255;switch(s){case 0:return[r,i,l];case 1:return[c,r,l];case 2:return[l,r,i];case 3:return[l,c,r];case 4:return[i,l,r];case 5:return[r,l,c]}};o.hsv.hsl=function(e){const t=e[0];const n=e[1]/100;const r=e[2]/100;const s=Math.max(r,.01);let o;let l;l=(2-n)*r;const c=(2-n)*s;o=n*s;o/=c<=1?c:2-c;o=o||0;l/=2;return[t,o*100,l*100]};o.hwb.rgb=function(e){const t=e[0]/360;let n=e[1]/100;let r=e[2]/100;const s=n+r;let o;if(s>1){n/=s;r/=s}const l=Math.floor(6*t);const c=1-r;o=6*t-l;if((l&1)!==0){o=1-o}const i=n+o*(c-n);let a;let u;let h;switch(l){default:case 6:case 0:a=c;u=i;h=n;break;case 1:a=i;u=c;h=n;break;case 2:a=n;u=c;h=i;break;case 3:a=n;u=i;h=c;break;case 4:a=i;u=n;h=c;break;case 5:a=c;u=n;h=i;break}return[a*255,u*255,h*255]};o.cmyk.rgb=function(e){const t=e[0]/100;const n=e[1]/100;const r=e[2]/100;const s=e[3]/100;const o=1-Math.min(1,t*(1-s)+s);const l=1-Math.min(1,n*(1-s)+s);const c=1-Math.min(1,r*(1-s)+s);return[o*255,l*255,c*255]};o.xyz.rgb=function(e){const t=e[0]/100;const n=e[1]/100;const r=e[2]/100;let s;let o;let l;s=t*3.2406+n*-1.5372+r*-.4986;o=t*-.9689+n*1.8758+r*.0415;l=t*.0557+n*-.204+r*1.057;s=s>.0031308?1.055*s**(1/2.4)-.055:s*12.92;o=o>.0031308?1.055*o**(1/2.4)-.055:o*12.92;l=l>.0031308?1.055*l**(1/2.4)-.055:l*12.92;s=Math.min(Math.max(0,s),1);o=Math.min(Math.max(0,o),1);l=Math.min(Math.max(0,l),1);return[s*255,o*255,l*255]};o.xyz.lab=function(e){let t=e[0];let n=e[1];let r=e[2];t/=95.047;n/=100;r/=108.883;t=t>.008856?t**(1/3):7.787*t+16/116;n=n>.008856?n**(1/3):7.787*n+16/116;r=r>.008856?r**(1/3):7.787*r+16/116;const s=116*n-16;const o=500*(t-n);const l=200*(n-r);return[s,o,l]};o.lab.xyz=function(e){const t=e[0];const n=e[1];const r=e[2];let s;let o;let l;o=(t+16)/116;s=n/500+o;l=o-r/200;const c=o**3;const i=s**3;const a=l**3;o=c>.008856?c:(o-16/116)/7.787;s=i>.008856?i:(s-16/116)/7.787;l=a>.008856?a:(l-16/116)/7.787;s*=95.047;o*=100;l*=108.883;return[s,o,l]};o.lab.lch=function(e){const t=e[0];const n=e[1];const r=e[2];let s;const o=Math.atan2(r,n);s=o*360/2/Math.PI;if(s<0){s+=360}const l=Math.sqrt(n*n+r*r);return[t,l,s]};o.lch.lab=function(e){const t=e[0];const n=e[1];const r=e[2];const s=r/360*2*Math.PI;const o=n*Math.cos(s);const l=n*Math.sin(s);return[t,o,l]};o.rgb.ansi16=function(e,t=null){const[n,r,s]=e;let l=t===null?o.rgb.hsv(e)[2]:t;l=Math.round(l/50);if(l===0){return 30}let c=30+(Math.round(s/255)<<2|Math.round(r/255)<<1|Math.round(n/255));if(l===2){c+=60}return c};o.hsv.ansi16=function(e){return o.rgb.ansi16(o.hsv.rgb(e),e[2])};o.rgb.ansi256=function(e){const t=e[0];const n=e[1];const r=e[2];if(t===n&&n===r){if(t<8){return 16}if(t>248){return 231}return Math.round((t-8)/247*24)+232}const s=16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5);return s};o.ansi16.rgb=function(e){let t=e%10;if(t===0||t===7){if(e>50){t+=3.5}t=t/10.5*255;return[t,t,t]}const n=(~~(e>50)+1)*.5;const r=(t&1)*n*255;const s=(t>>1&1)*n*255;const o=(t>>2&1)*n*255;return[r,s,o]};o.ansi256.rgb=function(e){if(e>=232){const t=(e-232)*10+8;return[t,t,t]}e-=16;let t;const n=Math.floor(e/36)/5*255;const r=Math.floor((t=e%36)/6)/5*255;const s=t%6/5*255;return[n,r,s]};o.rgb.hex=function(e){const t=((Math.round(e[0])&255)<<16)+((Math.round(e[1])&255)<<8)+(Math.round(e[2])&255);const n=t.toString(16).toUpperCase();return\"000000\".substring(n.length)+n};o.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t){return[0,0,0]}let n=t[0];if(t[0].length===3){n=n.split(\"\").map((e=>e+e)).join(\"\")}const r=parseInt(n,16);const s=r>>16&255;const o=r>>8&255;const l=r&255;return[s,o,l]};o.rgb.hcg=function(e){const t=e[0]/255;const n=e[1]/255;const r=e[2]/255;const s=Math.max(Math.max(t,n),r);const o=Math.min(Math.min(t,n),r);const l=s-o;let c;let i;if(l<1){c=o/(1-l)}else{c=0}if(l<=0){i=0}else if(s===t){i=(n-r)/l%6}else if(s===n){i=2+(r-t)/l}else{i=4+(t-n)/l}i/=6;i%=1;return[i*360,l*100,c*100]};o.hsl.hcg=function(e){const t=e[1]/100;const n=e[2]/100;const r=n<.5?2*t*n:2*t*(1-n);let s=0;if(r<1){s=(n-.5*r)/(1-r)}return[e[0],r*100,s*100]};o.hsv.hcg=function(e){const t=e[1]/100;const n=e[2]/100;const r=t*n;let s=0;if(r<1){s=(n-r)/(1-r)}return[e[0],r*100,s*100]};o.hcg.rgb=function(e){const t=e[0]/360;const n=e[1]/100;const r=e[2]/100;if(n===0){return[r*255,r*255,r*255]}const s=[0,0,0];const o=t%1*6;const l=o%1;const c=1-l;let i=0;switch(Math.floor(o)){case 0:s[0]=1;s[1]=l;s[2]=0;break;case 1:s[0]=c;s[1]=1;s[2]=0;break;case 2:s[0]=0;s[1]=1;s[2]=l;break;case 3:s[0]=0;s[1]=c;s[2]=1;break;case 4:s[0]=l;s[1]=0;s[2]=1;break;default:s[0]=1;s[1]=0;s[2]=c}i=(1-n)*r;return[(n*s[0]+i)*255,(n*s[1]+i)*255,(n*s[2]+i)*255]};o.hcg.hsv=function(e){const t=e[1]/100;const n=e[2]/100;const r=t+n*(1-t);let s=0;if(r>0){s=t/r}return[e[0],s*100,r*100]};o.hcg.hsl=function(e){const t=e[1]/100;const n=e[2]/100;const r=n*(1-t)+.5*t;let s=0;if(r>0&&r<.5){s=t/(2*r)}else if(r>=.5&&r<1){s=t/(2*(1-r))}return[e[0],s*100,r*100]};o.hcg.hwb=function(e){const t=e[1]/100;const n=e[2]/100;const r=t+n*(1-t);return[e[0],(r-t)*100,(1-r)*100]};o.hwb.hcg=function(e){const t=e[1]/100;const n=e[2]/100;const r=1-n;const s=r-t;let o=0;if(s<1){o=(r-s)/(1-s)}return[e[0],s*100,o*100]};o.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]};o.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]};o.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]};o.gray.hsl=function(e){return[0,0,e[0]]};o.gray.hsv=o.gray.hsl;o.gray.hwb=function(e){return[0,100,e[0]]};o.gray.cmyk=function(e){return[0,0,0,e[0]]};o.gray.lab=function(e){return[e[0],0,0]};o.gray.hex=function(e){const t=Math.round(e[0]/100*255)&255;const n=(t<<16)+(t<<8)+t;const r=n.toString(16).toUpperCase();return\"000000\".substring(r.length)+r};o.rgb.gray=function(e){const t=(e[0]+e[1]+e[2])/3;return[t/255*100]}},931:(e,t,n)=>{const r=n(391);const s=n(880);const o={};const l=Object.keys(r);function wrapRaw(e){const wrappedFn=function(...t){const n=t[0];if(n===undefined||n===null){return n}if(n.length>1){t=n}return e(t)};if(\"conversion\"in e){wrappedFn.conversion=e.conversion}return wrappedFn}function wrapRounded(e){const wrappedFn=function(...t){const n=t[0];if(n===undefined||n===null){return n}if(n.length>1){t=n}const r=e(t);if(typeof r===\"object\"){for(let e=r.length,t=0;t<e;t++){r[t]=Math.round(r[t])}}return r};if(\"conversion\"in e){wrappedFn.conversion=e.conversion}return wrappedFn}l.forEach((e=>{o[e]={};Object.defineProperty(o[e],\"channels\",{value:r[e].channels});Object.defineProperty(o[e],\"labels\",{value:r[e].labels});const t=s(e);const n=Object.keys(t);n.forEach((n=>{const r=t[n];o[e][n]=wrapRounded(r);o[e][n].raw=wrapRaw(r)}))}));e.exports=o},880:(e,t,n)=>{const r=n(391);function buildGraph(){const e={};const t=Object.keys(r);for(let n=t.length,r=0;r<n;r++){e[t[r]]={distance:-1,parent:null}}return e}function deriveBFS(e){const t=buildGraph();const n=[e];t[e].distance=0;while(n.length){const e=n.pop();const s=Object.keys(r[e]);for(let r=s.length,o=0;o<r;o++){const r=s[o];const l=t[r];if(l.distance===-1){l.distance=t[e].distance+1;l.parent=e;n.unshift(r)}}}return t}function link(e,t){return function(n){return t(e(n))}}function wrapConversion(e,t){const n=[t[e].parent,e];let s=r[t[e].parent][e];let o=t[e].parent;while(t[o].parent){n.unshift(t[o].parent);s=link(r[t[o].parent][o],s);o=t[o].parent}s.conversion=n;return s}e.exports=function(e){const t=deriveBFS(e);const n={};const r=Object.keys(t);for(let e=r.length,s=0;s<e;s++){const e=r[s];const o=t[e];if(o.parent===null){continue}n[e]=wrapConversion(e,t)}return n}},510:e=>{\"use strict\";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},621:e=>{\"use strict\";e.exports=(e,t=process.argv)=>{const n=e.startsWith(\"-\")?\"\":e.length===1?\"-\":\"--\";const r=t.indexOf(n+e);const s=t.indexOf(\"--\");return r!==-1&&(s===-1||r<s)}},318:(e,t,n)=>{\"use strict\";const r=n(37);const s=n(224);const o=n(621);const{env:l}=process;let c;if(o(\"no-color\")||o(\"no-colors\")||o(\"color=false\")||o(\"color=never\")){c=0}else if(o(\"color\")||o(\"colors\")||o(\"color=true\")||o(\"color=always\")){c=1}if(\"FORCE_COLOR\"in l){if(l.FORCE_COLOR===\"true\"){c=1}else if(l.FORCE_COLOR===\"false\"){c=0}else{c=l.FORCE_COLOR.length===0?1:Math.min(parseInt(l.FORCE_COLOR,10),3)}}function translateLevel(e){if(e===0){return false}return{level:e,hasBasic:true,has256:e>=2,has16m:e>=3}}function supportsColor(e,t){if(c===0){return 0}if(o(\"color=16m\")||o(\"color=full\")||o(\"color=truecolor\")){return 3}if(o(\"color=256\")){return 2}if(e&&!t&&c===undefined){return 0}const n=c||0;if(l.TERM===\"dumb\"){return n}if(process.platform===\"win32\"){const e=r.release().split(\".\");if(Number(e[0])>=10&&Number(e[2])>=10586){return Number(e[2])>=14931?3:2}return 1}if(\"CI\"in l){if([\"TRAVIS\",\"CIRCLECI\",\"APPVEYOR\",\"GITLAB_CI\",\"GITHUB_ACTIONS\",\"BUILDKITE\"].some((e=>e in l))||l.CI_NAME===\"codeship\"){return 1}return n}if(\"TEAMCITY_VERSION\"in l){return/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(l.TEAMCITY_VERSION)?1:0}if(l.COLORTERM===\"truecolor\"){return 3}if(\"TERM_PROGRAM\"in l){const e=parseInt((l.TERM_PROGRAM_VERSION||\"\").split(\".\")[0],10);switch(l.TERM_PROGRAM){case\"iTerm.app\":return e>=3?3:2;case\"Apple_Terminal\":return 2}}if(/-256(color)?$/i.test(l.TERM)){return 2}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(l.TERM)){return 1}if(\"COLORTERM\"in l){return 1}return n}function getSupportLevel(e){const t=supportsColor(e,e&&e.isTTY);return translateLevel(t)}e.exports={supportsColor:getSupportLevel,stdout:translateLevel(supportsColor(true,s.isatty(1))),stderr:translateLevel(supportsColor(true,s.isatty(2)))}},37:e=>{\"use strict\";e.exports=require(\"os\")},224:e=>{\"use strict\";e.exports=require(\"tty\")}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var s=t[n]={id:n,loaded:false,exports:{}};var o=true;try{e[n](s,s.exports,__nccwpck_require__);o=false}finally{if(o)delete t[n]}s.loaded=true;return s.exports}(()=>{__nccwpck_require__.nmd=e=>{e.paths=[];if(!e.children)e.children=[];return e}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n=__nccwpck_require__(818);module.exports=n})();", "explanation": "This is a JavaScript module that exports a `Chalk` object, which is a utility for styling console output with colors and other styles. The purpose of this module is to enable the selection of color schemes and styles for console output in a flexible and customizable way.\n\nHere is a concise and high-level summary of the functionality:\n\n- It defines various color schemes and styles, such as ANSI 16, ANSI 256, and RGB, which can be used to style console output.\n- It provides a way to wrap console output in ANSI escape codes to support color and style rendering.\n- It creates a `Chalk` object that provides a set of methods for applying different styles and colors to console output, including support for nesting colors and styles.\n\nThe main functionality of this module can be broken down into several key components:\n\n- The `color` and `bgColor` objects, which define different color schemes and styles, such as ANSI 16, ANSI 256, RGB, and others.\n- The `wrapAnsi16`, `wrapAnsi256`, and `wrapAnsi16m` functions, which wrap console output in ANSI escape codes for different color schemes.\n- The `makeDynamicStyles` function, which generates dynamic style objects based on the selected color scheme.\n- The `assembleStyles` function, which assembles the style objects into a final format for rendering console output.\n- The `Chalk` object, which provides a set of methods for applying different styles and colors to console output, including support for nesting colors and styles.\n\nOverall, this module provides a flexible and customizable way to style console output with colors and other styles, making it useful for developers who want to create visually appealing and informative console output.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/chalk/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/create-magic-app` repository is a monorepo that provides a CLI tool to scaffold a Magic application, making it easier to create and manage projects built on the Magic Platform.\n\nThe content of this repository includes:\n\n- CLI tool (`create-magic-app`) to generate boilerplate code for a Magic application\n- Example projects and code snippets to get started with Magic\n- Documentation on how to use the CLI and set up a Magic application.", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'compiled/chalk/index.js':\n\nThis module, Chalk, enables customizable and flexible console output styling in JavaScript. It defines various color schemes, styles, and provides a way to wrap console output in ANSI escape codes, allowing developers to create visually compelling and informative console output. The Chalk object offers a set of methods for applying various styles and colors to console output, making it a useful tool for developers."}
{"code": "// List NPM dependencies here which are to be pre-compiled and saved in the Git\n// repository. This enables us to deliver a tool that has \"zero dependencies\"\n// and vastly improves download performance via `npx`.\n\n[\n  \"chalk\",\n  \"decamelize\",\n  \"execa\",\n  \"got\",\n  \"react\",\n  \"react-is\",\n  \"tar\",\n  \"wrap-ansi\",\n  \"yargs-parser\"\n]\n", "explanation": "This block lists pre-compiled dependencies from NPM (Node Package Manager) that will be included in the Git repository, enabling zero external dependencies and improving download performance.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/config.jsonc", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/create-magic-app` repository is a monorepo that provides a CLI tool to scaffold a Magic application, making it easier to create and manage projects built on the Magic Platform.\n\nThe content of this repository includes:\n\n- CLI tool (`create-magic-app`) to generate boilerplate code for a Magic application\n- Example projects and code snippets to get started with Magic\n- Documentation on how to use the CLI and set up a Magic application.", "file_summary": "Here's a concise summary of the 'compiled/config.jsonc' file:\n\n`compiled/config.jsonc`: List of pre-compiled dependencies from NPM, included in the Git repository for zero external dependencies and improved download performance."}
{"code": "(()=>{\"use strict\";var e={159:e=>{const handlePreserveConsecutiveUppercase=(e,r)=>{e=e.replace(/((?<![\\p{Uppercase_Letter}\\d])[\\p{Uppercase_Letter}\\d](?![\\p{Uppercase_Letter}\\d]))/gu,(e=>e.toLowerCase()));return e.replace(/(\\p{Uppercase_Letter}+)(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu,((e,t,p)=>t+r+p.toLowerCase()))};e.exports=(e,{separator:r=\"_\",preserveConsecutiveUppercase:t=false}={})=>{if(!(typeof e===\"string\"&&typeof r===\"string\")){throw new TypeError(\"The `text` and `separator` arguments should be of type `string`\")}if(e.length<2){return t?e:e.toLowerCase()}const p=`$1${r}$2`;const a=e.replace(/([\\p{Lowercase_Letter}\\d])(\\p{Uppercase_Letter})/gu,p);if(t){return handlePreserveConsecutiveUppercase(a,r)}return a.replace(/(\\p{Uppercase_Letter})(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu,p).toLowerCase()}}};var r={};function __nccwpck_require__(t){var p=r[t];if(p!==undefined){return p.exports}var a=r[t]={exports:{}};var _=true;try{e[t](a,a.exports,__nccwpck_require__);_=false}finally{if(_)delete r[t]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(159);module.exports=t})();", "explanation": "This block appears to be a JavaScript module that exports a function responsible for converting text to a specific case format. The module can handle upper-case to lower-case conversion, separating words with a specified separator, and preserving consecutive upper-case letters.\n\nFunctionality:\n\n- Converts text to lower-case if not preserving consecutive upper-case letters.\n- Separates words with a specified separator.\n- Preserves consecutive upper-case letters if enabled.\n- Handles upper-case to lower-case conversions in the case of words containing letters and numbers.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/decamelize/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/create-magic-app` repository is a monorepo that provides a CLI tool to scaffold a Magic application, making it easier to create and manage projects built on the Magic Platform.\n\nThe content of this repository includes:\n\n- CLI tool (`create-magic-app`) to generate boilerplate code for a Magic application\n- Example projects and code snippets to get started with Magic\n- Documentation on how to use the CLI and set up a Magic application.", "file_summary": "Here's a concise summary of the 'compiled/decamelize/index.js' file:\n\n\"This module exports a function that performs upper-case to lower-case conversions, separating words with a specified separator, while preserving consecutive upper-case letters if enabled, suitable for handling mixed-case strings containing letters and numbers.\""}
{"code": "(()=>{var e={746:(e,t,n)=>{\"use strict\";const r=n(81);const o=n(855);const s=n(101);function spawn(e,t,n){const i=o(e,t,n);const a=r.spawn(i.command,i.args,i.options);s.hookChildProcess(a,i);return a}function spawnSync(e,t,n){const i=o(e,t,n);const a=r.spawnSync(i.command,i.args,i.options);a.error=a.error||s.verifyENOENTSync(a.status,i);return a}e.exports=spawn;e.exports.spawn=spawn;e.exports.sync=spawnSync;e.exports._parse=o;e.exports._enoent=s},101:e=>{\"use strict\";const t=process.platform===\"win32\";function notFoundError(e,t){return Object.assign(new Error(`${t} ${e.command} ENOENT`),{code:\"ENOENT\",errno:\"ENOENT\",syscall:`${t} ${e.command}`,path:e.command,spawnargs:e.args})}function hookChildProcess(e,n){if(!t){return}const r=e.emit;e.emit=function(t,o){if(t===\"exit\"){const t=verifyENOENT(o,n,\"spawn\");if(t){return r.call(e,\"error\",t)}}return r.apply(e,arguments)}}function verifyENOENT(e,n){if(t&&e===1&&!n.file){return notFoundError(n.original,\"spawn\")}return null}function verifyENOENTSync(e,n){if(t&&e===1&&!n.file){return notFoundError(n.original,\"spawnSync\")}return null}e.exports={hookChildProcess:hookChildProcess,verifyENOENT:verifyENOENT,verifyENOENTSync:verifyENOENTSync,notFoundError:notFoundError}},855:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(274);const s=n(48);const i=n(252);const a=process.platform===\"win32\";const c=/\\.(?:com|exe)$/i;const d=/node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;function detectShebang(e){e.file=o(e);const t=e.file&&i(e.file);if(t){e.args.unshift(e.file);e.command=t;return o(e)}return e.file}function parseNonShell(e){if(!a){return e}const t=detectShebang(e);const n=!c.test(t);if(e.options.forceShell||n){const n=d.test(t);e.command=r.normalize(e.command);e.command=s.command(e.command);e.args=e.args.map((e=>s.argument(e,n)));const o=[e.command].concat(e.args).join(\" \");e.args=[\"/d\",\"/s\",\"/c\",`\"${o}\"`];e.command=process.env.comspec||\"cmd.exe\";e.options.windowsVerbatimArguments=true}return e}function parse(e,t,n){if(t&&!Array.isArray(t)){n=t;t=null}t=t?t.slice(0):[];n=Object.assign({},n);const r={command:e,args:t,options:n,file:undefined,original:{command:e,args:t}};return n.shell?r:parseNonShell(r)}e.exports=parse},48:e=>{\"use strict\";const t=/([()\\][%!^\"`<>&|;, *?])/g;function escapeCommand(e){e=e.replace(t,\"^$1\");return e}function escapeArgument(e,n){e=`${e}`;e=e.replace(/(\\\\*)\"/g,'$1$1\\\\\"');e=e.replace(/(\\\\*)$/,\"$1$1\");e=`\"${e}\"`;e=e.replace(t,\"^$1\");if(n){e=e.replace(t,\"^$1\")}return e}e.exports.command=escapeCommand;e.exports.argument=escapeArgument},252:(e,t,n)=>{\"use strict\";const r=n(147);const o=n(32);function readShebang(e){const t=150;const n=Buffer.alloc(t);let s;try{s=r.openSync(e,\"r\");r.readSync(s,n,0,t,0);r.closeSync(s)}catch(e){}return o(n.toString())}e.exports=readShebang},274:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(207);const s=n(539);function resolveCommandAttempt(e,t){const n=e.options.env||process.env;const i=process.cwd();const a=e.options.cwd!=null;const c=a&&process.chdir!==undefined&&!process.chdir.disabled;if(c){try{process.chdir(e.options.cwd)}catch(e){}}let d;try{d=o.sync(e.command,{path:n[s({env:n})],pathExt:t?r.delimiter:undefined})}catch(e){}finally{if(c){process.chdir(i)}}if(d){d=r.resolve(a?e.options.cwd:\"\",d)}return d}function resolveCommand(e){return resolveCommandAttempt(e)||resolveCommandAttempt(e,true)}e.exports=resolveCommand},447:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(81);const s=n(746);const i=n(174);const a=n(502);const c=n(82);const d=n(187);const u=n(166);const{spawnedKill:l,spawnedCancel:f,setupTimeout:p,validateTimeout:m,setExitHandler:g}=n(819);const{handleInput:x,getSpawnedResult:h,makeAllStream:y,validateInputSync:b}=n(592);const{mergePromise:S,getSpawnedPromise:v}=n(814);const{joinCommand:w,parseCommand:E,getEscapedCommand:I}=n(286);const T=1e3*1e3*100;const getEnv=({env:e,extendEnv:t,preferLocal:n,localDir:r,execPath:o})=>{const s=t?{...process.env,...e}:e;if(n){return a.env({env:s,cwd:r,execPath:o})}return s};const handleArguments=(e,t,n={})=>{const o=s._parse(e,t,n);e=o.command;t=o.args;n=o.options;n={maxBuffer:T,buffer:true,stripFinalNewline:true,extendEnv:true,preferLocal:false,localDir:n.cwd||process.cwd(),execPath:process.execPath,encoding:\"utf8\",reject:true,cleanup:true,all:false,windowsHide:true,...n};n.env=getEnv(n);n.stdio=u(n);if(process.platform===\"win32\"&&r.basename(e,\".exe\")===\"cmd\"){t.unshift(\"/q\")}return{file:e,args:t,options:n,parsed:o}};const handleOutput=(e,t,n)=>{if(typeof t!==\"string\"&&!Buffer.isBuffer(t)){return n===undefined?undefined:\"\"}if(e.stripFinalNewline){return i(t)}return t};const execa=(e,t,n)=>{const r=handleArguments(e,t,n);const s=w(e,t);const i=I(e,t);m(r.options);let a;try{a=o.spawn(r.file,r.args,r.options)}catch(e){const t=new o.ChildProcess;const n=Promise.reject(d({error:e,stdout:\"\",stderr:\"\",all:\"\",command:s,escapedCommand:i,parsed:r,timedOut:false,isCanceled:false,killed:false}));return S(t,n)}const u=v(a);const b=p(a,r.options,u);const E=g(a,r.options,b);const T={isCanceled:false};a.kill=l.bind(null,a.kill.bind(a));a.cancel=f.bind(null,a,T);const handlePromise=async()=>{const[{error:e,exitCode:t,signal:n,timedOut:o},c,u,l]=await h(a,r.options,E);const f=handleOutput(r.options,c);const p=handleOutput(r.options,u);const m=handleOutput(r.options,l);if(e||t!==0||n!==null){const c=d({error:e,exitCode:t,signal:n,stdout:f,stderr:p,all:m,command:s,escapedCommand:i,parsed:r,timedOut:o,isCanceled:T.isCanceled,killed:a.killed});if(!r.options.reject){return c}throw c}return{command:s,escapedCommand:i,exitCode:0,stdout:f,stderr:p,all:m,failed:false,timedOut:false,isCanceled:false,killed:false}};const C=c(handlePromise);x(a,r.options.input);a.all=y(a,r.options);return S(a,C)};e.exports=execa;e.exports.sync=(e,t,n)=>{const r=handleArguments(e,t,n);const s=w(e,t);const i=I(e,t);b(r.options);let a;try{a=o.spawnSync(r.file,r.args,r.options)}catch(e){throw d({error:e,stdout:\"\",stderr:\"\",all:\"\",command:s,escapedCommand:i,parsed:r,timedOut:false,isCanceled:false,killed:false})}const c=handleOutput(r.options,a.stdout,a.error);const u=handleOutput(r.options,a.stderr,a.error);if(a.error||a.status!==0||a.signal!==null){const e=d({stdout:c,stderr:u,error:a.error,signal:a.signal,exitCode:a.status,command:s,escapedCommand:i,parsed:r,timedOut:a.error&&a.error.code===\"ETIMEDOUT\",isCanceled:false,killed:a.signal!==null});if(!r.options.reject){return e}throw e}return{command:s,escapedCommand:i,exitCode:0,stdout:c,stderr:u,failed:false,timedOut:false,isCanceled:false,killed:false}};e.exports.command=(e,t)=>{const[n,...r]=E(e);return execa(n,r,t)};e.exports.commandSync=(e,t)=>{const[n,...r]=E(e);return execa.sync(n,r,t)};e.exports.node=(e,t,n={})=>{if(t&&!Array.isArray(t)&&typeof t===\"object\"){n=t;t=[]}const r=u.node(n);const o=process.execArgv.filter((e=>!e.startsWith(\"--inspect\")));const{nodePath:s=process.execPath,nodeOptions:i=o}=n;return execa(s,[...i,e,...Array.isArray(t)?t:[]],{...n,stdin:undefined,stdout:undefined,stderr:undefined,stdio:r,shell:false})}},286:e=>{\"use strict\";const normalizeArgs=(e,t=[])=>{if(!Array.isArray(t)){return[e]}return[e,...t]};const t=/^[\\w.-]+$/;const n=/\"/g;const escapeArg=e=>{if(typeof e!==\"string\"||t.test(e)){return e}return`\"${e.replace(n,'\\\\\"')}\"`};const joinCommand=(e,t)=>normalizeArgs(e,t).join(\" \");const getEscapedCommand=(e,t)=>normalizeArgs(e,t).map((e=>escapeArg(e))).join(\" \");const r=/ +/g;const parseCommand=e=>{const t=[];for(const n of e.trim().split(r)){const e=t[t.length-1];if(e&&e.endsWith(\"\\\\\")){t[t.length-1]=`${e.slice(0,-1)} ${n}`}else{t.push(n)}}return t};e.exports={joinCommand:joinCommand,getEscapedCommand:getEscapedCommand,parseCommand:parseCommand}},187:(e,t,n)=>{\"use strict\";const{signalsByName:r}=n(779);const getErrorPrefix=({timedOut:e,timeout:t,errorCode:n,signal:r,signalDescription:o,exitCode:s,isCanceled:i})=>{if(e){return`timed out after ${t} milliseconds`}if(i){return\"was canceled\"}if(n!==undefined){return`failed with ${n}`}if(r!==undefined){return`was killed with ${r} (${o})`}if(s!==undefined){return`failed with exit code ${s}`}return\"failed\"};const makeError=({stdout:e,stderr:t,all:n,error:o,signal:s,exitCode:i,command:a,escapedCommand:c,timedOut:d,isCanceled:u,killed:l,parsed:{options:{timeout:f}}})=>{i=i===null?undefined:i;s=s===null?undefined:s;const p=s===undefined?undefined:r[s].description;const m=o&&o.code;const g=getErrorPrefix({timedOut:d,timeout:f,errorCode:m,signal:s,signalDescription:p,exitCode:i,isCanceled:u});const x=`Command ${g}: ${a}`;const h=Object.prototype.toString.call(o)===\"[object Error]\";const y=h?`${x}\\n${o.message}`:x;const b=[y,t,e].filter(Boolean).join(\"\\n\");if(h){o.originalMessage=o.message;o.message=b}else{o=new Error(b)}o.shortMessage=y;o.command=a;o.escapedCommand=c;o.exitCode=i;o.signal=s;o.signalDescription=p;o.stdout=e;o.stderr=t;if(n!==undefined){o.all=n}if(\"bufferedData\"in o){delete o.bufferedData}o.failed=true;o.timedOut=Boolean(d);o.isCanceled=u;o.killed=l&&!d;return o};e.exports=makeError},819:(e,t,n)=>{\"use strict\";const r=n(37);const o=n(931);const s=1e3*5;const spawnedKill=(e,t=\"SIGTERM\",n={})=>{const r=e(t);setKillTimeout(e,t,n,r);return r};const setKillTimeout=(e,t,n,r)=>{if(!shouldForceKill(t,n,r)){return}const o=getForceKillAfterTimeout(n);const s=setTimeout((()=>{e(\"SIGKILL\")}),o);if(s.unref){s.unref()}};const shouldForceKill=(e,{forceKillAfterTimeout:t},n)=>isSigterm(e)&&t!==false&&n;const isSigterm=e=>e===r.constants.signals.SIGTERM||typeof e===\"string\"&&e.toUpperCase()===\"SIGTERM\";const getForceKillAfterTimeout=({forceKillAfterTimeout:e=true})=>{if(e===true){return s}if(!Number.isFinite(e)||e<0){throw new TypeError(`Expected the \\`forceKillAfterTimeout\\` option to be a non-negative integer, got \\`${e}\\` (${typeof e})`)}return e};const spawnedCancel=(e,t)=>{const n=e.kill();if(n){t.isCanceled=true}};const timeoutKill=(e,t,n)=>{e.kill(t);n(Object.assign(new Error(\"Timed out\"),{timedOut:true,signal:t}))};const setupTimeout=(e,{timeout:t,killSignal:n=\"SIGTERM\"},r)=>{if(t===0||t===undefined){return r}let o;const s=new Promise(((r,s)=>{o=setTimeout((()=>{timeoutKill(e,n,s)}),t)}));const i=r.finally((()=>{clearTimeout(o)}));return Promise.race([s,i])};const validateTimeout=({timeout:e})=>{if(e!==undefined&&(!Number.isFinite(e)||e<0)){throw new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${e}\\` (${typeof e})`)}};const setExitHandler=async(e,{cleanup:t,detached:n},r)=>{if(!t||n){return r}const s=o((()=>{e.kill()}));return r.finally((()=>{s()}))};e.exports={spawnedKill:spawnedKill,spawnedCancel:spawnedCancel,setupTimeout:setupTimeout,validateTimeout:validateTimeout,setExitHandler:setExitHandler}},814:e=>{\"use strict\";const t=(async()=>{})().constructor.prototype;const n=[\"then\",\"catch\",\"finally\"].map((e=>[e,Reflect.getOwnPropertyDescriptor(t,e)]));const mergePromise=(e,t)=>{for(const[r,o]of n){const n=typeof t===\"function\"?(...e)=>Reflect.apply(o.value,t(),e):o.value.bind(t);Reflect.defineProperty(e,r,{...o,value:n})}return e};const getSpawnedPromise=e=>new Promise(((t,n)=>{e.on(\"exit\",((e,n)=>{t({exitCode:e,signal:n})}));e.on(\"error\",(e=>{n(e)}));if(e.stdin){e.stdin.on(\"error\",(e=>{n(e)}))}}));e.exports={mergePromise:mergePromise,getSpawnedPromise:getSpawnedPromise}},166:e=>{\"use strict\";const t=[\"stdin\",\"stdout\",\"stderr\"];const hasAlias=e=>t.some((t=>e[t]!==undefined));const normalizeStdio=e=>{if(!e){return}const{stdio:n}=e;if(n===undefined){return t.map((t=>e[t]))}if(hasAlias(e)){throw new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${t.map((e=>`\\`${e}\\``)).join(\", \")}`)}if(typeof n===\"string\"){return n}if(!Array.isArray(n)){throw new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof n}\\``)}const r=Math.max(n.length,t.length);return Array.from({length:r},((e,t)=>n[t]))};e.exports=normalizeStdio;e.exports.node=e=>{const t=normalizeStdio(e);if(t===\"ipc\"){return\"ipc\"}if(t===undefined||typeof t===\"string\"){return[t,t,t,\"ipc\"]}if(t.includes(\"ipc\")){return t}return[...t,\"ipc\"]}},592:(e,t,n)=>{\"use strict\";const r=n(554);const o=n(336);const s=n(621);const handleInput=(e,t)=>{if(t===undefined||e.stdin===undefined){return}if(r(t)){t.pipe(e.stdin)}else{e.stdin.end(t)}};const makeAllStream=(e,{all:t})=>{if(!t||!e.stdout&&!e.stderr){return}const n=s();if(e.stdout){n.add(e.stdout)}if(e.stderr){n.add(e.stderr)}return n};const getBufferedData=async(e,t)=>{if(!e){return}e.destroy();try{return await t}catch(e){return e.bufferedData}};const getStreamPromise=(e,{encoding:t,buffer:n,maxBuffer:r})=>{if(!e||!n){return}if(t){return o(e,{encoding:t,maxBuffer:r})}return o.buffer(e,{maxBuffer:r})};const getSpawnedResult=async({stdout:e,stderr:t,all:n},{encoding:r,buffer:o,maxBuffer:s},i)=>{const a=getStreamPromise(e,{encoding:r,buffer:o,maxBuffer:s});const c=getStreamPromise(t,{encoding:r,buffer:o,maxBuffer:s});const d=getStreamPromise(n,{encoding:r,buffer:o,maxBuffer:s*2});try{return await Promise.all([i,a,c,d])}catch(r){return Promise.all([{error:r,signal:r.signal,timedOut:r.timedOut},getBufferedData(e,a),getBufferedData(t,c),getBufferedData(n,d)])}};const validateInputSync=({input:e})=>{if(r(e)){throw new TypeError(\"The `input` option cannot be a stream in sync mode\")}};e.exports={handleInput:handleInput,makeAllStream:makeAllStream,getSpawnedResult:getSpawnedResult,validateInputSync:validateInputSync}},740:(e,t,n)=>{\"use strict\";const{PassThrough:r}=n(781);e.exports=e=>{e={...e};const{array:t}=e;let{encoding:n}=e;const o=n===\"buffer\";let s=false;if(t){s=!(n||o)}else{n=n||\"utf8\"}if(o){n=null}const i=new r({objectMode:s});if(n){i.setEncoding(n)}let a=0;const c=[];i.on(\"data\",(e=>{c.push(e);if(s){a=c.length}else{a+=e.length}}));i.getBufferedValue=()=>{if(t){return c}return o?Buffer.concat(c,a):c.join(\"\")};i.getBufferedLength=()=>a;return i}},336:(e,t,n)=>{\"use strict\";const{constants:r}=n(300);const o=n(781);const{promisify:s}=n(837);const i=n(740);const a=s(o.pipeline);class MaxBufferError extends Error{constructor(){super(\"maxBuffer exceeded\");this.name=\"MaxBufferError\"}}async function getStream(e,t){if(!e){throw new Error(\"Expected a stream\")}t={maxBuffer:Infinity,...t};const{maxBuffer:n}=t;const o=i(t);await new Promise(((t,s)=>{const rejectPromise=e=>{if(e&&o.getBufferedLength()<=r.MAX_LENGTH){e.bufferedData=o.getBufferedValue()}s(e)};(async()=>{try{await a(e,o);t()}catch(e){rejectPromise(e)}})();o.on(\"data\",(()=>{if(o.getBufferedLength()>n){rejectPromise(new MaxBufferError)}}))}));return o.getBufferedValue()}e.exports=getStream;e.exports.buffer=(e,t)=>getStream(e,{...t,encoding:\"buffer\"});e.exports.array=(e,t)=>getStream(e,{...t,array:true});e.exports.MaxBufferError=MaxBufferError},213:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.SIGNALS=void 0;const n=[{name:\"SIGHUP\",number:1,action:\"terminate\",description:\"Terminal closed\",standard:\"posix\"},{name:\"SIGINT\",number:2,action:\"terminate\",description:\"User interruption with CTRL-C\",standard:\"ansi\"},{name:\"SIGQUIT\",number:3,action:\"core\",description:\"User interruption with CTRL-\\\\\",standard:\"posix\"},{name:\"SIGILL\",number:4,action:\"core\",description:\"Invalid machine instruction\",standard:\"ansi\"},{name:\"SIGTRAP\",number:5,action:\"core\",description:\"Debugger breakpoint\",standard:\"posix\"},{name:\"SIGABRT\",number:6,action:\"core\",description:\"Aborted\",standard:\"ansi\"},{name:\"SIGIOT\",number:6,action:\"core\",description:\"Aborted\",standard:\"bsd\"},{name:\"SIGBUS\",number:7,action:\"core\",description:\"Bus error due to misaligned, non-existing address or paging error\",standard:\"bsd\"},{name:\"SIGEMT\",number:7,action:\"terminate\",description:\"Command should be emulated but is not implemented\",standard:\"other\"},{name:\"SIGFPE\",number:8,action:\"core\",description:\"Floating point arithmetic error\",standard:\"ansi\"},{name:\"SIGKILL\",number:9,action:\"terminate\",description:\"Forced termination\",standard:\"posix\",forced:true},{name:\"SIGUSR1\",number:10,action:\"terminate\",description:\"Application-specific signal\",standard:\"posix\"},{name:\"SIGSEGV\",number:11,action:\"core\",description:\"Segmentation fault\",standard:\"ansi\"},{name:\"SIGUSR2\",number:12,action:\"terminate\",description:\"Application-specific signal\",standard:\"posix\"},{name:\"SIGPIPE\",number:13,action:\"terminate\",description:\"Broken pipe or socket\",standard:\"posix\"},{name:\"SIGALRM\",number:14,action:\"terminate\",description:\"Timeout or timer\",standard:\"posix\"},{name:\"SIGTERM\",number:15,action:\"terminate\",description:\"Termination\",standard:\"ansi\"},{name:\"SIGSTKFLT\",number:16,action:\"terminate\",description:\"Stack is empty or overflowed\",standard:\"other\"},{name:\"SIGCHLD\",number:17,action:\"ignore\",description:\"Child process terminated, paused or unpaused\",standard:\"posix\"},{name:\"SIGCLD\",number:17,action:\"ignore\",description:\"Child process terminated, paused or unpaused\",standard:\"other\"},{name:\"SIGCONT\",number:18,action:\"unpause\",description:\"Unpaused\",standard:\"posix\",forced:true},{name:\"SIGSTOP\",number:19,action:\"pause\",description:\"Paused\",standard:\"posix\",forced:true},{name:\"SIGTSTP\",number:20,action:\"pause\",description:'Paused using CTRL-Z or \"suspend\"',standard:\"posix\"},{name:\"SIGTTIN\",number:21,action:\"pause\",description:\"Background process cannot read terminal input\",standard:\"posix\"},{name:\"SIGBREAK\",number:21,action:\"terminate\",description:\"User interruption with CTRL-BREAK\",standard:\"other\"},{name:\"SIGTTOU\",number:22,action:\"pause\",description:\"Background process cannot write to terminal output\",standard:\"posix\"},{name:\"SIGURG\",number:23,action:\"ignore\",description:\"Socket received out-of-band data\",standard:\"bsd\"},{name:\"SIGXCPU\",number:24,action:\"core\",description:\"Process timed out\",standard:\"bsd\"},{name:\"SIGXFSZ\",number:25,action:\"core\",description:\"File too big\",standard:\"bsd\"},{name:\"SIGVTALRM\",number:26,action:\"terminate\",description:\"Timeout or timer\",standard:\"bsd\"},{name:\"SIGPROF\",number:27,action:\"terminate\",description:\"Timeout or timer\",standard:\"bsd\"},{name:\"SIGWINCH\",number:28,action:\"ignore\",description:\"Terminal window size changed\",standard:\"bsd\"},{name:\"SIGIO\",number:29,action:\"terminate\",description:\"I/O is available\",standard:\"other\"},{name:\"SIGPOLL\",number:29,action:\"terminate\",description:\"Watched event\",standard:\"other\"},{name:\"SIGINFO\",number:29,action:\"ignore\",description:\"Request for process information\",standard:\"other\"},{name:\"SIGPWR\",number:30,action:\"terminate\",description:\"Device running out of power\",standard:\"systemv\"},{name:\"SIGSYS\",number:31,action:\"core\",description:\"Invalid system call\",standard:\"other\"},{name:\"SIGUNUSED\",number:31,action:\"terminate\",description:\"Invalid system call\",standard:\"other\"}];t.SIGNALS=n},779:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.signalsByNumber=t.signalsByName=void 0;var r=n(37);var o=n(435);var s=n(295);const getSignalsByName=function(){const e=(0,o.getSignals)();return e.reduce(getSignalByName,{})};const getSignalByName=function(e,{name:t,number:n,description:r,supported:o,action:s,forced:i,standard:a}){return{...e,[t]:{name:t,number:n,description:r,supported:o,action:s,forced:i,standard:a}}};const i=getSignalsByName();t.signalsByName=i;const getSignalsByNumber=function(){const e=(0,o.getSignals)();const t=s.SIGRTMAX+1;const n=Array.from({length:t},((t,n)=>getSignalByNumber(n,e)));return Object.assign({},...n)};const getSignalByNumber=function(e,t){const n=findSignalByNumber(e,t);if(n===undefined){return{}}const{name:r,description:o,supported:s,action:i,forced:a,standard:c}=n;return{[e]:{name:r,number:e,description:o,supported:s,action:i,forced:a,standard:c}}};const findSignalByNumber=function(e,t){const n=t.find((({name:t})=>r.constants.signals[t]===e));if(n!==undefined){return n}return t.find((t=>t.number===e))};const a=getSignalsByNumber();t.signalsByNumber=a},295:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.SIGRTMAX=t.getRealtimeSignals=void 0;const getRealtimeSignals=function(){const e=r-n+1;return Array.from({length:e},getRealtimeSignal)};t.getRealtimeSignals=getRealtimeSignals;const getRealtimeSignal=function(e,t){return{name:`SIGRT${t+1}`,number:n+t,action:\"terminate\",description:\"Application-specific signal (realtime)\",standard:\"posix\"}};const n=34;const r=64;t.SIGRTMAX=r},435:(e,t,n)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.getSignals=void 0;var r=n(37);var o=n(213);var s=n(295);const getSignals=function(){const e=(0,s.getRealtimeSignals)();const t=[...o.SIGNALS,...e].map(normalizeSignal);return t};t.getSignals=getSignals;const normalizeSignal=function({name:e,number:t,description:n,action:o,forced:s=false,standard:i}){const{signals:{[e]:a}}=r.constants;const c=a!==undefined;const d=c?a:t;return{name:e,number:d,description:n,supported:c,action:o,forced:s,standard:i}}},554:e=>{\"use strict\";const isStream=e=>e!==null&&typeof e===\"object\"&&typeof e.pipe===\"function\";isStream.writable=e=>isStream(e)&&e.writable!==false&&typeof e._write===\"function\"&&typeof e._writableState===\"object\";isStream.readable=e=>isStream(e)&&e.readable!==false&&typeof e._read===\"function\"&&typeof e._readableState===\"object\";isStream.duplex=e=>isStream.writable(e)&&isStream.readable(e);isStream.transform=e=>isStream.duplex(e)&&typeof e._transform===\"function\";e.exports=isStream},126:(e,t,n)=>{var r=n(147);var o;if(process.platform===\"win32\"||global.TESTING_WINDOWS){o=n(1)}else{o=n(728)}e.exports=isexe;isexe.sync=sync;function isexe(e,t,n){if(typeof t===\"function\"){n=t;t={}}if(!n){if(typeof Promise!==\"function\"){throw new TypeError(\"callback not provided\")}return new Promise((function(n,r){isexe(e,t||{},(function(e,t){if(e){r(e)}else{n(t)}}))}))}o(e,t||{},(function(e,r){if(e){if(e.code===\"EACCES\"||t&&t.ignoreErrors){e=null;r=false}}n(e,r)}))}function sync(e,t){try{return o.sync(e,t||{})}catch(e){if(t&&t.ignoreErrors||e.code===\"EACCES\"){return false}else{throw e}}}},728:(e,t,n)=>{e.exports=isexe;isexe.sync=sync;var r=n(147);function isexe(e,t,n){r.stat(e,(function(e,r){n(e,e?false:checkStat(r,t))}))}function sync(e,t){return checkStat(r.statSync(e),t)}function checkStat(e,t){return e.isFile()&&checkMode(e,t)}function checkMode(e,t){var n=e.mode;var r=e.uid;var o=e.gid;var s=t.uid!==undefined?t.uid:process.getuid&&process.getuid();var i=t.gid!==undefined?t.gid:process.getgid&&process.getgid();var a=parseInt(\"100\",8);var c=parseInt(\"010\",8);var d=parseInt(\"001\",8);var u=a|c;var l=n&d||n&c&&o===i||n&a&&r===s||n&u&&s===0;return l}},1:(e,t,n)=>{e.exports=isexe;isexe.sync=sync;var r=n(147);function checkPathExt(e,t){var n=t.pathExt!==undefined?t.pathExt:process.env.PATHEXT;if(!n){return true}n=n.split(\";\");if(n.indexOf(\"\")!==-1){return true}for(var r=0;r<n.length;r++){var o=n[r].toLowerCase();if(o&&e.substr(-o.length).toLowerCase()===o){return true}}return false}function checkStat(e,t,n){if(!e.isSymbolicLink()&&!e.isFile()){return false}return checkPathExt(t,n)}function isexe(e,t,n){r.stat(e,(function(r,o){n(r,r?false:checkStat(o,e,t))}))}function sync(e,t){return checkStat(r.statSync(e),e,t)}},621:(e,t,n)=>{\"use strict\";const{PassThrough:r}=n(781);e.exports=function(){var e=[];var t=new r({objectMode:true});t.setMaxListeners(0);t.add=add;t.isEmpty=isEmpty;t.on(\"unpipe\",remove);Array.prototype.slice.call(arguments).forEach(add);return t;function add(n){if(Array.isArray(n)){n.forEach(add);return this}e.push(n);n.once(\"end\",remove.bind(null,n));n.once(\"error\",t.emit.bind(t,\"error\"));n.pipe(t,{end:false});return this}function isEmpty(){return e.length==0}function remove(n){e=e.filter((function(e){return e!==n}));if(!e.length&&t.readable){t.end()}}}},47:e=>{\"use strict\";const mimicFn=(e,t)=>{for(const n of Reflect.ownKeys(t)){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}return e};e.exports=mimicFn;e.exports[\"default\"]=mimicFn},502:(e,t,n)=>{\"use strict\";const r=n(17);const o=n(539);const npmRunPath=e=>{e={cwd:process.cwd(),path:process.env[o()],execPath:process.execPath,...e};let t;let n=r.resolve(e.cwd);const s=[];while(t!==n){s.push(r.join(n,\"node_modules/.bin\"));t=n;n=r.resolve(n,\"..\")}const i=r.resolve(e.cwd,e.execPath,\"..\");s.push(i);return s.concat(e.path).join(r.delimiter)};e.exports=npmRunPath;e.exports[\"default\"]=npmRunPath;e.exports.env=t=>{t={env:process.env,...t};const n={...t.env};const r=o({env:n});t.path=n[r];n[r]=e.exports(t);return n}},82:(e,t,n)=>{\"use strict\";const r=n(47);const o=new WeakMap;const onetime=(e,t={})=>{if(typeof e!==\"function\"){throw new TypeError(\"Expected a function\")}let n;let s=0;const i=e.displayName||e.name||\"<anonymous>\";const onetime=function(...r){o.set(onetime,++s);if(s===1){n=e.apply(this,r);e=null}else if(t.throw===true){throw new Error(`Function \\`${i}\\` can only be called once`)}return n};r(onetime,e);o.set(onetime,s);return onetime};e.exports=onetime;e.exports[\"default\"]=onetime;e.exports.callCount=e=>{if(!o.has(e)){throw new Error(`The given function \\`${e.name}\\` is not wrapped by the \\`onetime\\` package`)}return o.get(e)}},539:e=>{\"use strict\";const pathKey=(e={})=>{const t=e.env||process.env;const n=e.platform||process.platform;if(n!==\"win32\"){return\"PATH\"}return Object.keys(t).reverse().find((e=>e.toUpperCase()===\"PATH\"))||\"Path\"};e.exports=pathKey;e.exports[\"default\"]=pathKey},32:(e,t,n)=>{\"use strict\";const r=n(638);e.exports=(e=\"\")=>{const t=e.match(r);if(!t){return null}const[n,o]=t[0].replace(/#! ?/,\"\").split(\" \");const s=n.split(\"/\").pop();if(s===\"env\"){return o}return o?`${s} ${o}`:s}},638:e=>{\"use strict\";e.exports=/^#!(.*)/},931:(e,t,n)=>{var r=global.process;const processOk=function(e){return e&&typeof e===\"object\"&&typeof e.removeListener===\"function\"&&typeof e.emit===\"function\"&&typeof e.reallyExit===\"function\"&&typeof e.listeners===\"function\"&&typeof e.kill===\"function\"&&typeof e.pid===\"number\"&&typeof e.on===\"function\"};if(!processOk(r)){e.exports=function(){return function(){}}}else{var o=n(491);var s=n(710);var i=/^win/i.test(r.platform);var a=n(361);if(typeof a!==\"function\"){a=a.EventEmitter}var c;if(r.__signal_exit_emitter__){c=r.__signal_exit_emitter__}else{c=r.__signal_exit_emitter__=new a;c.count=0;c.emitted={}}if(!c.infinite){c.setMaxListeners(Infinity);c.infinite=true}e.exports=function(e,t){if(!processOk(global.process)){return function(){}}o.equal(typeof e,\"function\",\"a callback must be provided for exit handler\");if(f===false){p()}var n=\"exit\";if(t&&t.alwaysLast){n=\"afterexit\"}var remove=function(){c.removeListener(n,e);if(c.listeners(\"exit\").length===0&&c.listeners(\"afterexit\").length===0){d()}};c.on(n,e);return remove};var d=function unload(){if(!f||!processOk(global.process)){return}f=false;s.forEach((function(e){try{r.removeListener(e,l[e])}catch(e){}}));r.emit=x;r.reallyExit=m;c.count-=1};e.exports.unload=d;var u=function emit(e,t,n){if(c.emitted[e]){return}c.emitted[e]=true;c.emit(e,t,n)};var l={};s.forEach((function(e){l[e]=function listener(){if(!processOk(global.process)){return}var t=r.listeners(e);if(t.length===c.count){d();u(\"exit\",null,e);u(\"afterexit\",null,e);if(i&&e===\"SIGHUP\"){e=\"SIGINT\"}r.kill(r.pid,e)}}}));e.exports.signals=function(){return s};var f=false;var p=function load(){if(f||!processOk(global.process)){return}f=true;c.count+=1;s=s.filter((function(e){try{r.on(e,l[e]);return true}catch(e){return false}}));r.emit=h;r.reallyExit=g};e.exports.load=p;var m=r.reallyExit;var g=function processReallyExit(e){if(!processOk(global.process)){return}r.exitCode=e||0;u(\"exit\",r.exitCode,null);u(\"afterexit\",r.exitCode,null);m.call(r,r.exitCode)};var x=r.emit;var h=function processEmit(e,t){if(e===\"exit\"&&processOk(global.process)){if(t!==undefined){r.exitCode=t}var n=x.apply(this,arguments);u(\"exit\",r.exitCode,null);u(\"afterexit\",r.exitCode,null);return n}else{return x.apply(this,arguments)}}}},710:e=>{e.exports=[\"SIGABRT\",\"SIGALRM\",\"SIGHUP\",\"SIGINT\",\"SIGTERM\"];if(process.platform!==\"win32\"){e.exports.push(\"SIGVTALRM\",\"SIGXCPU\",\"SIGXFSZ\",\"SIGUSR2\",\"SIGTRAP\",\"SIGSYS\",\"SIGQUIT\",\"SIGIOT\")}if(process.platform===\"linux\"){e.exports.push(\"SIGIO\",\"SIGPOLL\",\"SIGPWR\",\"SIGSTKFLT\",\"SIGUNUSED\")}},174:e=>{\"use strict\";e.exports=e=>{const t=typeof e===\"string\"?\"\\n\":\"\\n\".charCodeAt();const n=typeof e===\"string\"?\"\\r\":\"\\r\".charCodeAt();if(e[e.length-1]===t){e=e.slice(0,e.length-1)}if(e[e.length-1]===n){e=e.slice(0,e.length-1)}return e}},207:(e,t,n)=>{const r=process.platform===\"win32\"||process.env.OSTYPE===\"cygwin\"||process.env.OSTYPE===\"msys\";const o=n(17);const s=r?\";\":\":\";const i=n(126);const getNotFoundError=e=>Object.assign(new Error(`not found: ${e}`),{code:\"ENOENT\"});const getPathInfo=(e,t)=>{const n=t.colon||s;const o=e.match(/\\//)||r&&e.match(/\\\\/)?[\"\"]:[...r?[process.cwd()]:[],...(t.path||process.env.PATH||\"\").split(n)];const i=r?t.pathExt||process.env.PATHEXT||\".EXE;.CMD;.BAT;.COM\":\"\";const a=r?i.split(n):[\"\"];if(r){if(e.indexOf(\".\")!==-1&&a[0]!==\"\")a.unshift(\"\")}return{pathEnv:o,pathExt:a,pathExtExe:i}};const which=(e,t,n)=>{if(typeof t===\"function\"){n=t;t={}}if(!t)t={};const{pathEnv:r,pathExt:s,pathExtExe:a}=getPathInfo(e,t);const c=[];const step=n=>new Promise(((s,i)=>{if(n===r.length)return t.all&&c.length?s(c):i(getNotFoundError(e));const a=r[n];const d=/^\".*\"$/.test(a)?a.slice(1,-1):a;const u=o.join(d,e);const l=!d&&/^\\.[\\\\\\/]/.test(e)?e.slice(0,2)+u:u;s(subStep(l,n,0))}));const subStep=(e,n,r)=>new Promise(((o,d)=>{if(r===s.length)return o(step(n+1));const u=s[r];i(e+u,{pathExt:a},((s,i)=>{if(!s&&i){if(t.all)c.push(e+u);else return o(e+u)}return o(subStep(e,n,r+1))}))}));return n?step(0).then((e=>n(null,e)),n):step(0)};const whichSync=(e,t)=>{t=t||{};const{pathEnv:n,pathExt:r,pathExtExe:s}=getPathInfo(e,t);const a=[];for(let c=0;c<n.length;c++){const d=n[c];const u=/^\".*\"$/.test(d)?d.slice(1,-1):d;const l=o.join(u,e);const f=!u&&/^\\.[\\\\\\/]/.test(e)?e.slice(0,2)+l:l;for(let e=0;e<r.length;e++){const n=f+r[e];try{const e=i.sync(n,{pathExt:s});if(e){if(t.all)a.push(n);else return n}}catch(e){}}}if(t.all&&a.length)return a;if(t.nothrow)return null;throw getNotFoundError(e)};e.exports=which;which.sync=whichSync},491:e=>{\"use strict\";e.exports=require(\"assert\")},300:e=>{\"use strict\";e.exports=require(\"buffer\")},81:e=>{\"use strict\";e.exports=require(\"child_process\")},361:e=>{\"use strict\";e.exports=require(\"events\")},147:e=>{\"use strict\";e.exports=require(\"fs\")},37:e=>{\"use strict\";e.exports=require(\"os\")},17:e=>{\"use strict\";e.exports=require(\"path\")},781:e=>{\"use strict\";e.exports=require(\"stream\")},837:e=>{\"use strict\";e.exports=require(\"util\")}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n=__nccwpck_require__(447);module.exports=n})();", "explanation": "This code is a Node.js module implementing an asynchronous version of the Unix-like `exec` command with additional features. \n\nThe `execa` function takes three parameters: \n\n1. `command`: the command or executable to run\n2. `args`: an array of arguments to pass to the command\n3. `options`: an object with additional options for the execution\n\nThe `execa` function will spawn a new process, execute the command, and collect and return the output of the command in the form of a Promise. If the options `reject` is false, the returned value is the output, otherwise, it throws an error with the output. \n\nThe function also handles scenarios such as:\n\n- Errors and signals\n- Shell mode\n- Node execution\n- Timeouts\n- Cancelation\n- SIGTERM and SIGKILL signals\n\nHere's an overview of its functionality:\n\n- `spawn`: Spawns a new process with the given command and arguments.\n- `parse`: Parses the command and arguments into a consistent format.\n- `hookChildProcess`: Hooks into the child process to handle errors and signals.\n- `verifyENOENT`: Verifies if an error is an ENOENT error and creates a new error with that information if so.\n- `execa`: The main function that takes a command, arguments, and options, and returns a Promise with the result of the command execution.\n- `execaSync`: The synchronous version of `execa`.\n\nIt includes additional functionality, such as:\n\n- Timeouts: The `timeout` option allows you to specify a time limit for the command execution.\n- Cancelation: The `cancelled` option allows you to specify a function that will be called when the execution is canceled.\n- Shell mode: The `shell` option allows you to run the command in shell mode.\n- Node execution: The `node` option allows you to run the command as a Node.js application.\n- SIGTERM and SIGKILL signals: The `forceKillAfterTimeout` option allows you to specify a timeout before sending a SIGKILL signal to the process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/execa/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "The `magiclabs/create-magic-app` repository is a monorepo that provides a CLI tool to scaffold a Magic application, making it easier to create and manage projects built on the Magic Platform.\n\nThe content of this repository includes:\n\n- CLI tool (`create-magic-app`) to generate boilerplate code for a Magic application\n- Example projects and code snippets to get started with Magic\n- Documentation on how to use the CLI and set up a Magic application.", "file_summary": "Here's a concise summary of the 'compiled/execa/index.js' file:\n\n**execa - Asynchronous Unix-like `exec` Command**\n\n`execa` is a Node.js module that executes commands asynchronously with enhanced features. The main function, `execa`, takes a command, arguments, and options, and returns a Promise with the execution result. It handles errors, signals, shell mode, Node.js execution, timeouts, and cancelation. Additionally, it provides options for specifying a timeout, cancellation function, shell mode, Node.js execution, and force killing after a specified timeout."}
{"code": "(()=>{var e={7678:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const r=[\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Uint16Array\",\"Int32Array\",\"Uint32Array\",\"Float32Array\",\"Float64Array\",\"BigInt64Array\",\"BigUint64Array\"];function isTypedArrayName(e){return r.includes(e)}const s=[\"Function\",\"Generator\",\"AsyncGenerator\",\"GeneratorFunction\",\"AsyncGeneratorFunction\",\"AsyncFunction\",\"Observable\",\"Array\",\"Buffer\",\"Blob\",\"Object\",\"RegExp\",\"Date\",\"Error\",\"Map\",\"Set\",\"WeakMap\",\"WeakSet\",\"ArrayBuffer\",\"SharedArrayBuffer\",\"DataView\",\"Promise\",\"URL\",\"FormData\",\"URLSearchParams\",\"HTMLElement\",...r];function isObjectTypeName(e){return s.includes(e)}const o=[\"null\",\"undefined\",\"string\",\"number\",\"bigint\",\"boolean\",\"symbol\"];function isPrimitiveTypeName(e){return o.includes(e)}function isOfType(e){return t=>typeof t===e}const{toString:n}=Object.prototype;const getObjectType=e=>{const t=n.call(e).slice(8,-1);if(/HTML\\w+Element/.test(t)&&is.domElement(e)){return\"HTMLElement\"}if(isObjectTypeName(t)){return t}return undefined};const isObjectOfType=e=>t=>getObjectType(t)===e;function is(e){if(e===null){return\"null\"}switch(typeof e){case\"undefined\":return\"undefined\";case\"string\":return\"string\";case\"number\":return\"number\";case\"boolean\":return\"boolean\";case\"function\":return\"Function\";case\"bigint\":return\"bigint\";case\"symbol\":return\"symbol\";default:}if(is.observable(e)){return\"Observable\"}if(is.array(e)){return\"Array\"}if(is.buffer(e)){return\"Buffer\"}const t=getObjectType(e);if(t){return t}if(e instanceof String||e instanceof Boolean||e instanceof Number){throw new TypeError(\"Please don't use object wrappers for primitive types\")}return\"Object\"}is.undefined=isOfType(\"undefined\");is.string=isOfType(\"string\");const i=isOfType(\"number\");is.number=e=>i(e)&&!is.nan(e);is.bigint=isOfType(\"bigint\");is.function_=isOfType(\"function\");is.null_=e=>e===null;is.class_=e=>is.function_(e)&&e.toString().startsWith(\"class \");is.boolean=e=>e===true||e===false;is.symbol=isOfType(\"symbol\");is.numericString=e=>is.string(e)&&!is.emptyStringOrWhitespace(e)&&!Number.isNaN(Number(e));is.array=(e,t)=>{if(!Array.isArray(e)){return false}if(!is.function_(t)){return true}return e.every(t)};is.buffer=e=>{var t,r,s,o;return(o=(s=(r=(t=e)===null||t===void 0?void 0:t.constructor)===null||r===void 0?void 0:r.isBuffer)===null||s===void 0?void 0:s.call(r,e))!==null&&o!==void 0?o:false};is.blob=e=>isObjectOfType(\"Blob\")(e);is.nullOrUndefined=e=>is.null_(e)||is.undefined(e);is.object=e=>!is.null_(e)&&(typeof e===\"object\"||is.function_(e));is.iterable=e=>{var t;return is.function_((t=e)===null||t===void 0?void 0:t[Symbol.iterator])};is.asyncIterable=e=>{var t;return is.function_((t=e)===null||t===void 0?void 0:t[Symbol.asyncIterator])};is.generator=e=>{var t,r;return is.iterable(e)&&is.function_((t=e)===null||t===void 0?void 0:t.next)&&is.function_((r=e)===null||r===void 0?void 0:r.throw)};is.asyncGenerator=e=>is.asyncIterable(e)&&is.function_(e.next)&&is.function_(e.throw);is.nativePromise=e=>isObjectOfType(\"Promise\")(e);const hasPromiseAPI=e=>{var t,r;return is.function_((t=e)===null||t===void 0?void 0:t.then)&&is.function_((r=e)===null||r===void 0?void 0:r.catch)};is.promise=e=>is.nativePromise(e)||hasPromiseAPI(e);is.generatorFunction=isObjectOfType(\"GeneratorFunction\");is.asyncGeneratorFunction=e=>getObjectType(e)===\"AsyncGeneratorFunction\";is.asyncFunction=e=>getObjectType(e)===\"AsyncFunction\";is.boundFunction=e=>is.function_(e)&&!e.hasOwnProperty(\"prototype\");is.regExp=isObjectOfType(\"RegExp\");is.date=isObjectOfType(\"Date\");is.error=isObjectOfType(\"Error\");is.map=e=>isObjectOfType(\"Map\")(e);is.set=e=>isObjectOfType(\"Set\")(e);is.weakMap=e=>isObjectOfType(\"WeakMap\")(e);is.weakSet=e=>isObjectOfType(\"WeakSet\")(e);is.int8Array=isObjectOfType(\"Int8Array\");is.uint8Array=isObjectOfType(\"Uint8Array\");is.uint8ClampedArray=isObjectOfType(\"Uint8ClampedArray\");is.int16Array=isObjectOfType(\"Int16Array\");is.uint16Array=isObjectOfType(\"Uint16Array\");is.int32Array=isObjectOfType(\"Int32Array\");is.uint32Array=isObjectOfType(\"Uint32Array\");is.float32Array=isObjectOfType(\"Float32Array\");is.float64Array=isObjectOfType(\"Float64Array\");is.bigInt64Array=isObjectOfType(\"BigInt64Array\");is.bigUint64Array=isObjectOfType(\"BigUint64Array\");is.arrayBuffer=isObjectOfType(\"ArrayBuffer\");is.sharedArrayBuffer=isObjectOfType(\"SharedArrayBuffer\");is.dataView=isObjectOfType(\"DataView\");is.enumCase=(e,t)=>Object.values(t).includes(e);is.directInstanceOf=(e,t)=>Object.getPrototypeOf(e)===t.prototype;is.urlInstance=e=>isObjectOfType(\"URL\")(e);is.urlString=e=>{if(!is.string(e)){return false}try{new URL(e);return true}catch(e){return false}};is.truthy=e=>Boolean(e);is.falsy=e=>!e;is.nan=e=>Number.isNaN(e);is.primitive=e=>is.null_(e)||isPrimitiveTypeName(typeof e);is.integer=e=>Number.isInteger(e);is.safeInteger=e=>Number.isSafeInteger(e);is.plainObject=e=>{if(n.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.getPrototypeOf({})};is.typedArray=e=>isTypedArrayName(getObjectType(e));const isValidLength=e=>is.safeInteger(e)&&e>=0;is.arrayLike=e=>!is.nullOrUndefined(e)&&!is.function_(e)&&isValidLength(e.length);is.inRange=(e,t)=>{if(is.number(t)){return e>=Math.min(0,t)&&e<=Math.max(t,0)}if(is.array(t)&&t.length===2){return e>=Math.min(...t)&&e<=Math.max(...t)}throw new TypeError(`Invalid range: ${JSON.stringify(t)}`)};const a=1;const c=[\"innerHTML\",\"ownerDocument\",\"style\",\"attributes\",\"nodeValue\"];is.domElement=e=>is.object(e)&&e.nodeType===a&&is.string(e.nodeName)&&!is.plainObject(e)&&c.every((t=>t in e));is.observable=e=>{var t,r,s,o;if(!e){return false}if(e===((r=(t=e)[Symbol.observable])===null||r===void 0?void 0:r.call(t))){return true}if(e===((o=(s=e)[\"@@observable\"])===null||o===void 0?void 0:o.call(s))){return true}return false};is.nodeStream=e=>is.object(e)&&is.function_(e.pipe)&&!is.observable(e);is.infinite=e=>e===Infinity||e===-Infinity;const isAbsoluteMod2=e=>t=>is.integer(t)&&Math.abs(t%2)===e;is.evenInteger=isAbsoluteMod2(0);is.oddInteger=isAbsoluteMod2(1);is.emptyArray=e=>is.array(e)&&e.length===0;is.nonEmptyArray=e=>is.array(e)&&e.length>0;is.emptyString=e=>is.string(e)&&e.length===0;const isWhiteSpaceString=e=>is.string(e)&&!/\\S/.test(e);is.emptyStringOrWhitespace=e=>is.emptyString(e)||isWhiteSpaceString(e);is.nonEmptyString=e=>is.string(e)&&e.length>0;is.nonEmptyStringAndNotWhitespace=e=>is.string(e)&&!is.emptyStringOrWhitespace(e);is.emptyObject=e=>is.object(e)&&!is.map(e)&&!is.set(e)&&Object.keys(e).length===0;is.nonEmptyObject=e=>is.object(e)&&!is.map(e)&&!is.set(e)&&Object.keys(e).length>0;is.emptySet=e=>is.set(e)&&e.size===0;is.nonEmptySet=e=>is.set(e)&&e.size>0;is.emptyMap=e=>is.map(e)&&e.size===0;is.nonEmptyMap=e=>is.map(e)&&e.size>0;is.propertyKey=e=>is.any([is.string,is.number,is.symbol],e);is.formData=e=>isObjectOfType(\"FormData\")(e);is.urlSearchParams=e=>isObjectOfType(\"URLSearchParams\")(e);const predicateOnArray=(e,t,r)=>{if(!is.function_(t)){throw new TypeError(`Invalid predicate: ${JSON.stringify(t)}`)}if(r.length===0){throw new TypeError(\"Invalid number of values\")}return e.call(r,t)};is.any=(e,...t)=>{const r=is.array(e)?e:[e];return r.some((e=>predicateOnArray(Array.prototype.some,e,t)))};is.all=(e,...t)=>predicateOnArray(Array.prototype.every,e,t);const assertType=(e,t,r,s={})=>{if(!e){const{multipleValues:e}=s;const o=e?`received values of types ${[...new Set(r.map((e=>`\\`${is(e)}\\``)))].join(\", \")}`:`received value of type \\`${is(r)}\\``;throw new TypeError(`Expected value which is \\`${t}\\`, ${o}.`)}};t.assert={undefined:e=>assertType(is.undefined(e),\"undefined\",e),string:e=>assertType(is.string(e),\"string\",e),number:e=>assertType(is.number(e),\"number\",e),bigint:e=>assertType(is.bigint(e),\"bigint\",e),function_:e=>assertType(is.function_(e),\"Function\",e),null_:e=>assertType(is.null_(e),\"null\",e),class_:e=>assertType(is.class_(e),\"Class\",e),boolean:e=>assertType(is.boolean(e),\"boolean\",e),symbol:e=>assertType(is.symbol(e),\"symbol\",e),numericString:e=>assertType(is.numericString(e),\"string with a number\",e),array:(e,t)=>{const r=assertType;r(is.array(e),\"Array\",e);if(t){e.forEach(t)}},buffer:e=>assertType(is.buffer(e),\"Buffer\",e),blob:e=>assertType(is.blob(e),\"Blob\",e),nullOrUndefined:e=>assertType(is.nullOrUndefined(e),\"null or undefined\",e),object:e=>assertType(is.object(e),\"Object\",e),iterable:e=>assertType(is.iterable(e),\"Iterable\",e),asyncIterable:e=>assertType(is.asyncIterable(e),\"AsyncIterable\",e),generator:e=>assertType(is.generator(e),\"Generator\",e),asyncGenerator:e=>assertType(is.asyncGenerator(e),\"AsyncGenerator\",e),nativePromise:e=>assertType(is.nativePromise(e),\"native Promise\",e),promise:e=>assertType(is.promise(e),\"Promise\",e),generatorFunction:e=>assertType(is.generatorFunction(e),\"GeneratorFunction\",e),asyncGeneratorFunction:e=>assertType(is.asyncGeneratorFunction(e),\"AsyncGeneratorFunction\",e),asyncFunction:e=>assertType(is.asyncFunction(e),\"AsyncFunction\",e),boundFunction:e=>assertType(is.boundFunction(e),\"Function\",e),regExp:e=>assertType(is.regExp(e),\"RegExp\",e),date:e=>assertType(is.date(e),\"Date\",e),error:e=>assertType(is.error(e),\"Error\",e),map:e=>assertType(is.map(e),\"Map\",e),set:e=>assertType(is.set(e),\"Set\",e),weakMap:e=>assertType(is.weakMap(e),\"WeakMap\",e),weakSet:e=>assertType(is.weakSet(e),\"WeakSet\",e),int8Array:e=>assertType(is.int8Array(e),\"Int8Array\",e),uint8Array:e=>assertType(is.uint8Array(e),\"Uint8Array\",e),uint8ClampedArray:e=>assertType(is.uint8ClampedArray(e),\"Uint8ClampedArray\",e),int16Array:e=>assertType(is.int16Array(e),\"Int16Array\",e),uint16Array:e=>assertType(is.uint16Array(e),\"Uint16Array\",e),int32Array:e=>assertType(is.int32Array(e),\"Int32Array\",e),uint32Array:e=>assertType(is.uint32Array(e),\"Uint32Array\",e),float32Array:e=>assertType(is.float32Array(e),\"Float32Array\",e),float64Array:e=>assertType(is.float64Array(e),\"Float64Array\",e),bigInt64Array:e=>assertType(is.bigInt64Array(e),\"BigInt64Array\",e),bigUint64Array:e=>assertType(is.bigUint64Array(e),\"BigUint64Array\",e),arrayBuffer:e=>assertType(is.arrayBuffer(e),\"ArrayBuffer\",e),sharedArrayBuffer:e=>assertType(is.sharedArrayBuffer(e),\"SharedArrayBuffer\",e),dataView:e=>assertType(is.dataView(e),\"DataView\",e),enumCase:(e,t)=>assertType(is.enumCase(e,t),\"EnumCase\",e),urlInstance:e=>assertType(is.urlInstance(e),\"URL\",e),urlString:e=>assertType(is.urlString(e),\"string with a URL\",e),truthy:e=>assertType(is.truthy(e),\"truthy\",e),falsy:e=>assertType(is.falsy(e),\"falsy\",e),nan:e=>assertType(is.nan(e),\"NaN\",e),primitive:e=>assertType(is.primitive(e),\"primitive\",e),integer:e=>assertType(is.integer(e),\"integer\",e),safeInteger:e=>assertType(is.safeInteger(e),\"integer\",e),plainObject:e=>assertType(is.plainObject(e),\"plain object\",e),typedArray:e=>assertType(is.typedArray(e),\"TypedArray\",e),arrayLike:e=>assertType(is.arrayLike(e),\"array-like\",e),domElement:e=>assertType(is.domElement(e),\"HTMLElement\",e),observable:e=>assertType(is.observable(e),\"Observable\",e),nodeStream:e=>assertType(is.nodeStream(e),\"Node.js Stream\",e),infinite:e=>assertType(is.infinite(e),\"infinite number\",e),emptyArray:e=>assertType(is.emptyArray(e),\"empty array\",e),nonEmptyArray:e=>assertType(is.nonEmptyArray(e),\"non-empty array\",e),emptyString:e=>assertType(is.emptyString(e),\"empty string\",e),emptyStringOrWhitespace:e=>assertType(is.emptyStringOrWhitespace(e),\"empty string or whitespace\",e),nonEmptyString:e=>assertType(is.nonEmptyString(e),\"non-empty string\",e),nonEmptyStringAndNotWhitespace:e=>assertType(is.nonEmptyStringAndNotWhitespace(e),\"non-empty string and not whitespace\",e),emptyObject:e=>assertType(is.emptyObject(e),\"empty object\",e),nonEmptyObject:e=>assertType(is.nonEmptyObject(e),\"non-empty object\",e),emptySet:e=>assertType(is.emptySet(e),\"empty set\",e),nonEmptySet:e=>assertType(is.nonEmptySet(e),\"non-empty set\",e),emptyMap:e=>assertType(is.emptyMap(e),\"empty map\",e),nonEmptyMap:e=>assertType(is.nonEmptyMap(e),\"non-empty map\",e),propertyKey:e=>assertType(is.propertyKey(e),\"PropertyKey\",e),formData:e=>assertType(is.formData(e),\"FormData\",e),urlSearchParams:e=>assertType(is.urlSearchParams(e),\"URLSearchParams\",e),evenInteger:e=>assertType(is.evenInteger(e),\"even integer\",e),oddInteger:e=>assertType(is.oddInteger(e),\"odd integer\",e),directInstanceOf:(e,t)=>assertType(is.directInstanceOf(e,t),\"T\",e),inRange:(e,t)=>assertType(is.inRange(e,t),\"in range\",e),any:(e,...t)=>assertType(is.any(e,...t),\"predicate returns truthy for any value\",t,{multipleValues:true}),all:(e,...t)=>assertType(is.all(e,...t),\"predicate returns truthy for all values\",t,{multipleValues:true})};Object.defineProperties(is,{class:{value:is.class_},function:{value:is.function_},null:{value:is.null_}});Object.defineProperties(t.assert,{class:{value:t.assert.class_},function:{value:t.assert.function_},null:{value:t.assert.null_}});t[\"default\"]=is;e.exports=is;e.exports[\"default\"]=is;e.exports.assert=t.assert},8097:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(6214);const o=r(3837);const n=Number(process.versions.node.split(\".\")[0]);const timer=e=>{if(e.timings){return e.timings}const t={start:Date.now(),socket:undefined,lookup:undefined,connect:undefined,secureConnect:undefined,upload:undefined,response:undefined,end:undefined,error:undefined,abort:undefined,phases:{wait:undefined,dns:undefined,tcp:undefined,tls:undefined,request:undefined,firstByte:undefined,download:undefined,total:undefined}};e.timings=t;const handleError=e=>{const r=e.emit.bind(e);e.emit=(s,...o)=>{if(s===\"error\"){t.error=Date.now();t.phases.total=t.error-t.start;e.emit=r}return r(s,...o)}};handleError(e);const onAbort=()=>{t.abort=Date.now();if(!t.response||n>=13){t.phases.total=Date.now()-t.start}};e.prependOnceListener(\"abort\",onAbort);const onSocket=e=>{t.socket=Date.now();t.phases.wait=t.socket-t.start;if(o.types.isProxy(e)){return}const lookupListener=()=>{t.lookup=Date.now();t.phases.dns=t.lookup-t.socket};e.prependOnceListener(\"lookup\",lookupListener);s.default(e,{connect:()=>{t.connect=Date.now();if(t.lookup===undefined){e.removeListener(\"lookup\",lookupListener);t.lookup=t.connect;t.phases.dns=t.lookup-t.socket}t.phases.tcp=t.connect-t.lookup},secureConnect:()=>{t.secureConnect=Date.now();t.phases.tls=t.secureConnect-t.connect}})};if(e.socket){onSocket(e.socket)}else{e.prependOnceListener(\"socket\",onSocket)}const onUpload=()=>{var e;t.upload=Date.now();t.phases.request=t.upload-((e=t.secureConnect)!==null&&e!==void 0?e:t.connect)};const writableFinished=()=>{if(typeof e.writableFinished===\"boolean\"){return e.writableFinished}return e.finished&&e.outputSize===0&&(!e.socket||e.socket.writableLength===0)};if(writableFinished()){onUpload()}else{e.prependOnceListener(\"finish\",onUpload)}e.prependOnceListener(\"response\",(e=>{t.response=Date.now();t.phases.firstByte=t.response-t.upload;e.timings=t;handleError(e);e.prependOnceListener(\"end\",(()=>{t.end=Date.now();t.phases.download=t.end-t.response;t.phases.total=t.end-t.start}));e.prependOnceListener(\"aborted\",onAbort)}));return t};t[\"default\"]=timer;e.exports=timer;e.exports[\"default\"]=timer},2286:(e,t,r)=>{\"use strict\";const{V4MAPPED:s,ADDRCONFIG:o,ALL:n,promises:{Resolver:i},lookup:a}=r(9523);const{promisify:c}=r(3837);const u=r(2037);const l=Symbol(\"cacheableLookupCreateConnection\");const h=Symbol(\"cacheableLookupInstance\");const d=Symbol(\"expires\");const p=typeof n===\"number\";const verifyAgent=e=>{if(!(e&&typeof e.createConnection===\"function\")){throw new Error(\"Expected an Agent instance as the first argument\")}};const map4to6=e=>{for(const t of e){if(t.family===6){continue}t.address=`::ffff:${t.address}`;t.family=6}};const getIfaceInfo=()=>{let e=false;let t=false;for(const r of Object.values(u.networkInterfaces())){for(const s of r){if(s.internal){continue}if(s.family===\"IPv6\"){t=true}else{e=true}if(e&&t){return{has4:e,has6:t}}}}return{has4:e,has6:t}};const isIterable=e=>Symbol.iterator in e;const m={ttl:true};const y={all:true};class CacheableLookup{constructor({cache:e=new Map,maxTtl:t=Infinity,fallbackDuration:r=3600,errorTtl:s=.15,resolver:o=new i,lookup:n=a}={}){this.maxTtl=t;this.errorTtl=s;this._cache=e;this._resolver=o;this._dnsLookup=c(n);if(this._resolver instanceof i){this._resolve4=this._resolver.resolve4.bind(this._resolver);this._resolve6=this._resolver.resolve6.bind(this._resolver)}else{this._resolve4=c(this._resolver.resolve4.bind(this._resolver));this._resolve6=c(this._resolver.resolve6.bind(this._resolver))}this._iface=getIfaceInfo();this._pending={};this._nextRemovalTime=false;this._hostnamesToFallback=new Set;if(r<1){this._fallback=false}else{this._fallback=true;const e=setInterval((()=>{this._hostnamesToFallback.clear()}),r*1e3);if(e.unref){e.unref()}}this.lookup=this.lookup.bind(this);this.lookupAsync=this.lookupAsync.bind(this)}set servers(e){this.clear();this._resolver.setServers(e)}get servers(){return this._resolver.getServers()}lookup(e,t,r){if(typeof t===\"function\"){r=t;t={}}else if(typeof t===\"number\"){t={family:t}}if(!r){throw new Error(\"Callback must be a function.\")}this.lookupAsync(e,t).then((e=>{if(t.all){r(null,e)}else{r(null,e.address,e.family,e.expires,e.ttl)}}),r)}async lookupAsync(e,t={}){if(typeof t===\"number\"){t={family:t}}let r=await this.query(e);if(t.family===6){const e=r.filter((e=>e.family===6));if(t.hints&s){if(p&&t.hints&n||e.length===0){map4to6(r)}else{r=e}}else{r=e}}else if(t.family===4){r=r.filter((e=>e.family===4))}if(t.hints&o){const{_iface:e}=this;r=r.filter((t=>t.family===6?e.has6:e.has4))}if(r.length===0){const t=new Error(`cacheableLookup ENOTFOUND ${e}`);t.code=\"ENOTFOUND\";t.hostname=e;throw t}if(t.all){return r}return r[0]}async query(e){let t=await this._cache.get(e);if(!t){const r=this._pending[e];if(r){t=await r}else{const r=this.queryAndCache(e);this._pending[e]=r;try{t=await r}finally{delete this._pending[e]}}}t=t.map((e=>({...e})));return t}async _resolve(e){const wrap=async e=>{try{return await e}catch(e){if(e.code===\"ENODATA\"||e.code===\"ENOTFOUND\"){return[]}throw e}};const[t,r]=await Promise.all([this._resolve4(e,m),this._resolve6(e,m)].map((e=>wrap(e))));let s=0;let o=0;let n=0;const i=Date.now();for(const e of t){e.family=4;e.expires=i+e.ttl*1e3;s=Math.max(s,e.ttl)}for(const e of r){e.family=6;e.expires=i+e.ttl*1e3;o=Math.max(o,e.ttl)}if(t.length>0){if(r.length>0){n=Math.min(s,o)}else{n=s}}else{n=o}return{entries:[...t,...r],cacheTtl:n}}async _lookup(e){try{const t=await this._dnsLookup(e,{all:true});return{entries:t,cacheTtl:0}}catch(e){return{entries:[],cacheTtl:0}}}async _set(e,t,r){if(this.maxTtl>0&&r>0){r=Math.min(r,this.maxTtl)*1e3;t[d]=Date.now()+r;try{await this._cache.set(e,t,r)}catch(e){this.lookupAsync=async()=>{const t=new Error(\"Cache Error. Please recreate the CacheableLookup instance.\");t.cause=e;throw t}}if(isIterable(this._cache)){this._tick(r)}}}async queryAndCache(e){if(this._hostnamesToFallback.has(e)){return this._dnsLookup(e,y)}let t=await this._resolve(e);if(t.entries.length===0&&this._fallback){t=await this._lookup(e);if(t.entries.length!==0){this._hostnamesToFallback.add(e)}}const r=t.entries.length===0?this.errorTtl:t.cacheTtl;await this._set(e,t.entries,r);return t.entries}_tick(e){const t=this._nextRemovalTime;if(!t||e<t){clearTimeout(this._removalTimeout);this._nextRemovalTime=e;this._removalTimeout=setTimeout((()=>{this._nextRemovalTime=false;let e=Infinity;const t=Date.now();for(const[r,s]of this._cache){const o=s[d];if(t>=o){this._cache.delete(r)}else if(o<e){e=o}}if(e!==Infinity){this._tick(e-t)}}),e);if(this._removalTimeout.unref){this._removalTimeout.unref()}}}install(e){verifyAgent(e);if(l in e){throw new Error(\"CacheableLookup has been already installed\")}e[l]=e.createConnection;e[h]=this;e.createConnection=(t,r)=>{if(!(\"lookup\"in t)){t.lookup=this.lookup}return e[l](t,r)}}uninstall(e){verifyAgent(e);if(e[l]){if(e[h]!==this){throw new Error(\"The agent is not owned by this CacheableLookup instance\")}e.createConnection=e[l];delete e[l];delete e[h]}}updateInterfaceInfo(){const{_iface:e}=this;this._iface=getIfaceInfo();if(e.has4&&!this._iface.has4||e.has6&&!this._iface.has6){this._cache.clear()}}clear(e){if(e){this._cache.delete(e);return}this._cache.clear()}}e.exports=CacheableLookup;e.exports[\"default\"]=CacheableLookup},8116:(e,t,r)=>{\"use strict\";const s=r(2361);const o=r(7310);const n=r(7952);const i=r(1766);const a=r(1002);const c=r(9004);const u=r(9662);const l=r(1312);const h=r(1531);class CacheableRequest{constructor(e,t){if(typeof e!==\"function\"){throw new TypeError(\"Parameter `request` must be a function\")}this.cache=new h({uri:typeof t===\"string\"&&t,store:typeof t!==\"string\"&&t,namespace:\"cacheable-request\"});return this.createCacheableRequest(e)}createCacheableRequest(e){return(t,r)=>{let h;if(typeof t===\"string\"){h=normalizeUrlObject(o.parse(t));t={}}else if(t instanceof o.URL){h=normalizeUrlObject(o.parse(t.toString()));t={}}else{const[e,...r]=(t.path||\"\").split(\"?\");const s=r.length>0?`?${r.join(\"?\")}`:\"\";h=normalizeUrlObject({...t,pathname:e,search:s})}t={headers:{},method:\"GET\",cache:true,strictTtl:false,automaticFailover:false,...t,...urlObjectToRequestOptions(h)};t.headers=u(t.headers);const d=new s;const p=n(o.format(h),{stripWWW:false,removeTrailingSlash:false,stripAuthentication:false});const m=`${t.method}:${p}`;let y=false;let g=false;const makeRequest=t=>{g=true;let s=false;let o;const n=new Promise((e=>{o=()=>{if(!s){s=true;e()}}}));const handler=e=>{if(y&&!t.forceRefresh){e.status=e.statusCode;const r=a.fromObject(y.cachePolicy).revalidatedPolicy(t,e);if(!r.modified){const t=r.policy.responseHeaders();e=new c(y.statusCode,t,y.body,y.url);e.cachePolicy=r.policy;e.fromCache=true}}if(!e.fromCache){e.cachePolicy=new a(t,e,t);e.fromCache=false}let o;if(t.cache&&e.cachePolicy.storable()){o=l(e);(async()=>{try{const r=i.buffer(e);await Promise.race([n,new Promise((t=>e.once(\"end\",t)))]);if(s){return}const o=await r;const a={cachePolicy:e.cachePolicy.toObject(),url:e.url,statusCode:e.fromCache?y.statusCode:e.statusCode,body:o};let c=t.strictTtl?e.cachePolicy.timeToLive():undefined;if(t.maxTtl){c=c?Math.min(c,t.maxTtl):t.maxTtl}await this.cache.set(m,a,c)}catch(e){d.emit(\"error\",new CacheableRequest.CacheError(e))}})()}else if(t.cache&&y){(async()=>{try{await this.cache.delete(m)}catch(e){d.emit(\"error\",new CacheableRequest.CacheError(e))}})()}d.emit(\"response\",o||e);if(typeof r===\"function\"){r(o||e)}};try{const r=e(t,handler);r.once(\"error\",o);r.once(\"abort\",o);d.emit(\"request\",r)}catch(e){d.emit(\"error\",new CacheableRequest.RequestError(e))}};(async()=>{const get=async e=>{await Promise.resolve();const t=e.cache?await this.cache.get(m):undefined;if(typeof t===\"undefined\"){return makeRequest(e)}const s=a.fromObject(t.cachePolicy);if(s.satisfiesWithoutRevalidation(e)&&!e.forceRefresh){const e=s.responseHeaders();const o=new c(t.statusCode,e,t.body,t.url);o.cachePolicy=s;o.fromCache=true;d.emit(\"response\",o);if(typeof r===\"function\"){r(o)}}else{y=t;e.headers=s.revalidationHeaders(e);makeRequest(e)}};const errorHandler=e=>d.emit(\"error\",new CacheableRequest.CacheError(e));this.cache.once(\"error\",errorHandler);d.on(\"response\",(()=>this.cache.removeListener(\"error\",errorHandler)));try{await get(t)}catch(e){if(t.automaticFailover&&!g){makeRequest(t)}d.emit(\"error\",new CacheableRequest.CacheError(e))}})();return d}}}function urlObjectToRequestOptions(e){const t={...e};t.path=`${e.pathname||\"/\"}${e.search||\"\"}`;delete t.pathname;delete t.search;return t}function normalizeUrlObject(e){return{protocol:e.protocol,auth:e.auth,hostname:e.hostname||e.host||\"localhost\",port:e.port,pathname:e.pathname,search:e.search}}CacheableRequest.RequestError=class extends Error{constructor(e){super(e.message);this.name=\"RequestError\";Object.assign(this,e)}};CacheableRequest.CacheError=class extends Error{constructor(e){super(e.message);this.name=\"CacheError\";Object.assign(this,e)}};e.exports=CacheableRequest},9372:e=>{\"use strict\";const t=[\"destroy\",\"setTimeout\",\"socket\",\"headers\",\"trailers\",\"rawHeaders\",\"statusCode\",\"httpVersion\",\"httpVersionMinor\",\"httpVersionMajor\",\"rawTrailers\",\"statusMessage\"];e.exports=(e,r)=>{const s=new Set(Object.keys(e).concat(t));for(const t of s){if(t in r){continue}r[t]=typeof e[t]===\"function\"?e[t].bind(e):e[t]}}},1312:(e,t,r)=>{\"use strict\";const s=r(2781).PassThrough;const o=r(9372);const cloneResponse=e=>{if(!(e&&e.pipe)){throw new TypeError(\"Parameter `response` must be a response stream.\")}const t=new s;o(e,t);return e.pipe(t)};e.exports=cloneResponse},2391:(e,t,r)=>{\"use strict\";const{Transform:s,PassThrough:o}=r(2781);const n=r(9796);const i=r(2610);e.exports=e=>{const t=(e.headers[\"content-encoding\"]||\"\").toLowerCase();if(![\"gzip\",\"deflate\",\"br\"].includes(t)){return e}const r=t===\"br\";if(r&&typeof n.createBrotliDecompress!==\"function\"){e.destroy(new Error(\"Brotli is not supported on Node.js < 12\"));return e}let a=true;const c=new s({transform(e,t,r){a=false;r(null,e)},flush(e){e()}});const u=new o({autoDestroy:false,destroy(t,r){e.destroy();r(t)}});const l=r?n.createBrotliDecompress():n.createUnzip();l.once(\"error\",(t=>{if(a&&!e.readable){u.end();return}u.destroy(t)}));i(e,u);e.pipe(c).pipe(l).pipe(u);return u}},6214:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});function isTLSSocket(e){return e.encrypted}const deferToConnect=(e,t)=>{let r;if(typeof t===\"function\"){const e=t;r={connect:e}}else{r=t}const s=typeof r.connect===\"function\";const o=typeof r.secureConnect===\"function\";const n=typeof r.close===\"function\";const onConnect=()=>{if(s){r.connect()}if(isTLSSocket(e)&&o){if(e.authorized){r.secureConnect()}else if(!e.authorizationError){e.once(\"secureConnect\",r.secureConnect)}}if(n){e.once(\"close\",r.close)}};if(e.writable&&!e.connecting){onConnect()}else if(e.connecting){e.once(\"connect\",onConnect)}else if(e.destroyed&&n){r.close(e._hadError)}};t[\"default\"]=deferToConnect;e.exports=deferToConnect;e.exports[\"default\"]=deferToConnect},1205:(e,t,r)=>{var s=r(1223);var noop=function(){};var isRequest=function(e){return e.setHeader&&typeof e.abort===\"function\"};var isChildProcess=function(e){return e.stdio&&Array.isArray(e.stdio)&&e.stdio.length===3};var eos=function(e,t,r){if(typeof t===\"function\")return eos(e,null,t);if(!t)t={};r=s(r||noop);var o=e._writableState;var n=e._readableState;var i=t.readable||t.readable!==false&&e.readable;var a=t.writable||t.writable!==false&&e.writable;var c=false;var onlegacyfinish=function(){if(!e.writable)onfinish()};var onfinish=function(){a=false;if(!i)r.call(e)};var onend=function(){i=false;if(!a)r.call(e)};var onexit=function(t){r.call(e,t?new Error(\"exited with error code: \"+t):null)};var onerror=function(t){r.call(e,t)};var onclose=function(){process.nextTick(onclosenexttick)};var onclosenexttick=function(){if(c)return;if(i&&!(n&&(n.ended&&!n.destroyed)))return r.call(e,new Error(\"premature close\"));if(a&&!(o&&(o.ended&&!o.destroyed)))return r.call(e,new Error(\"premature close\"))};var onrequest=function(){e.req.on(\"finish\",onfinish)};if(isRequest(e)){e.on(\"complete\",onfinish);e.on(\"abort\",onclose);if(e.req)onrequest();else e.on(\"request\",onrequest)}else if(a&&!o){e.on(\"end\",onlegacyfinish);e.on(\"close\",onlegacyfinish)}if(isChildProcess(e))e.on(\"exit\",onexit);e.on(\"end\",onend);e.on(\"finish\",onfinish);if(t.error!==false)e.on(\"error\",onerror);e.on(\"close\",onclose);return function(){c=true;e.removeListener(\"complete\",onfinish);e.removeListener(\"abort\",onclose);e.removeListener(\"request\",onrequest);if(e.req)e.req.removeListener(\"finish\",onfinish);e.removeListener(\"end\",onlegacyfinish);e.removeListener(\"close\",onlegacyfinish);e.removeListener(\"finish\",onfinish);e.removeListener(\"exit\",onexit);e.removeListener(\"end\",onend);e.removeListener(\"error\",onerror);e.removeListener(\"close\",onclose)}};e.exports=eos},1585:(e,t,r)=>{\"use strict\";const{PassThrough:s}=r(2781);e.exports=e=>{e={...e};const{array:t}=e;let{encoding:r}=e;const o=r===\"buffer\";let n=false;if(t){n=!(r||o)}else{r=r||\"utf8\"}if(o){r=null}const i=new s({objectMode:n});if(r){i.setEncoding(r)}let a=0;const c=[];i.on(\"data\",(e=>{c.push(e);if(n){a=c.length}else{a+=e.length}}));i.getBufferedValue=()=>{if(t){return c}return o?Buffer.concat(c,a):c.join(\"\")};i.getBufferedLength=()=>a;return i}},1766:(e,t,r)=>{\"use strict\";const{constants:s}=r(4300);const o=r(8341);const n=r(1585);class MaxBufferError extends Error{constructor(){super(\"maxBuffer exceeded\");this.name=\"MaxBufferError\"}}async function getStream(e,t){if(!e){return Promise.reject(new Error(\"Expected a stream\"))}t={maxBuffer:Infinity,...t};const{maxBuffer:r}=t;let i;await new Promise(((a,c)=>{const rejectPromise=e=>{if(e&&i.getBufferedLength()<=s.MAX_LENGTH){e.bufferedData=i.getBufferedValue()}c(e)};i=o(e,n(t),(e=>{if(e){rejectPromise(e);return}a()}));i.on(\"data\",(()=>{if(i.getBufferedLength()>r){rejectPromise(new MaxBufferError)}}))}));return i.getBufferedValue()}e.exports=getStream;e.exports[\"default\"]=getStream;e.exports.buffer=(e,t)=>getStream(e,{...t,encoding:\"buffer\"});e.exports.array=(e,t)=>getStream(e,{...t,array:true});e.exports.MaxBufferError=MaxBufferError},6457:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(4597);function createRejection(e,...t){const r=(async()=>{if(e instanceof s.RequestError){try{for(const r of t){if(r){for(const t of r){e=await t(e)}}}}catch(t){e=t}}throw e})();const returnPromise=()=>r;r.json=returnPromise;r.text=returnPromise;r.buffer=returnPromise;r.on=returnPromise;return r}t[\"default\"]=createRejection},6056:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});const n=r(2361);const i=r(7678);const a=r(9072);const c=r(4597);const u=r(8220);const l=r(94);const h=r(3021);const d=r(4500);const p=r(9298);const m=[\"request\",\"response\",\"redirect\",\"uploadProgress\",\"downloadProgress\"];function asPromise(e){let t;let r;const s=new n.EventEmitter;const o=new a(((n,a,y)=>{const makeRequest=g=>{const b=new l.default(undefined,e);b.retryCount=g;b._noPipe=true;y((()=>b.destroy()));y.shouldReject=false;y((()=>a(new c.CancelError(b))));t=b;b.once(\"response\",(async e=>{var t;e.retryCount=g;if(e.request.aborted){return}let s;try{s=await d.default(b);e.rawBody=s}catch(e){return}if(b._isAboutToError){return}const o=((t=e.headers[\"content-encoding\"])!==null&&t!==void 0?t:\"\").toLowerCase();const i=[\"gzip\",\"deflate\",\"br\"].includes(o);const{options:a}=b;if(i&&!a.decompress){e.body=s}else{try{e.body=u.default(e,a.responseType,a.parseJson,a.encoding)}catch(t){e.body=s.toString();if(p.isResponseOk(e)){b._beforeError(t);return}}}try{for(const[t,r]of a.hooks.afterResponse.entries()){e=await r(e,(async e=>{const r=l.default.normalizeArguments(undefined,{...e,retry:{calculateDelay:()=>0},throwHttpErrors:false,resolveBodyOnly:false},a);r.hooks.afterResponse=r.hooks.afterResponse.slice(0,t);for(const e of r.hooks.beforeRetry){await e(r)}const s=asPromise(r);y((()=>{s.catch((()=>{}));s.cancel()}));return s}))}}catch(e){b._beforeError(new c.RequestError(e.message,e,b));return}r=e;if(!p.isResponseOk(e)){b._beforeError(new c.HTTPError(e));return}b.destroy();n(b.options.resolveBodyOnly?e.body:e)}));const onError=e=>{if(o.isCanceled){return}const{options:t}=b;if(e instanceof c.HTTPError&&!t.throwHttpErrors){const{response:t}=e;n(b.options.resolveBodyOnly?t.body:t);return}a(e)};b.once(\"error\",onError);const _=b.options.body;b.once(\"retry\",((e,t)=>{var r,s;if(_===((r=t.request)===null||r===void 0?void 0:r.options.body)&&i.default.nodeStream((s=t.request)===null||s===void 0?void 0:s.options.body)){onError(t);return}makeRequest(e)}));h.default(b,s,m)};makeRequest(0)}));o.on=(e,t)=>{s.on(e,t);return o};const shortcut=e=>{const t=(async()=>{await o;const{options:t}=r.request;return u.default(r,e,t.parseJson,t.encoding)})();Object.defineProperties(t,Object.getOwnPropertyDescriptors(o));return t};o.json=()=>{const{headers:e}=t.options;if(!t.writableFinished&&e.accept===undefined){e.accept=\"application/json\"}return shortcut(\"json\")};o.buffer=()=>shortcut(\"buffer\");o.text=()=>shortcut(\"text\");return o}t[\"default\"]=asPromise;o(r(4597),t)},1048:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);const normalizeArguments=(e,t)=>{if(s.default.null_(e.encoding)){throw new TypeError(\"To get a Buffer, set `options.responseType` to `buffer` instead\")}s.assert.any([s.default.string,s.default.undefined],e.encoding);s.assert.any([s.default.boolean,s.default.undefined],e.resolveBodyOnly);s.assert.any([s.default.boolean,s.default.undefined],e.methodRewriting);s.assert.any([s.default.boolean,s.default.undefined],e.isStream);s.assert.any([s.default.string,s.default.undefined],e.responseType);if(e.responseType===undefined){e.responseType=\"text\"}const{retry:r}=e;if(t){e.retry={...t.retry}}else{e.retry={calculateDelay:e=>e.computedValue,limit:0,methods:[],statusCodes:[],errorCodes:[],maxRetryAfter:undefined}}if(s.default.object(r)){e.retry={...e.retry,...r};e.retry.methods=[...new Set(e.retry.methods.map((e=>e.toUpperCase())))];e.retry.statusCodes=[...new Set(e.retry.statusCodes)];e.retry.errorCodes=[...new Set(e.retry.errorCodes)]}else if(s.default.number(r)){e.retry.limit=r}if(s.default.undefined(e.retry.maxRetryAfter)){e.retry.maxRetryAfter=Math.min(...[e.timeout.request,e.timeout.connect].filter(s.default.number))}if(s.default.object(e.pagination)){if(t){e.pagination={...t.pagination,...e.pagination}}const{pagination:r}=e;if(!s.default.function_(r.transform)){throw new Error(\"`options.pagination.transform` must be implemented\")}if(!s.default.function_(r.shouldContinue)){throw new Error(\"`options.pagination.shouldContinue` must be implemented\")}if(!s.default.function_(r.filter)){throw new TypeError(\"`options.pagination.filter` must be implemented\")}if(!s.default.function_(r.paginate)){throw new Error(\"`options.pagination.paginate` must be implemented\")}}if(e.responseType===\"json\"&&e.headers.accept===undefined){e.headers.accept=\"application/json\"}return e};t[\"default\"]=normalizeArguments},8220:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(4597);const parseBody=(e,t,r,o)=>{const{rawBody:n}=e;try{if(t===\"text\"){return n.toString(o)}if(t===\"json\"){return n.length===0?\"\":r(n.toString())}if(t===\"buffer\"){return n}throw new s.ParseError({message:`Unknown body type '${t}'`,name:\"Error\"},e)}catch(t){throw new s.ParseError(t,e)}};t[\"default\"]=parseBody},4597:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});t.CancelError=t.ParseError=void 0;const n=r(94);class ParseError extends n.RequestError{constructor(e,t){const{options:r}=t.request;super(`${e.message} in \"${r.url.toString()}\"`,e,t.request);this.name=\"ParseError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_BODY_PARSE_FAILURE\":this.code}}t.ParseError=ParseError;class CancelError extends n.RequestError{constructor(e){super(\"Promise was canceled\",{},e);this.name=\"CancelError\";this.code=\"ERR_CANCELED\"}get isCanceled(){return true}}t.CancelError=CancelError;o(r(94),t)},3462:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.retryAfterStatusCodes=void 0;t.retryAfterStatusCodes=new Set([413,429,503]);const calculateRetryDelay=({attemptCount:e,retryOptions:t,error:r,retryAfter:s})=>{if(e>t.limit){return 0}const o=t.methods.includes(r.options.method);const n=t.errorCodes.includes(r.code);const i=r.response&&t.statusCodes.includes(r.response.statusCode);if(!o||!n&&!i){return 0}if(r.response){if(s){if(t.maxRetryAfter===undefined||s>t.maxRetryAfter){return 0}return s}if(r.response.statusCode===413){return 0}}const a=Math.random()*100;return 2**(e-1)*1e3+a};t[\"default\"]=calculateRetryDelay},94:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.UnsupportedProtocolError=t.ReadError=t.TimeoutError=t.UploadError=t.CacheError=t.HTTPError=t.MaxRedirectsError=t.RequestError=t.setNonEnumerableProperties=t.knownHookEvents=t.withoutBody=t.kIsNormalizedAlready=void 0;const s=r(3837);const o=r(2781);const n=r(7147);const i=r(7310);const a=r(3685);const c=r(3685);const u=r(5687);const l=r(8097);const h=r(2286);const d=r(8116);const p=r(2391);const m=r(4645);const y=r(9662);const g=r(7678);const b=r(4564);const _=r(40);const w=r(3021);const v=r(2454);const E=r(8026);const S=r(9219);const x=r(7288);const R=r(4500);const k=r(4993);const T=r(9298);const P=r(397);const C=r(1048);const A=r(3462);let O;const j=Symbol(\"request\");const q=Symbol(\"response\");const H=Symbol(\"responseSize\");const L=Symbol(\"downloadedSize\");const I=Symbol(\"bodySize\");const U=Symbol(\"uploadedSize\");const M=Symbol(\"serverResponsesPiped\");const N=Symbol(\"unproxyEvents\");const D=Symbol(\"isFromCache\");const z=Symbol(\"cancelTimeouts\");const $=Symbol(\"startedReading\");const B=Symbol(\"stopReading\");const F=Symbol(\"triggerRead\");const W=Symbol(\"body\");const V=Symbol(\"jobs\");const G=Symbol(\"originalResponse\");const J=Symbol(\"retryTimeout\");t.kIsNormalizedAlready=Symbol(\"isNormalizedAlready\");const K=g.default.string(process.versions.brotli);t.withoutBody=new Set([\"GET\",\"HEAD\"]);t.knownHookEvents=[\"init\",\"beforeRequest\",\"beforeRedirect\",\"beforeError\",\"beforeRetry\",\"afterResponse\"];function validateSearchParameters(e){for(const t in e){const r=e[t];if(!g.default.string(r)&&!g.default.number(r)&&!g.default.boolean(r)&&!g.default.null_(r)&&!g.default.undefined(r)){throw new TypeError(`The \\`searchParams\\` value '${String(r)}' must be a string, number, boolean or null`)}}}function isClientRequest(e){return g.default.object(e)&&!(\"statusCode\"in e)}const Q=new x.default;const waitForOpenFile=async e=>new Promise(((t,r)=>{const onError=e=>{r(e)};if(!e.pending){t()}e.once(\"error\",onError);e.once(\"ready\",(()=>{e.off(\"error\",onError);t()}))}));const Z=new Set([300,301,302,303,304,307,308]);const X=[\"context\",\"body\",\"json\",\"form\"];t.setNonEnumerableProperties=(e,t)=>{const r={};for(const t of e){if(!t){continue}for(const e of X){if(!(e in t)){continue}r[e]={writable:true,configurable:true,enumerable:false,value:t[e]}}}Object.defineProperties(t,r)};class RequestError extends Error{constructor(e,t,r){var s,o;super(e);Error.captureStackTrace(this,this.constructor);this.name=\"RequestError\";this.code=(s=t.code)!==null&&s!==void 0?s:\"ERR_GOT_REQUEST_ERROR\";if(r instanceof Request){Object.defineProperty(this,\"request\",{enumerable:false,value:r});Object.defineProperty(this,\"response\",{enumerable:false,value:r[q]});Object.defineProperty(this,\"options\",{enumerable:false,value:r.options})}else{Object.defineProperty(this,\"options\",{enumerable:false,value:r})}this.timings=(o=this.request)===null||o===void 0?void 0:o.timings;if(g.default.string(t.stack)&&g.default.string(this.stack)){const e=this.stack.indexOf(this.message)+this.message.length;const r=this.stack.slice(e).split(\"\\n\").reverse();const s=t.stack.slice(t.stack.indexOf(t.message)+t.message.length).split(\"\\n\").reverse();while(s.length!==0&&s[0]===r[0]){r.shift()}this.stack=`${this.stack.slice(0,e)}${r.reverse().join(\"\\n\")}${s.reverse().join(\"\\n\")}`}}}t.RequestError=RequestError;class MaxRedirectsError extends RequestError{constructor(e){super(`Redirected ${e.options.maxRedirects} times. Aborting.`,{},e);this.name=\"MaxRedirectsError\";this.code=\"ERR_TOO_MANY_REDIRECTS\"}}t.MaxRedirectsError=MaxRedirectsError;class HTTPError extends RequestError{constructor(e){super(`Response code ${e.statusCode} (${e.statusMessage})`,{},e.request);this.name=\"HTTPError\";this.code=\"ERR_NON_2XX_3XX_RESPONSE\"}}t.HTTPError=HTTPError;class CacheError extends RequestError{constructor(e,t){super(e.message,e,t);this.name=\"CacheError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_CACHE_ACCESS\":this.code}}t.CacheError=CacheError;class UploadError extends RequestError{constructor(e,t){super(e.message,e,t);this.name=\"UploadError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_UPLOAD\":this.code}}t.UploadError=UploadError;class TimeoutError extends RequestError{constructor(e,t,r){super(e.message,e,r);this.name=\"TimeoutError\";this.event=e.event;this.timings=t}}t.TimeoutError=TimeoutError;class ReadError extends RequestError{constructor(e,t){super(e.message,e,t);this.name=\"ReadError\";this.code=this.code===\"ERR_GOT_REQUEST_ERROR\"?\"ERR_READING_RESPONSE_STREAM\":this.code}}t.ReadError=ReadError;class UnsupportedProtocolError extends RequestError{constructor(e){super(`Unsupported protocol \"${e.url.protocol}\"`,{},e);this.name=\"UnsupportedProtocolError\";this.code=\"ERR_UNSUPPORTED_PROTOCOL\"}}t.UnsupportedProtocolError=UnsupportedProtocolError;const Y=[\"socket\",\"connect\",\"continue\",\"information\",\"upgrade\",\"timeout\"];class Request extends o.Duplex{constructor(e,r={},s){super({autoDestroy:false,highWaterMark:0});this[L]=0;this[U]=0;this.requestInitialized=false;this[M]=new Set;this.redirects=[];this[B]=false;this[F]=false;this[V]=[];this.retryCount=0;this._progressCallbacks=[];const unlockWrite=()=>this._unlockWrite();const lockWrite=()=>this._lockWrite();this.on(\"pipe\",(e=>{e.prependListener(\"data\",unlockWrite);e.on(\"data\",lockWrite);e.prependListener(\"end\",unlockWrite);e.on(\"end\",lockWrite)}));this.on(\"unpipe\",(e=>{e.off(\"data\",unlockWrite);e.off(\"data\",lockWrite);e.off(\"end\",unlockWrite);e.off(\"end\",lockWrite)}));this.on(\"pipe\",(e=>{if(e instanceof c.IncomingMessage){this.options.headers={...e.headers,...this.options.headers}}}));const{json:o,body:i,form:a}=r;if(o||i||a){this._lockWrite()}if(t.kIsNormalizedAlready in r){this.options=r}else{try{this.options=this.constructor.normalizeArguments(e,r,s)}catch(e){if(g.default.nodeStream(r.body)){r.body.destroy()}this.destroy(e);return}}(async()=>{var e;try{if(this.options.body instanceof n.ReadStream){await waitForOpenFile(this.options.body)}const{url:t}=this.options;if(!t){throw new TypeError(\"Missing `url` property\")}this.requestUrl=t.toString();decodeURI(this.requestUrl);await this._finalizeBody();await this._makeRequest();if(this.destroyed){(e=this[j])===null||e===void 0?void 0:e.destroy();return}for(const e of this[V]){e()}this[V].length=0;this.requestInitialized=true}catch(e){if(e instanceof RequestError){this._beforeError(e);return}if(!this.destroyed){this.destroy(e)}}})()}static normalizeArguments(e,r,o){var n,a,c,u,l;const p=r;if(g.default.object(e)&&!g.default.urlInstance(e)){r={...o,...e,...r}}else{if(e&&r&&r.url!==undefined){throw new TypeError(\"The `url` option is mutually exclusive with the `input` argument\")}r={...o,...r};if(e!==undefined){r.url=e}if(g.default.urlInstance(r.url)){r.url=new i.URL(r.url.toString())}}if(r.cache===false){r.cache=undefined}if(r.dnsCache===false){r.dnsCache=undefined}g.assert.any([g.default.string,g.default.undefined],r.method);g.assert.any([g.default.object,g.default.undefined],r.headers);g.assert.any([g.default.string,g.default.urlInstance,g.default.undefined],r.prefixUrl);g.assert.any([g.default.object,g.default.undefined],r.cookieJar);g.assert.any([g.default.object,g.default.string,g.default.undefined],r.searchParams);g.assert.any([g.default.object,g.default.string,g.default.undefined],r.cache);g.assert.any([g.default.object,g.default.number,g.default.undefined],r.timeout);g.assert.any([g.default.object,g.default.undefined],r.context);g.assert.any([g.default.object,g.default.undefined],r.hooks);g.assert.any([g.default.boolean,g.default.undefined],r.decompress);g.assert.any([g.default.boolean,g.default.undefined],r.ignoreInvalidCookies);g.assert.any([g.default.boolean,g.default.undefined],r.followRedirect);g.assert.any([g.default.number,g.default.undefined],r.maxRedirects);g.assert.any([g.default.boolean,g.default.undefined],r.throwHttpErrors);g.assert.any([g.default.boolean,g.default.undefined],r.http2);g.assert.any([g.default.boolean,g.default.undefined],r.allowGetBody);g.assert.any([g.default.string,g.default.undefined],r.localAddress);g.assert.any([k.isDnsLookupIpVersion,g.default.undefined],r.dnsLookupIpVersion);g.assert.any([g.default.object,g.default.undefined],r.https);g.assert.any([g.default.boolean,g.default.undefined],r.rejectUnauthorized);if(r.https){g.assert.any([g.default.boolean,g.default.undefined],r.https.rejectUnauthorized);g.assert.any([g.default.function_,g.default.undefined],r.https.checkServerIdentity);g.assert.any([g.default.string,g.default.object,g.default.array,g.default.undefined],r.https.certificateAuthority);g.assert.any([g.default.string,g.default.object,g.default.array,g.default.undefined],r.https.key);g.assert.any([g.default.string,g.default.object,g.default.array,g.default.undefined],r.https.certificate);g.assert.any([g.default.string,g.default.undefined],r.https.passphrase);g.assert.any([g.default.string,g.default.buffer,g.default.array,g.default.undefined],r.https.pfx)}g.assert.any([g.default.object,g.default.undefined],r.cacheOptions);if(g.default.string(r.method)){r.method=r.method.toUpperCase()}else{r.method=\"GET\"}if(r.headers===(o===null||o===void 0?void 0:o.headers)){r.headers={...r.headers}}else{r.headers=y({...o===null||o===void 0?void 0:o.headers,...r.headers})}if(\"slashes\"in r){throw new TypeError(\"The legacy `url.Url` has been deprecated. Use `URL` instead.\")}if(\"auth\"in r){throw new TypeError(\"Parameter `auth` is deprecated. Use `username` / `password` instead.\")}if(\"searchParams\"in r){if(r.searchParams&&r.searchParams!==(o===null||o===void 0?void 0:o.searchParams)){let e;if(g.default.string(r.searchParams)||r.searchParams instanceof i.URLSearchParams){e=new i.URLSearchParams(r.searchParams)}else{validateSearchParameters(r.searchParams);e=new i.URLSearchParams;for(const t in r.searchParams){const s=r.searchParams[t];if(s===null){e.append(t,\"\")}else if(s!==undefined){e.append(t,s)}}}(n=o===null||o===void 0?void 0:o.searchParams)===null||n===void 0?void 0:n.forEach(((t,r)=>{if(!e.has(r)){e.append(r,t)}}));r.searchParams=e}}r.username=(a=r.username)!==null&&a!==void 0?a:\"\";r.password=(c=r.password)!==null&&c!==void 0?c:\"\";if(g.default.undefined(r.prefixUrl)){r.prefixUrl=(u=o===null||o===void 0?void 0:o.prefixUrl)!==null&&u!==void 0?u:\"\"}else{r.prefixUrl=r.prefixUrl.toString();if(r.prefixUrl!==\"\"&&!r.prefixUrl.endsWith(\"/\")){r.prefixUrl+=\"/\"}}if(g.default.string(r.url)){if(r.url.startsWith(\"/\")){throw new Error(\"`input` must not start with a slash when using `prefixUrl`\")}r.url=S.default(r.prefixUrl+r.url,r)}else if(g.default.undefined(r.url)&&r.prefixUrl!==\"\"||r.protocol){r.url=S.default(r.prefixUrl,r)}if(r.url){if(\"port\"in r){delete r.port}let{prefixUrl:e}=r;Object.defineProperty(r,\"prefixUrl\",{set:t=>{const s=r.url;if(!s.href.startsWith(t)){throw new Error(`Cannot change \\`prefixUrl\\` from ${e} to ${t}: ${s.href}`)}r.url=new i.URL(t+s.href.slice(e.length));e=t},get:()=>e});let{protocol:t}=r.url;if(t===\"unix:\"){t=\"http:\";r.url=new i.URL(`http://unix${r.url.pathname}${r.url.search}`)}if(r.searchParams){r.url.search=r.searchParams.toString()}if(t!==\"http:\"&&t!==\"https:\"){throw new UnsupportedProtocolError(r)}if(r.username===\"\"){r.username=r.url.username}else{r.url.username=r.username}if(r.password===\"\"){r.password=r.url.password}else{r.url.password=r.password}}const{cookieJar:m}=r;if(m){let{setCookie:e,getCookieString:t}=m;g.assert.function_(e);g.assert.function_(t);if(e.length===4&&t.length===0){e=s.promisify(e.bind(r.cookieJar));t=s.promisify(t.bind(r.cookieJar));r.cookieJar={setCookie:e,getCookieString:t}}}const{cache:b}=r;if(b){if(!Q.has(b)){Q.set(b,new d(((e,t)=>{const r=e[j](e,t);if(g.default.promise(r)){r.once=(e,t)=>{if(e===\"error\"){r.catch(t)}else if(e===\"abort\"){(async()=>{try{const e=await r;e.once(\"abort\",t)}catch(e){}})()}else{throw new Error(`Unknown HTTP2 promise event: ${e}`)}return r}}return r}),b))}}r.cacheOptions={...r.cacheOptions};if(r.dnsCache===true){if(!O){O=new h.default}r.dnsCache=O}else if(!g.default.undefined(r.dnsCache)&&!r.dnsCache.lookup){throw new TypeError(`Parameter \\`dnsCache\\` must be a CacheableLookup instance or a boolean, got ${g.default(r.dnsCache)}`)}if(g.default.number(r.timeout)){r.timeout={request:r.timeout}}else if(o&&r.timeout!==o.timeout){r.timeout={...o.timeout,...r.timeout}}else{r.timeout={...r.timeout}}if(!r.context){r.context={}}const _=r.hooks===(o===null||o===void 0?void 0:o.hooks);r.hooks={...r.hooks};for(const e of t.knownHookEvents){if(e in r.hooks){if(g.default.array(r.hooks[e])){r.hooks[e]=[...r.hooks[e]]}else{throw new TypeError(`Parameter \\`${e}\\` must be an Array, got ${g.default(r.hooks[e])}`)}}else{r.hooks[e]=[]}}if(o&&!_){for(const e of t.knownHookEvents){const t=o.hooks[e];if(t.length>0){r.hooks[e]=[...o.hooks[e],...r.hooks[e]]}}}if(\"family\"in r){P.default('\"options.family\" was never documented, please use \"options.dnsLookupIpVersion\"')}if(o===null||o===void 0?void 0:o.https){r.https={...o.https,...r.https}}if(\"rejectUnauthorized\"in r){P.default('\"options.rejectUnauthorized\" is now deprecated, please use \"options.https.rejectUnauthorized\"')}if(\"checkServerIdentity\"in r){P.default('\"options.checkServerIdentity\" was never documented, please use \"options.https.checkServerIdentity\"')}if(\"ca\"in r){P.default('\"options.ca\" was never documented, please use \"options.https.certificateAuthority\"')}if(\"key\"in r){P.default('\"options.key\" was never documented, please use \"options.https.key\"')}if(\"cert\"in r){P.default('\"options.cert\" was never documented, please use \"options.https.certificate\"')}if(\"passphrase\"in r){P.default('\"options.passphrase\" was never documented, please use \"options.https.passphrase\"')}if(\"pfx\"in r){P.default('\"options.pfx\" was never documented, please use \"options.https.pfx\"')}if(\"followRedirects\"in r){throw new TypeError(\"The `followRedirects` option does not exist. Use `followRedirect` instead.\")}if(r.agent){for(const e in r.agent){if(e!==\"http\"&&e!==\"https\"&&e!==\"http2\"){throw new TypeError(`Expected the \\`options.agent\\` properties to be \\`http\\`, \\`https\\` or \\`http2\\`, got \\`${e}\\``)}}}r.maxRedirects=(l=r.maxRedirects)!==null&&l!==void 0?l:0;t.setNonEnumerableProperties([o,p],r);return C.default(r,o)}_lockWrite(){const onLockedWrite=()=>{throw new TypeError(\"The payload has been already provided\")};this.write=onLockedWrite;this.end=onLockedWrite}_unlockWrite(){this.write=super.write;this.end=super.end}async _finalizeBody(){const{options:e}=this;const{headers:r}=e;const s=!g.default.undefined(e.form);const n=!g.default.undefined(e.json);const a=!g.default.undefined(e.body);const c=s||n||a;const u=t.withoutBody.has(e.method)&&!(e.method===\"GET\"&&e.allowGetBody);this._cannotHaveBody=u;if(c){if(u){throw new TypeError(`The \\`${e.method}\\` method cannot be used with a body`)}if([a,s,n].filter((e=>e)).length>1){throw new TypeError(\"The `body`, `json` and `form` options are mutually exclusive\")}if(a&&!(e.body instanceof o.Readable)&&!g.default.string(e.body)&&!g.default.buffer(e.body)&&!_.default(e.body)){throw new TypeError(\"The `body` option must be a stream.Readable, string or Buffer\")}if(s&&!g.default.object(e.form)){throw new TypeError(\"The `form` option must be an Object\")}{const t=!g.default.string(r[\"content-type\"]);if(a){if(_.default(e.body)&&t){r[\"content-type\"]=`multipart/form-data; boundary=${e.body.getBoundary()}`}this[W]=e.body}else if(s){if(t){r[\"content-type\"]=\"application/x-www-form-urlencoded\"}this[W]=new i.URLSearchParams(e.form).toString()}else{if(t){r[\"content-type\"]=\"application/json\"}this[W]=e.stringifyJson(e.json)}const o=await b.default(this[W],e.headers);if(g.default.undefined(r[\"content-length\"])&&g.default.undefined(r[\"transfer-encoding\"])){if(!u&&!g.default.undefined(o)){r[\"content-length\"]=String(o)}}}}else if(u){this._lockWrite()}else{this._unlockWrite()}this[I]=Number(r[\"content-length\"])||undefined}async _onResponseBase(e){const{options:t}=this;const{url:r}=t;this[G]=e;if(t.decompress){e=p(e)}const s=e.statusCode;const o=e;o.statusMessage=o.statusMessage?o.statusMessage:a.STATUS_CODES[s];o.url=t.url.toString();o.requestUrl=this.requestUrl;o.redirectUrls=this.redirects;o.request=this;o.isFromCache=e.fromCache||false;o.ip=this.ip;o.retryCount=this.retryCount;this[D]=o.isFromCache;this[H]=Number(e.headers[\"content-length\"])||undefined;this[q]=e;e.once(\"end\",(()=>{this[H]=this[L];this.emit(\"downloadProgress\",this.downloadProgress)}));e.once(\"error\",(t=>{e.destroy();this._beforeError(new ReadError(t,this))}));e.once(\"aborted\",(()=>{this._beforeError(new ReadError({name:\"Error\",message:\"The server aborted pending request\",code:\"ECONNRESET\"},this))}));this.emit(\"downloadProgress\",this.downloadProgress);const n=e.headers[\"set-cookie\"];if(g.default.object(t.cookieJar)&&n){let e=n.map((async e=>t.cookieJar.setCookie(e,r.toString())));if(t.ignoreInvalidCookies){e=e.map((async e=>e.catch((()=>{}))))}try{await Promise.all(e)}catch(e){this._beforeError(e);return}}if(t.followRedirect&&e.headers.location&&Z.has(s)){e.resume();if(this[j]){this[z]();delete this[j];this[N]()}const n=s===303&&t.method!==\"GET\"&&t.method!==\"HEAD\";if(n||!t.methodRewriting){t.method=\"GET\";if(\"body\"in t){delete t.body}if(\"json\"in t){delete t.json}if(\"form\"in t){delete t.form}this[W]=undefined;delete t.headers[\"content-length\"]}if(this.redirects.length>=t.maxRedirects){this._beforeError(new MaxRedirectsError(this));return}try{const s=Buffer.from(e.headers.location,\"binary\").toString();const n=new i.URL(s,r);const a=n.toString();decodeURI(a);function isUnixSocketURL(e){return e.protocol===\"unix:\"||e.hostname===\"unix\"}if(!isUnixSocketURL(r)&&isUnixSocketURL(n)){this._beforeError(new RequestError(\"Cannot redirect to UNIX socket\",{},this));return}if(n.hostname!==r.hostname||n.port!==r.port){if(\"host\"in t.headers){delete t.headers.host}if(\"cookie\"in t.headers){delete t.headers.cookie}if(\"authorization\"in t.headers){delete t.headers.authorization}if(t.username||t.password){t.username=\"\";t.password=\"\"}}else{n.username=t.username;n.password=t.password}this.redirects.push(a);t.url=n;for(const e of t.hooks.beforeRedirect){await e(t,o)}this.emit(\"redirect\",o,t);await this._makeRequest()}catch(e){this._beforeError(e);return}return}if(t.isStream&&t.throwHttpErrors&&!T.isResponseOk(o)){this._beforeError(new HTTPError(o));return}e.on(\"readable\",(()=>{if(this[F]){this._read()}}));this.on(\"resume\",(()=>{e.resume()}));this.on(\"pause\",(()=>{e.pause()}));e.once(\"end\",(()=>{this.push(null)}));this.emit(\"response\",e);for(const r of this[M]){if(r.headersSent){continue}for(const s in e.headers){const o=t.decompress?s!==\"content-encoding\":true;const n=e.headers[s];if(o){r.setHeader(s,n)}}r.statusCode=s}}async _onResponse(e){try{await this._onResponseBase(e)}catch(e){this._beforeError(e)}}_onRequest(e){const{options:t}=this;const{timeout:r,url:s}=t;l.default(e);this[z]=v.default(e,r,s);const o=t.cache?\"cacheableResponse\":\"response\";e.once(o,(e=>{void this._onResponse(e)}));e.once(\"error\",(t=>{var r;e.destroy();(r=e.res)===null||r===void 0?void 0:r.removeAllListeners(\"end\");t=t instanceof v.TimeoutError?new TimeoutError(t,this.timings,this):new RequestError(t.message,t,this);this._beforeError(t)}));this[N]=w.default(e,this,Y);this[j]=e;this.emit(\"uploadProgress\",this.uploadProgress);const n=this[W];const i=this.redirects.length===0?this:e;if(g.default.nodeStream(n)){n.pipe(i);n.once(\"error\",(e=>{this._beforeError(new UploadError(e,this))}))}else{this._unlockWrite();if(!g.default.undefined(n)){this._writeRequest(n,undefined,(()=>{}));i.end();this._lockWrite()}else if(this._cannotHaveBody||this._noPipe){i.end();this._lockWrite()}}this.emit(\"request\",e)}async _createCacheableRequest(e,t){return new Promise(((r,s)=>{Object.assign(t,E.default(e));delete t.url;let o;const n=Q.get(t.cache)(t,(async e=>{e._readableState.autoDestroy=false;if(o){(await o).emit(\"cacheableResponse\",e)}r(e)}));t.url=e;n.once(\"error\",s);n.once(\"request\",(async e=>{o=e;r(o)}))}))}async _makeRequest(){var e,t,r,s,o;const{options:n}=this;const{headers:i}=n;for(const e in i){if(g.default.undefined(i[e])){delete i[e]}else if(g.default.null_(i[e])){throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${e}\\` header`)}}if(n.decompress&&g.default.undefined(i[\"accept-encoding\"])){i[\"accept-encoding\"]=K?\"gzip, deflate, br\":\"gzip, deflate\"}if(n.cookieJar){const e=await n.cookieJar.getCookieString(n.url.toString());if(g.default.nonEmptyString(e)){n.headers.cookie=e}}for(const e of n.hooks.beforeRequest){const t=await e(n);if(!g.default.undefined(t)){n.request=()=>t;break}}if(n.body&&this[W]!==n.body){this[W]=n.body}const{agent:c,request:l,timeout:h,url:p}=n;if(n.dnsCache&&!(\"lookup\"in n)){n.lookup=n.dnsCache.lookup}if(p.hostname===\"unix\"){const e=/(?<socketPath>.+?):(?<path>.+)/.exec(`${p.pathname}${p.search}`);if(e===null||e===void 0?void 0:e.groups){const{socketPath:t,path:r}=e.groups;Object.assign(n,{socketPath:t,path:r,host:\"\"})}}const y=p.protocol===\"https:\";let b;if(n.http2){b=m.auto}else{b=y?u.request:a.request}const _=(e=n.request)!==null&&e!==void 0?e:b;const w=n.cache?this._createCacheableRequest:_;if(c&&!n.http2){n.agent=c[y?\"https\":\"http\"]}n[j]=_;delete n.request;delete n.timeout;const v=n;v.shared=(t=n.cacheOptions)===null||t===void 0?void 0:t.shared;v.cacheHeuristic=(r=n.cacheOptions)===null||r===void 0?void 0:r.cacheHeuristic;v.immutableMinTimeToLive=(s=n.cacheOptions)===null||s===void 0?void 0:s.immutableMinTimeToLive;v.ignoreCargoCult=(o=n.cacheOptions)===null||o===void 0?void 0:o.ignoreCargoCult;if(n.dnsLookupIpVersion!==undefined){try{v.family=k.dnsLookupIpVersionToFamily(n.dnsLookupIpVersion)}catch(e){throw new Error(\"Invalid `dnsLookupIpVersion` option value\")}}if(n.https){if(\"rejectUnauthorized\"in n.https){v.rejectUnauthorized=n.https.rejectUnauthorized}if(n.https.checkServerIdentity){v.checkServerIdentity=n.https.checkServerIdentity}if(n.https.certificateAuthority){v.ca=n.https.certificateAuthority}if(n.https.certificate){v.cert=n.https.certificate}if(n.https.key){v.key=n.https.key}if(n.https.passphrase){v.passphrase=n.https.passphrase}if(n.https.pfx){v.pfx=n.https.pfx}}try{let e=await w(p,v);if(g.default.undefined(e)){e=b(p,v)}n.request=l;n.timeout=h;n.agent=c;if(n.https){if(\"rejectUnauthorized\"in n.https){delete v.rejectUnauthorized}if(n.https.checkServerIdentity){delete v.checkServerIdentity}if(n.https.certificateAuthority){delete v.ca}if(n.https.certificate){delete v.cert}if(n.https.key){delete v.key}if(n.https.passphrase){delete v.passphrase}if(n.https.pfx){delete v.pfx}}if(isClientRequest(e)){this._onRequest(e)}else if(this.writable){this.once(\"finish\",(()=>{void this._onResponse(e)}));this._unlockWrite();this.end();this._lockWrite()}else{void this._onResponse(e)}}catch(e){if(e instanceof d.CacheError){throw new CacheError(e,this)}throw new RequestError(e.message,e,this)}}async _error(e){try{for(const t of this.options.hooks.beforeError){e=await t(e)}}catch(t){e=new RequestError(t.message,t,this)}this.destroy(e)}_beforeError(e){if(this[B]){return}const{options:t}=this;const r=this.retryCount+1;this[B]=true;if(!(e instanceof RequestError)){e=new RequestError(e.message,e,this)}const s=e;const{response:o}=s;void(async()=>{if(o&&!o.body){o.setEncoding(this._readableState.encoding);try{o.rawBody=await R.default(o);o.body=o.rawBody.toString()}catch(e){}}if(this.listenerCount(\"retry\")!==0){let n;try{let e;if(o&&\"retry-after\"in o.headers){e=Number(o.headers[\"retry-after\"]);if(Number.isNaN(e)){e=Date.parse(o.headers[\"retry-after\"])-Date.now();if(e<=0){e=1}}else{e*=1e3}}n=await t.retry.calculateDelay({attemptCount:r,retryOptions:t.retry,error:s,retryAfter:e,computedValue:A.default({attemptCount:r,retryOptions:t.retry,error:s,retryAfter:e,computedValue:0})})}catch(e){void this._error(new RequestError(e.message,e,this));return}if(n){const retry=async()=>{try{for(const e of this.options.hooks.beforeRetry){await e(this.options,s,r)}}catch(t){void this._error(new RequestError(t.message,e,this));return}if(this.destroyed){return}this.destroy();this.emit(\"retry\",r,e)};this[J]=setTimeout(retry,n);return}}void this._error(s)})()}_read(){this[F]=true;const e=this[q];if(e&&!this[B]){if(e.readableLength){this[F]=false}let t;while((t=e.read())!==null){this[L]+=t.length;this[$]=true;const e=this.downloadProgress;if(e.percent<1){this.emit(\"downloadProgress\",e)}this.push(t)}}}_write(e,t,r){const write=()=>{this._writeRequest(e,t,r)};if(this.requestInitialized){write()}else{this[V].push(write)}}_writeRequest(e,t,r){if(this[j].destroyed){return}this._progressCallbacks.push((()=>{this[U]+=Buffer.byteLength(e,t);const r=this.uploadProgress;if(r.percent<1){this.emit(\"uploadProgress\",r)}}));this[j].write(e,t,(e=>{if(!e&&this._progressCallbacks.length>0){this._progressCallbacks.shift()()}r(e)}))}_final(e){const endRequest=()=>{while(this._progressCallbacks.length!==0){this._progressCallbacks.shift()()}if(!(j in this)){e();return}if(this[j].destroyed){e();return}this[j].end((t=>{if(!t){this[I]=this[U];this.emit(\"uploadProgress\",this.uploadProgress);this[j].emit(\"upload-complete\")}e(t)}))};if(this.requestInitialized){endRequest()}else{this[V].push(endRequest)}}_destroy(e,t){var r;this[B]=true;clearTimeout(this[J]);if(j in this){this[z]();if(!((r=this[q])===null||r===void 0?void 0:r.complete)){this[j].destroy()}}if(e!==null&&!g.default.undefined(e)&&!(e instanceof RequestError)){e=new RequestError(e.message,e,this)}t(e)}get _isAboutToError(){return this[B]}get ip(){var e;return(e=this.socket)===null||e===void 0?void 0:e.remoteAddress}get aborted(){var e,t,r;return((t=(e=this[j])===null||e===void 0?void 0:e.destroyed)!==null&&t!==void 0?t:this.destroyed)&&!((r=this[G])===null||r===void 0?void 0:r.complete)}get socket(){var e,t;return(t=(e=this[j])===null||e===void 0?void 0:e.socket)!==null&&t!==void 0?t:undefined}get downloadProgress(){let e;if(this[H]){e=this[L]/this[H]}else if(this[H]===this[L]){e=1}else{e=0}return{percent:e,transferred:this[L],total:this[H]}}get uploadProgress(){let e;if(this[I]){e=this[U]/this[I]}else if(this[I]===this[U]){e=1}else{e=0}return{percent:e,transferred:this[U],total:this[I]}}get timings(){var e;return(e=this[j])===null||e===void 0?void 0:e.timings}get isFromCache(){return this[D]}pipe(e,t){if(this[$]){throw new Error(\"Failed to pipe. The response has been emitted already.\")}if(e instanceof c.ServerResponse){this[M].add(e)}return super.pipe(e,t)}unpipe(e){if(e instanceof c.ServerResponse){this[M].delete(e)}super.unpipe(e);return this}}t[\"default\"]=Request},4993:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.dnsLookupIpVersionToFamily=t.isDnsLookupIpVersion=void 0;const r={auto:0,ipv4:4,ipv6:6};t.isDnsLookupIpVersion=e=>e in r;t.dnsLookupIpVersionToFamily=e=>{if(t.isDnsLookupIpVersion(e)){return r[e]}throw new Error(\"Invalid DNS lookup IP version\")}},4564:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7147);const o=r(3837);const n=r(7678);const i=r(40);const a=o.promisify(s.stat);t[\"default\"]=async(e,t)=>{if(t&&\"content-length\"in t){return Number(t[\"content-length\"])}if(!e){return 0}if(n.default.string(e)){return Buffer.byteLength(e)}if(n.default.buffer(e)){return e.length}if(i.default(e)){return o.promisify(e.getLength.bind(e))()}if(e instanceof s.ReadStream){const{size:t}=await a(e.path);if(t===0){return undefined}return t}return undefined}},4500:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const getBuffer=async e=>{const t=[];let r=0;for await(const s of e){t.push(s);r+=Buffer.byteLength(s)}if(Buffer.isBuffer(t[0])){return Buffer.concat(t,r)}return Buffer.from(t.join(\"\"))};t[\"default\"]=getBuffer},40:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);t[\"default\"]=e=>s.default.nodeStream(e)&&s.default.function_(e.getBoundary)},9298:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.isResponseOk=void 0;t.isResponseOk=e=>{const{statusCode:t}=e;const r=e.request.options.followRedirect?299:399;return t>=200&&t<=r||t===304}},9219:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7310);const o=[\"protocol\",\"host\",\"hostname\",\"port\",\"pathname\",\"search\"];t[\"default\"]=(e,t)=>{var r,n;if(t.path){if(t.pathname){throw new TypeError(\"Parameters `path` and `pathname` are mutually exclusive.\")}if(t.search){throw new TypeError(\"Parameters `path` and `search` are mutually exclusive.\")}if(t.searchParams){throw new TypeError(\"Parameters `path` and `searchParams` are mutually exclusive.\")}}if(t.search&&t.searchParams){throw new TypeError(\"Parameters `search` and `searchParams` are mutually exclusive.\")}if(!e){if(!t.protocol){throw new TypeError(\"No URL protocol specified\")}e=`${t.protocol}//${(n=(r=t.hostname)!==null&&r!==void 0?r:t.host)!==null&&n!==void 0?n:\"\"}`}const i=new s.URL(e);if(t.path){const e=t.path.indexOf(\"?\");if(e===-1){t.pathname=t.path}else{t.pathname=t.path.slice(0,e);t.search=t.path.slice(e+1)}delete t.path}for(const e of o){if(t[e]){i[e]=t[e].toString()}}return i}},3021:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});function default_1(e,t,r){const s={};for(const o of r){s[o]=(...e)=>{t.emit(o,...e)};e.on(o,s[o])}return()=>{for(const t of r){e.off(t,s[t])}}}t[\"default\"]=default_1},2454:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t.TimeoutError=void 0;const s=r(1808);const o=r(1593);const n=Symbol(\"reentry\");const noop=()=>{};class TimeoutError extends Error{constructor(e,t){super(`Timeout awaiting '${t}' for ${e}ms`);this.event=t;this.name=\"TimeoutError\";this.code=\"ETIMEDOUT\"}}t.TimeoutError=TimeoutError;t[\"default\"]=(e,t,r)=>{if(n in e){return noop}e[n]=true;const i=[];const{once:a,unhandleAll:c}=o.default();const addTimeout=(e,t,r)=>{var s;const o=setTimeout(t,e,e,r);(s=o.unref)===null||s===void 0?void 0:s.call(o);const cancel=()=>{clearTimeout(o)};i.push(cancel);return cancel};const{host:u,hostname:l}=r;const timeoutHandler=(t,r)=>{e.destroy(new TimeoutError(t,r))};const cancelTimeouts=()=>{for(const e of i){e()}c()};e.once(\"error\",(t=>{cancelTimeouts();if(e.listenerCount(\"error\")===0){throw t}}));e.once(\"close\",cancelTimeouts);a(e,\"response\",(e=>{a(e,\"end\",cancelTimeouts)}));if(typeof t.request!==\"undefined\"){addTimeout(t.request,timeoutHandler,\"request\")}if(typeof t.socket!==\"undefined\"){const socketTimeoutHandler=()=>{timeoutHandler(t.socket,\"socket\")};e.setTimeout(t.socket,socketTimeoutHandler);i.push((()=>{e.removeListener(\"timeout\",socketTimeoutHandler)}))}a(e,\"socket\",(o=>{var n;const{socketPath:i}=e;if(o.connecting){const e=Boolean(i!==null&&i!==void 0?i:s.isIP((n=l!==null&&l!==void 0?l:u)!==null&&n!==void 0?n:\"\")!==0);if(typeof t.lookup!==\"undefined\"&&!e&&typeof o.address().address===\"undefined\"){const e=addTimeout(t.lookup,timeoutHandler,\"lookup\");a(o,\"lookup\",e)}if(typeof t.connect!==\"undefined\"){const timeConnect=()=>addTimeout(t.connect,timeoutHandler,\"connect\");if(e){a(o,\"connect\",timeConnect())}else{a(o,\"lookup\",(e=>{if(e===null){a(o,\"connect\",timeConnect())}}))}}if(typeof t.secureConnect!==\"undefined\"&&r.protocol===\"https:\"){a(o,\"connect\",(()=>{const e=addTimeout(t.secureConnect,timeoutHandler,\"secureConnect\");a(o,\"secureConnect\",e)}))}}if(typeof t.send!==\"undefined\"){const timeRequest=()=>addTimeout(t.send,timeoutHandler,\"send\");if(o.connecting){a(o,\"connect\",(()=>{a(e,\"upload-complete\",timeRequest())}))}else{a(e,\"upload-complete\",timeRequest())}}}));if(typeof t.response!==\"undefined\"){a(e,\"upload-complete\",(()=>{const r=addTimeout(t.response,timeoutHandler,\"response\");a(e,\"response\",r)}))}return cancelTimeouts}},1593:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});t[\"default\"]=()=>{const e=[];return{once(t,r,s){t.once(r,s);e.push({origin:t,event:r,fn:s})},unhandleAll(){for(const t of e){const{origin:e,event:r,fn:s}=t;e.removeListener(r,s)}e.length=0}}}},8026:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);t[\"default\"]=e=>{e=e;const t={protocol:e.protocol,hostname:s.default.string(e.hostname)&&e.hostname.startsWith(\"[\")?e.hostname.slice(1,-1):e.hostname,host:e.host,hash:e.hash,search:e.search,pathname:e.pathname,href:e.href,path:`${e.pathname||\"\"}${e.search||\"\"}`};if(s.default.string(e.port)&&e.port.length>0){t.port=Number(e.port)}if(e.username||e.password){t.auth=`${e.username||\"\"}:${e.password||\"\"}`}return t}},7288:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});class WeakableMap{constructor(){this.weakMap=new WeakMap;this.map=new Map}set(e,t){if(typeof e===\"object\"){this.weakMap.set(e,t)}else{this.map.set(e,t)}}get(e){if(typeof e===\"object\"){return this.weakMap.get(e)}return this.map.get(e)}has(e){if(typeof e===\"object\"){return this.weakMap.has(e)}return this.map.has(e)}}t[\"default\"]=WeakableMap},4337:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});t.defaultHandler=void 0;const n=r(7678);const i=r(6056);const a=r(6457);const c=r(94);const u=r(285);const l={RequestError:i.RequestError,CacheError:i.CacheError,ReadError:i.ReadError,HTTPError:i.HTTPError,MaxRedirectsError:i.MaxRedirectsError,TimeoutError:i.TimeoutError,ParseError:i.ParseError,CancelError:i.CancelError,UnsupportedProtocolError:i.UnsupportedProtocolError,UploadError:i.UploadError};const delay=async e=>new Promise((t=>{setTimeout(t,e)}));const{normalizeArguments:h}=c.default;const mergeOptions=(...e)=>{let t;for(const r of e){t=h(undefined,r,t)}return t};const getPromiseOrStream=e=>e.isStream?new c.default(undefined,e):i.default(e);const isGotInstance=e=>\"defaults\"in e&&\"options\"in e.defaults;const d=[\"get\",\"post\",\"put\",\"patch\",\"head\",\"delete\"];t.defaultHandler=(e,t)=>t(e);const callInitHooks=(e,t)=>{if(e){for(const r of e){r(t)}}};const create=e=>{e._rawHandlers=e.handlers;e.handlers=e.handlers.map((e=>(t,r)=>{let s;const o=e(t,(e=>{s=r(e);return s}));if(o!==s&&!t.isStream&&s){const e=o;const{then:t,catch:r,finally:n}=e;Object.setPrototypeOf(e,Object.getPrototypeOf(s));Object.defineProperties(e,Object.getOwnPropertyDescriptors(s));e.then=t;e.catch=r;e.finally=n}return o}));const got=(t,r={},s)=>{var o,u;let l=0;const iterateHandlers=t=>e.handlers[l++](t,l===e.handlers.length?getPromiseOrStream:iterateHandlers);if(n.default.plainObject(t)){const e={...t,...r};c.setNonEnumerableProperties([t,r],e);r=e;t=undefined}try{let n;try{callInitHooks(e.options.hooks.init,r);callInitHooks((o=r.hooks)===null||o===void 0?void 0:o.init,r)}catch(e){n=e}const a=h(t,r,s!==null&&s!==void 0?s:e.options);a[c.kIsNormalizedAlready]=true;if(n){throw new i.RequestError(n.message,n,a)}return iterateHandlers(a)}catch(t){if(r.isStream){throw t}else{return a.default(t,e.options.hooks.beforeError,(u=r.hooks)===null||u===void 0?void 0:u.beforeError)}}};got.extend=(...r)=>{const s=[e.options];let o=[...e._rawHandlers];let n;for(const e of r){if(isGotInstance(e)){s.push(e.defaults.options);o.push(...e.defaults._rawHandlers);n=e.defaults.mutableDefaults}else{s.push(e);if(\"handlers\"in e){o.push(...e.handlers)}n=e.mutableDefaults}}o=o.filter((e=>e!==t.defaultHandler));if(o.length===0){o.push(t.defaultHandler)}return create({options:mergeOptions(...s),handlers:o,mutableDefaults:Boolean(n)})};const paginateEach=async function*(t,r){let s=h(t,r,e.options);s.resolveBodyOnly=false;const o=s.pagination;if(!n.default.object(o)){throw new TypeError(\"`options.pagination` must be implemented\")}const i=[];let{countLimit:a}=o;let c=0;while(c<o.requestLimit){if(c!==0){await delay(o.backoff)}const e=await got(undefined,undefined,s);const t=await o.transform(e);const r=[];for(const e of t){if(o.filter(e,i,r)){if(!o.shouldContinue(e,i,r)){return}yield e;if(o.stackAllItems){i.push(e)}r.push(e);if(--a<=0){return}}}const n=o.paginate(e,i,r);if(n===false){return}if(n===e.request.options){s=e.request.options}else if(n!==undefined){s=h(undefined,n,s)}c++}};got.paginate=paginateEach;got.paginate.all=async(e,t)=>{const r=[];for await(const s of paginateEach(e,t)){r.push(s)}return r};got.paginate.each=paginateEach;got.stream=(e,t)=>got(e,{...t,isStream:true});for(const e of d){got[e]=(t,r)=>got(t,{...r,method:e});got.stream[e]=(t,r)=>got(t,{...r,method:e,isStream:true})}Object.assign(got,l);Object.defineProperty(got,\"defaults\",{value:e.mutableDefaults?e:u.default(e),writable:e.mutableDefaults,configurable:e.mutableDefaults,enumerable:true});got.mergeOptions=mergeOptions;return got};t[\"default\"]=create;o(r(2613),t)},3061:function(e,t,r){\"use strict\";var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){if(s===undefined)s=r;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,s){if(s===undefined)s=r;e[s]=t[r]});var o=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))s(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});const n=r(7310);const i=r(4337);const a={options:{method:\"GET\",retry:{limit:2,methods:[\"GET\",\"PUT\",\"HEAD\",\"DELETE\",\"OPTIONS\",\"TRACE\"],statusCodes:[408,413,429,500,502,503,504,521,522,524],errorCodes:[\"ETIMEDOUT\",\"ECONNRESET\",\"EADDRINUSE\",\"ECONNREFUSED\",\"EPIPE\",\"ENOTFOUND\",\"ENETUNREACH\",\"EAI_AGAIN\"],maxRetryAfter:undefined,calculateDelay:({computedValue:e})=>e},timeout:{},headers:{\"user-agent\":\"got (https://github.com/sindresorhus/got)\"},hooks:{init:[],beforeRequest:[],beforeRedirect:[],beforeRetry:[],beforeError:[],afterResponse:[]},cache:undefined,dnsCache:undefined,decompress:true,throwHttpErrors:true,followRedirect:true,isStream:false,responseType:\"text\",resolveBodyOnly:false,maxRedirects:10,prefixUrl:\"\",methodRewriting:true,ignoreInvalidCookies:false,context:{},http2:false,allowGetBody:false,https:undefined,pagination:{transform:e=>{if(e.request.options.responseType===\"json\"){return e.body}return JSON.parse(e.body)},paginate:e=>{if(!Reflect.has(e.headers,\"link\")){return false}const t=e.headers.link.split(\",\");let r;for(const e of t){const t=e.split(\";\");if(t[1].includes(\"next\")){r=t[0].trimStart().trim();r=r.slice(1,-1);break}}if(r){const e={url:new n.URL(r)};return e}return false},filter:()=>true,shouldContinue:()=>true,countLimit:Infinity,backoff:0,requestLimit:1e4,stackAllItems:true},parseJson:e=>JSON.parse(e),stringifyJson:e=>JSON.stringify(e),cacheOptions:{}},handlers:[i.defaultHandler],mutableDefaults:false};const c=i.default(a);t[\"default\"]=c;e.exports=c;e.exports[\"default\"]=c;e.exports.__esModule=true;o(r(4337),t);o(r(6056),t)},2613:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true})},285:(e,t,r)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const s=r(7678);function deepFreeze(e){for(const t of Object.values(e)){if(s.default.plainObject(t)||s.default.array(t)){deepFreeze(t)}}return Object.freeze(e)}t[\"default\"]=deepFreeze},397:(e,t)=>{\"use strict\";Object.defineProperty(t,\"__esModule\",{value:true});const r=new Set;t[\"default\"]=e=>{if(r.has(e)){return}r.add(e);process.emitWarning(`Got: ${e}`,{type:\"DeprecationWarning\"})}},1002:e=>{\"use strict\";const t=new Set([200,203,204,206,300,301,308,404,405,410,414,501]);const r=new Set([200,203,204,300,301,302,303,307,308,404,405,410,414,501]);const s=new Set([500,502,503,504]);const o={date:true,connection:true,\"keep-alive\":true,\"proxy-authenticate\":true,\"proxy-authorization\":true,te:true,trailer:true,\"transfer-encoding\":true,upgrade:true};const n={\"content-length\":true,\"content-encoding\":true,\"transfer-encoding\":true,\"content-range\":true};function toNumberOrZero(e){const t=parseInt(e,10);return isFinite(t)?t:0}function isErrorResponse(e){if(!e){return true}return s.has(e.status)}function parseCacheControl(e){const t={};if(!e)return t;const r=e.trim().split(/,/);for(const e of r){const[r,s]=e.split(/=/,2);t[r.trim()]=s===undefined?true:s.trim().replace(/^\"|\"$/g,\"\")}return t}function formatCacheControl(e){let t=[];for(const r in e){const s=e[r];t.push(s===true?r:r+\"=\"+s)}if(!t.length){return undefined}return t.join(\", \")}e.exports=class CachePolicy{constructor(e,t,{shared:r,cacheHeuristic:s,immutableMinTimeToLive:o,ignoreCargoCult:n,_fromObject:i}={}){if(i){this._fromObject(i);return}if(!t||!t.headers){throw Error(\"Response headers missing\")}this._assertRequestHasHeaders(e);this._responseTime=this.now();this._isShared=r!==false;this._cacheHeuristic=undefined!==s?s:.1;this._immutableMinTtl=undefined!==o?o:24*3600*1e3;this._status=\"status\"in t?t.status:200;this._resHeaders=t.headers;this._rescc=parseCacheControl(t.headers[\"cache-control\"]);this._method=\"method\"in e?e.method:\"GET\";this._url=e.url;this._host=e.headers.host;this._noAuthorization=!e.headers.authorization;this._reqHeaders=t.headers.vary?e.headers:null;this._reqcc=parseCacheControl(e.headers[\"cache-control\"]);if(n&&\"pre-check\"in this._rescc&&\"post-check\"in this._rescc){delete this._rescc[\"pre-check\"];delete this._rescc[\"post-check\"];delete this._rescc[\"no-cache\"];delete this._rescc[\"no-store\"];delete this._rescc[\"must-revalidate\"];this._resHeaders=Object.assign({},this._resHeaders,{\"cache-control\":formatCacheControl(this._rescc)});delete this._resHeaders.expires;delete this._resHeaders.pragma}if(t.headers[\"cache-control\"]==null&&/no-cache/.test(t.headers.pragma)){this._rescc[\"no-cache\"]=true}}now(){return Date.now()}storable(){return!!(!this._reqcc[\"no-store\"]&&(\"GET\"===this._method||\"HEAD\"===this._method||\"POST\"===this._method&&this._hasExplicitExpiration())&&r.has(this._status)&&!this._rescc[\"no-store\"]&&(!this._isShared||!this._rescc.private)&&(!this._isShared||this._noAuthorization||this._allowsStoringAuthenticated())&&(this._resHeaders.expires||this._rescc[\"max-age\"]||this._isShared&&this._rescc[\"s-maxage\"]||this._rescc.public||t.has(this._status)))}_hasExplicitExpiration(){return this._isShared&&this._rescc[\"s-maxage\"]||this._rescc[\"max-age\"]||this._resHeaders.expires}_assertRequestHasHeaders(e){if(!e||!e.headers){throw Error(\"Request headers missing\")}}satisfiesWithoutRevalidation(e){this._assertRequestHasHeaders(e);const t=parseCacheControl(e.headers[\"cache-control\"]);if(t[\"no-cache\"]||/no-cache/.test(e.headers.pragma)){return false}if(t[\"max-age\"]&&this.age()>t[\"max-age\"]){return false}if(t[\"min-fresh\"]&&this.timeToLive()<1e3*t[\"min-fresh\"]){return false}if(this.stale()){const e=t[\"max-stale\"]&&!this._rescc[\"must-revalidate\"]&&(true===t[\"max-stale\"]||t[\"max-stale\"]>this.age()-this.maxAge());if(!e){return false}}return this._requestMatches(e,false)}_requestMatches(e,t){return(!this._url||this._url===e.url)&&this._host===e.headers.host&&(!e.method||this._method===e.method||t&&\"HEAD\"===e.method)&&this._varyMatches(e)}_allowsStoringAuthenticated(){return this._rescc[\"must-revalidate\"]||this._rescc.public||this._rescc[\"s-maxage\"]}_varyMatches(e){if(!this._resHeaders.vary){return true}if(this._resHeaders.vary===\"*\"){return false}const t=this._resHeaders.vary.trim().toLowerCase().split(/\\s*,\\s*/);for(const r of t){if(e.headers[r]!==this._reqHeaders[r])return false}return true}_copyWithoutHopByHopHeaders(e){const t={};for(const r in e){if(o[r])continue;t[r]=e[r]}if(e.connection){const r=e.connection.trim().split(/\\s*,\\s*/);for(const e of r){delete t[e]}}if(t.warning){const e=t.warning.split(/,/).filter((e=>!/^\\s*1[0-9][0-9]/.test(e)));if(!e.length){delete t.warning}else{t.warning=e.join(\",\").trim()}}return t}responseHeaders(){const e=this._copyWithoutHopByHopHeaders(this._resHeaders);const t=this.age();if(t>3600*24&&!this._hasExplicitExpiration()&&this.maxAge()>3600*24){e.warning=(e.warning?`${e.warning}, `:\"\")+'113 - \"rfc7234 5.5.4\"'}e.age=`${Math.round(t)}`;e.date=new Date(this.now()).toUTCString();return e}date(){const e=Date.parse(this._resHeaders.date);if(isFinite(e)){return e}return this._responseTime}age(){let e=this._ageValue();const t=(this.now()-this._responseTime)/1e3;return e+t}_ageValue(){return toNumberOrZero(this._resHeaders.age)}maxAge(){if(!this.storable()||this._rescc[\"no-cache\"]){return 0}if(this._isShared&&(this._resHeaders[\"set-cookie\"]&&!this._rescc.public&&!this._rescc.immutable)){return 0}if(this._resHeaders.vary===\"*\"){return 0}if(this._isShared){if(this._rescc[\"proxy-revalidate\"]){return 0}if(this._rescc[\"s-maxage\"]){return toNumberOrZero(this._rescc[\"s-maxage\"])}}if(this._rescc[\"max-age\"]){return toNumberOrZero(this._rescc[\"max-age\"])}const e=this._rescc.immutable?this._immutableMinTtl:0;const t=this.date();if(this._resHeaders.expires){const r=Date.parse(this._resHeaders.expires);if(Number.isNaN(r)||r<t){return 0}return Math.max(e,(r-t)/1e3)}if(this._resHeaders[\"last-modified\"]){const r=Date.parse(this._resHeaders[\"last-modified\"]);if(isFinite(r)&&t>r){return Math.max(e,(t-r)/1e3*this._cacheHeuristic)}}return e}timeToLive(){const e=this.maxAge()-this.age();const t=e+toNumberOrZero(this._rescc[\"stale-if-error\"]);const r=e+toNumberOrZero(this._rescc[\"stale-while-revalidate\"]);return Math.max(0,e,t,r)*1e3}stale(){return this.maxAge()<=this.age()}_useStaleIfError(){return this.maxAge()+toNumberOrZero(this._rescc[\"stale-if-error\"])>this.age()}useStaleWhileRevalidate(){return this.maxAge()+toNumberOrZero(this._rescc[\"stale-while-revalidate\"])>this.age()}static fromObject(e){return new this(undefined,undefined,{_fromObject:e})}_fromObject(e){if(this._responseTime)throw Error(\"Reinitialized\");if(!e||e.v!==1)throw Error(\"Invalid serialization\");this._responseTime=e.t;this._isShared=e.sh;this._cacheHeuristic=e.ch;this._immutableMinTtl=e.imm!==undefined?e.imm:24*3600*1e3;this._status=e.st;this._resHeaders=e.resh;this._rescc=e.rescc;this._method=e.m;this._url=e.u;this._host=e.h;this._noAuthorization=e.a;this._reqHeaders=e.reqh;this._reqcc=e.reqcc}toObject(){return{v:1,t:this._responseTime,sh:this._isShared,ch:this._cacheHeuristic,imm:this._immutableMinTtl,st:this._status,resh:this._resHeaders,rescc:this._rescc,m:this._method,u:this._url,h:this._host,a:this._noAuthorization,reqh:this._reqHeaders,reqcc:this._reqcc}}revalidationHeaders(e){this._assertRequestHasHeaders(e);const t=this._copyWithoutHopByHopHeaders(e.headers);delete t[\"if-range\"];if(!this._requestMatches(e,true)||!this.storable()){delete t[\"if-none-match\"];delete t[\"if-modified-since\"];return t}if(this._resHeaders.etag){t[\"if-none-match\"]=t[\"if-none-match\"]?`${t[\"if-none-match\"]}, ${this._resHeaders.etag}`:this._resHeaders.etag}const r=t[\"accept-ranges\"]||t[\"if-match\"]||t[\"if-unmodified-since\"]||this._method&&this._method!=\"GET\";if(r){delete t[\"if-modified-since\"];if(t[\"if-none-match\"]){const e=t[\"if-none-match\"].split(/,/).filter((e=>!/^\\s*W\\//.test(e)));if(!e.length){delete t[\"if-none-match\"]}else{t[\"if-none-match\"]=e.join(\",\").trim()}}}else if(this._resHeaders[\"last-modified\"]&&!t[\"if-modified-since\"]){t[\"if-modified-since\"]=this._resHeaders[\"last-modified\"]}return t}revalidatedPolicy(e,t){this._assertRequestHasHeaders(e);if(this._useStaleIfError()&&isErrorResponse(t)){return{modified:false,matches:false,policy:this}}if(!t||!t.headers){throw Error(\"Response headers missing\")}let r=false;if(t.status!==undefined&&t.status!=304){r=false}else if(t.headers.etag&&!/^\\s*W\\//.test(t.headers.etag)){r=this._resHeaders.etag&&this._resHeaders.etag.replace(/^\\s*W\\//,\"\")===t.headers.etag}else if(this._resHeaders.etag&&t.headers.etag){r=this._resHeaders.etag.replace(/^\\s*W\\//,\"\")===t.headers.etag.replace(/^\\s*W\\//,\"\")}else if(this._resHeaders[\"last-modified\"]){r=this._resHeaders[\"last-modified\"]===t.headers[\"last-modified\"]}else{if(!this._resHeaders.etag&&!this._resHeaders[\"last-modified\"]&&!t.headers.etag&&!t.headers[\"last-modified\"]){r=true}}if(!r){return{policy:new this.constructor(e,t),modified:t.status!=304,matches:false}}const s={};for(const e in this._resHeaders){s[e]=e in t.headers&&!n[e]?t.headers[e]:this._resHeaders[e]}const o=Object.assign({},t,{status:this._status,method:this._method,headers:s});return{policy:new this.constructor(e,o,{shared:this._isShared,cacheHeuristic:this._cacheHeuristic,immutableMinTimeToLive:this._immutableMinTtl}),modified:false,matches:true}}}},9898:(e,t,r)=>{\"use strict\";const s=r(2361);const o=r(4404);const n=r(5158);const i=r(9273);const a=Symbol(\"currentStreamsCount\");const c=Symbol(\"request\");const u=Symbol(\"cachedOriginSet\");const l=Symbol(\"gracefullyClosing\");const h=[\"maxDeflateDynamicTableSize\",\"maxSessionMemory\",\"maxHeaderListPairs\",\"maxOutstandingPings\",\"maxReservedRemoteStreams\",\"maxSendHeaderBlockLength\",\"paddingStrategy\",\"localAddress\",\"path\",\"rejectUnauthorized\",\"minDHSize\",\"ca\",\"cert\",\"clientCertEngine\",\"ciphers\",\"key\",\"pfx\",\"servername\",\"minVersion\",\"maxVersion\",\"secureProtocol\",\"crl\",\"honorCipherOrder\",\"ecdhCurve\",\"dhparam\",\"secureOptions\",\"sessionIdContext\"];const getSortedIndex=(e,t,r)=>{let s=0;let o=e.length;while(s<o){const n=s+o>>>1;if(r(e[n],t)){s=n+1}else{o=n}}return s};const compareSessions=(e,t)=>e.remoteSettings.maxConcurrentStreams>t.remoteSettings.maxConcurrentStreams;const closeCoveredSessions=(e,t)=>{for(const r of e){if(r[u].length<t[u].length&&r[u].every((e=>t[u].includes(e)))&&r[a]+t[a]<=t.remoteSettings.maxConcurrentStreams){gracefullyClose(r)}}};const closeSessionIfCovered=(e,t)=>{for(const r of e){if(t[u].length<r[u].length&&t[u].every((e=>r[u].includes(e)))&&t[a]+r[a]<=r.remoteSettings.maxConcurrentStreams){gracefullyClose(t)}}};const getSessions=({agent:e,isFree:t})=>{const r={};for(const s in e.sessions){const o=e.sessions[s];const n=o.filter((e=>{const r=e[Agent.kCurrentStreamsCount]<e.remoteSettings.maxConcurrentStreams;return t?r:!r}));if(n.length!==0){r[s]=n}}return r};const gracefullyClose=e=>{e[l]=true;if(e[a]===0){e.close()}};class Agent extends s{constructor({timeout:e=6e4,maxSessions:t=Infinity,maxFreeSessions:r=10,maxCachedTlsSessions:s=100}={}){super();this.sessions={};this.queue={};this.timeout=e;this.maxSessions=t;this.maxFreeSessions=r;this._freeSessionsCount=0;this._sessionsCount=0;this.settings={enablePush:false};this.tlsSessionCache=new i({maxSize:s})}static normalizeOrigin(e,t){if(typeof e===\"string\"){e=new URL(e)}if(t&&e.hostname!==t){e.hostname=t}return e.origin}normalizeOptions(e){let t=\"\";if(e){for(const r of h){if(e[r]){t+=`:${e[r]}`}}}return t}_tryToCreateNewSession(e,t){if(!(e in this.queue)||!(t in this.queue[e])){return}const r=this.queue[e][t];if(this._sessionsCount<this.maxSessions&&!r.completed){r.completed=true;r()}}getSession(e,t,r){return new Promise(((s,o)=>{if(Array.isArray(r)){r=[...r];s()}else{r=[{resolve:s,reject:o}]}const i=this.normalizeOptions(t);const h=Agent.normalizeOrigin(e,t&&t.servername);if(h===undefined){for(const{reject:e}of r){e(new TypeError(\"The `origin` argument needs to be a string or an URL object\"))}return}if(i in this.sessions){const e=this.sessions[i];let t=-1;let s=-1;let o;for(const r of e){const e=r.remoteSettings.maxConcurrentStreams;if(e<t){break}if(r[u].includes(h)){const n=r[a];if(n>=e||r[l]||r.destroyed){continue}if(!o){t=e}if(n>s){o=r;s=n}}}if(o){if(r.length!==1){for(const{reject:e}of r){const t=new Error(`Expected the length of listeners to be 1, got ${r.length}.\\n`+\"Please report this to https://github.com/szmarczak/http2-wrapper/\");e(t)}return}r[0].resolve(o);return}}if(i in this.queue){if(h in this.queue[i]){this.queue[i][h].listeners.push(...r);this._tryToCreateNewSession(i,h);return}}else{this.queue[i]={}}const removeFromQueue=()=>{if(i in this.queue&&this.queue[i][h]===entry){delete this.queue[i][h];if(Object.keys(this.queue[i]).length===0){delete this.queue[i]}}};const entry=()=>{const s=`${h}:${i}`;let o=false;try{const d=n.connect(e,{createConnection:this.createConnection,settings:this.settings,session:this.tlsSessionCache.get(s),...t});d[a]=0;d[l]=false;const isFree=()=>d[a]<d.remoteSettings.maxConcurrentStreams;let p=true;d.socket.once(\"session\",(e=>{this.tlsSessionCache.set(s,e)}));d.once(\"error\",(e=>{for(const{reject:t}of r){t(e)}this.tlsSessionCache.delete(s)}));d.setTimeout(this.timeout,(()=>{d.destroy()}));d.once(\"close\",(()=>{if(o){if(p){this._freeSessionsCount--}this._sessionsCount--;const e=this.sessions[i];e.splice(e.indexOf(d),1);if(e.length===0){delete this.sessions[i]}}else{const e=new Error(\"Session closed without receiving a SETTINGS frame\");e.code=\"HTTP2WRAPPER_NOSETTINGS\";for(const{reject:t}of r){t(e)}removeFromQueue()}this._tryToCreateNewSession(i,h)}));const processListeners=()=>{if(!(i in this.queue)||!isFree()){return}for(const e of d[u]){if(e in this.queue[i]){const{listeners:t}=this.queue[i][e];while(t.length!==0&&isFree()){t.shift().resolve(d)}const r=this.queue[i];if(r[e].listeners.length===0){delete r[e];if(Object.keys(r).length===0){delete this.queue[i];break}}if(!isFree()){break}}}};d.on(\"origin\",(()=>{d[u]=d.originSet;if(!isFree()){return}processListeners();closeCoveredSessions(this.sessions[i],d)}));d.once(\"remoteSettings\",(()=>{d.ref();d.unref();this._sessionsCount++;if(entry.destroyed){const e=new Error(\"Agent has been destroyed\");for(const t of r){t.reject(e)}d.destroy();return}d[u]=d.originSet;{const e=this.sessions;if(i in e){const t=e[i];t.splice(getSortedIndex(t,d,compareSessions),0,d)}else{e[i]=[d]}}this._freeSessionsCount+=1;o=true;this.emit(\"session\",d);processListeners();removeFromQueue();if(d[a]===0&&this._freeSessionsCount>this.maxFreeSessions){d.close()}if(r.length!==0){this.getSession(h,t,r);r.length=0}d.on(\"remoteSettings\",(()=>{processListeners();closeCoveredSessions(this.sessions[i],d)}))}));d[c]=d.request;d.request=(e,t)=>{if(d[l]){throw new Error(\"The session is gracefully closing. No new streams are allowed.\")}const r=d[c](e,t);d.ref();++d[a];if(d[a]===d.remoteSettings.maxConcurrentStreams){this._freeSessionsCount--}r.once(\"close\",(()=>{p=isFree();--d[a];if(!d.destroyed&&!d.closed){closeSessionIfCovered(this.sessions[i],d);if(isFree()&&!d.closed){if(!p){this._freeSessionsCount++;p=true}const e=d[a]===0;if(e){d.unref()}if(e&&(this._freeSessionsCount>this.maxFreeSessions||d[l])){d.close()}else{closeCoveredSessions(this.sessions[i],d);processListeners()}}}}));return r}}catch(e){for(const t of r){t.reject(e)}removeFromQueue()}};entry.listeners=r;entry.completed=false;entry.destroyed=false;this.queue[i][h]=entry;this._tryToCreateNewSession(i,h)}))}request(e,t,r,s){return new Promise(((o,n)=>{this.getSession(e,t,[{reject:n,resolve:e=>{try{o(e.request(r,s))}catch(e){n(e)}}}])}))}createConnection(e,t){return Agent.connect(e,t)}static connect(e,t){t.ALPNProtocols=[\"h2\"];const r=e.port||443;const s=e.hostname||e.host;if(typeof t.servername===\"undefined\"){t.servername=s}return o.connect(r,s,t)}closeFreeSessions(){for(const e of Object.values(this.sessions)){for(const t of e){if(t[a]===0){t.close()}}}}destroy(e){for(const t of Object.values(this.sessions)){for(const r of t){r.destroy(e)}}for(const e of Object.values(this.queue)){for(const t of Object.values(e)){t.destroyed=true}}this.queue={}}get freeSessions(){return getSessions({agent:this,isFree:true})}get busySessions(){return getSessions({agent:this,isFree:false})}}Agent.kCurrentStreamsCount=a;Agent.kGracefullyClosing=l;e.exports={Agent:Agent,globalAgent:new Agent}},7167:(e,t,r)=>{\"use strict\";const s=r(3685);const o=r(5687);const n=r(6624);const i=r(9273);const a=r(9632);const c=r(1982);const u=r(2686);const l=new i({maxSize:100});const h=new Map;const installSocket=(e,t,r)=>{t._httpMessage={shouldKeepAlive:true};const onFree=()=>{e.emit(\"free\",t,r)};t.on(\"free\",onFree);const onClose=()=>{e.removeSocket(t,r)};t.on(\"close\",onClose);const onRemove=()=>{e.removeSocket(t,r);t.off(\"close\",onClose);t.off(\"free\",onFree);t.off(\"agentRemove\",onRemove)};t.on(\"agentRemove\",onRemove);e.emit(\"free\",t,r)};const resolveProtocol=async e=>{const t=`${e.host}:${e.port}:${e.ALPNProtocols.sort()}`;if(!l.has(t)){if(h.has(t)){const e=await h.get(t);return e.alpnProtocol}const{path:r,agent:s}=e;e.path=e.socketPath;const i=n(e);h.set(t,i);try{const{socket:n,alpnProtocol:a}=await i;l.set(t,a);e.path=r;if(a===\"h2\"){n.destroy()}else{const{globalAgent:t}=o;const r=o.Agent.prototype.createConnection;if(s){if(s.createConnection===r){installSocket(s,n,e)}else{n.destroy()}}else if(t.createConnection===r){installSocket(t,n,e)}else{n.destroy()}}h.delete(t);return a}catch(e){h.delete(t);throw e}}return l.get(t)};e.exports=async(e,t,r)=>{if(typeof e===\"string\"||e instanceof URL){e=u(new URL(e))}if(typeof t===\"function\"){r=t;t=undefined}t={ALPNProtocols:[\"h2\",\"http/1.1\"],...e,...t,resolveSocket:true};if(!Array.isArray(t.ALPNProtocols)||t.ALPNProtocols.length===0){throw new Error(\"The `ALPNProtocols` option must be an Array with at least one entry\")}t.protocol=t.protocol||\"https:\";const n=t.protocol===\"https:\";t.host=t.hostname||t.host||\"localhost\";t.session=t.tlsSession;t.servername=t.servername||c(t);t.port=t.port||(n?443:80);t._defaultAgent=n?o.globalAgent:s.globalAgent;const i=t.agent;if(i){if(i.addRequest){throw new Error(\"The `options.agent` object can contain only `http`, `https` or `http2` properties\")}t.agent=i[n?\"https\":\"http\"]}if(n){const e=await resolveProtocol(t);if(e===\"h2\"){if(i){t.agent=i.http2}return new a(t,r)}}return s.request(t,r)};e.exports.protocolCache=l},9632:(e,t,r)=>{\"use strict\";const s=r(5158);const{Writable:o}=r(2781);const{Agent:n,globalAgent:i}=r(9898);const a=r(2575);const c=r(2686);const u=r(1818);const l=r(1199);const{ERR_INVALID_ARG_TYPE:h,ERR_INVALID_PROTOCOL:d,ERR_HTTP_HEADERS_SENT:p,ERR_INVALID_HTTP_TOKEN:m,ERR_HTTP_INVALID_HEADER_VALUE:y,ERR_INVALID_CHAR:g}=r(7087);const{HTTP2_HEADER_STATUS:b,HTTP2_HEADER_METHOD:_,HTTP2_HEADER_PATH:w,HTTP2_METHOD_CONNECT:v}=s.constants;const E=Symbol(\"headers\");const S=Symbol(\"origin\");const x=Symbol(\"session\");const R=Symbol(\"options\");const k=Symbol(\"flushedHeaders\");const T=Symbol(\"jobs\");const P=/^[\\^`\\-\\w!#$%&*+.|~]+$/;const C=/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/;class ClientRequest extends o{constructor(e,t,r){super({autoDestroy:false});const s=typeof e===\"string\"||e instanceof URL;if(s){e=c(e instanceof URL?e:new URL(e))}if(typeof t===\"function\"||t===undefined){r=t;t=s?e:{...e}}else{t={...e,...t}}if(t.h2session){this[x]=t.h2session}else if(t.agent===false){this.agent=new n({maxFreeSessions:0})}else if(typeof t.agent===\"undefined\"||t.agent===null){if(typeof t.createConnection===\"function\"){this.agent=new n({maxFreeSessions:0});this.agent.createConnection=t.createConnection}else{this.agent=i}}else if(typeof t.agent.request===\"function\"){this.agent=t.agent}else{throw new h(\"options.agent\",[\"Agent-like Object\",\"undefined\",\"false\"],t.agent)}if(t.protocol&&t.protocol!==\"https:\"){throw new d(t.protocol,\"https:\")}const o=t.port||t.defaultPort||this.agent&&this.agent.defaultPort||443;const a=t.hostname||t.host||\"localhost\";delete t.hostname;delete t.host;delete t.port;const{timeout:u}=t;t.timeout=undefined;this[E]=Object.create(null);this[T]=[];this.socket=null;this.connection=null;this.method=t.method||\"GET\";this.path=t.path;this.res=null;this.aborted=false;this.reusedSocket=false;if(t.headers){for(const[e,r]of Object.entries(t.headers)){this.setHeader(e,r)}}if(t.auth&&!(\"authorization\"in this[E])){this[E].authorization=\"Basic \"+Buffer.from(t.auth).toString(\"base64\")}t.session=t.tlsSession;t.path=t.socketPath;this[R]=t;if(o===443){this[S]=`https://${a}`;if(!(\":authority\"in this[E])){this[E][\":authority\"]=a}}else{this[S]=`https://${a}:${o}`;if(!(\":authority\"in this[E])){this[E][\":authority\"]=`${a}:${o}`}}if(u){this.setTimeout(u)}if(r){this.once(\"response\",r)}this[k]=false}get method(){return this[E][_]}set method(e){if(e){this[E][_]=e.toUpperCase()}}get path(){return this[E][w]}set path(e){if(e){this[E][w]=e}}get _mustNotHaveABody(){return this.method===\"GET\"||this.method===\"HEAD\"||this.method===\"DELETE\"}_write(e,t,r){if(this._mustNotHaveABody){r(new Error(\"The GET, HEAD and DELETE methods must NOT have a body\"));return}this.flushHeaders();const callWrite=()=>this._request.write(e,t,r);if(this._request){callWrite()}else{this[T].push(callWrite)}}_final(e){if(this.destroyed){return}this.flushHeaders();const callEnd=()=>{if(this._mustNotHaveABody){e();return}this._request.end(e)};if(this._request){callEnd()}else{this[T].push(callEnd)}}abort(){if(this.res&&this.res.complete){return}if(!this.aborted){process.nextTick((()=>this.emit(\"abort\")))}this.aborted=true;this.destroy()}_destroy(e,t){if(this.res){this.res._dump()}if(this._request){this._request.destroy()}t(e)}async flushHeaders(){if(this[k]||this.destroyed){return}this[k]=true;const e=this.method===v;const onStream=t=>{this._request=t;if(this.destroyed){t.destroy();return}if(!e){u(t,this,[\"timeout\",\"continue\",\"close\",\"error\"])}const waitForEnd=e=>(...t)=>{if(!this.writable&&!this.destroyed){e(...t)}else{this.once(\"finish\",(()=>{e(...t)}))}};t.once(\"response\",waitForEnd(((r,s,o)=>{const n=new a(this.socket,t.readableHighWaterMark);this.res=n;n.req=this;n.statusCode=r[b];n.headers=r;n.rawHeaders=o;n.once(\"end\",(()=>{if(this.aborted){n.aborted=true;n.emit(\"aborted\")}else{n.complete=true;n.socket=null;n.connection=null}}));if(e){n.upgrade=true;if(this.emit(\"connect\",n,t,Buffer.alloc(0))){this.emit(\"close\")}else{t.destroy()}}else{t.on(\"data\",(e=>{if(!n._dumped&&!n.push(e)){t.pause()}}));t.once(\"end\",(()=>{n.push(null)}));if(!this.emit(\"response\",n)){n._dump()}}})));t.once(\"headers\",waitForEnd((e=>this.emit(\"information\",{statusCode:e[b]}))));t.once(\"trailers\",waitForEnd(((e,t,r)=>{const{res:s}=this;s.trailers=e;s.rawTrailers=r})));const{socket:r}=t.session;this.socket=r;this.connection=r;for(const e of this[T]){e()}this.emit(\"socket\",this.socket)};if(this[x]){try{onStream(this[x].request(this[E]))}catch(e){this.emit(\"error\",e)}}else{this.reusedSocket=true;try{onStream(await this.agent.request(this[S],this[R],this[E]))}catch(e){this.emit(\"error\",e)}}}getHeader(e){if(typeof e!==\"string\"){throw new h(\"name\",\"string\",e)}return this[E][e.toLowerCase()]}get headersSent(){return this[k]}removeHeader(e){if(typeof e!==\"string\"){throw new h(\"name\",\"string\",e)}if(this.headersSent){throw new p(\"remove\")}delete this[E][e.toLowerCase()]}setHeader(e,t){if(this.headersSent){throw new p(\"set\")}if(typeof e!==\"string\"||!P.test(e)&&!l(e)){throw new m(\"Header name\",e)}if(typeof t===\"undefined\"){throw new y(t,e)}if(C.test(t)){throw new g(\"header content\",e)}this[E][e.toLowerCase()]=t}setNoDelay(){}setSocketKeepAlive(){}setTimeout(e,t){const applyTimeout=()=>this._request.setTimeout(e,t);if(this._request){applyTimeout()}else{this[T].push(applyTimeout)}return this}get maxHeadersCount(){if(!this.destroyed&&this._request){return this._request.session.localSettings.maxHeaderListSize}return undefined}set maxHeadersCount(e){}}e.exports=ClientRequest},2575:(e,t,r)=>{\"use strict\";const{Readable:s}=r(2781);class IncomingMessage extends s{constructor(e,t){super({highWaterMark:t,autoDestroy:false});this.statusCode=null;this.statusMessage=\"\";this.httpVersion=\"2.0\";this.httpVersionMajor=2;this.httpVersionMinor=0;this.headers={};this.trailers={};this.req=null;this.aborted=false;this.complete=false;this.upgrade=null;this.rawHeaders=[];this.rawTrailers=[];this.socket=e;this.connection=e;this._dumped=false}_destroy(e){this.req._request.destroy(e)}setTimeout(e,t){this.req.setTimeout(e,t);return this}_dump(){if(!this._dumped){this._dumped=true;this.removeAllListeners(\"data\");this.resume()}}_read(){if(this.req){this.req._request.resume()}}}e.exports=IncomingMessage},4645:(e,t,r)=>{\"use strict\";const s=r(5158);const o=r(9898);const n=r(9632);const i=r(2575);const a=r(7167);const request=(e,t,r)=>new n(e,t,r);const get=(e,t,r)=>{const s=new n(e,t,r);s.end();return s};e.exports={...s,ClientRequest:n,IncomingMessage:i,...o,request:request,get:get,auto:a}},1982:(e,t,r)=>{\"use strict\";const s=r(1808);e.exports=e=>{let t=e.host;const r=e.headers&&e.headers.host;if(r){if(r.startsWith(\"[\")){const e=r.indexOf(\"]\");if(e===-1){t=r}else{t=r.slice(1,-1)}}else{t=r.split(\":\",1)[0]}}if(s.isIP(t)){return\"\"}return t}},7087:e=>{\"use strict\";const makeError=(t,r,s)=>{e.exports[r]=class NodeError extends t{constructor(...e){super(typeof s===\"string\"?s:s(e));this.name=`${super.name} [${r}]`;this.code=r}}};makeError(TypeError,\"ERR_INVALID_ARG_TYPE\",(e=>{const t=e[0].includes(\".\")?\"property\":\"argument\";let r=e[1];const s=Array.isArray(r);if(s){r=`${r.slice(0,-1).join(\", \")} or ${r.slice(-1)}`}return`The \"${e[0]}\" ${t} must be ${s?\"one of\":\"of\"} type ${r}. Received ${typeof e[2]}`}));makeError(TypeError,\"ERR_INVALID_PROTOCOL\",(e=>`Protocol \"${e[0]}\" not supported. Expected \"${e[1]}\"`));makeError(Error,\"ERR_HTTP_HEADERS_SENT\",(e=>`Cannot ${e[0]} headers after they are sent to the client`));makeError(TypeError,\"ERR_INVALID_HTTP_TOKEN\",(e=>`${e[0]} must be a valid HTTP token [${e[1]}]`));makeError(TypeError,\"ERR_HTTP_INVALID_HEADER_VALUE\",(e=>`Invalid value \"${e[0]} for header \"${e[1]}\"`));makeError(TypeError,\"ERR_INVALID_CHAR\",(e=>`Invalid character in ${e[0]} [${e[1]}]`))},1199:e=>{\"use strict\";e.exports=e=>{switch(e){case\":method\":case\":scheme\":case\":authority\":case\":path\":return true;default:return false}}},1818:e=>{\"use strict\";e.exports=(e,t,r)=>{for(const s of r){e.on(s,((...e)=>t.emit(s,...e)))}}},2686:e=>{\"use strict\";e.exports=e=>{const t={protocol:e.protocol,hostname:typeof e.hostname===\"string\"&&e.hostname.startsWith(\"[\")?e.hostname.slice(1,-1):e.hostname,host:e.host,hash:e.hash,search:e.search,pathname:e.pathname,href:e.href,path:`${e.pathname||\"\"}${e.search||\"\"}`};if(typeof e.port===\"string\"&&e.port.length!==0){t.port=Number(e.port)}if(e.username||e.password){t.auth=`${e.username||\"\"}:${e.password||\"\"}`}return t}},2820:(e,t)=>{t.stringify=function stringify(e){if(\"undefined\"==typeof e)return e;if(e&&Buffer.isBuffer(e))return JSON.stringify(\":base64:\"+e.toString(\"base64\"));if(e&&e.toJSON)e=e.toJSON();if(e&&\"object\"===typeof e){var t=\"\";var r=Array.isArray(e);t=r?\"[\":\"{\";var s=true;for(var o in e){var n=\"function\"==typeof e[o]||!r&&\"undefined\"===typeof e[o];if(Object.hasOwnProperty.call(e,o)&&!n){if(!s)t+=\",\";s=false;if(r){if(e[o]==undefined)t+=\"null\";else t+=stringify(e[o])}else if(e[o]!==void 0){t+=stringify(o)+\":\"+stringify(e[o])}}}t+=r?\"]\":\"}\";return t}else if(\"string\"===typeof e){return JSON.stringify(/^:/.test(e)?\":\"+e:e)}else if(\"undefined\"===typeof e){return\"null\"}else return JSON.stringify(e)};t.parse=function(e){return JSON.parse(e,(function(e,t){if(\"string\"===typeof t){if(/^:base64:/.test(t))return Buffer.from(t.substring(8),\"base64\");else return/^:/.test(t)?t.substring(1):t}return t}))}},1531:(e,t,r)=>{\"use strict\";const s=r(2361);const o=r(2820);const loadStore=e=>{const t={redis:\"@keyv/redis\",rediss:\"@keyv/redis\",mongodb:\"@keyv/mongo\",mongo:\"@keyv/mongo\",sqlite:\"@keyv/sqlite\",postgresql:\"@keyv/postgres\",postgres:\"@keyv/postgres\",mysql:\"@keyv/mysql\",etcd:\"@keyv/etcd\",offline:\"@keyv/offline\",tiered:\"@keyv/tiered\"};if(e.adapter||e.uri){const r=e.adapter||/^[^:+]*/.exec(e.uri)[0];return new(require(t[r]))(e)}return new Map};const n=[\"sqlite\",\"postgres\",\"mysql\",\"mongo\",\"redis\",\"tiered\"];class Keyv extends s{constructor(e,{emitErrors:t=true,...r}={}){super();this.opts={namespace:\"keyv\",serialize:o.stringify,deserialize:o.parse,...typeof e===\"string\"?{uri:e}:e,...r};if(!this.opts.store){const e={...this.opts};this.opts.store=loadStore(e)}if(this.opts.compression){const e=this.opts.compression;this.opts.serialize=e.serialize.bind(e);this.opts.deserialize=e.deserialize.bind(e)}if(typeof this.opts.store.on===\"function\"&&t){this.opts.store.on(\"error\",(e=>this.emit(\"error\",e)))}this.opts.store.namespace=this.opts.namespace;const generateIterator=e=>async function*(){for await(const[t,r]of typeof e===\"function\"?e(this.opts.store.namespace):e){const e=await this.opts.deserialize(r);if(this.opts.store.namespace&&!t.includes(this.opts.store.namespace)){continue}if(typeof e.expires===\"number\"&&Date.now()>e.expires){this.delete(t);continue}yield[this._getKeyUnprefix(t),e.value]}};if(typeof this.opts.store[Symbol.iterator]===\"function\"&&this.opts.store instanceof Map){this.iterator=generateIterator(this.opts.store)}else if(typeof this.opts.store.iterator===\"function\"&&this.opts.store.opts&&this._checkIterableAdaptar()){this.iterator=generateIterator(this.opts.store.iterator.bind(this.opts.store))}}_checkIterableAdaptar(){return n.includes(this.opts.store.opts.dialect)||n.findIndex((e=>this.opts.store.opts.url.includes(e)))>=0}_getKeyPrefix(e){return`${this.opts.namespace}:${e}`}_getKeyPrefixArray(e){return e.map((e=>`${this.opts.namespace}:${e}`))}_getKeyUnprefix(e){return e.split(\":\").splice(1).join(\":\")}get(e,t){const{store:r}=this.opts;const s=Array.isArray(e);const o=s?this._getKeyPrefixArray(e):this._getKeyPrefix(e);if(s&&r.getMany===undefined){const e=[];for(const s of o){e.push(Promise.resolve().then((()=>r.get(s))).then((e=>typeof e===\"string\"?this.opts.deserialize(e):this.opts.compression?this.opts.deserialize(e):e)).then((e=>{if(e===undefined||e===null){return undefined}if(typeof e.expires===\"number\"&&Date.now()>e.expires){return this.delete(s).then((()=>undefined))}return t&&t.raw?e:e.value})))}return Promise.allSettled(e).then((e=>{const t=[];for(const r of e){t.push(r.value)}return t}))}return Promise.resolve().then((()=>s?r.getMany(o):r.get(o))).then((e=>typeof e===\"string\"?this.opts.deserialize(e):this.opts.compression?this.opts.deserialize(e):e)).then((r=>{if(r===undefined||r===null){return undefined}if(s){const s=[];for(let o of r){if(typeof o===\"string\"){o=this.opts.deserialize(o)}if(o===undefined||o===null){s.push(undefined);continue}if(typeof o.expires===\"number\"&&Date.now()>o.expires){this.delete(e).then((()=>undefined));s.push(undefined)}else{s.push(t&&t.raw?o:o.value)}}return s}if(typeof r.expires===\"number\"&&Date.now()>r.expires){return this.delete(e).then((()=>undefined))}return t&&t.raw?r:r.value}))}set(e,t,r){const s=this._getKeyPrefix(e);if(typeof r===\"undefined\"){r=this.opts.ttl}if(r===0){r=undefined}const{store:o}=this.opts;return Promise.resolve().then((()=>{const e=typeof r===\"number\"?Date.now()+r:null;if(typeof t===\"symbol\"){this.emit(\"error\",\"symbol cannot be serialized\")}t={value:t,expires:e};return this.opts.serialize(t)})).then((e=>o.set(s,e,r))).then((()=>true))}delete(e){const{store:t}=this.opts;if(Array.isArray(e)){const r=this._getKeyPrefixArray(e);if(t.deleteMany===undefined){const e=[];for(const s of r){e.push(t.delete(s))}return Promise.allSettled(e).then((e=>e.every((e=>e.value===true))))}return Promise.resolve().then((()=>t.deleteMany(r)))}const r=this._getKeyPrefix(e);return Promise.resolve().then((()=>t.delete(r)))}clear(){const{store:e}=this.opts;return Promise.resolve().then((()=>e.clear()))}has(e){const t=this._getKeyPrefix(e);const{store:r}=this.opts;return Promise.resolve().then((async()=>{if(typeof r.has===\"function\"){return r.has(t)}const e=await r.get(t);return e!==undefined}))}disconnect(){const{store:e}=this.opts;if(typeof e.disconnect===\"function\"){return e.disconnect()}}}e.exports=Keyv},9662:e=>{\"use strict\";e.exports=e=>{const t={};for(const[r,s]of Object.entries(e)){t[r.toLowerCase()]=s}return t}},2610:e=>{\"use strict\";const t=[\"aborted\",\"complete\",\"headers\",\"httpVersion\",\"httpVersionMinor\",\"httpVersionMajor\",\"method\",\"rawHeaders\",\"rawTrailers\",\"setTimeout\",\"socket\",\"statusCode\",\"statusMessage\",\"trailers\",\"url\"];e.exports=(e,r)=>{if(r._readableState.autoDestroy){throw new Error(\"The second stream must have the `autoDestroy` option set to `false`\")}const s=new Set(Object.keys(e).concat(t));const o={};for(const t of s){if(t in r){continue}o[t]={get(){const r=e[t];const s=typeof r===\"function\";return s?r.bind(e):r},set(r){e[t]=r},enumerable:true,configurable:false}}Object.defineProperties(r,o);e.once(\"aborted\",(()=>{r.destroy();r.emit(\"aborted\")}));e.once(\"close\",(()=>{if(e.complete){if(r.readable){r.once(\"end\",(()=>{r.emit(\"close\")}))}else{r.emit(\"close\")}}else{r.emit(\"close\")}}));return r}},7952:e=>{\"use strict\";const t=\"text/plain\";const r=\"us-ascii\";const testParameter=(e,t)=>t.some((t=>t instanceof RegExp?t.test(e):t===e));const normalizeDataURL=(e,{stripHash:s})=>{const o=/^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(e);if(!o){throw new Error(`Invalid URL: ${e}`)}let{type:n,data:i,hash:a}=o.groups;const c=n.split(\";\");a=s?\"\":a;let u=false;if(c[c.length-1]===\"base64\"){c.pop();u=true}const l=(c.shift()||\"\").toLowerCase();const h=c.map((e=>{let[t,s=\"\"]=e.split(\"=\").map((e=>e.trim()));if(t===\"charset\"){s=s.toLowerCase();if(s===r){return\"\"}}return`${t}${s?`=${s}`:\"\"}`})).filter(Boolean);const d=[...h];if(u){d.push(\"base64\")}if(d.length!==0||l&&l!==t){d.unshift(l)}return`data:${d.join(\";\")},${u?i.trim():i}${a?`#${a}`:\"\"}`};const normalizeUrl=(e,t)=>{t={defaultProtocol:\"http:\",normalizeProtocol:true,forceHttp:false,forceHttps:false,stripAuthentication:true,stripHash:false,stripTextFragment:true,stripWWW:true,removeQueryParameters:[/^utm_\\w+/i],removeTrailingSlash:true,removeSingleSlash:true,removeDirectoryIndex:false,sortQueryParameters:true,...t};e=e.trim();if(/^data:/i.test(e)){return normalizeDataURL(e,t)}if(/^view-source:/i.test(e)){throw new Error(\"`view-source:` is not supported as it is a non-standard protocol\")}const r=e.startsWith(\"//\");const s=!r&&/^\\.*\\//.test(e);if(!s){e=e.replace(/^(?!(?:\\w+:)?\\/\\/)|^\\/\\//,t.defaultProtocol)}const o=new URL(e);if(t.forceHttp&&t.forceHttps){throw new Error(\"The `forceHttp` and `forceHttps` options cannot be used together\")}if(t.forceHttp&&o.protocol===\"https:\"){o.protocol=\"http:\"}if(t.forceHttps&&o.protocol===\"http:\"){o.protocol=\"https:\"}if(t.stripAuthentication){o.username=\"\";o.password=\"\"}if(t.stripHash){o.hash=\"\"}else if(t.stripTextFragment){o.hash=o.hash.replace(/#?:~:text.*?$/i,\"\")}if(o.pathname){o.pathname=o.pathname.replace(/(?<!\\b(?:[a-z][a-z\\d+\\-.]{1,50}:))\\/{2,}/g,\"/\")}if(o.pathname){try{o.pathname=decodeURI(o.pathname)}catch(e){}}if(t.removeDirectoryIndex===true){t.removeDirectoryIndex=[/^index\\.[a-z]+$/]}if(Array.isArray(t.removeDirectoryIndex)&&t.removeDirectoryIndex.length>0){let e=o.pathname.split(\"/\");const r=e[e.length-1];if(testParameter(r,t.removeDirectoryIndex)){e=e.slice(0,e.length-1);o.pathname=e.slice(1).join(\"/\")+\"/\"}}if(o.hostname){o.hostname=o.hostname.replace(/\\.$/,\"\");if(t.stripWWW&&/^www\\.(?!www\\.)(?:[a-z\\-\\d]{1,63})\\.(?:[a-z.\\-\\d]{2,63})$/.test(o.hostname)){o.hostname=o.hostname.replace(/^www\\./,\"\")}}if(Array.isArray(t.removeQueryParameters)){for(const e of[...o.searchParams.keys()]){if(testParameter(e,t.removeQueryParameters)){o.searchParams.delete(e)}}}if(t.removeQueryParameters===true){o.search=\"\"}if(t.sortQueryParameters){o.searchParams.sort()}if(t.removeTrailingSlash){o.pathname=o.pathname.replace(/\\/$/,\"\")}const n=e;e=o.toString();if(!t.removeSingleSlash&&o.pathname===\"/\"&&!n.endsWith(\"/\")&&o.hash===\"\"){e=e.replace(/\\/$/,\"\")}if((t.removeTrailingSlash||o.pathname===\"/\")&&o.hash===\"\"&&t.removeSingleSlash){e=e.replace(/\\/$/,\"\")}if(r&&!t.normalizeProtocol){e=e.replace(/^http:\\/\\//,\"//\")}if(t.stripProtocol){e=e.replace(/^(?:https?:)?\\/\\//,\"\")}return e};e.exports=normalizeUrl},1223:(e,t,r)=>{var s=r(2940);e.exports=s(once);e.exports.strict=s(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,\"once\",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,\"onceStrict\",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var t=e.name||\"Function wrapped with `once`\";f.onceError=t+\" shouldn't be called more than once\";f.called=false;return f}},9072:e=>{\"use strict\";class CancelError extends Error{constructor(e){super(e||\"Promise was canceled\");this.name=\"CancelError\"}get isCanceled(){return true}}class PCancelable{static fn(e){return(...t)=>new PCancelable(((r,s,o)=>{t.push(o);e(...t).then(r,s)}))}constructor(e){this._cancelHandlers=[];this._isPending=true;this._isCanceled=false;this._rejectOnCancel=true;this._promise=new Promise(((t,r)=>{this._reject=r;const onResolve=e=>{if(!this._isCanceled||!onCancel.shouldReject){this._isPending=false;t(e)}};const onReject=e=>{this._isPending=false;r(e)};const onCancel=e=>{if(!this._isPending){throw new Error(\"The `onCancel` handler was attached after the promise settled.\")}this._cancelHandlers.push(e)};Object.defineProperties(onCancel,{shouldReject:{get:()=>this._rejectOnCancel,set:e=>{this._rejectOnCancel=e}}});return e(onResolve,onReject,onCancel)}))}then(e,t){return this._promise.then(e,t)}catch(e){return this._promise.catch(e)}finally(e){return this._promise.finally(e)}cancel(e){if(!this._isPending||this._isCanceled){return}this._isCanceled=true;if(this._cancelHandlers.length>0){try{for(const e of this._cancelHandlers){e()}}catch(e){this._reject(e);return}}if(this._rejectOnCancel){this._reject(new CancelError(e))}}get isCanceled(){return this._isCanceled}}Object.setPrototypeOf(PCancelable.prototype,Promise.prototype);e.exports=PCancelable;e.exports.CancelError=CancelError},8341:(e,t,r)=>{var s=r(1223);var o=r(1205);var n=r(7147);var noop=function(){};var i=/^v?\\.0/.test(process.version);var isFn=function(e){return typeof e===\"function\"};var isFS=function(e){if(!i)return false;if(!n)return false;return(e instanceof(n.ReadStream||noop)||e instanceof(n.WriteStream||noop))&&isFn(e.close)};var isRequest=function(e){return e.setHeader&&isFn(e.abort)};var destroyer=function(e,t,r,n){n=s(n);var i=false;e.on(\"close\",(function(){i=true}));o(e,{readable:t,writable:r},(function(e){if(e)return n(e);i=true;n()}));var a=false;return function(t){if(i)return;if(a)return;a=true;if(isFS(e))return e.close(noop);if(isRequest(e))return e.abort();if(isFn(e.destroy))return e.destroy();n(t||new Error(\"stream was destroyed\"))}};var call=function(e){e()};var pipe=function(e,t){return e.pipe(t)};var pump=function(){var e=Array.prototype.slice.call(arguments);var t=isFn(e[e.length-1]||noop)&&e.pop()||noop;if(Array.isArray(e[0]))e=e[0];if(e.length<2)throw new Error(\"pump requires two streams per minimum\");var r;var s=e.map((function(o,n){var i=n<e.length-1;var a=n>0;return destroyer(o,i,a,(function(e){if(!r)r=e;if(e)s.forEach(call);if(i)return;s.forEach(call);t(r)}))}));return e.reduce(pipe)};e.exports=pump},9273:e=>{\"use strict\";class QuickLRU{constructor(e={}){if(!(e.maxSize&&e.maxSize>0)){throw new TypeError(\"`maxSize` must be a number greater than 0\")}this.maxSize=e.maxSize;this.onEviction=e.onEviction;this.cache=new Map;this.oldCache=new Map;this._size=0}_set(e,t){this.cache.set(e,t);this._size++;if(this._size>=this.maxSize){this._size=0;if(typeof this.onEviction===\"function\"){for(const[e,t]of this.oldCache.entries()){this.onEviction(e,t)}}this.oldCache=this.cache;this.cache=new Map}}get(e){if(this.cache.has(e)){return this.cache.get(e)}if(this.oldCache.has(e)){const t=this.oldCache.get(e);this.oldCache.delete(e);this._set(e,t);return t}}set(e,t){if(this.cache.has(e)){this.cache.set(e,t)}else{this._set(e,t)}return this}has(e){return this.cache.has(e)||this.oldCache.has(e)}peek(e){if(this.cache.has(e)){return this.cache.get(e)}if(this.oldCache.has(e)){return this.oldCache.get(e)}}delete(e){const t=this.cache.delete(e);if(t){this._size--}return this.oldCache.delete(e)||t}clear(){this.cache.clear();this.oldCache.clear();this._size=0}*keys(){for(const[e]of this){yield e}}*values(){for(const[,e]of this){yield e}}*[Symbol.iterator](){for(const e of this.cache){yield e}for(const e of this.oldCache){const[t]=e;if(!this.cache.has(t)){yield e}}}get size(){let e=0;for(const t of this.oldCache.keys()){if(!this.cache.has(t)){e++}}return Math.min(this._size+e,this.maxSize)}}e.exports=QuickLRU},6624:(e,t,r)=>{\"use strict\";const s=r(4404);e.exports=(e={},t=s.connect)=>new Promise(((r,s)=>{let o=false;let n;const callback=async()=>{await i;n.off(\"timeout\",onTimeout);n.off(\"error\",s);if(e.resolveSocket){r({alpnProtocol:n.alpnProtocol,socket:n,timeout:o});if(o){await Promise.resolve();n.emit(\"timeout\")}}else{n.destroy();r({alpnProtocol:n.alpnProtocol,timeout:o})}};const onTimeout=async()=>{o=true;callback()};const i=(async()=>{try{n=await t(e,callback);n.on(\"error\",s);n.once(\"timeout\",onTimeout)}catch(e){s(e)}})()}))},9004:(e,t,r)=>{\"use strict\";const s=r(2781).Readable;const o=r(9662);class Response extends s{constructor(e,t,r,s){if(typeof e!==\"number\"){throw new TypeError(\"Argument `statusCode` should be a number\")}if(typeof t!==\"object\"){throw new TypeError(\"Argument `headers` should be an object\")}if(!(r instanceof Buffer)){throw new TypeError(\"Argument `body` should be a buffer\")}if(typeof s!==\"string\"){throw new TypeError(\"Argument `url` should be a string\")}super();this.statusCode=e;this.headers=o(t);this.body=r;this.url=s}_read(){this.push(this.body);this.push(null)}}e.exports=Response},2940:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!==\"function\")throw new TypeError(\"need wrapper function\");Object.keys(e).forEach((function(t){wrapper[t]=e[t]}));return wrapper;function wrapper(){var t=new Array(arguments.length);for(var r=0;r<t.length;r++){t[r]=arguments[r]}var s=e.apply(this,t);var o=t[t.length-1];if(typeof s===\"function\"&&s!==o){Object.keys(o).forEach((function(e){s[e]=o[e]}))}return s}}},4300:e=>{\"use strict\";e.exports=require(\"buffer\")},9523:e=>{\"use strict\";e.exports=require(\"dns\")},2361:e=>{\"use strict\";e.exports=require(\"events\")},7147:e=>{\"use strict\";e.exports=require(\"fs\")},3685:e=>{\"use strict\";e.exports=require(\"http\")},5158:e=>{\"use strict\";e.exports=require(\"http2\")},5687:e=>{\"use strict\";e.exports=require(\"https\")},1808:e=>{\"use strict\";e.exports=require(\"net\")},2037:e=>{\"use strict\";e.exports=require(\"os\")},2781:e=>{\"use strict\";e.exports=require(\"stream\")},4404:e=>{\"use strict\";e.exports=require(\"tls\")},7310:e=>{\"use strict\";e.exports=require(\"url\")},3837:e=>{\"use strict\";e.exports=require(\"util\")},9796:e=>{\"use strict\";e.exports=require(\"zlib\")}};var t={};function __nccwpck_require__(r){var s=t[r];if(s!==undefined){return s.exports}var o=t[r]={exports:{}};var n=true;try{e[r].call(o.exports,o,o.exports,__nccwpck_require__);n=false}finally{if(n)delete t[r]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(3061);module.exports=r})();", "explanation": "The provided block appears to be a JavaScript module that exports a function or object related to HTTP requests. It seems to be a part of a larger library or framework for making HTTP requests in a more structured and type-safe way.\n\nHere's a concise summary of the purpose and functionality of this block:\n\n**Purpose:** This module exports a function or object that can be used to make HTTP requests in a more structured and type-safe way.\n\n**Functionality:**\n\n* It exports a function `Request` that creates a new request object, which can be used to make HTTP requests.\n* It exports a function `RequestError` that creates a new error object when an HTTP request fails.\n* It exports various utility functions and constants related to HTTP requests, such as `getStream`, `parseBody`, `calculateRetryDelay`, etc.\n* It exports several helper functions for working with promises, such as `waitForOpenFile` and `Z`.\n* It exports a set of constants and utility functions for working with HTTP response bodies, such as `H`, `I`, `U`, `W`, `V`, `G`.\n* It exports several wrapper functions for working with the `EventEmitter` and `Duplex` classes, such as `emitterWrapper`.\n\nThe specific functionality of the `Request` function is to create a new request object that can be used to make an HTTP request. It takes several options as arguments, such as the URL, headers, body, etc. It returns a Promise that resolves to an object representing the HTTP response.\n\nOverall, this block appears to be part of a larger library or framework for making HTTP requests in a more structured and type-safe way. It provides a set of tools and utilities for working with HTTP requests, including functions for creating new requests, handling errors, and working with response bodies.\nThis is a Node.js module that provides a high-level HTTP client API, known as `got`. The API is designed to be easy to use and provides features such as automatic retrying of requests, buffering of responses, and the ability to pipe responses to other streams.\n\nHere's a breakdown of the code:\n\n1. The module exports a single function, `got`, which is the main entry point for the API.\n2. The `got` function takes several arguments:\n\t* `url`: the URL of the resource to retrieve.\n\t* `options`: an object that configures the request. This can include options such as `headers`, `method`, `query`, and more.\n\t* `r`: a callback function that will be called with the response object as an argument.\n3. The `got` function creates a new `ClientRequest` object, which is a stream that represents the request.\n4. The `ClientRequest` object is then used to send the request to the server.\n5. The response object is then parsed and passed to the callback function `r`.\n6. The `got` function also provides several convenience methods, such as `stream`, `downloadProgress`, and `uploadProgress`, which make it easier to work with the response object.\n\nSome key features of the `got` API include:\n\n* Automatic retrying of requests\n* Buffering of responses\n* Ability to pipe responses to other streams\n* Support for multiple request methods (GET, POST, PUT, DELETE, etc.)\n* Support for query parameters and headers\n\nOverall, the `got` API provides a simple and convenient way to make HTTP requests in Node.js, with a focus on ease of use and flexibility.\n\nHere is a code snippet that demonstrates how to use the `got` API:\n```javascript\nconst got = require('got');\n\nconst url = 'https://example.com';\nconst options = {\n  method: 'GET',\n  headers: {\n    'Authorization': 'Bearer mytoken',\n    'Accept': 'application/json'\n  }\n};\n\ngot(url, options)\n  .then(response => {\n    console.log(response.body);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n```\nThis code sends a GET request to the specified URL, with the specified headers and headers. The response body is then logged to the console.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/got/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the 'compiled/got/index.js' file:\n\n**File Summary:**\n\nThe 'compiled/got/index.js' file is a JavaScript module that provides a high-level HTTP client API, known as 'got'. It exports a single function, `got`, which is the main entry point for making HTTP requests.\n\n**Key Features:**\n\n- Automatic retrying of requests\n- Buffering of responses\n- Ability to pipe responses to other streams\n- Support for multiple request methods (GET, POST, PUT, DELETE, etc.)\n- Support for query parameters and headers\n\n**Functionality:**\n\n- Creates a new request object using the `got` function\n- Provides convenience methods for working with the response object (stream, downloadProgress, uploadProgress)\n- Handles errors using the `RequestError` function\n\n**Usage Example:**\n\n```javascript\nconst got = require('got');\n\nconst url = 'https://example.com';\nconst options = {\n  method: 'GET',\n  headers: {\n    'Authorization': 'Bearer mytoken',\n    'Accept': 'application/json'\n  }\n};\n\ngot(url, options)\n  .then(response => {\n    console.log(response.body);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n```"}
{"code": "(()=>{\"use strict\";var e={517:(e,r)=>{\n/** @license React v17.0.2\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This is a JavaScript block, specifically an immediately invoked arrow function (IIFE) that starts a strict mode and defines an object `e` with a property `517` that holds a function `r`. \n\nThe purpose appears to be a part of the React library, specifically version 17.0.2, based on the license headers. The block defines properties and functionality for a JavaScript module.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'compiled/react-is/index.js' file:\n\nThe 'react-is' file is a utility library that provides a set of reusable functions for React developers to work with React elements and components efficiently. It exports various type checks, validation, and type conversions to aid in performance optimization, debugging, and validation tasks. This file is part of the React library and plays a crucial role in allowing developers to effectively use React's features."}
{"code": "if(process.env.NODE_ENV!==\"production\"){(function(){\"use strict\";var e=60103;var t=60106;var n=60107;var o=60108;var a=60114;var i=60109;var s=60110;var c=60112;var f=60113;var u=60120;var p=60115;var l=60116;var d=60121;var v=60122;var m=60117;var _=60119;var $=60128;var b=60129;var w=60130;var C=60131;if(typeof Symbol===\"function\"&&Symbol.for){var M=Symbol.for;e=M(\"react.element\");t=M(\"react.portal\");n=M(\"react.fragment\");o=M(\"react.strict_mode\");a=M(\"react.profiler\");i=M(\"react.provider\");s=M(\"react.context\");c=M(\"react.forward_ref\");f=M(\"react.suspense\");u=M(\"react.suspense_list\");p=M(\"react.memo\");l=M(\"react.lazy\");d=M(\"react.block\");v=M(\"react.server.block\");m=M(\"react.fundamental\");_=M(\"react.scope\");$=M(\"react.opaque.id\");b=M(\"react.debug_trace_mode\");w=M(\"react.offscreen\");C=M(\"react.legacy_hidden\")}var x=false;function isValidElementType(e){if(typeof e===\"string\"||typeof e===\"function\"){return true}if(e===n||e===a||e===b||e===o||e===f||e===u||e===C||x){return true}if(typeof e===\"object\"&&e!==null){if(e.$$typeof===l||e.$$typeof===p||e.$$typeof===i||e.$$typeof===s||e.$$typeof===c||e.$$typeof===m||e.$$typeof===d||e[0]===v){return true}}return false}function typeOf(r){if(typeof r===\"object\"&&r!==null){var d=r.$$typeof;switch(d){case e:var v=r.type;switch(v){case n:case a:case o:case f:case u:return v;default:var m=v&&v.$$typeof;switch(m){case s:case c:case l:case p:case i:return m;default:return d}}case t:return d}}return undefined}var P=s;var S=i;var O=e;var g=c;var E=n;var h=l;var F=p;var R=t;var k=a;var z=o;var j=f;var q=false;var L=false;function isAsyncMode(e){{if(!q){q=true;console[\"warn\"](\"The ReactIs.isAsyncMode() alias has been deprecated, \"+\"and will be removed in React 18+.\")}}return false}function isConcurrentMode(e){{if(!L){L=true;console[\"warn\"](\"The ReactIs.isConcurrentMode() alias has been deprecated, \"+\"and will be removed in React 18+.\")}}return false}function isContextConsumer(e){return typeOf(e)===s}function isContextProvider(e){return typeOf(e)===i}function isElement(r){return typeof r===\"object\"&&r!==null&&r.$$typeof===e}function isForwardRef(e){return typeOf(e)===c}function isFragment(e){return typeOf(e)===n}function isLazy(e){return typeOf(e)===l}function isMemo(e){return typeOf(e)===p}function isPortal(e){return typeOf(e)===t}function isProfiler(e){return typeOf(e)===a}function isStrictMode(e){return typeOf(e)===o}function isSuspense(e){return typeOf(e)===f}r.ContextConsumer=P;r.ContextProvider=S;r.Element=O;r.ForwardRef=g;r.Fragment=E;r.Lazy=h;r.Memo=F;r.Portal=R;r.Profiler=k;r.StrictMode=z;r.Suspense=j;r.isAsyncMode=isAsyncMode;r.isConcurrentMode=isConcurrentMode;r.isContextConsumer=isContextConsumer;r.isContextProvider=isContextProvider;r.isElement=isElement;r.isForwardRef=isForwardRef;r.isFragment=isFragment;r.isLazy=isLazy;r.isMemo=isMemo;r.isPortal=isPortal;r.isProfiler=isProfiler;r.isStrictMode=isStrictMode;r.isSuspense=isSuspense;r.isValidElementType=isValidElementType;r.typeOf=typeOf})()}},402:(e,r)=>{", "explanation": "This block appears to be a JavaScript module or a part of a utility library for React. It defines a set of utility functions to check the type of React elements and components, and exposes these functions as properties on the `ReactIs` object.\n\nThe primary purpose of this module is to provide a concise and efficient way to determine the type of a React element or component, which can be useful for various tasks such as performance optimization, debugging, and validation.\n\nThe functions and properties exposed by this module include:\n\n* Type checks: `isElement`, `isFragment`, `isPortal`, `isProfiler`, `isStrictMode`, `isSuspense`, etc.\n* Validation: `isValidElementType`\n* Type conversions: `typeOf`\n* Debugging: `isAsyncMode` and `isConcurrentMode` (deprecated)\n\nOverall, this module is designed to be a utility library that provides a set of reusable functions for working with React elements and components.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'compiled/react-is/index.js' file:\n\nThe 'react-is' file is a utility library that provides a set of reusable functions for React developers to work with React elements and components efficiently. It exports various type checks, validation, and type conversions to aid in performance optimization, debugging, and validation tasks. This file is part of the React library and plays a crucial role in allowing developers to effectively use React's features."}
{"code": "/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This is a JavaScript file containing licensing information for the React library. Its purpose is to declare the MIT license under which React is distributed.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'compiled/react-is/index.js' file:\n\nThe 'react-is' file is a utility library that provides a set of reusable functions for React developers to work with React elements and components efficiently. It exports various type checks, validation, and type conversions to aid in performance optimization, debugging, and validation tasks. This file is part of the React library and plays a crucial role in allowing developers to effectively use React's features."}
{"code": "var t=60103,n=60106,o=60107,a=60108,i=60114,s=60109,c=60110,f=60112,u=60113,p=60120,l=60115,d=60116,v=60121,m=60122,_=60117,$=60129,b=60131;if(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;t=w(\"react.element\");n=w(\"react.portal\");o=w(\"react.fragment\");a=w(\"react.strict_mode\");i=w(\"react.profiler\");s=w(\"react.provider\");c=w(\"react.context\");f=w(\"react.forward_ref\");u=w(\"react.suspense\");p=w(\"react.suspense_list\");l=w(\"react.memo\");d=w(\"react.lazy\");v=w(\"react.block\");m=w(\"react.server.block\");_=w(\"react.fundamental\");$=w(\"react.debug_trace_mode\");b=w(\"react.legacy_hidden\")}function y(e){if(\"object\"===typeof e&&null!==e){var r=e.$$typeof;switch(r){case t:switch(e=e.type,e){case o:case i:case a:case u:case p:return e;default:switch(e=e&&e.$$typeof,e){case c:case f:case d:case l:case s:return e;default:return r}}case n:return r}}}var C=s,M=t,x=f,P=o,S=d,O=l,g=n,E=i,h=a,F=u;r.ContextConsumer=c;r.ContextProvider=C;r.Element=M;r.ForwardRef=x;r.Fragment=P;r.Lazy=S;r.Memo=O;r.Portal=g;r.Profiler=E;r.StrictMode=h;r.Suspense=F;r.isAsyncMode=function(){return!1};r.isConcurrentMode=function(){return!1};r.isContextConsumer=function(e){return y(e)===c};r.isContextProvider=function(e){return y(e)===s};r.isElement=function(e){return\"object\"===typeof e&&null!==e&&e.$$typeof===t};r.isForwardRef=function(e){return y(e)===f};r.isFragment=function(e){return y(e)===o};r.isLazy=function(e){return y(e)===d};r.isMemo=function(e){return y(e)===l};r.isPortal=function(e){return y(e)===n};r.isProfiler=function(e){return y(e)===i};r.isStrictMode=function(e){return y(e)===a};r.isSuspense=function(e){return y(e)===u};r.isValidElementType=function(e){return\"string\"===typeof e||\"function\"===typeof e||e===o||e===i||e===$||e===a||e===u||e===p||e===b||\"object\"===typeof e&&null!==e&&(e.$$typeof===d||e.$$typeof===l||e.$$typeof===s||e.$$typeof===c||e.$$typeof===f||e.$$typeof===_||e.$$typeof===v||e[0]===m)?!0:!1};r.typeOf=y},93:(e,r,t)=>{if(process.env.NODE_ENV===\"production\"){e.exports=t(402)}else{e.exports=t(517)}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var o=r[t]={exports:{}};var a=true;try{e[t](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(93);module.exports=t})();", "explanation": "This block appears to be a Node.js module or a JavaScript library that defines the React library. Its purpose is to create a virtual DOM (a lightweight in-memory representation of a real DOM) and provide functions for rendering, updating, and manipulating the DOM.\n\nThe functionality includes:\n\n1. Defining various React types, such as elements, fragments, portals, context consumers/providers, lazy components, and others, through Symbols for optimization and performance.\n2. Providing the `isValidElementType` function to check if a value is a valid element type.\n3. Exporting the React library's types and functions, including `isValidElementType`.\n\nOverall, this block is a crucial part of the React library, allowing developers to effectively use React's features and build complex user interfaces.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react-is/index.js", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'compiled/react-is/index.js' file:\n\nThe 'react-is' file is a utility library that provides a set of reusable functions for React developers to work with React elements and components efficiently. It exports various type checks, validation, and type conversions to aid in performance optimization, debugging, and validation tasks. This file is part of the React library and plays a crucial role in allowing developers to effectively use React's features."}
{"code": "(()=>{\"use strict\";var e={426:e=>{\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/", "explanation": "This block defines an immediately invoked function expression (IIFE) that assigns additional properties to the global object using the object-assign polyfill.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react/index.js", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file `compiled/react/index.js`:\n\nThis is a React JavaScript library implementation that exports various functions and properties for building React applications. It provides polyfills for `Object.assign()` and offers a consistent way to merge objects across environments. The library defines internal React state and updates through prototypes, rendering child components, and managing React context and versioning. It includes functions for error tracking, component lifecycle management, and utility functions for cloning elements, forward references, and context creation. The library is licensed under the MIT license."}
{"code": "var r=Object.getOwnPropertySymbols;var t=Object.prototype.hasOwnProperty;var n=Object.prototype.propertyIsEnumerable;function toObject(e){if(e===null||e===undefined){throw new TypeError(\"Object.assign cannot be called with null or undefined\")}return Object(e)}function shouldUseNative(){try{if(!Object.assign){return false}var e=new String(\"abc\");e[5]=\"de\";if(Object.getOwnPropertyNames(e)[0]===\"5\"){return false}var r={};for(var t=0;t<10;t++){r[\"_\"+String.fromCharCode(t)]=t}var n=Object.getOwnPropertyNames(r).map((function(e){return r[e]}));if(n.join(\"\")!==\"0123456789\"){return false}var a={};\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){a[e]=e}));if(Object.keys(Object.assign({},a)).join(\"\")!==\"abcdefghijklmnopqrst\"){return false}return true}catch(e){return false}}e.exports=shouldUseNative()?Object.assign:function(e,a){var o;var i=toObject(e);var u;for(var s=1;s<arguments.length;s++){o=Object(arguments[s]);for(var l in o){if(t.call(o,l)){i[l]=o[l]}}if(r){u=r(o);for(var c=0;c<u.length;c++){if(n.call(o,u[c])){i[u[c]]=o[u[c]]}}}}return i}},857:(e,r,t)=>{", "explanation": "This block appears to be a polyfill implementation for the `Object.assign()` method. It checks if the native implementation exists and is functional, and if not, it provides a fallback implementation. \n\nThe purpose is to provide a consistent way to merge objects across different environments, including older browsers that do not natively support `Object.assign()`.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react/index.js", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file `compiled/react/index.js`:\n\nThis is a React JavaScript library implementation that exports various functions and properties for building React applications. It provides polyfills for `Object.assign()` and offers a consistent way to merge objects across environments. The library defines internal React state and updates through prototypes, rendering child components, and managing React context and versioning. It includes functions for error tracking, component lifecycle management, and utility functions for cloning elements, forward references, and context creation. The library is licensed under the MIT license."}
{"code": "/** @license React v17.0.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This block is a license header for the React JavaScript library, specifically indicating that it is licensed under the MIT license.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react/index.js", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file `compiled/react/index.js`:\n\nThis is a React JavaScript library implementation that exports various functions and properties for building React applications. It provides polyfills for `Object.assign()` and offers a consistent way to merge objects across environments. The library defines internal React state and updates through prototypes, rendering child components, and managing React context and versioning. It includes functions for error tracking, component lifecycle management, and utility functions for cloning elements, forward references, and context creation. The library is licensed under the MIT license."}
{"code": "if(process.env.NODE_ENV!==\"production\"){(function(){\"use strict\";var e=t(426);var n=\"17.0.2\";var a=60103;var o=60106;r.Fragment=60107;r.StrictMode=60108;r.Profiler=60114;var i=60109;var u=60110;var s=60112;r.Suspense=60113;var l=60120;var c=60115;var f=60116;var p=60121;var d=60122;var m=60117;var v=60119;var h=60128;var g=60129;var b=60130;var _=60131;if(typeof Symbol===\"function\"&&Symbol.for){var w=Symbol.for;a=w(\"react.element\");o=w(\"react.portal\");r.Fragment=w(\"react.fragment\");r.StrictMode=w(\"react.strict_mode\");r.Profiler=w(\"react.profiler\");i=w(\"react.provider\");u=w(\"react.context\");s=w(\"react.forward_ref\");r.Suspense=w(\"react.suspense\");l=w(\"react.suspense_list\");c=w(\"react.memo\");f=w(\"react.lazy\");p=w(\"react.block\");d=w(\"react.server.block\");m=w(\"react.fundamental\");v=w(\"react.scope\");h=w(\"react.opaque.id\");g=w(\"react.debug_trace_mode\");b=w(\"react.offscreen\");_=w(\"react.legacy_hidden\")}var k=typeof Symbol===\"function\"&&Symbol.iterator;var R=\"@@iterator\";function getIteratorFn(e){if(e===null||typeof e!==\"object\"){return null}var r=k&&e[k]||e[R];if(typeof r===\"function\"){return r}return null}var j={current:null};var $={transition:0};var x={current:null};var F={};var I=null;function setExtraStackFrame(e){{I=e}}{F.setExtraStackFrame=function(e){{I=e}};F.getCurrentStack=null;F.getStackAddendum=function(){var e=\"\";if(I){e+=I}var r=F.getCurrentStack;if(r){e+=r()||\"\"}return e}}var V={current:false};var A={ReactCurrentDispatcher:j,ReactCurrentBatchConfig:$,ReactCurrentOwner:x,IsSomeRendererActing:V,assign:e};{A.ReactDebugCurrentFrame=F}function warn(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++){t[n-1]=arguments[n]}printWarning(\"warn\",e,t)}}function error(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++){t[n-1]=arguments[n]}printWarning(\"error\",e,t)}}function printWarning(e,r,t){{var n=A.ReactDebugCurrentFrame;var a=n.getStackAddendum();if(a!==\"\"){r+=\"%s\";t=t.concat([a])}var o=t.map((function(e){return\"\"+e}));o.unshift(\"Warning: \"+r);Function.prototype.apply.call(console[e],console,o)}}var T={};function warnNoop(e,r){{var t=e.constructor;var n=t&&(t.displayName||t.name)||\"ReactClass\";var a=n+\".\"+r;if(T[a]){return}error(\"Can't call %s on a component that is not yet mounted. \"+\"This is a no-op, but it might indicate a bug in your application. \"+\"Instead, assign to `this.state` directly or define a `state = {};` \"+\"class property with the desired state in the %s component.\",r,n);T[a]=true}}var U={isMounted:function(e){return false},enqueueForceUpdate:function(e,r,t){warnNoop(e,\"forceUpdate\")},enqueueReplaceState:function(e,r,t,n){warnNoop(e,\"replaceState\")},enqueueSetState:function(e,r,t,n){warnNoop(e,\"setState\")}};var W={};{Object.freeze(W)}function Component(e,r,t){this.props=e;this.context=r;this.refs=W;this.updater=t||U}Component.prototype.isReactComponent={};Component.prototype.setState=function(e,r){if(!(typeof e===\"object\"||typeof e===\"function\"||e==null)){{throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\")}}this.updater.enqueueSetState(this,e,r,\"setState\")};Component.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,\"forceUpdate\")};{var M={isMounted:[\"isMounted\",\"Instead, make sure to clean up subscriptions and pending requests in \"+\"componentWillUnmount to prevent memory leaks.\"],replaceState:[\"replaceState\",\"Refactor your code to use setState instead (see \"+\"https://github.com/facebook/react/issues/3236).\"]};var defineDeprecationWarning=function(e,r){Object.defineProperty(Component.prototype,e,{get:function(){warn(\"%s(...) is deprecated in plain JavaScript React classes. %s\",r[0],r[1]);return undefined}})};for(var q in M){if(M.hasOwnProperty(q)){defineDeprecationWarning(q,M[q])}}}function ComponentDummy(){}ComponentDummy.prototype=Component.prototype;function PureComponent(e,r,t){this.props=e;this.context=r;this.refs=W;this.updater=t||U}var B=PureComponent.prototype=new ComponentDummy;B.constructor=PureComponent;e(B,Component.prototype);B.isPureReactComponent=true;function createRef(){var e={current:null};{Object.seal(e)}return e}function getWrappedName(e,r,t){var n=r.displayName||r.name||\"\";return e.displayName||(n!==\"\"?t+\"(\"+n+\")\":t)}function getContextName(e){return e.displayName||\"Context\"}function getComponentName(e){if(e==null){return null}{if(typeof e.tag===\"number\"){error(\"Received an unexpected object in getComponentName(). \"+\"This is likely a bug in React. Please file an issue.\")}}if(typeof e===\"function\"){return e.displayName||e.name||null}if(typeof e===\"string\"){return e}switch(e){case r.Fragment:return\"Fragment\";case o:return\"Portal\";case r.Profiler:return\"Profiler\";case r.StrictMode:return\"StrictMode\";case r.Suspense:return\"Suspense\";case l:return\"SuspenseList\"}if(typeof e===\"object\"){switch(e.$$typeof){case u:var t=e;return getContextName(t)+\".Consumer\";case i:var n=e;return getContextName(n._context)+\".Provider\";case s:return getWrappedName(e,e.render,\"ForwardRef\");case c:return getComponentName(e.type);case p:return getComponentName(e._render);case f:{var a=e;var d=a._payload;var m=a._init;try{return getComponentName(m(d))}catch(e){return null}}}}return null}var Y=Object.prototype.hasOwnProperty;var H={key:true,ref:true,__self:true,__source:true};var G,X,Z;{Z={}}function hasValidRef(e){{if(Y.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning){return false}}}return e.ref!==undefined}function hasValidKey(e){{if(Y.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning){return false}}}return e.key!==undefined}function defineKeyPropWarningGetter(e,r){var warnAboutAccessingKey=function(){{if(!G){G=true;error(\"%s: `key` is not a prop. Trying to access it will result \"+\"in `undefined` being returned. If you need to access the same \"+\"value within the child component, you should pass it as a different \"+\"prop. (https://reactjs.org/link/special-props)\",r)}}};warnAboutAccessingKey.isReactWarning=true;Object.defineProperty(e,\"key\",{get:warnAboutAccessingKey,configurable:true})}function defineRefPropWarningGetter(e,r){var warnAboutAccessingRef=function(){{if(!X){X=true;error(\"%s: `ref` is not a prop. Trying to access it will result \"+\"in `undefined` being returned. If you need to access the same \"+\"value within the child component, you should pass it as a different \"+\"prop. (https://reactjs.org/link/special-props)\",r)}}};warnAboutAccessingRef.isReactWarning=true;Object.defineProperty(e,\"ref\",{get:warnAboutAccessingRef,configurable:true})}function warnIfStringRefCannotBeAutoConverted(e){{if(typeof e.ref===\"string\"&&x.current&&e.__self&&x.current.stateNode!==e.__self){var r=getComponentName(x.current.type);if(!Z[r]){error('Component \"%s\" contains the string ref \"%s\". '+\"Support for string refs will be removed in a future major release. \"+\"This case cannot be automatically converted to an arrow function. \"+\"We ask you to manually fix this case by using useRef() or createRef() instead. \"+\"Learn more about using refs safely here: \"+\"https://reactjs.org/link/strict-mode-string-ref\",r,e.ref);Z[r]=true}}}}var ReactElement=function(e,r,t,n,o,i,u){var s={$$typeof:a,type:e,key:r,ref:t,props:u,_owner:i};{s._store={};Object.defineProperty(s._store,\"validated\",{configurable:false,enumerable:false,writable:true,value:false});Object.defineProperty(s,\"_self\",{configurable:false,enumerable:false,writable:false,value:n});Object.defineProperty(s,\"_source\",{configurable:false,enumerable:false,writable:false,value:o});if(Object.freeze){Object.freeze(s.props);Object.freeze(s)}}return s};function createElement(e,r,t){var n;var a={};var o=null;var i=null;var u=null;var s=null;if(r!=null){if(hasValidRef(r)){i=r.ref;{warnIfStringRefCannotBeAutoConverted(r)}}if(hasValidKey(r)){o=\"\"+r.key}u=r.__self===undefined?null:r.__self;s=r.__source===undefined?null:r.__source;for(n in r){if(Y.call(r,n)&&!H.hasOwnProperty(n)){a[n]=r[n]}}}var l=arguments.length-2;if(l===1){a.children=t}else if(l>1){var c=Array(l);for(var f=0;f<l;f++){c[f]=arguments[f+2]}{if(Object.freeze){Object.freeze(c)}}a.children=c}if(e&&e.defaultProps){var p=e.defaultProps;for(n in p){if(a[n]===undefined){a[n]=p[n]}}}{if(o||i){var d=typeof e===\"function\"?e.displayName||e.name||\"Unknown\":e;if(o){defineKeyPropWarningGetter(a,d)}if(i){defineRefPropWarningGetter(a,d)}}}return ReactElement(e,o,i,u,s,x.current,a)}function cloneAndReplaceKey(e,r){var t=ReactElement(e.type,r,e.ref,e._self,e._source,e._owner,e.props);return t}function cloneElement(r,t,n){if(!!(r===null||r===undefined)){{throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+r+\".\")}}var a;var o=e({},r.props);var i=r.key;var u=r.ref;var s=r._self;var l=r._source;var c=r._owner;if(t!=null){if(hasValidRef(t)){u=t.ref;c=x.current}if(hasValidKey(t)){i=\"\"+t.key}var f;if(r.type&&r.type.defaultProps){f=r.type.defaultProps}for(a in t){if(Y.call(t,a)&&!H.hasOwnProperty(a)){if(t[a]===undefined&&f!==undefined){o[a]=f[a]}else{o[a]=t[a]}}}}var p=arguments.length-2;if(p===1){o.children=n}else if(p>1){var d=Array(p);for(var m=0;m<p;m++){d[m]=arguments[m+2]}o.children=d}return ReactElement(r.type,i,u,s,l,c,o)}function isValidElement(e){return typeof e===\"object\"&&e!==null&&e.$$typeof===a}var ee=\".\";var re=\":\";function escape(e){var r=/[=:]/g;var t={\"=\":\"=0\",\":\":\"=2\"};var n=e.replace(r,(function(e){return t[e]}));return\"$\"+n}var te=false;var ne=/\\/+/g;function escapeUserProvidedKey(e){return e.replace(ne,\"$&/\")}function getElementKey(e,r){if(typeof e===\"object\"&&e!==null&&e.key!=null){return escape(\"\"+e.key)}return r.toString(36)}function mapIntoArray(e,r,t,n,i){var u=typeof e;if(u===\"undefined\"||u===\"boolean\"){e=null}var s=false;if(e===null){s=true}else{switch(u){case\"string\":case\"number\":s=true;break;case\"object\":switch(e.$$typeof){case a:case o:s=true}}}if(s){var l=e;var c=i(l);var f=n===\"\"?ee+getElementKey(l,0):n;if(Array.isArray(c)){var p=\"\";if(f!=null){p=escapeUserProvidedKey(f)+\"/\"}mapIntoArray(c,r,p,\"\",(function(e){return e}))}else if(c!=null){if(isValidElement(c)){c=cloneAndReplaceKey(c,t+(c.key&&(!l||l.key!==c.key)?escapeUserProvidedKey(\"\"+c.key)+\"/\":\"\")+f)}r.push(c)}return 1}var d;var m;var v=0;var h=n===\"\"?ee:n+re;if(Array.isArray(e)){for(var g=0;g<e.length;g++){d=e[g];m=h+getElementKey(d,g);v+=mapIntoArray(d,r,t,m,i)}}else{var b=getIteratorFn(e);if(typeof b===\"function\"){var _=e;{if(b===_.entries){if(!te){warn(\"Using Maps as children is not supported. \"+\"Use an array of keyed ReactElements instead.\")}te=true}}var w=b.call(_);var k;var R=0;while(!(k=w.next()).done){d=k.value;m=h+getElementKey(d,R++);v+=mapIntoArray(d,r,t,m,i)}}else if(u===\"object\"){var j=\"\"+e;{{throw Error(\"Objects are not valid as a React child (found: \"+(j===\"[object Object]\"?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":j)+\"). If you meant to render a collection of children, use an array instead.\")}}}}return v}function mapChildren(e,r,t){if(e==null){return e}var n=[];var a=0;mapIntoArray(e,n,\"\",\"\",(function(e){return r.call(t,e,a++)}));return n}function countChildren(e){var r=0;mapChildren(e,(function(){r++}));return r}function forEachChildren(e,r,t){mapChildren(e,(function(){r.apply(this,arguments)}),t)}function toArray(e){return mapChildren(e,(function(e){return e}))||[]}function onlyChild(e){if(!isValidElement(e)){{throw Error(\"React.Children.only expected to receive a single React element child.\")}}return e}function createContext(e,r){if(r===undefined){r=null}else{{if(r!==null&&typeof r!==\"function\"){error(\"createContext: Expected the optional second argument to be a \"+\"function. Instead received: %s\",r)}}}var t={$$typeof:u,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null};t.Provider={$$typeof:i,_context:t};var n=false;var a=false;var o=false;{var s={$$typeof:u,_context:t,_calculateChangedBits:t._calculateChangedBits};Object.defineProperties(s,{Provider:{get:function(){if(!a){a=true;error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in \"+\"a future major release. Did you mean to render <Context.Provider> instead?\")}return t.Provider},set:function(e){t.Provider=e}},_currentValue:{get:function(){return t._currentValue},set:function(e){t._currentValue=e}},_currentValue2:{get:function(){return t._currentValue2},set:function(e){t._currentValue2=e}},_threadCount:{get:function(){return t._threadCount},set:function(e){t._threadCount=e}},Consumer:{get:function(){if(!n){n=true;error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in \"+\"a future major release. Did you mean to render <Context.Consumer> instead?\")}return t.Consumer}},displayName:{get:function(){return t.displayName},set:function(e){if(!o){warn(\"Setting `displayName` on Context.Consumer has no effect. \"+\"You should set it directly on the context with Context.displayName = '%s'.\",e);o=true}}}});t.Consumer=s}{t._currentRenderer=null;t._currentRenderer2=null}return t}var ae=-1;var oe=0;var ie=1;var ue=2;function lazyInitializer(e){if(e._status===ae){var r=e._result;var t=r();var n=e;n._status=oe;n._result=t;t.then((function(r){if(e._status===oe){var t=r.default;{if(t===undefined){error(\"lazy: Expected the result of a dynamic import() call. \"+\"Instead received: %s\\n\\nYour code should look like: \\n  \"+\"const MyComponent = lazy(() => imp\"+\"ort('./MyComponent'))\",r)}}var n=e;n._status=ie;n._result=t}}),(function(r){if(e._status===oe){var t=e;t._status=ue;t._result=r}}))}if(e._status===ie){return e._result}else{throw e._result}}function lazy(e){var r={_status:-1,_result:e};var t={$$typeof:f,_payload:r,_init:lazyInitializer};{var n;var a;Object.defineProperties(t,{defaultProps:{configurable:true,get:function(){return n},set:function(e){error(\"React.lazy(...): It is not supported to assign `defaultProps` to \"+\"a lazy component import. Either specify them where the component \"+\"is defined, or create a wrapping component around it.\");n=e;Object.defineProperty(t,\"defaultProps\",{enumerable:true})}},propTypes:{configurable:true,get:function(){return a},set:function(e){error(\"React.lazy(...): It is not supported to assign `propTypes` to \"+\"a lazy component import. Either specify them where the component \"+\"is defined, or create a wrapping component around it.\");a=e;Object.defineProperty(t,\"propTypes\",{enumerable:true})}}})}return t}function forwardRef(e){{if(e!=null&&e.$$typeof===c){error(\"forwardRef requires a render function but received a `memo` \"+\"component. Instead of forwardRef(memo(...)), use \"+\"memo(forwardRef(...)).\")}else if(typeof e!==\"function\"){error(\"forwardRef requires a render function but was given %s.\",e===null?\"null\":typeof e)}else{if(e.length!==0&&e.length!==2){error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\",e.length===1?\"Did you forget to use the ref parameter?\":\"Any additional parameter will be undefined.\")}}if(e!=null){if(e.defaultProps!=null||e.propTypes!=null){error(\"forwardRef render functions do not support propTypes or defaultProps. \"+\"Did you accidentally pass a React component?\")}}}var r={$$typeof:s,render:e};{var t;Object.defineProperty(r,\"displayName\",{enumerable:false,configurable:true,get:function(){return t},set:function(r){t=r;if(e.displayName==null){e.displayName=r}}})}return r}var se=false;function isValidElementType(e){if(typeof e===\"string\"||typeof e===\"function\"){return true}if(e===r.Fragment||e===r.Profiler||e===g||e===r.StrictMode||e===r.Suspense||e===l||e===_||se){return true}if(typeof e===\"object\"&&e!==null){if(e.$$typeof===f||e.$$typeof===c||e.$$typeof===i||e.$$typeof===u||e.$$typeof===s||e.$$typeof===m||e.$$typeof===p||e[0]===d){return true}}return false}function memo(e,r){{if(!isValidElementType(e)){error(\"memo: The first argument must be a component. Instead \"+\"received: %s\",e===null?\"null\":typeof e)}}var t={$$typeof:c,type:e,compare:r===undefined?null:r};{var n;Object.defineProperty(t,\"displayName\",{enumerable:false,configurable:true,get:function(){return n},set:function(r){n=r;if(e.displayName==null){e.displayName=r}}})}return t}function resolveDispatcher(){var e=j.current;if(!(e!==null)){{throw Error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\")}}return e}function useContext(e,r){var t=resolveDispatcher();{if(r!==undefined){error(\"useContext() second argument is reserved for future \"+\"use in React. Passing it is not supported. \"+\"You passed: %s.%s\",r,typeof r===\"number\"&&Array.isArray(arguments[2])?\"\\n\\nDid you call array.map(useContext)? \"+\"Calling Hooks inside a loop is not supported. \"+\"Learn more at https://reactjs.org/link/rules-of-hooks\":\"\")}if(e._context!==undefined){var n=e._context;if(n.Consumer===e){error(\"Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be \"+\"removed in a future major release. Did you mean to call useContext(Context) instead?\")}else if(n.Provider===e){error(\"Calling useContext(Context.Provider) is not supported. \"+\"Did you mean to call useContext(Context) instead?\")}}}return t.useContext(e,r)}function useState(e){var r=resolveDispatcher();return r.useState(e)}function useReducer(e,r,t){var n=resolveDispatcher();return n.useReducer(e,r,t)}function useRef(e){var r=resolveDispatcher();return r.useRef(e)}function useEffect(e,r){var t=resolveDispatcher();return t.useEffect(e,r)}function useLayoutEffect(e,r){var t=resolveDispatcher();return t.useLayoutEffect(e,r)}function useCallback(e,r){var t=resolveDispatcher();return t.useCallback(e,r)}function useMemo(e,r){var t=resolveDispatcher();return t.useMemo(e,r)}function useImperativeHandle(e,r,t){var n=resolveDispatcher();return n.useImperativeHandle(e,r,t)}function useDebugValue(e,r){{var t=resolveDispatcher();return t.useDebugValue(e,r)}}var le=0;var ce;var fe;var pe;var de;var ye;var me;var ve;function disabledLog(){}disabledLog.__reactDisabledLog=true;function disableLogs(){{if(le===0){ce=console.log;fe=console.info;pe=console.warn;de=console.error;ye=console.group;me=console.groupCollapsed;ve=console.groupEnd;var e={configurable:true,enumerable:true,value:disabledLog,writable:true};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}le++}}function reenableLogs(){{le--;if(le===0){var r={configurable:true,enumerable:true,writable:true};Object.defineProperties(console,{log:e({},r,{value:ce}),info:e({},r,{value:fe}),warn:e({},r,{value:pe}),error:e({},r,{value:de}),group:e({},r,{value:ye}),groupCollapsed:e({},r,{value:me}),groupEnd:e({},r,{value:ve})})}if(le<0){error(\"disabledDepth fell below zero. \"+\"This is a bug in React. Please file an issue.\")}}}var he=A.ReactCurrentDispatcher;var ge;function describeBuiltInComponentFrame(e,r,t){{if(ge===undefined){try{throw Error()}catch(e){var n=e.stack.trim().match(/\\n( *(at )?)/);ge=n&&n[1]||\"\"}}return\"\\n\"+ge+e}}var be=false;var Ce;{var _e=typeof WeakMap===\"function\"?WeakMap:Map;Ce=new _e}function describeNativeComponentFrame(e,r){if(!e||be){return\"\"}{var t=Ce.get(e);if(t!==undefined){return t}}var n;be=true;var a=Error.prepareStackTrace;Error.prepareStackTrace=undefined;var o;{o=he.current;he.current=null;disableLogs()}try{if(r){var Fake=function(){throw Error()};Object.defineProperty(Fake.prototype,\"props\",{set:function(){throw Error()}});if(typeof Reflect===\"object\"&&Reflect.construct){try{Reflect.construct(Fake,[])}catch(e){n=e}Reflect.construct(e,[],Fake)}else{try{Fake.call()}catch(e){n=e}e.call(Fake.prototype)}}else{try{throw Error()}catch(e){n=e}e()}}catch(r){if(r&&n&&typeof r.stack===\"string\"){var i=r.stack.split(\"\\n\");var u=n.stack.split(\"\\n\");var s=i.length-1;var l=u.length-1;while(s>=1&&l>=0&&i[s]!==u[l]){l--}for(;s>=1&&l>=0;s--,l--){if(i[s]!==u[l]){if(s!==1||l!==1){do{s--;l--;if(l<0||i[s]!==u[l]){var c=\"\\n\"+i[s].replace(\" at new \",\" at \");{if(typeof e===\"function\"){Ce.set(e,c)}}return c}}while(s>=1&&l>=0)}break}}}}finally{be=false;{he.current=o;reenableLogs()}Error.prepareStackTrace=a}var f=e?e.displayName||e.name:\"\";var p=f?describeBuiltInComponentFrame(f):\"\";{if(typeof e===\"function\"){Ce.set(e,p)}}return p}function describeFunctionComponentFrame(e,r,t){{return describeNativeComponentFrame(e,false)}}function shouldConstruct(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function describeUnknownElementTypeFrameInDEV(e,t,n){if(e==null){return\"\"}if(typeof e===\"function\"){{return describeNativeComponentFrame(e,shouldConstruct(e))}}if(typeof e===\"string\"){return describeBuiltInComponentFrame(e)}switch(e){case r.Suspense:return describeBuiltInComponentFrame(\"Suspense\");case l:return describeBuiltInComponentFrame(\"SuspenseList\")}if(typeof e===\"object\"){switch(e.$$typeof){case s:return describeFunctionComponentFrame(e.render);case c:return describeUnknownElementTypeFrameInDEV(e.type,t,n);case p:return describeFunctionComponentFrame(e._render);case f:{var a=e;var o=a._payload;var i=a._init;try{return describeUnknownElementTypeFrameInDEV(i(o),t,n)}catch(e){}}}}return\"\"}var we={};var Ee=A.ReactDebugCurrentFrame;function setCurrentlyValidatingElement(e){{if(e){var r=e._owner;var t=describeUnknownElementTypeFrameInDEV(e.type,e._source,r?r.type:null);Ee.setExtraStackFrame(t)}else{Ee.setExtraStackFrame(null)}}}function checkPropTypes(e,r,t,n,a){{var o=Function.call.bind(Object.prototype.hasOwnProperty);for(var i in e){if(o(e,i)){var u=void 0;try{if(typeof e[i]!==\"function\"){var s=Error((n||\"React class\")+\": \"+t+\" type `\"+i+\"` is invalid; \"+\"it must be a function, usually from the `prop-types` package, but received `\"+typeof e[i]+\"`.\"+\"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");s.name=\"Invariant Violation\";throw s}u=e[i](r,i,n,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(e){u=e}if(u&&!(u instanceof Error)){setCurrentlyValidatingElement(a);error(\"%s: type specification of %s\"+\" `%s` is invalid; the type checker \"+\"function must return `null` or an `Error` but returned a %s. \"+\"You may have forgotten to pass an argument to the type checker \"+\"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \"+\"shape all require an argument).\",n||\"React class\",t,i,typeof u);setCurrentlyValidatingElement(null)}if(u instanceof Error&&!(u.message in we)){we[u.message]=true;setCurrentlyValidatingElement(a);error(\"Failed %s type: %s\",t,u.message);setCurrentlyValidatingElement(null)}}}}}function setCurrentlyValidatingElement$1(e){{if(e){var r=e._owner;var t=describeUnknownElementTypeFrameInDEV(e.type,e._source,r?r.type:null);setExtraStackFrame(t)}else{setExtraStackFrame(null)}}}var ke;{ke=false}function getDeclarationErrorAddendum(){if(x.current){var e=getComponentName(x.current.type);if(e){return\"\\n\\nCheck the render method of `\"+e+\"`.\"}}return\"\"}function getSourceInfoErrorAddendum(e){if(e!==undefined){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\");var t=e.lineNumber;return\"\\n\\nCheck your code at \"+r+\":\"+t+\".\"}return\"\"}function getSourceInfoErrorAddendumForProps(e){if(e!==null&&e!==undefined){return getSourceInfoErrorAddendum(e.__source)}return\"\"}var Re={};function getCurrentComponentErrorInfo(e){var r=getDeclarationErrorAddendum();if(!r){var t=typeof e===\"string\"?e:e.displayName||e.name;if(t){r=\"\\n\\nCheck the top-level render call using <\"+t+\">.\"}}return r}function validateExplicitKey(e,r){if(!e._store||e._store.validated||e.key!=null){return}e._store.validated=true;var t=getCurrentComponentErrorInfo(r);if(Re[t]){return}Re[t]=true;var n=\"\";if(e&&e._owner&&e._owner!==x.current){n=\" It was passed a child from \"+getComponentName(e._owner.type)+\".\"}{setCurrentlyValidatingElement$1(e);error('Each child in a list should have a unique \"key\" prop.'+\"%s%s See https://reactjs.org/link/warning-keys for more information.\",t,n);setCurrentlyValidatingElement$1(null)}}function validateChildKeys(e,r){if(typeof e!==\"object\"){return}if(Array.isArray(e)){for(var t=0;t<e.length;t++){var n=e[t];if(isValidElement(n)){validateExplicitKey(n,r)}}}else if(isValidElement(e)){if(e._store){e._store.validated=true}}else if(e){var a=getIteratorFn(e);if(typeof a===\"function\"){if(a!==e.entries){var o=a.call(e);var i;while(!(i=o.next()).done){if(isValidElement(i.value)){validateExplicitKey(i.value,r)}}}}}}function validatePropTypes(e){{var r=e.type;if(r===null||r===undefined||typeof r===\"string\"){return}var t;if(typeof r===\"function\"){t=r.propTypes}else if(typeof r===\"object\"&&(r.$$typeof===s||r.$$typeof===c)){t=r.propTypes}else{return}if(t){var n=getComponentName(r);checkPropTypes(t,e.props,\"prop\",n,e)}else if(r.PropTypes!==undefined&&!ke){ke=true;var a=getComponentName(r);error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",a||\"Unknown\")}if(typeof r.getDefaultProps===\"function\"&&!r.getDefaultProps.isReactClassApproved){error(\"getDefaultProps is only used on classic React.createClass \"+\"definitions. Use a static property named `defaultProps` instead.\")}}}function validateFragmentProps(e){{var r=Object.keys(e.props);for(var t=0;t<r.length;t++){var n=r[t];if(n!==\"children\"&&n!==\"key\"){setCurrentlyValidatingElement$1(e);error(\"Invalid prop `%s` supplied to `React.Fragment`. \"+\"React.Fragment can only have `key` and `children` props.\",n);setCurrentlyValidatingElement$1(null);break}}if(e.ref!==null){setCurrentlyValidatingElement$1(e);error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");setCurrentlyValidatingElement$1(null)}}}function createElementWithValidation(e,t,n){var o=isValidElementType(e);if(!o){var i=\"\";if(e===undefined||typeof e===\"object\"&&e!==null&&Object.keys(e).length===0){i+=\" You likely forgot to export your component from the file \"+\"it's defined in, or you might have mixed up default and named imports.\"}var u=getSourceInfoErrorAddendumForProps(t);if(u){i+=u}else{i+=getDeclarationErrorAddendum()}var s;if(e===null){s=\"null\"}else if(Array.isArray(e)){s=\"array\"}else if(e!==undefined&&e.$$typeof===a){s=\"<\"+(getComponentName(e.type)||\"Unknown\")+\" />\";i=\" Did you accidentally export a JSX literal instead of a component?\"}else{s=typeof e}{error(\"React.createElement: type is invalid -- expected a string (for \"+\"built-in components) or a class/function (for composite \"+\"components) but got: %s.%s\",s,i)}}var l=createElement.apply(this,arguments);if(l==null){return l}if(o){for(var c=2;c<arguments.length;c++){validateChildKeys(arguments[c],e)}}if(e===r.Fragment){validateFragmentProps(l)}else{validatePropTypes(l)}return l}var Se=false;function createFactoryWithValidation(e){var r=createElementWithValidation.bind(null,e);r.type=e;{if(!Se){Se=true;warn(\"React.createFactory() is deprecated and will be removed in \"+\"a future major release. Consider using JSX \"+\"or use React.createElement() directly instead.\")}Object.defineProperty(r,\"type\",{enumerable:false,get:function(){warn(\"Factory.type is deprecated. Access the class directly \"+\"before passing it to createFactory.\");Object.defineProperty(this,\"type\",{value:e});return e}})}return r}function cloneElementWithValidation(e,r,t){var n=cloneElement.apply(this,arguments);for(var a=2;a<arguments.length;a++){validateChildKeys(arguments[a],n.type)}validatePropTypes(n);return n}{try{var Pe=Object.freeze({});new Map([[Pe,null]]);new Set([Pe])}catch(e){}}var je=createElementWithValidation;var Oe=cloneElementWithValidation;var $e=createFactoryWithValidation;var xe={map:mapChildren,forEach:forEachChildren,count:countChildren,toArray:toArray,only:onlyChild};r.Children=xe;r.Component=Component;r.PureComponent=PureComponent;r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=A;r.cloneElement=Oe;r.createContext=createContext;r.createElement=je;r.createFactory=$e;r.createRef=createRef;r.forwardRef=forwardRef;r.isValidElement=isValidElement;r.lazy=lazy;r.memo=memo;r.useCallback=useCallback;r.useContext=useContext;r.useDebugValue=useDebugValue;r.useEffect=useEffect;r.useImperativeHandle=useImperativeHandle;r.useLayoutEffect=useLayoutEffect;r.useMemo=useMemo;r.useReducer=useReducer;r.useRef=useRef;r.useState=useState;r.version=n})()}},696:(e,r,t)=>{", "explanation": "This block is a React library that exports various functions and properties used for building React applications. \n\nMain components:\n\n1. `createElement`: Creates a new React element from the provided type and properties. It validates the properties and throws warnings or errors if something is invalid.\n2. `createFactoryWithValidation`: Creates a factory function that creates elements of the provided type. It's similar to `createElement` but returns a reusable factory function.\n3. `cloneElementWithValidation`: Creates a clone of a React element and validates its properties.\n4. `createContext`: Creates a React context, which enables a way for components to share data.\n5. `lazy`: Creates a lazy-loaded component that loads dynamically.\n6. `memo`: A higher-order component that memoizes its children so that they're only re-rendered when their dependencies change.\n7. `createRef`: Creates a new React reference.\n8. `forwardRef`: Creates a component that forwards a reference to its child.\n9. `isValidElement`: Checks if a value is a valid React element.\n10. `useCallback`, `useContext`, `useDebugValue`, `useEffect`, `useImperativeHandle`, `useLayoutEffect`, `useMemo`, `useReducer`, and `useRef`: These are various React hooks that enable interacting with the component lifecycle and shared state.\n\nThis library is also used for warning and error logging to help developers catch and fix errors in their React applications.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react/index.js", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file `compiled/react/index.js`:\n\nThis is a React JavaScript library implementation that exports various functions and properties for building React applications. It provides polyfills for `Object.assign()` and offers a consistent way to merge objects across environments. The library defines internal React state and updates through prototypes, rendering child components, and managing React context and versioning. It includes functions for error tracking, component lifecycle management, and utility functions for cloning elements, forward references, and context creation. The library is licensed under the MIT license."}
{"code": "/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */", "explanation": "This block is a license header, specifically the MIT license document for the React JavaScript library version 17.0.2. It outlines the copyright and licensing terms for the code in the react.production.min.js file.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react/index.js", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file `compiled/react/index.js`:\n\nThis is a React JavaScript library implementation that exports various functions and properties for building React applications. It provides polyfills for `Object.assign()` and offers a consistent way to merge objects across environments. The library defines internal React state and updates through prototypes, rendering child components, and managing React context and versioning. It includes functions for error tracking, component lifecycle management, and utility functions for cloning elements, forward references, and context creation. The library is licensed under the MIT license."}
{"code": "var n=t(426),a=60103,o=60106;r.Fragment=60107;r.StrictMode=60108;r.Profiler=60114;var i=60109,u=60110,s=60112;r.Suspense=60113;var l=60115,c=60116;if(\"function\"===typeof Symbol&&Symbol.for){var f=Symbol.for;a=f(\"react.element\");o=f(\"react.portal\");r.Fragment=f(\"react.fragment\");r.StrictMode=f(\"react.strict_mode\");r.Profiler=f(\"react.profiler\");i=f(\"react.provider\");u=f(\"react.context\");s=f(\"react.forward_ref\");r.Suspense=f(\"react.suspense\");l=f(\"react.memo\");c=f(\"react.lazy\")}var p=\"function\"===typeof Symbol&&Symbol.iterator;function y(e){if(null===e||\"object\"!==typeof e)return null;e=p&&e[p]||e[\"@@iterator\"];return\"function\"===typeof e?e:null}function z(e){for(var r=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+e,t=1;t<arguments.length;t++)r+=\"&args[]=\"+encodeURIComponent(arguments[t]);return\"Minified React error #\"+e+\"; visit \"+r+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var d={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function C(e,r,t){this.props=e;this.context=r;this.refs=m;this.updater=t||d}C.prototype.isReactComponent={};C.prototype.setState=function(e,r){if(\"object\"!==typeof e&&\"function\"!==typeof e&&null!=e)throw Error(z(85));this.updater.enqueueSetState(this,e,r,\"setState\")};C.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,\"forceUpdate\")};function D(){}D.prototype=C.prototype;function E(e,r,t){this.props=e;this.context=r;this.refs=m;this.updater=t||d}var v=E.prototype=new D;v.constructor=E;n(v,C.prototype);v.isPureReactComponent=!0;var h={current:null},g=Object.prototype.hasOwnProperty,b={key:!0,ref:!0,__self:!0,__source:!0};function J(e,r,t){var n,o={},i=null,u=null;if(null!=r)for(n in void 0!==r.ref&&(u=r.ref),void 0!==r.key&&(i=\"\"+r.key),r)g.call(r,n)&&!b.hasOwnProperty(n)&&(o[n]=r[n]);var s=arguments.length-2;if(1===s)o.children=t;else if(1<s){for(var l=Array(s),c=0;c<s;c++)l[c]=arguments[c+2];o.children=l}if(e&&e.defaultProps)for(n in s=e.defaultProps,s)void 0===o[n]&&(o[n]=s[n]);return{$$typeof:a,type:e,key:i,ref:u,props:o,_owner:h.current}}function K(e,r){return{$$typeof:a,type:e.type,key:r,ref:e.ref,props:e.props,_owner:e._owner}}function L(e){return\"object\"===typeof e&&null!==e&&e.$$typeof===a}function escape(e){var r={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+e.replace(/[=:]/g,(function(e){return r[e]}))}var _=/\\/+/g;function N(e,r){return\"object\"===typeof e&&null!==e&&null!=e.key?escape(\"\"+e.key):r.toString(36)}function O(e,r,t,n,i){var u=typeof e;if(\"undefined\"===u||\"boolean\"===u)e=null;var s=!1;if(null===e)s=!0;else switch(u){case\"string\":case\"number\":s=!0;break;case\"object\":switch(e.$$typeof){case a:case o:s=!0}}if(s)return s=e,i=i(s),e=\"\"===n?\".\"+N(s,0):n,Array.isArray(i)?(t=\"\",null!=e&&(t=e.replace(_,\"$&/\")+\"/\"),O(i,r,t,\"\",(function(e){return e}))):null!=i&&(L(i)&&(i=K(i,t+(!i.key||s&&s.key===i.key?\"\":(\"\"+i.key).replace(_,\"$&/\")+\"/\")+e)),r.push(i)),1;s=0;n=\"\"===n?\".\":n+\":\";if(Array.isArray(e))for(var l=0;l<e.length;l++){u=e[l];var c=n+N(u,l);s+=O(u,r,t,c,i)}else if(c=y(e),\"function\"===typeof c)for(e=c.call(e),l=0;!(u=e.next()).done;)u=u.value,c=n+N(u,l++),s+=O(u,r,t,c,i);else if(\"object\"===u)throw r=\"\"+e,Error(z(31,\"[object Object]\"===r?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":r));return s}function P(e,r,t){if(null==e)return e;var n=[],a=0;O(e,n,\"\",\"\",(function(e){return r.call(t,e,a++)}));return n}function Q(e){if(-1===e._status){var r=e._result;r=r();e._status=0;e._result=r;r.then((function(r){0===e._status&&(r=r.default,e._status=1,e._result=r)}),(function(r){0===e._status&&(e._status=2,e._result=r)}))}if(1===e._status)return e._result;throw e._result}var w={current:null};function S(){var e=w.current;if(null===e)throw Error(z(321));return e}var k={ReactCurrentDispatcher:w,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:h,IsSomeRendererActing:{current:!1},assign:n};r.Children={map:P,forEach:function(e,r,t){P(e,(function(){r.apply(this,arguments)}),t)},count:function(e){var r=0;P(e,(function(){r++}));return r},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!L(e))throw Error(z(143));return e}};r.Component=C;r.PureComponent=E;r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=k;r.cloneElement=function(e,r,t){if(null===e||void 0===e)throw Error(z(267,e));var o=n({},e.props),i=e.key,u=e.ref,s=e._owner;if(null!=r){void 0!==r.ref&&(u=r.ref,s=h.current);void 0!==r.key&&(i=\"\"+r.key);if(e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in r)g.call(r,c)&&!b.hasOwnProperty(c)&&(o[c]=void 0===r[c]&&void 0!==l?l[c]:r[c])}var c=arguments.length-2;if(1===c)o.children=t;else if(1<c){l=Array(c);for(var f=0;f<c;f++)l[f]=arguments[f+2];o.children=l}return{$$typeof:a,type:e.type,key:i,ref:u,props:o,_owner:s}};r.createContext=function(e,r){void 0===r&&(r=null);e={$$typeof:u,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null};e.Provider={$$typeof:i,_context:e};return e.Consumer=e};r.createElement=J;r.createFactory=function(e){var r=J.bind(null,e);r.type=e;return r};r.createRef=function(){return{current:null}};r.forwardRef=function(e){return{$$typeof:s,render:e}};r.isValidElement=L;r.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:Q}};r.memo=function(e,r){return{$$typeof:l,type:e,compare:void 0===r?null:r}};r.useCallback=function(e,r){return S().useCallback(e,r)};r.useContext=function(e,r){return S().useContext(e,r)};r.useDebugValue=function(){};r.useEffect=function(e,r){return S().useEffect(e,r)};r.useImperativeHandle=function(e,r,t){return S().useImperativeHandle(e,r,t)};r.useLayoutEffect=function(e,r){return S().useLayoutEffect(e,r)};r.useMemo=function(e,r){return S().useMemo(e,r)};r.useReducer=function(e,r,t){return S().useReducer(e,r,t)};r.useRef=function(e){return S().useRef(e)};r.useState=function(e){return S().useState(e)};r.version=\"17.0.2\"},444:(e,r,t)=>{if(process.env.NODE_ENV===\"production\"){e.exports=t(696)}else{e.exports=t(857)}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var a=r[t]={exports:{}};var o=true;try{e[t](a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete r[t]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(444);module.exports=t})();", "explanation": "**Summary:**\n\nThis is a part of a JavaScript library, likely React, which defines various internal functions and objects to manage component lifecycle, updates, and rendering. The code sets up Symbol properties for React elements, defines functions for error tracking, clone element creation, and component rendering, as well as implements various utility functions for child components, context, and version management.\n\n**Functionality:**\n\n* Manages React internal state and updates through `C` (Component) and `E` (PureComponent) prototypes.\n* Defines utility functions for rendering child components (`P`), creating context (`Q`), and managing React version (`r.version = \"17.0.2\"`).\n* Implements methods for component lifecycle management (e.g., `forceUpdate`, `isMounted`).\n* Defines React-specific object types (e.g., `r.Fragment`, `r.StrictMode`, `r.Profiler`).\n* Implements specific React elements (e.g., `r.lazy`, `r.memo`, `r.useCallback`).\n* Sets up React-specific context and versioning.\n\n**Key Functions:**\n\n* `J(e,r,t)`: Creates a new React element.\n* `C(e,r,t)`: Component prototype function.\n* `E(e,r,t)`: PureComponent prototype function.\n* `P(e,r,t)`: Maps over child components.\n* `Q(e)`: Manages React context.\n* `r.version`: Stores React version as a string.\n\n**Key Objects:**\n\n* `r.Fragment`: Internal React fragment type.\n* `r.StrictMode`: Internal React strict mode type.\n* `r.Profiler`: Internal React profiler type.\n* `k`: Internal React current dispatcher object.\n* `h`: Internal React current owner object.\n* `r.Children`: Internal React child component management object.\n\n**Functions Used:**\n\n* `t(426)`: Imports a React module (t is likely a module loader).\n* `n({},e.props)`: Clones an object's properties.\n* `z(e)`: Returns a minified React error message.\n* `y(e)`: Returns an iterator function for an object.\n* `O(e,r,t,n,i)`: Recursively traverses a nested object and returns an array of child components.\n* `P(e,r,t)`: Maps over child components and returns an array.\n* `Q(e)`: Manages React context.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/react/index.js", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file `compiled/react/index.js`:\n\nThis is a React JavaScript library implementation that exports various functions and properties for building React applications. It provides polyfills for `Object.assign()` and offers a consistent way to merge objects across environments. The library defines internal React state and updates through prototypes, rendering child components, and managing React context and versioning. It includes functions for error tracking, component lifecycle management, and utility functions for cloning elements, forward references, and context creation. The library is licensed under the MIT license."}
{"code": "(()=>{var t={9051:(t,e,s)=>{\"use strict\";const i=s(7147);const n=s(1017);const r=i.lchown?\"lchown\":\"chown\";const o=i.lchownSync?\"lchownSync\":\"chownSync\";const h=i.lchown&&!process.version.match(/v1[1-9]+\\./)&&!process.version.match(/v10\\.[6-9]/);const lchownSync=(t,e,s)=>{try{return i[o](t,e,s)}catch(t){if(t.code!==\"ENOENT\")throw t}};const chownSync=(t,e,s)=>{try{return i.chownSync(t,e,s)}catch(t){if(t.code!==\"ENOENT\")throw t}};const l=h?(t,e,s,n)=>r=>{if(!r||r.code!==\"EISDIR\")n(r);else i.chown(t,e,s,n)}:(t,e,s,i)=>i;const c=h?(t,e,s)=>{try{return lchownSync(t,e,s)}catch(i){if(i.code!==\"EISDIR\")throw i;chownSync(t,e,s)}}:(t,e,s)=>lchownSync(t,e,s);const a=process.version;let readdir=(t,e,s)=>i.readdir(t,e,s);let readdirSync=(t,e)=>i.readdirSync(t,e);if(/^v4\\./.test(a))readdir=(t,e,s)=>i.readdir(t,s);const chown=(t,e,s,n)=>{i[r](t,e,s,l(t,e,s,(t=>{n(t&&t.code!==\"ENOENT\"?t:null)})))};const chownrKid=(t,e,s,r,o)=>{if(typeof e===\"string\")return i.lstat(n.resolve(t,e),((i,n)=>{if(i)return o(i.code!==\"ENOENT\"?i:null);n.name=e;chownrKid(t,n,s,r,o)}));if(e.isDirectory()){chownr(n.resolve(t,e.name),s,r,(i=>{if(i)return o(i);const h=n.resolve(t,e.name);chown(h,s,r,o)}))}else{const i=n.resolve(t,e.name);chown(i,s,r,o)}};const chownr=(t,e,s,i)=>{readdir(t,{withFileTypes:true},((n,r)=>{if(n){if(n.code===\"ENOENT\")return i();else if(n.code!==\"ENOTDIR\"&&n.code!==\"ENOTSUP\")return i(n)}if(n||!r.length)return chown(t,e,s,i);let o=r.length;let h=null;const then=n=>{if(h)return;if(n)return i(h=n);if(--o===0)return chown(t,e,s,i)};r.forEach((i=>chownrKid(t,i,e,s,then)))}))};const chownrKidSync=(t,e,s,r)=>{if(typeof e===\"string\"){try{const s=i.lstatSync(n.resolve(t,e));s.name=e;e=s}catch(t){if(t.code===\"ENOENT\")return;else throw t}}if(e.isDirectory())chownrSync(n.resolve(t,e.name),s,r);c(n.resolve(t,e.name),s,r)};const chownrSync=(t,e,s)=>{let i;try{i=readdirSync(t,{withFileTypes:true})}catch(i){if(i.code===\"ENOENT\")return;else if(i.code===\"ENOTDIR\"||i.code===\"ENOTSUP\")return c(t,e,s);else throw i}if(i&&i.length)i.forEach((i=>chownrKidSync(t,i,e,s)));return c(t,e,s)};t.exports=chownr;chownr.sync=chownrSync},7714:(t,e,s)=>{\"use strict\";const i=s(1077);const n=s(2361).EventEmitter;const r=s(7147);let o=r.writev;if(!o){const t=process.binding(\"fs\");const e=t.FSReqWrap||t.FSReqCallback;o=(s,i,n,r)=>{const done=(t,e)=>r(t,e,i);const o=new e;o.oncomplete=done;t.writeBuffers(s,i,n,o)}}const h=Symbol(\"_autoClose\");const l=Symbol(\"_close\");const c=Symbol(\"_ended\");const a=Symbol(\"_fd\");const u=Symbol(\"_finished\");const f=Symbol(\"_flags\");const d=Symbol(\"_flush\");const p=Symbol(\"_handleChunk\");const m=Symbol(\"_makeBuf\");const y=Symbol(\"_mode\");const b=Symbol(\"_needDrain\");const w=Symbol(\"_onerror\");const E=Symbol(\"_onopen\");const _=Symbol(\"_onread\");const S=Symbol(\"_onwrite\");const g=Symbol(\"_open\");const R=Symbol(\"_path\");const O=Symbol(\"_pos\");const k=Symbol(\"_queue\");const v=Symbol(\"_read\");const T=Symbol(\"_readSize\");const L=Symbol(\"_reading\");const x=Symbol(\"_remain\");const A=Symbol(\"_size\");const I=Symbol(\"_write\");const D=Symbol(\"_writing\");const N=Symbol(\"_defaultFlag\");const B=Symbol(\"_errored\");class ReadStream extends i{constructor(t,e){e=e||{};super(e);this.readable=true;this.writable=false;if(typeof t!==\"string\")throw new TypeError(\"path must be a string\");this[B]=false;this[a]=typeof e.fd===\"number\"?e.fd:null;this[R]=t;this[T]=e.readSize||16*1024*1024;this[L]=false;this[A]=typeof e.size===\"number\"?e.size:Infinity;this[x]=this[A];this[h]=typeof e.autoClose===\"boolean\"?e.autoClose:true;if(typeof this[a]===\"number\")this[v]();else this[g]()}get fd(){return this[a]}get path(){return this[R]}write(){throw new TypeError(\"this is a readable stream\")}end(){throw new TypeError(\"this is a readable stream\")}[g](){r.open(this[R],\"r\",((t,e)=>this[E](t,e)))}[E](t,e){if(t)this[w](t);else{this[a]=e;this.emit(\"open\",e);this[v]()}}[m](){return Buffer.allocUnsafe(Math.min(this[T],this[x]))}[v](){if(!this[L]){this[L]=true;const t=this[m]();if(t.length===0)return process.nextTick((()=>this[_](null,0,t)));r.read(this[a],t,0,t.length,null,((t,e,s)=>this[_](t,e,s)))}}[_](t,e,s){this[L]=false;if(t)this[w](t);else if(this[p](e,s))this[v]()}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;r.close(t,(t=>t?this.emit(\"error\",t):this.emit(\"close\")))}}[w](t){this[L]=true;this[l]();this.emit(\"error\",t)}[p](t,e){let s=false;this[x]-=t;if(t>0)s=super.write(t<e.length?e.slice(0,t):e);if(t===0||this[x]<=0){s=false;this[l]();super.end()}return s}emit(t,e){switch(t){case\"prefinish\":case\"finish\":break;case\"drain\":if(typeof this[a]===\"number\")this[v]();break;case\"error\":if(this[B])return;this[B]=true;return super.emit(t,e);default:return super.emit(t,e)}}}class ReadStreamSync extends ReadStream{[g](){let t=true;try{this[E](null,r.openSync(this[R],\"r\"));t=false}finally{if(t)this[l]()}}[v](){let t=true;try{if(!this[L]){this[L]=true;do{const t=this[m]();const e=t.length===0?0:r.readSync(this[a],t,0,t.length,null);if(!this[p](e,t))break}while(true);this[L]=false}t=false}finally{if(t)this[l]()}}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;r.closeSync(t);this.emit(\"close\")}}}class WriteStream extends n{constructor(t,e){e=e||{};super(e);this.readable=false;this.writable=true;this[B]=false;this[D]=false;this[c]=false;this[b]=false;this[k]=[];this[R]=t;this[a]=typeof e.fd===\"number\"?e.fd:null;this[y]=e.mode===undefined?438:e.mode;this[O]=typeof e.start===\"number\"?e.start:null;this[h]=typeof e.autoClose===\"boolean\"?e.autoClose:true;const s=this[O]!==null?\"r+\":\"w\";this[N]=e.flags===undefined;this[f]=this[N]?s:e.flags;if(this[a]===null)this[g]()}emit(t,e){if(t===\"error\"){if(this[B])return;this[B]=true}return super.emit(t,e)}get fd(){return this[a]}get path(){return this[R]}[w](t){this[l]();this[D]=true;this.emit(\"error\",t)}[g](){r.open(this[R],this[f],this[y],((t,e)=>this[E](t,e)))}[E](t,e){if(this[N]&&this[f]===\"r+\"&&t&&t.code===\"ENOENT\"){this[f]=\"w\";this[g]()}else if(t)this[w](t);else{this[a]=e;this.emit(\"open\",e);this[d]()}}end(t,e){if(t)this.write(t,e);this[c]=true;if(!this[D]&&!this[k].length&&typeof this[a]===\"number\")this[S](null,0);return this}write(t,e){if(typeof t===\"string\")t=Buffer.from(t,e);if(this[c]){this.emit(\"error\",new Error(\"write() after end()\"));return false}if(this[a]===null||this[D]||this[k].length){this[k].push(t);this[b]=true;return false}this[D]=true;this[I](t);return true}[I](t){r.write(this[a],t,0,t.length,this[O],((t,e)=>this[S](t,e)))}[S](t,e){if(t)this[w](t);else{if(this[O]!==null)this[O]+=e;if(this[k].length)this[d]();else{this[D]=false;if(this[c]&&!this[u]){this[u]=true;this[l]();this.emit(\"finish\")}else if(this[b]){this[b]=false;this.emit(\"drain\")}}}}[d](){if(this[k].length===0){if(this[c])this[S](null,0)}else if(this[k].length===1)this[I](this[k].pop());else{const t=this[k];this[k]=[];o(this[a],t,this[O],((t,e)=>this[S](t,e)))}}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;r.close(t,(t=>t?this.emit(\"error\",t):this.emit(\"close\")))}}}class WriteStreamSync extends WriteStream{[g](){let t;if(this[N]&&this[f]===\"r+\"){try{t=r.openSync(this[R],this[f],this[y])}catch(t){if(t.code===\"ENOENT\"){this[f]=\"w\";return this[g]()}else throw t}}else t=r.openSync(this[R],this[f],this[y]);this[E](null,t)}[l](){if(this[h]&&typeof this[a]===\"number\"){const t=this[a];this[a]=null;r.closeSync(t);this.emit(\"close\")}}[I](t){let e=true;try{this[S](null,r.writeSync(this[a],t,0,t.length,this[O]));e=false}finally{if(e)try{this[l]()}catch(t){}}}}e.ReadStream=ReadStream;e.ReadStreamSync=ReadStreamSync;e.WriteStream=WriteStream;e.WriteStreamSync=WriteStreamSync},1077:(t,e,s)=>{\"use strict\";const i=typeof process===\"object\"&&process?process:{stdout:null,stderr:null};const n=s(2361);const r=s(2781);const o=s(1576).StringDecoder;const h=Symbol(\"EOF\");const l=Symbol(\"maybeEmitEnd\");const c=Symbol(\"emittedEnd\");const a=Symbol(\"emittingEnd\");const u=Symbol(\"emittedError\");const f=Symbol(\"closed\");const d=Symbol(\"read\");const p=Symbol(\"flush\");const m=Symbol(\"flushChunk\");const y=Symbol(\"encoding\");const b=Symbol(\"decoder\");const w=Symbol(\"flowing\");const E=Symbol(\"paused\");const _=Symbol(\"resume\");const S=Symbol(\"bufferLength\");const g=Symbol(\"bufferPush\");const R=Symbol(\"bufferShift\");const O=Symbol(\"objectMode\");const k=Symbol(\"destroyed\");const v=Symbol(\"emitData\");const T=Symbol(\"emitEnd\");const L=Symbol(\"emitEnd2\");const x=Symbol(\"async\");const defer=t=>Promise.resolve().then(t);const A=global._MP_NO_ITERATOR_SYMBOLS_!==\"1\";const I=A&&Symbol.asyncIterator||Symbol(\"asyncIterator not implemented\");const D=A&&Symbol.iterator||Symbol(\"iterator not implemented\");const isEndish=t=>t===\"end\"||t===\"finish\"||t===\"prefinish\";const isArrayBuffer=t=>t instanceof ArrayBuffer||typeof t===\"object\"&&t.constructor&&t.constructor.name===\"ArrayBuffer\"&&t.byteLength>=0;const isArrayBufferView=t=>!Buffer.isBuffer(t)&&ArrayBuffer.isView(t);class Pipe{constructor(t,e,s){this.src=t;this.dest=e;this.opts=s;this.ondrain=()=>t[_]();e.on(\"drain\",this.ondrain)}unpipe(){this.dest.removeListener(\"drain\",this.ondrain)}proxyErrors(){}end(){this.unpipe();if(this.opts.end)this.dest.end()}}class PipeProxyErrors extends Pipe{unpipe(){this.src.removeListener(\"error\",this.proxyErrors);super.unpipe()}constructor(t,e,s){super(t,e,s);this.proxyErrors=t=>e.emit(\"error\",t);t.on(\"error\",this.proxyErrors)}}t.exports=class Minipass extends r{constructor(t){super();this[w]=false;this[E]=false;this.pipes=[];this.buffer=[];this[O]=t&&t.objectMode||false;if(this[O])this[y]=null;else this[y]=t&&t.encoding||null;if(this[y]===\"buffer\")this[y]=null;this[x]=t&&!!t.async||false;this[b]=this[y]?new o(this[y]):null;this[h]=false;this[c]=false;this[a]=false;this[f]=false;this[u]=null;this.writable=true;this.readable=true;this[S]=0;this[k]=false}get bufferLength(){return this[S]}get encoding(){return this[y]}set encoding(t){if(this[O])throw new Error(\"cannot set encoding in objectMode\");if(this[y]&&t!==this[y]&&(this[b]&&this[b].lastNeed||this[S]))throw new Error(\"cannot change encoding\");if(this[y]!==t){this[b]=t?new o(t):null;if(this.buffer.length)this.buffer=this.buffer.map((t=>this[b].write(t)))}this[y]=t}setEncoding(t){this.encoding=t}get objectMode(){return this[O]}set objectMode(t){this[O]=this[O]||!!t}get[\"async\"](){return this[x]}set[\"async\"](t){this[x]=this[x]||!!t}write(t,e,s){if(this[h])throw new Error(\"write after end\");if(this[k]){this.emit(\"error\",Object.assign(new Error(\"Cannot call write after a stream was destroyed\"),{code:\"ERR_STREAM_DESTROYED\"}));return true}if(typeof e===\"function\")s=e,e=\"utf8\";if(!e)e=\"utf8\";const i=this[x]?defer:t=>t();if(!this[O]&&!Buffer.isBuffer(t)){if(isArrayBufferView(t))t=Buffer.from(t.buffer,t.byteOffset,t.byteLength);else if(isArrayBuffer(t))t=Buffer.from(t);else if(typeof t!==\"string\")this.objectMode=true}if(this[O]){if(this.flowing&&this[S]!==0)this[p](true);if(this.flowing)this.emit(\"data\",t);else this[g](t);if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(!t.length){if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(typeof t===\"string\"&&!(e===this[y]&&!this[b].lastNeed)){t=Buffer.from(t,e)}if(Buffer.isBuffer(t)&&this[y])t=this[b].write(t);if(this.flowing&&this[S]!==0)this[p](true);if(this.flowing)this.emit(\"data\",t);else this[g](t);if(this[S]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}read(t){if(this[k])return null;if(this[S]===0||t===0||t>this[S]){this[l]();return null}if(this[O])t=null;if(this.buffer.length>1&&!this[O]){if(this.encoding)this.buffer=[this.buffer.join(\"\")];else this.buffer=[Buffer.concat(this.buffer,this[S])]}const e=this[d](t||null,this.buffer[0]);this[l]();return e}[d](t,e){if(t===e.length||t===null)this[R]();else{this.buffer[0]=e.slice(t);e=e.slice(0,t);this[S]-=t}this.emit(\"data\",e);if(!this.buffer.length&&!this[h])this.emit(\"drain\");return e}end(t,e,s){if(typeof t===\"function\")s=t,t=null;if(typeof e===\"function\")s=e,e=\"utf8\";if(t)this.write(t,e);if(s)this.once(\"end\",s);this[h]=true;this.writable=false;if(this.flowing||!this[E])this[l]();return this}[_](){if(this[k])return;this[E]=false;this[w]=true;this.emit(\"resume\");if(this.buffer.length)this[p]();else if(this[h])this[l]();else this.emit(\"drain\")}resume(){return this[_]()}pause(){this[w]=false;this[E]=true}get destroyed(){return this[k]}get flowing(){return this[w]}get paused(){return this[E]}[g](t){if(this[O])this[S]+=1;else this[S]+=t.length;this.buffer.push(t)}[R](){if(this.buffer.length){if(this[O])this[S]-=1;else this[S]-=this.buffer[0].length}return this.buffer.shift()}[p](t){do{}while(this[m](this[R]()));if(!t&&!this.buffer.length&&!this[h])this.emit(\"drain\")}[m](t){return t?(this.emit(\"data\",t),this.flowing):false}pipe(t,e){if(this[k])return;const s=this[c];e=e||{};if(t===i.stdout||t===i.stderr)e.end=false;else e.end=e.end!==false;e.proxyErrors=!!e.proxyErrors;if(s){if(e.end)t.end()}else{this.pipes.push(!e.proxyErrors?new Pipe(this,t,e):new PipeProxyErrors(this,t,e));if(this[x])defer((()=>this[_]()));else this[_]()}return t}unpipe(t){const e=this.pipes.find((e=>e.dest===t));if(e){this.pipes.splice(this.pipes.indexOf(e),1);e.unpipe()}}addListener(t,e){return this.on(t,e)}on(t,e){const s=super.on(t,e);if(t===\"data\"&&!this.pipes.length&&!this.flowing)this[_]();else if(t===\"readable\"&&this[S]!==0)super.emit(\"readable\");else if(isEndish(t)&&this[c]){super.emit(t);this.removeAllListeners(t)}else if(t===\"error\"&&this[u]){if(this[x])defer((()=>e.call(this,this[u])));else e.call(this,this[u])}return s}get emittedEnd(){return this[c]}[l](){if(!this[a]&&!this[c]&&!this[k]&&this.buffer.length===0&&this[h]){this[a]=true;this.emit(\"end\");this.emit(\"prefinish\");this.emit(\"finish\");if(this[f])this.emit(\"close\");this[a]=false}}emit(t,e,...s){if(t!==\"error\"&&t!==\"close\"&&t!==k&&this[k])return;else if(t===\"data\"){return!e?false:this[x]?defer((()=>this[v](e))):this[v](e)}else if(t===\"end\"){return this[T]()}else if(t===\"close\"){this[f]=true;if(!this[c]&&!this[k])return;const t=super.emit(\"close\");this.removeAllListeners(\"close\");return t}else if(t===\"error\"){this[u]=e;const t=super.emit(\"error\",e);this[l]();return t}else if(t===\"resume\"){const t=super.emit(\"resume\");this[l]();return t}else if(t===\"finish\"||t===\"prefinish\"){const e=super.emit(t);this.removeAllListeners(t);return e}const i=super.emit(t,e,...s);this[l]();return i}[v](t){for(const e of this.pipes){if(e.dest.write(t)===false)this.pause()}const e=super.emit(\"data\",t);this[l]();return e}[T](){if(this[c])return;this[c]=true;this.readable=false;if(this[x])defer((()=>this[L]()));else this[L]()}[L](){if(this[b]){const t=this[b].end();if(t){for(const e of this.pipes){e.dest.write(t)}super.emit(\"data\",t)}}for(const t of this.pipes){t.end()}const t=super.emit(\"end\");this.removeAllListeners(\"end\");return t}collect(){const t=[];if(!this[O])t.dataLength=0;const e=this.promise();this.on(\"data\",(e=>{t.push(e);if(!this[O])t.dataLength+=e.length}));return e.then((()=>t))}concat(){return this[O]?Promise.reject(new Error(\"cannot concat in objectMode\")):this.collect().then((t=>this[O]?Promise.reject(new Error(\"cannot concat in objectMode\")):this[y]?t.join(\"\"):Buffer.concat(t,t.dataLength)))}promise(){return new Promise(((t,e)=>{this.on(k,(()=>e(new Error(\"stream destroyed\"))));this.on(\"error\",(t=>e(t)));this.on(\"end\",(()=>t()))}))}[I](){const next=()=>{const t=this.read();if(t!==null)return Promise.resolve({done:false,value:t});if(this[h])return Promise.resolve({done:true});let e=null;let s=null;const onerr=t=>{this.removeListener(\"data\",ondata);this.removeListener(\"end\",onend);s(t)};const ondata=t=>{this.removeListener(\"error\",onerr);this.removeListener(\"end\",onend);this.pause();e({value:t,done:!!this[h]})};const onend=()=>{this.removeListener(\"error\",onerr);this.removeListener(\"data\",ondata);e({done:true})};const ondestroy=()=>onerr(new Error(\"stream destroyed\"));return new Promise(((t,i)=>{s=i;e=t;this.once(k,ondestroy);this.once(\"error\",onerr);this.once(\"end\",onend);this.once(\"data\",ondata)}))};return{next:next}}[D](){const next=()=>{const t=this.read();const e=t===null;return{value:t,done:e}};return{next:next}}destroy(t){if(this[k]){if(t)this.emit(\"error\",t);else this.emit(k);return this}this[k]=true;this.buffer.length=0;this[S]=0;if(typeof this.close===\"function\"&&!this[f])this.close();if(t)this.emit(\"error\",t);else this.emit(k);return this}static isStream(t){return!!t&&(t instanceof Minipass||t instanceof r||t instanceof n&&(typeof t.pipe===\"function\"||typeof t.write===\"function\"&&typeof t.end===\"function\"))}}},6769:(t,e,s)=>{const i=s(9796).constants||{ZLIB_VERNUM:4736};t.exports=Object.freeze(Object.assign(Object.create(null),{Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_VERSION_ERROR:-6,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,DEFLATE:1,INFLATE:2,GZIP:3,GUNZIP:4,DEFLATERAW:5,INFLATERAW:6,UNZIP:7,BROTLI_DECODE:8,BROTLI_ENCODE:9,Z_MIN_WINDOWBITS:8,Z_MAX_WINDOWBITS:15,Z_DEFAULT_WINDOWBITS:15,Z_MIN_CHUNK:64,Z_MAX_CHUNK:Infinity,Z_DEFAULT_CHUNK:16384,Z_MIN_MEMLEVEL:1,Z_MAX_MEMLEVEL:9,Z_DEFAULT_MEMLEVEL:8,Z_MIN_LEVEL:-1,Z_MAX_LEVEL:9,Z_DEFAULT_LEVEL:-1,BROTLI_OPERATION_PROCESS:0,BROTLI_OPERATION_FLUSH:1,BROTLI_OPERATION_FINISH:2,BROTLI_OPERATION_EMIT_METADATA:3,BROTLI_MODE_GENERIC:0,BROTLI_MODE_TEXT:1,BROTLI_MODE_FONT:2,BROTLI_DEFAULT_MODE:0,BROTLI_MIN_QUALITY:0,BROTLI_MAX_QUALITY:11,BROTLI_DEFAULT_QUALITY:11,BROTLI_MIN_WINDOW_BITS:10,BROTLI_MAX_WINDOW_BITS:24,BROTLI_LARGE_MAX_WINDOW_BITS:30,BROTLI_DEFAULT_WINDOW:22,BROTLI_MIN_INPUT_BLOCK_BITS:16,BROTLI_MAX_INPUT_BLOCK_BITS:24,BROTLI_PARAM_MODE:0,BROTLI_PARAM_QUALITY:1,BROTLI_PARAM_LGWIN:2,BROTLI_PARAM_LGBLOCK:3,BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING:4,BROTLI_PARAM_SIZE_HINT:5,BROTLI_PARAM_LARGE_WINDOW:6,BROTLI_PARAM_NPOSTFIX:7,BROTLI_PARAM_NDIRECT:8,BROTLI_DECODER_RESULT_ERROR:0,BROTLI_DECODER_RESULT_SUCCESS:1,BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT:2,BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT:3,BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION:0,BROTLI_DECODER_PARAM_LARGE_WINDOW:1,BROTLI_DECODER_NO_ERROR:0,BROTLI_DECODER_SUCCESS:1,BROTLI_DECODER_NEEDS_MORE_INPUT:2,BROTLI_DECODER_NEEDS_MORE_OUTPUT:3,BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE:-1,BROTLI_DECODER_ERROR_FORMAT_RESERVED:-2,BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE:-3,BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET:-4,BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME:-5,BROTLI_DECODER_ERROR_FORMAT_CL_SPACE:-6,BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE:-7,BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT:-8,BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1:-9,BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2:-10,BROTLI_DECODER_ERROR_FORMAT_TRANSFORM:-11,BROTLI_DECODER_ERROR_FORMAT_DICTIONARY:-12,BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS:-13,BROTLI_DECODER_ERROR_FORMAT_PADDING_1:-14,BROTLI_DECODER_ERROR_FORMAT_PADDING_2:-15,BROTLI_DECODER_ERROR_FORMAT_DISTANCE:-16,BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET:-19,BROTLI_DECODER_ERROR_INVALID_ARGUMENTS:-20,BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES:-21,BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS:-22,BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP:-25,BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1:-26,BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2:-27,BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES:-30,BROTLI_DECODER_ERROR_UNREACHABLE:-31},i))},3486:(t,e,s)=>{\"use strict\";const i=s(9491);const n=s(4300).Buffer;const r=s(9796);const o=e.constants=s(6769);const h=s(1077);const l=n.concat;const c=Symbol(\"_superWrite\");class ZlibError extends Error{constructor(t){super(\"zlib: \"+t.message);this.code=t.code;this.errno=t.errno;if(!this.code)this.code=\"ZLIB_ERROR\";this.message=\"zlib: \"+t.message;Error.captureStackTrace(this,this.constructor)}get name(){return\"ZlibError\"}}const a=Symbol(\"opts\");const u=Symbol(\"flushFlag\");const f=Symbol(\"finishFlushFlag\");const d=Symbol(\"fullFlushFlag\");const p=Symbol(\"handle\");const m=Symbol(\"onError\");const y=Symbol(\"sawError\");const b=Symbol(\"level\");const w=Symbol(\"strategy\");const E=Symbol(\"ended\");const _=Symbol(\"_defaultFullFlush\");class ZlibBase extends h{constructor(t,e){if(!t||typeof t!==\"object\")throw new TypeError(\"invalid options for ZlibBase constructor\");super(t);this[y]=false;this[E]=false;this[a]=t;this[u]=t.flush;this[f]=t.finishFlush;try{this[p]=new r[e](t)}catch(t){throw new ZlibError(t)}this[m]=t=>{if(this[y])return;this[y]=true;this.close();this.emit(\"error\",t)};this[p].on(\"error\",(t=>this[m](new ZlibError(t))));this.once(\"end\",(()=>this.close))}close(){if(this[p]){this[p].close();this[p]=null;this.emit(\"close\")}}reset(){if(!this[y]){i(this[p],\"zlib binding closed\");return this[p].reset()}}flush(t){if(this.ended)return;if(typeof t!==\"number\")t=this[d];this.write(Object.assign(n.alloc(0),{[u]:t}))}end(t,e,s){if(t)this.write(t,e);this.flush(this[f]);this[E]=true;return super.end(null,null,s)}get ended(){return this[E]}write(t,e,s){if(typeof e===\"function\")s=e,e=\"utf8\";if(typeof t===\"string\")t=n.from(t,e);if(this[y])return;i(this[p],\"zlib binding closed\");const r=this[p]._handle;const o=r.close;r.close=()=>{};const h=this[p].close;this[p].close=()=>{};n.concat=t=>t;let a;try{const e=typeof t[u]===\"number\"?t[u]:this[u];a=this[p]._processChunk(t,e);n.concat=l}catch(t){n.concat=l;this[m](new ZlibError(t))}finally{if(this[p]){this[p]._handle=r;r.close=o;this[p].close=h;this[p].removeAllListeners(\"error\")}}if(this[p])this[p].on(\"error\",(t=>this[m](new ZlibError(t))));let f;if(a){if(Array.isArray(a)&&a.length>0){f=this[c](n.from(a[0]));for(let t=1;t<a.length;t++){f=this[c](a[t])}}else{f=this[c](n.from(a))}}if(s)s();return f}[c](t){return super.write(t)}}class Zlib extends ZlibBase{constructor(t,e){t=t||{};t.flush=t.flush||o.Z_NO_FLUSH;t.finishFlush=t.finishFlush||o.Z_FINISH;super(t,e);this[d]=o.Z_FULL_FLUSH;this[b]=t.level;this[w]=t.strategy}params(t,e){if(this[y])return;if(!this[p])throw new Error(\"cannot switch params when binding is closed\");if(!this[p].params)throw new Error(\"not supported in this implementation\");if(this[b]!==t||this[w]!==e){this.flush(o.Z_SYNC_FLUSH);i(this[p],\"zlib binding closed\");const s=this[p].flush;this[p].flush=(t,e)=>{this.flush(t);e()};try{this[p].params(t,e)}finally{this[p].flush=s}if(this[p]){this[b]=t;this[w]=e}}}}class Deflate extends Zlib{constructor(t){super(t,\"Deflate\")}}class Inflate extends Zlib{constructor(t){super(t,\"Inflate\")}}const S=Symbol(\"_portable\");class Gzip extends Zlib{constructor(t){super(t,\"Gzip\");this[S]=t&&!!t.portable}[c](t){if(!this[S])return super[c](t);this[S]=false;t[9]=255;return super[c](t)}}class Gunzip extends Zlib{constructor(t){super(t,\"Gunzip\")}}class DeflateRaw extends Zlib{constructor(t){super(t,\"DeflateRaw\")}}class InflateRaw extends Zlib{constructor(t){super(t,\"InflateRaw\")}}class Unzip extends Zlib{constructor(t){super(t,\"Unzip\")}}class Brotli extends ZlibBase{constructor(t,e){t=t||{};t.flush=t.flush||o.BROTLI_OPERATION_PROCESS;t.finishFlush=t.finishFlush||o.BROTLI_OPERATION_FINISH;super(t,e);this[d]=o.BROTLI_OPERATION_FLUSH}}class BrotliCompress extends Brotli{constructor(t){super(t,\"BrotliCompress\")}}class BrotliDecompress extends Brotli{constructor(t){super(t,\"BrotliDecompress\")}}e.Deflate=Deflate;e.Inflate=Inflate;e.Gzip=Gzip;e.Gunzip=Gunzip;e.DeflateRaw=DeflateRaw;e.InflateRaw=InflateRaw;e.Unzip=Unzip;if(typeof r.BrotliCompress===\"function\"){e.BrotliCompress=BrotliCompress;e.BrotliDecompress=BrotliDecompress}else{e.BrotliCompress=e.BrotliDecompress=class{constructor(){throw new Error(\"Brotli is not supported in this version of Node.js\")}}}},6186:(t,e,s)=>{const i=s(2853);const n=s(2930);const{mkdirpNative:r,mkdirpNativeSync:o}=s(4983);const{mkdirpManual:h,mkdirpManualSync:l}=s(356);const{useNative:c,useNativeSync:a}=s(4518);const mkdirp=(t,e)=>{t=n(t);e=i(e);return c(e)?r(t,e):h(t,e)};const mkdirpSync=(t,e)=>{t=n(t);e=i(e);return a(e)?o(t,e):l(t,e)};mkdirp.sync=mkdirpSync;mkdirp.native=(t,e)=>r(n(t),i(e));mkdirp.manual=(t,e)=>h(n(t),i(e));mkdirp.nativeSync=(t,e)=>o(n(t),i(e));mkdirp.manualSync=(t,e)=>l(n(t),i(e));t.exports=mkdirp},4992:(t,e,s)=>{const{dirname:i}=s(1017);const findMade=(t,e,s=undefined)=>{if(s===e)return Promise.resolve();return t.statAsync(e).then((t=>t.isDirectory()?s:undefined),(s=>s.code===\"ENOENT\"?findMade(t,i(e),e):undefined))};const findMadeSync=(t,e,s=undefined)=>{if(s===e)return undefined;try{return t.statSync(e).isDirectory()?s:undefined}catch(s){return s.code===\"ENOENT\"?findMadeSync(t,i(e),e):undefined}};t.exports={findMade:findMade,findMadeSync:findMadeSync}},356:(t,e,s)=>{const{dirname:i}=s(1017);const mkdirpManual=(t,e,s)=>{e.recursive=false;const n=i(t);if(n===t){return e.mkdirAsync(t,e).catch((t=>{if(t.code!==\"EISDIR\")throw t}))}return e.mkdirAsync(t,e).then((()=>s||t),(i=>{if(i.code===\"ENOENT\")return mkdirpManual(n,e).then((s=>mkdirpManual(t,e,s)));if(i.code!==\"EEXIST\"&&i.code!==\"EROFS\")throw i;return e.statAsync(t).then((t=>{if(t.isDirectory())return s;else throw i}),(()=>{throw i}))}))};const mkdirpManualSync=(t,e,s)=>{const n=i(t);e.recursive=false;if(n===t){try{return e.mkdirSync(t,e)}catch(t){if(t.code!==\"EISDIR\")throw t;else return}}try{e.mkdirSync(t,e);return s||t}catch(i){if(i.code===\"ENOENT\")return mkdirpManualSync(t,e,mkdirpManualSync(n,e,s));if(i.code!==\"EEXIST\"&&i.code!==\"EROFS\")throw i;try{if(!e.statSync(t).isDirectory())throw i}catch(t){throw i}}};t.exports={mkdirpManual:mkdirpManual,mkdirpManualSync:mkdirpManualSync}},4983:(t,e,s)=>{const{dirname:i}=s(1017);const{findMade:n,findMadeSync:r}=s(4992);const{mkdirpManual:o,mkdirpManualSync:h}=s(356);const mkdirpNative=(t,e)=>{e.recursive=true;const s=i(t);if(s===t)return e.mkdirAsync(t,e);return n(e,t).then((s=>e.mkdirAsync(t,e).then((()=>s)).catch((s=>{if(s.code===\"ENOENT\")return o(t,e);else throw s}))))};const mkdirpNativeSync=(t,e)=>{e.recursive=true;const s=i(t);if(s===t)return e.mkdirSync(t,e);const n=r(e,t);try{e.mkdirSync(t,e);return n}catch(s){if(s.code===\"ENOENT\")return h(t,e);else throw s}};t.exports={mkdirpNative:mkdirpNative,mkdirpNativeSync:mkdirpNativeSync}},2853:(t,e,s)=>{const{promisify:i}=s(3837);const n=s(7147);const optsArg=t=>{if(!t)t={mode:511,fs:n};else if(typeof t===\"object\")t={mode:511,fs:n,...t};else if(typeof t===\"number\")t={mode:t,fs:n};else if(typeof t===\"string\")t={mode:parseInt(t,8),fs:n};else throw new TypeError(\"invalid options argument\");t.mkdir=t.mkdir||t.fs.mkdir||n.mkdir;t.mkdirAsync=i(t.mkdir);t.stat=t.stat||t.fs.stat||n.stat;t.statAsync=i(t.stat);t.statSync=t.statSync||t.fs.statSync||n.statSync;t.mkdirSync=t.mkdirSync||t.fs.mkdirSync||n.mkdirSync;return t};t.exports=optsArg},2930:(t,e,s)=>{const i=process.env.__TESTING_MKDIRP_PLATFORM__||process.platform;const{resolve:n,parse:r}=s(1017);const pathArg=t=>{if(/\\0/.test(t)){throw Object.assign(new TypeError(\"path must be a string without null bytes\"),{path:t,code:\"ERR_INVALID_ARG_VALUE\"})}t=n(t);if(i===\"win32\"){const e=/[*|\"<>?:]/;const{root:s}=r(t);if(e.test(t.substr(s.length))){throw Object.assign(new Error(\"Illegal characters in path.\"),{path:t,code:\"EINVAL\"})}}return t};t.exports=pathArg},4518:(t,e,s)=>{const i=s(7147);const n=process.env.__TESTING_MKDIRP_NODE_VERSION__||process.version;const r=n.replace(/^v/,\"\").split(\".\");const o=+r[0]>10||+r[0]===10&&+r[1]>=12;const h=!o?()=>false:t=>t.mkdir===i.mkdir;const l=!o?()=>false:t=>t.mkdirSync===i.mkdirSync;t.exports={useNative:h,useNativeSync:l}},4016:(t,e,s)=>{\"use strict\";const i=s(5274);const n=s(7900);const r=s(7714);const o=s(1525);const h=s(1017);t.exports=(t,e,s)=>{if(typeof e===\"function\"){s=e}if(Array.isArray(t)){e=t,t={}}if(!e||!Array.isArray(e)||!e.length){throw new TypeError(\"no files or directories specified\")}e=Array.from(e);const n=i(t);if(n.sync&&typeof s===\"function\"){throw new TypeError(\"callback not supported for sync tar functions\")}if(!n.file&&typeof s===\"function\"){throw new TypeError(\"callback only supported with file option\")}return n.file&&n.sync?createFileSync(n,e):n.file?createFile(n,e,s):n.sync?createSync(n,e):create(n,e)};const createFileSync=(t,e)=>{const s=new n.Sync(t);const i=new r.WriteStreamSync(t.file,{mode:t.mode||438});s.pipe(i);addFilesSync(s,e)};const createFile=(t,e,s)=>{const i=new n(t);const o=new r.WriteStream(t.file,{mode:t.mode||438});i.pipe(o);const h=new Promise(((t,e)=>{o.on(\"error\",e);o.on(\"close\",t);i.on(\"error\",e)}));addFilesAsync(i,e);return s?h.then(s,s):h};const addFilesSync=(t,e)=>{e.forEach((e=>{if(e.charAt(0)===\"@\"){o({file:h.resolve(t.cwd,e.slice(1)),sync:true,noResume:true,onentry:e=>t.add(e)})}else{t.add(e)}}));t.end()};const addFilesAsync=(t,e)=>{while(e.length){const s=e.shift();if(s.charAt(0)===\"@\"){return o({file:h.resolve(t.cwd,s.slice(1)),noResume:true,onentry:e=>t.add(e)}).then((s=>addFilesAsync(t,e)))}else{t.add(s)}}t.end()};const createSync=(t,e)=>{const s=new n.Sync(t);addFilesSync(s,e);return s};const create=(t,e)=>{const s=new n(t);addFilesAsync(s,e);return s}},5317:(t,e,s)=>{\"use strict\";const i=s(5274);const n=s(7628);const r=s(7147);const o=s(7714);const h=s(1017);const l=s(8886);t.exports=(t,e,s)=>{if(typeof t===\"function\"){s=t,e=null,t={}}else if(Array.isArray(t)){e=t,t={}}if(typeof e===\"function\"){s=e,e=null}if(!e){e=[]}else{e=Array.from(e)}const n=i(t);if(n.sync&&typeof s===\"function\"){throw new TypeError(\"callback not supported for sync tar functions\")}if(!n.file&&typeof s===\"function\"){throw new TypeError(\"callback only supported with file option\")}if(e.length){filesFilter(n,e)}return n.file&&n.sync?extractFileSync(n):n.file?extractFile(n,s):n.sync?extractSync(n):extract(n)};const filesFilter=(t,e)=>{const s=new Map(e.map((t=>[l(t),true])));const i=t.filter;const mapHas=(t,e)=>{const i=e||h.parse(t).root||\".\";const n=t===i?false:s.has(t)?s.get(t):mapHas(h.dirname(t),i);s.set(t,n);return n};t.filter=i?(t,e)=>i(t,e)&&mapHas(l(t)):t=>mapHas(l(t))};const extractFileSync=t=>{const e=new n.Sync(t);const s=t.file;const i=r.statSync(s);const h=t.maxReadSize||16*1024*1024;const l=new o.ReadStreamSync(s,{readSize:h,size:i.size});l.pipe(e)};const extractFile=(t,e)=>{const s=new n(t);const i=t.maxReadSize||16*1024*1024;const h=t.file;const l=new Promise(((t,e)=>{s.on(\"error\",e);s.on(\"close\",t);r.stat(h,((t,n)=>{if(t){e(t)}else{const t=new o.ReadStream(h,{readSize:i,size:n.size});t.on(\"error\",e);t.pipe(s)}}))}));return e?l.then(e,e):l};const extractSync=t=>new n.Sync(t);const extract=t=>new n(t)},1172:(t,e,s)=>{const i=process.env.__FAKE_PLATFORM__||process.platform;const n=i===\"win32\";const r=global.__FAKE_TESTING_FS__||s(7147);const{O_CREAT:o,O_TRUNC:h,O_WRONLY:l,UV_FS_O_FILEMAP:c=0}=r.constants;const a=n&&!!c;const u=512*1024;const f=c|h|o|l;t.exports=!a?()=>\"w\":t=>t<u?f:\"w\"},6043:(t,e,s)=>{\"use strict\";const i=s(4173);const n=s(1017).posix;const r=s(2370);const o=Symbol(\"slurp\");const h=Symbol(\"type\");class Header{constructor(t,e,s,i){this.cksumValid=false;this.needPax=false;this.nullBlock=false;this.block=null;this.path=null;this.mode=null;this.uid=null;this.gid=null;this.size=null;this.mtime=null;this.cksum=null;this[h]=\"0\";this.linkpath=null;this.uname=null;this.gname=null;this.devmaj=0;this.devmin=0;this.atime=null;this.ctime=null;if(Buffer.isBuffer(t)){this.decode(t,e||0,s,i)}else if(t){this.set(t)}}decode(t,e,s,i){if(!e){e=0}if(!t||!(t.length>=e+512)){throw new Error(\"need 512 bytes for header\")}this.path=decString(t,e,100);this.mode=decNumber(t,e+100,8);this.uid=decNumber(t,e+108,8);this.gid=decNumber(t,e+116,8);this.size=decNumber(t,e+124,12);this.mtime=decDate(t,e+136,12);this.cksum=decNumber(t,e+148,12);this[o](s);this[o](i,true);this[h]=decString(t,e+156,1);if(this[h]===\"\"){this[h]=\"0\"}if(this[h]===\"0\"&&this.path.slice(-1)===\"/\"){this[h]=\"5\"}if(this[h]===\"5\"){this.size=0}this.linkpath=decString(t,e+157,100);if(t.slice(e+257,e+265).toString()===\"ustar\\x0000\"){this.uname=decString(t,e+265,32);this.gname=decString(t,e+297,32);this.devmaj=decNumber(t,e+329,8);this.devmin=decNumber(t,e+337,8);if(t[e+475]!==0){const s=decString(t,e+345,155);this.path=s+\"/\"+this.path}else{const s=decString(t,e+345,130);if(s){this.path=s+\"/\"+this.path}this.atime=decDate(t,e+476,12);this.ctime=decDate(t,e+488,12)}}let n=8*32;for(let s=e;s<e+148;s++){n+=t[s]}for(let s=e+156;s<e+512;s++){n+=t[s]}this.cksumValid=n===this.cksum;if(this.cksum===null&&n===8*32){this.nullBlock=true}}[o](t,e){for(const s in t){if(t[s]!==null&&t[s]!==undefined&&!(e&&s===\"path\")){this[s]=t[s]}}}encode(t,e){if(!t){t=this.block=Buffer.alloc(512);e=0}if(!e){e=0}if(!(t.length>=e+512)){throw new Error(\"need 512 bytes for header\")}const s=this.ctime||this.atime?130:155;const i=splitPrefix(this.path||\"\",s);const n=i[0];const r=i[1];this.needPax=i[2];this.needPax=encString(t,e,100,n)||this.needPax;this.needPax=encNumber(t,e+100,8,this.mode)||this.needPax;this.needPax=encNumber(t,e+108,8,this.uid)||this.needPax;this.needPax=encNumber(t,e+116,8,this.gid)||this.needPax;this.needPax=encNumber(t,e+124,12,this.size)||this.needPax;this.needPax=encDate(t,e+136,12,this.mtime)||this.needPax;t[e+156]=this[h].charCodeAt(0);this.needPax=encString(t,e+157,100,this.linkpath)||this.needPax;t.write(\"ustar\\x0000\",e+257,8);this.needPax=encString(t,e+265,32,this.uname)||this.needPax;this.needPax=encString(t,e+297,32,this.gname)||this.needPax;this.needPax=encNumber(t,e+329,8,this.devmaj)||this.needPax;this.needPax=encNumber(t,e+337,8,this.devmin)||this.needPax;this.needPax=encString(t,e+345,s,r)||this.needPax;if(t[e+475]!==0){this.needPax=encString(t,e+345,155,r)||this.needPax}else{this.needPax=encString(t,e+345,130,r)||this.needPax;this.needPax=encDate(t,e+476,12,this.atime)||this.needPax;this.needPax=encDate(t,e+488,12,this.ctime)||this.needPax}let o=8*32;for(let s=e;s<e+148;s++){o+=t[s]}for(let s=e+156;s<e+512;s++){o+=t[s]}this.cksum=o;encNumber(t,e+148,8,this.cksum);this.cksumValid=true;return this.needPax}set(t){for(const e in t){if(t[e]!==null&&t[e]!==undefined){this[e]=t[e]}}}get type(){return i.name.get(this[h])||this[h]}get typeKey(){return this[h]}set type(t){if(i.code.has(t)){this[h]=i.code.get(t)}else{this[h]=t}}}const splitPrefix=(t,e)=>{const s=100;let i=t;let r=\"\";let o;const h=n.parse(t).root||\".\";if(Buffer.byteLength(i)<s){o=[i,r,false]}else{r=n.dirname(i);i=n.basename(i);do{if(Buffer.byteLength(i)<=s&&Buffer.byteLength(r)<=e){o=[i,r,false]}else if(Buffer.byteLength(i)>s&&Buffer.byteLength(r)<=e){o=[i.slice(0,s-1),r,true]}else{i=n.join(n.basename(r),i);r=n.dirname(r)}}while(r!==h&&!o);if(!o){o=[t.slice(0,s-1),\"\",true]}}return o};const decString=(t,e,s)=>t.slice(e,e+s).toString(\"utf8\").replace(/\\0.*/,\"\");const decDate=(t,e,s)=>numToDate(decNumber(t,e,s));const numToDate=t=>t===null?null:new Date(t*1e3);const decNumber=(t,e,s)=>t[e]&128?r.parse(t.slice(e,e+s)):decSmallNumber(t,e,s);const nanNull=t=>isNaN(t)?null:t;const decSmallNumber=(t,e,s)=>nanNull(parseInt(t.slice(e,e+s).toString(\"utf8\").replace(/\\0.*$/,\"\").trim(),8));const l={12:8589934591,8:2097151};const encNumber=(t,e,s,i)=>i===null?false:i>l[s]||i<0?(r.encode(i,t.slice(e,e+s)),true):(encSmallNumber(t,e,s,i),false);const encSmallNumber=(t,e,s,i)=>t.write(octalString(i,s),e,s,\"ascii\");const octalString=(t,e)=>padOctal(Math.floor(t).toString(8),e);const padOctal=(t,e)=>(t.length===e-1?t:new Array(e-t.length-1).join(\"0\")+t+\" \")+\"\\0\";const encDate=(t,e,s,i)=>i===null?false:encNumber(t,e,s,i.getTime()/1e3);const c=new Array(156).join(\"\\0\");const encString=(t,e,s,i)=>i===null?false:(t.write(i+c,e,s,\"utf8\"),i.length!==Buffer.byteLength(i)||i.length>s);t.exports=Header},5274:t=>{\"use strict\";const e=new Map([[\"C\",\"cwd\"],[\"f\",\"file\"],[\"z\",\"gzip\"],[\"P\",\"preservePaths\"],[\"U\",\"unlink\"],[\"strip-components\",\"strip\"],[\"stripComponents\",\"strip\"],[\"keep-newer\",\"newer\"],[\"keepNewer\",\"newer\"],[\"keep-newer-files\",\"newer\"],[\"keepNewerFiles\",\"newer\"],[\"k\",\"keep\"],[\"keep-existing\",\"keep\"],[\"keepExisting\",\"keep\"],[\"m\",\"noMtime\"],[\"no-mtime\",\"noMtime\"],[\"p\",\"preserveOwner\"],[\"L\",\"follow\"],[\"h\",\"follow\"]]);t.exports=t=>t?Object.keys(t).map((s=>[e.has(s)?e.get(s):s,t[s]])).reduce(((t,e)=>(t[e[0]]=e[1],t)),Object.create(null)):{}},2370:t=>{\"use strict\";const encode=(t,e)=>{if(!Number.isSafeInteger(t)){throw Error(\"cannot encode number outside of javascript safe integer range\")}else if(t<0){encodeNegative(t,e)}else{encodePositive(t,e)}return e};const encodePositive=(t,e)=>{e[0]=128;for(var s=e.length;s>1;s--){e[s-1]=t&255;t=Math.floor(t/256)}};const encodeNegative=(t,e)=>{e[0]=255;var s=false;t=t*-1;for(var i=e.length;i>1;i--){var n=t&255;t=Math.floor(t/256);if(s){e[i-1]=onesComp(n)}else if(n===0){e[i-1]=0}else{s=true;e[i-1]=twosComp(n)}}};const parse=t=>{const e=t[0];const s=e===128?pos(t.slice(1,t.length)):e===255?twos(t):null;if(s===null){throw Error(\"invalid base256 encoding\")}if(!Number.isSafeInteger(s)){throw Error(\"parsed number outside of javascript safe integer range\")}return s};const twos=t=>{var e=t.length;var s=0;var i=false;for(var n=e-1;n>-1;n--){var r=t[n];var o;if(i){o=onesComp(r)}else if(r===0){o=r}else{i=true;o=twosComp(r)}if(o!==0){s-=o*Math.pow(256,e-n-1)}}return s};const pos=t=>{var e=t.length;var s=0;for(var i=e-1;i>-1;i--){var n=t[i];if(n!==0){s+=n*Math.pow(256,e-i-1)}}return s};const onesComp=t=>(255^t)&255;const twosComp=t=>(255^t)+1&255;t.exports={encode:encode,parse:parse}},1525:(t,e,s)=>{\"use strict\";const i=s(5274);const n=s(8917);const r=s(7147);const o=s(7714);const h=s(1017);const l=s(8886);t.exports=(t,e,s)=>{if(typeof t===\"function\"){s=t,e=null,t={}}else if(Array.isArray(t)){e=t,t={}}if(typeof e===\"function\"){s=e,e=null}if(!e){e=[]}else{e=Array.from(e)}const n=i(t);if(n.sync&&typeof s===\"function\"){throw new TypeError(\"callback not supported for sync tar functions\")}if(!n.file&&typeof s===\"function\"){throw new TypeError(\"callback only supported with file option\")}if(e.length){filesFilter(n,e)}if(!n.noResume){onentryFunction(n)}return n.file&&n.sync?listFileSync(n):n.file?listFile(n,s):list(n)};const onentryFunction=t=>{const e=t.onentry;t.onentry=e?t=>{e(t);t.resume()}:t=>t.resume()};const filesFilter=(t,e)=>{const s=new Map(e.map((t=>[l(t),true])));const i=t.filter;const mapHas=(t,e)=>{const i=e||h.parse(t).root||\".\";const n=t===i?false:s.has(t)?s.get(t):mapHas(h.dirname(t),i);s.set(t,n);return n};t.filter=i?(t,e)=>i(t,e)&&mapHas(l(t)):t=>mapHas(l(t))};const listFileSync=t=>{const e=list(t);const s=t.file;let i=true;let n;try{const o=r.statSync(s);const h=t.maxReadSize||16*1024*1024;if(o.size<h){e.end(r.readFileSync(s))}else{let t=0;const i=Buffer.allocUnsafe(h);n=r.openSync(s,\"r\");while(t<o.size){const s=r.readSync(n,i,0,h,t);t+=s;e.write(i.slice(0,s))}e.end()}i=false}finally{if(i&&n){try{r.closeSync(n)}catch(t){}}}};const listFile=(t,e)=>{const s=new n(t);const i=t.maxReadSize||16*1024*1024;const h=t.file;const l=new Promise(((t,e)=>{s.on(\"error\",e);s.on(\"end\",t);r.stat(h,((t,n)=>{if(t){e(t)}else{const t=new o.ReadStream(h,{readSize:i,size:n.size});t.on(\"error\",e);t.pipe(s)}}))}));return e?l.then(e,e):l};const list=t=>new n(t)},9624:(t,e,s)=>{\"use strict\";const i=s(6186);const n=s(7147);const r=s(1017);const o=s(9051);const h=s(6843);class SymlinkError extends Error{constructor(t,e){super(\"Cannot extract through symbolic link\");this.path=e;this.symlink=t}get name(){return\"SylinkError\"}}class CwdError extends Error{constructor(t,e){super(e+\": Cannot cd into '\"+t+\"'\");this.path=t;this.code=e}get name(){return\"CwdError\"}}const cGet=(t,e)=>t.get(h(e));const cSet=(t,e,s)=>t.set(h(e),s);const checkCwd=(t,e)=>{n.stat(t,((s,i)=>{if(s||!i.isDirectory()){s=new CwdError(t,s&&s.code||\"ENOTDIR\")}e(s)}))};t.exports=(t,e,s)=>{t=h(t);const l=e.umask;const c=e.mode|448;const a=(c&l)!==0;const u=e.uid;const f=e.gid;const d=typeof u===\"number\"&&typeof f===\"number\"&&(u!==e.processUid||f!==e.processGid);const p=e.preserve;const m=e.unlink;const y=e.cache;const b=h(e.cwd);const done=(e,i)=>{if(e){s(e)}else{cSet(y,t,true);if(i&&d){o(i,u,f,(t=>done(t)))}else if(a){n.chmod(t,c,s)}else{s()}}};if(y&&cGet(y,t)===true){return done()}if(t===b){return checkCwd(t,done)}if(p){return i(t,{mode:c}).then((t=>done(null,t)),done)}const w=h(r.relative(b,t));const E=w.split(\"/\");mkdir_(b,E,c,y,m,b,null,done)};const mkdir_=(t,e,s,i,o,l,c,a)=>{if(!e.length){return a(null,c)}const u=e.shift();const f=h(r.resolve(t+\"/\"+u));if(cGet(i,f)){return mkdir_(f,e,s,i,o,l,c,a)}n.mkdir(f,s,onmkdir(f,e,s,i,o,l,c,a))};const onmkdir=(t,e,s,i,r,o,l,c)=>a=>{if(a){n.lstat(t,((u,f)=>{if(u){u.path=u.path&&h(u.path);c(u)}else if(f.isDirectory()){mkdir_(t,e,s,i,r,o,l,c)}else if(r){n.unlink(t,(h=>{if(h){return c(h)}n.mkdir(t,s,onmkdir(t,e,s,i,r,o,l,c))}))}else if(f.isSymbolicLink()){return c(new SymlinkError(t,t+\"/\"+e.join(\"/\")))}else{c(a)}}))}else{l=l||t;mkdir_(t,e,s,i,r,o,l,c)}};const checkCwdSync=t=>{let e=false;let s=\"ENOTDIR\";try{e=n.statSync(t).isDirectory()}catch(t){s=t.code}finally{if(!e){throw new CwdError(t,s)}}};t.exports.sync=(t,e)=>{t=h(t);const s=e.umask;const l=e.mode|448;const c=(l&s)!==0;const a=e.uid;const u=e.gid;const f=typeof a===\"number\"&&typeof u===\"number\"&&(a!==e.processUid||u!==e.processGid);const d=e.preserve;const p=e.unlink;const m=e.cache;const y=h(e.cwd);const done=e=>{cSet(m,t,true);if(e&&f){o.sync(e,a,u)}if(c){n.chmodSync(t,l)}};if(m&&cGet(m,t)===true){return done()}if(t===y){checkCwdSync(y);return done()}if(d){return done(i.sync(t,l))}const b=h(r.relative(y,t));const w=b.split(\"/\");let E=null;for(let t=w.shift(),e=y;t&&(e+=\"/\"+t);t=w.shift()){e=h(r.resolve(e));if(cGet(m,e)){continue}try{n.mkdirSync(e,l);E=E||e;cSet(m,e,true)}catch(t){const s=n.lstatSync(e);if(s.isDirectory()){cSet(m,e,true);continue}else if(p){n.unlinkSync(e);n.mkdirSync(e,l);E=E||e;cSet(m,e,true);continue}else if(s.isSymbolicLink()){return new SymlinkError(e,e+\"/\"+w.join(\"/\"))}}}return done(E)}},8371:t=>{\"use strict\";t.exports=(t,e,s)=>{t&=4095;if(s){t=(t|384)&~18}if(e){if(t&256){t|=64}if(t&32){t|=8}if(t&4){t|=1}}return t}},7118:t=>{const e=Object.create(null);const{hasOwnProperty:s}=Object.prototype;t.exports=t=>{if(!s.call(e,t)){e[t]=t.normalize(\"NFD\")}return e[t]}},6843:t=>{const e=process.env.TESTING_TAR_FAKE_PLATFORM||process.platform;t.exports=e!==\"win32\"?t=>t:t=>t&&t.replace(/\\\\/g,\"/\")},7900:(t,e,s)=>{\"use strict\";class PackJob{constructor(t,e){this.path=t||\"./\";this.absolute=e;this.entry=null;this.stat=null;this.readdir=null;this.pending=false;this.ignore=false;this.piped=false}}const{Minipass:i}=s(6684);const n=s(3486);const r=s(8116);const o=s(5450);const h=o.Sync;const l=o.Tar;const c=s(665);const a=Buffer.alloc(1024);const u=Symbol(\"onStat\");const f=Symbol(\"ended\");const d=Symbol(\"queue\");const p=Symbol(\"current\");const m=Symbol(\"process\");const y=Symbol(\"processing\");const b=Symbol(\"processJob\");const w=Symbol(\"jobs\");const E=Symbol(\"jobDone\");const _=Symbol(\"addFSEntry\");const S=Symbol(\"addTarEntry\");const g=Symbol(\"stat\");const R=Symbol(\"readdir\");const O=Symbol(\"onreaddir\");const k=Symbol(\"pipe\");const v=Symbol(\"entry\");const T=Symbol(\"entryOpt\");const L=Symbol(\"writeEntryClass\");const x=Symbol(\"write\");const A=Symbol(\"ondrain\");const I=s(7147);const D=s(1017);const N=s(5899);const B=s(6843);const M=N(class Pack extends i{constructor(t){super(t);t=t||Object.create(null);this.opt=t;this.file=t.file||\"\";this.cwd=t.cwd||process.cwd();this.maxReadSize=t.maxReadSize;this.preservePaths=!!t.preservePaths;this.strict=!!t.strict;this.noPax=!!t.noPax;this.prefix=B(t.prefix||\"\");this.linkCache=t.linkCache||new Map;this.statCache=t.statCache||new Map;this.readdirCache=t.readdirCache||new Map;this[L]=o;if(typeof t.onwarn===\"function\"){this.on(\"warn\",t.onwarn)}this.portable=!!t.portable;this.zip=null;if(t.gzip){if(typeof t.gzip!==\"object\"){t.gzip={}}if(this.portable){t.gzip.portable=true}this.zip=new n.Gzip(t.gzip);this.zip.on(\"data\",(t=>super.write(t)));this.zip.on(\"end\",(t=>super.end()));this.zip.on(\"drain\",(t=>this[A]()));this.on(\"resume\",(t=>this.zip.resume()))}else{this.on(\"drain\",this[A])}this.noDirRecurse=!!t.noDirRecurse;this.follow=!!t.follow;this.noMtime=!!t.noMtime;this.mtime=t.mtime||null;this.filter=typeof t.filter===\"function\"?t.filter:t=>true;this[d]=new c;this[w]=0;this.jobs=+t.jobs||4;this[y]=false;this[f]=false}[x](t){return super.write(t)}add(t){this.write(t);return this}end(t){if(t){this.write(t)}this[f]=true;this[m]();return this}write(t){if(this[f]){throw new Error(\"write after end\")}if(t instanceof r){this[S](t)}else{this[_](t)}return this.flowing}[S](t){const e=B(D.resolve(this.cwd,t.path));if(!this.filter(t.path,t)){t.resume()}else{const s=new PackJob(t.path,e,false);s.entry=new l(t,this[T](s));s.entry.on(\"end\",(t=>this[E](s)));this[w]+=1;this[d].push(s)}this[m]()}[_](t){const e=B(D.resolve(this.cwd,t));this[d].push(new PackJob(t,e));this[m]()}[g](t){t.pending=true;this[w]+=1;const e=this.follow?\"stat\":\"lstat\";I[e](t.absolute,((e,s)=>{t.pending=false;this[w]-=1;if(e){this.emit(\"error\",e)}else{this[u](t,s)}}))}[u](t,e){this.statCache.set(t.absolute,e);t.stat=e;if(!this.filter(t.path,e)){t.ignore=true}this[m]()}[R](t){t.pending=true;this[w]+=1;I.readdir(t.absolute,((e,s)=>{t.pending=false;this[w]-=1;if(e){return this.emit(\"error\",e)}this[O](t,s)}))}[O](t,e){this.readdirCache.set(t.absolute,e);t.readdir=e;this[m]()}[m](){if(this[y]){return}this[y]=true;for(let t=this[d].head;t!==null&&this[w]<this.jobs;t=t.next){this[b](t.value);if(t.value.ignore){const e=t.next;this[d].removeNode(t);t.next=e}}this[y]=false;if(this[f]&&!this[d].length&&this[w]===0){if(this.zip){this.zip.end(a)}else{super.write(a);super.end()}}}get[p](){return this[d]&&this[d].head&&this[d].head.value}[E](t){this[d].shift();this[w]-=1;this[m]()}[b](t){if(t.pending){return}if(t.entry){if(t===this[p]&&!t.piped){this[k](t)}return}if(!t.stat){if(this.statCache.has(t.absolute)){this[u](t,this.statCache.get(t.absolute))}else{this[g](t)}}if(!t.stat){return}if(t.ignore){return}if(!this.noDirRecurse&&t.stat.isDirectory()&&!t.readdir){if(this.readdirCache.has(t.absolute)){this[O](t,this.readdirCache.get(t.absolute))}else{this[R](t)}if(!t.readdir){return}}t.entry=this[v](t);if(!t.entry){t.ignore=true;return}if(t===this[p]&&!t.piped){this[k](t)}}[T](t){return{onwarn:(t,e,s)=>this.warn(t,e,s),noPax:this.noPax,cwd:this.cwd,absolute:t.absolute,preservePaths:this.preservePaths,maxReadSize:this.maxReadSize,strict:this.strict,portable:this.portable,linkCache:this.linkCache,statCache:this.statCache,noMtime:this.noMtime,mtime:this.mtime,prefix:this.prefix}}[v](t){this[w]+=1;try{return new this[L](t.path,this[T](t)).on(\"end\",(()=>this[E](t))).on(\"error\",(t=>this.emit(\"error\",t)))}catch(t){this.emit(\"error\",t)}}[A](){if(this[p]&&this[p].entry){this[p].entry.resume()}}[k](t){t.piped=true;if(t.readdir){t.readdir.forEach((e=>{const s=t.path;const i=s===\"./\"?\"\":s.replace(/\\/*$/,\"/\");this[_](i+e)}))}const e=t.entry;const s=this.zip;if(s){e.on(\"data\",(t=>{if(!s.write(t)){e.pause()}}))}else{e.on(\"data\",(t=>{if(!super.write(t)){e.pause()}}))}}pause(){if(this.zip){this.zip.pause()}return super.pause()}});class PackSync extends M{constructor(t){super(t);this[L]=h}pause(){}resume(){}[g](t){const e=this.follow?\"statSync\":\"lstatSync\";this[u](t,I[e](t.absolute))}[R](t,e){this[O](t,I.readdirSync(t.absolute))}[k](t){const e=t.entry;const s=this.zip;if(t.readdir){t.readdir.forEach((e=>{const s=t.path;const i=s===\"./\"?\"\":s.replace(/\\/*$/,\"/\");this[_](i+e)}))}if(s){e.on(\"data\",(t=>{s.write(t)}))}else{e.on(\"data\",(t=>{super[x](t)}))}}}M.Sync=PackSync;t.exports=M},8917:(t,e,s)=>{\"use strict\";const i=s(5899);const n=s(6043);const r=s(2361);const o=s(665);const h=1024*1024;const l=s(8116);const c=s(7996);const a=s(3486);const{nextTick:u}=s(7282);const f=Buffer.from([31,139]);const d=Symbol(\"state\");const p=Symbol(\"writeEntry\");const m=Symbol(\"readEntry\");const y=Symbol(\"nextEntry\");const b=Symbol(\"processEntry\");const w=Symbol(\"extendedHeader\");const E=Symbol(\"globalExtendedHeader\");const _=Symbol(\"meta\");const S=Symbol(\"emitMeta\");const g=Symbol(\"buffer\");const R=Symbol(\"queue\");const O=Symbol(\"ended\");const k=Symbol(\"emittedEnd\");const v=Symbol(\"emit\");const T=Symbol(\"unzip\");const L=Symbol(\"consumeChunk\");const x=Symbol(\"consumeChunkSub\");const A=Symbol(\"consumeBody\");const I=Symbol(\"consumeMeta\");const D=Symbol(\"consumeHeader\");const N=Symbol(\"consuming\");const B=Symbol(\"bufferConcat\");const M=Symbol(\"maybeEnd\");const C=Symbol(\"writing\");const P=Symbol(\"aborted\");const F=Symbol(\"onDone\");const z=Symbol(\"sawValidEntry\");const U=Symbol(\"sawNullBlock\");const j=Symbol(\"sawEOF\");const Z=Symbol(\"closeStream\");const noop=t=>true;t.exports=i(class Parser extends r{constructor(t){t=t||{};super(t);this.file=t.file||\"\";this[z]=null;this.on(F,(t=>{if(this[d]===\"begin\"||this[z]===false){this.warn(\"TAR_BAD_ARCHIVE\",\"Unrecognized archive format\")}}));if(t.ondone){this.on(F,t.ondone)}else{this.on(F,(t=>{this.emit(\"prefinish\");this.emit(\"finish\");this.emit(\"end\")}))}this.strict=!!t.strict;this.maxMetaEntrySize=t.maxMetaEntrySize||h;this.filter=typeof t.filter===\"function\"?t.filter:noop;this.writable=true;this.readable=false;this[R]=new o;this[g]=null;this[m]=null;this[p]=null;this[d]=\"begin\";this[_]=\"\";this[w]=null;this[E]=null;this[O]=false;this[T]=null;this[P]=false;this[U]=false;this[j]=false;this.on(\"end\",(()=>this[Z]()));if(typeof t.onwarn===\"function\"){this.on(\"warn\",t.onwarn)}if(typeof t.onentry===\"function\"){this.on(\"entry\",t.onentry)}}[D](t,e){if(this[z]===null){this[z]=false}let s;try{s=new n(t,e,this[w],this[E])}catch(t){return this.warn(\"TAR_ENTRY_INVALID\",t)}if(s.nullBlock){if(this[U]){this[j]=true;if(this[d]===\"begin\"){this[d]=\"header\"}this[v](\"eof\")}else{this[U]=true;this[v](\"nullBlock\")}}else{this[U]=false;if(!s.cksumValid){this.warn(\"TAR_ENTRY_INVALID\",\"checksum failure\",{header:s})}else if(!s.path){this.warn(\"TAR_ENTRY_INVALID\",\"path is required\",{header:s})}else{const t=s.type;if(/^(Symbolic)?Link$/.test(t)&&!s.linkpath){this.warn(\"TAR_ENTRY_INVALID\",\"linkpath required\",{header:s})}else if(!/^(Symbolic)?Link$/.test(t)&&s.linkpath){this.warn(\"TAR_ENTRY_INVALID\",\"linkpath forbidden\",{header:s})}else{const t=this[p]=new l(s,this[w],this[E]);if(!this[z]){if(t.remain){const onend=()=>{if(!t.invalid){this[z]=true}};t.on(\"end\",onend)}else{this[z]=true}}if(t.meta){if(t.size>this.maxMetaEntrySize){t.ignore=true;this[v](\"ignoredEntry\",t);this[d]=\"ignore\";t.resume()}else if(t.size>0){this[_]=\"\";t.on(\"data\",(t=>this[_]+=t));this[d]=\"meta\"}}else{this[w]=null;t.ignore=t.ignore||!this.filter(t.path,t);if(t.ignore){this[v](\"ignoredEntry\",t);this[d]=t.remain?\"ignore\":\"header\";t.resume()}else{if(t.remain){this[d]=\"body\"}else{this[d]=\"header\";t.end()}if(!this[m]){this[R].push(t);this[y]()}else{this[R].push(t)}}}}}}}[Z](){u((()=>this.emit(\"close\")))}[b](t){let e=true;if(!t){this[m]=null;e=false}else if(Array.isArray(t)){this.emit.apply(this,t)}else{this[m]=t;this.emit(\"entry\",t);if(!t.emittedEnd){t.on(\"end\",(t=>this[y]()));e=false}}return e}[y](){do{}while(this[b](this[R].shift()));if(!this[R].length){const t=this[m];const e=!t||t.flowing||t.size===t.remain;if(e){if(!this[C]){this.emit(\"drain\")}}else{t.once(\"drain\",(t=>this.emit(\"drain\")))}}}[A](t,e){const s=this[p];const i=s.blockRemain;const n=i>=t.length&&e===0?t:t.slice(e,e+i);s.write(n);if(!s.blockRemain){this[d]=\"header\";this[p]=null;s.end()}return n.length}[I](t,e){const s=this[p];const i=this[A](t,e);if(!this[p]){this[S](s)}return i}[v](t,e,s){if(!this[R].length&&!this[m]){this.emit(t,e,s)}else{this[R].push([t,e,s])}}[S](t){this[v](\"meta\",this[_]);switch(t.type){case\"ExtendedHeader\":case\"OldExtendedHeader\":this[w]=c.parse(this[_],this[w],false);break;case\"GlobalExtendedHeader\":this[E]=c.parse(this[_],this[E],true);break;case\"NextFileHasLongPath\":case\"OldGnuLongPath\":this[w]=this[w]||Object.create(null);this[w].path=this[_].replace(/\\0.*/,\"\");break;case\"NextFileHasLongLinkpath\":this[w]=this[w]||Object.create(null);this[w].linkpath=this[_].replace(/\\0.*/,\"\");break;default:throw new Error(\"unknown meta: \"+t.type)}}abort(t){this[P]=true;this.emit(\"abort\",t);this.warn(\"TAR_ABORT\",t,{recoverable:false})}write(t){if(this[P]){return}if(this[T]===null&&t){if(this[g]){t=Buffer.concat([this[g],t]);this[g]=null}if(t.length<f.length){this[g]=t;return true}for(let e=0;this[T]===null&&e<f.length;e++){if(t[e]!==f[e]){this[T]=false}}if(this[T]===null){const e=this[O];this[O]=false;this[T]=new a.Unzip;this[T].on(\"data\",(t=>this[L](t)));this[T].on(\"error\",(t=>this.abort(t)));this[T].on(\"end\",(t=>{this[O]=true;this[L]()}));this[C]=true;const s=this[T][e?\"end\":\"write\"](t);this[C]=false;return s}}this[C]=true;if(this[T]){this[T].write(t)}else{this[L](t)}this[C]=false;const e=this[R].length?false:this[m]?this[m].flowing:true;if(!e&&!this[R].length){this[m].once(\"drain\",(t=>this.emit(\"drain\")))}return e}[B](t){if(t&&!this[P]){this[g]=this[g]?Buffer.concat([this[g],t]):t}}[M](){if(this[O]&&!this[k]&&!this[P]&&!this[N]){this[k]=true;const t=this[p];if(t&&t.blockRemain){const e=this[g]?this[g].length:0;this.warn(\"TAR_BAD_ARCHIVE\",`Truncated input (needed ${t.blockRemain} more bytes, only ${e} available)`,{entry:t});if(this[g]){t.write(this[g])}t.end()}this[v](F)}}[L](t){if(this[N]){this[B](t)}else if(!t&&!this[g]){this[M]()}else{this[N]=true;if(this[g]){this[B](t);const e=this[g];this[g]=null;this[x](e)}else{this[x](t)}while(this[g]&&this[g].length>=512&&!this[P]&&!this[j]){const t=this[g];this[g]=null;this[x](t)}this[N]=false}if(!this[g]||this[O]){this[M]()}}[x](t){let e=0;const s=t.length;while(e+512<=s&&!this[P]&&!this[j]){switch(this[d]){case\"begin\":case\"header\":this[D](t,e);e+=512;break;case\"ignore\":case\"body\":e+=this[A](t,e);break;case\"meta\":e+=this[I](t,e);break;default:throw new Error(\"invalid state: \"+this[d])}}if(e<s){if(this[g]){this[g]=Buffer.concat([t.slice(e),this[g]])}else{this[g]=t.slice(e)}}}end(t){if(!this[P]){if(this[T]){this[T].end(t)}else{this[O]=true;this.write(t)}}}})},9587:(t,e,s)=>{const i=s(9491);const n=s(7118);const r=s(8886);const{join:o}=s(1017);const h=process.env.TESTING_TAR_FAKE_PLATFORM||process.platform;const l=h===\"win32\";t.exports=()=>{const t=new Map;const e=new Map;const getDirs=t=>{const e=t.split(\"/\").slice(0,-1).reduce(((t,e)=>{if(t.length){e=o(t[t.length-1],e)}t.push(e||\"/\");return t}),[]);return e};const s=new Set;const getQueues=s=>{const i=e.get(s);if(!i){throw new Error(\"function does not have any path reservations\")}return{paths:i.paths.map((e=>t.get(e))),dirs:[...i.dirs].map((e=>t.get(e)))}};const check=t=>{const{paths:e,dirs:s}=getQueues(t);return e.every((e=>e[0]===t))&&s.every((e=>e[0]instanceof Set&&e[0].has(t)))};const run=t=>{if(s.has(t)||!check(t)){return false}s.add(t);t((()=>clear(t)));return true};const clear=n=>{if(!s.has(n)){return false}const{paths:r,dirs:o}=e.get(n);const h=new Set;r.forEach((e=>{const s=t.get(e);i.equal(s[0],n);if(s.length===1){t.delete(e)}else{s.shift();if(typeof s[0]===\"function\"){h.add(s[0])}else{s[0].forEach((t=>h.add(t)))}}}));o.forEach((e=>{const s=t.get(e);i(s[0]instanceof Set);if(s[0].size===1&&s.length===1){t.delete(e)}else if(s[0].size===1){s.shift();h.add(s[0])}else{s[0].delete(n)}}));s.delete(n);h.forEach((t=>run(t)));return true};const reserve=(s,i)=>{s=l?[\"win32 parallelization disabled\"]:s.map((t=>r(o(n(t))).toLowerCase()));const h=new Set(s.map((t=>getDirs(t))).reduce(((t,e)=>t.concat(e))));e.set(i,{dirs:h,paths:s});s.forEach((e=>{const s=t.get(e);if(!s){t.set(e,[i])}else{s.push(i)}}));h.forEach((e=>{const s=t.get(e);if(!s){t.set(e,[new Set([i])])}else if(s[s.length-1]instanceof Set){s[s.length-1].add(i)}else{s.push(new Set([i]))}}));return run(i)};return{check:check,reserve:reserve}}},7996:(t,e,s)=>{\"use strict\";const i=s(6043);const n=s(1017);class Pax{constructor(t,e){this.atime=t.atime||null;this.charset=t.charset||null;this.comment=t.comment||null;this.ctime=t.ctime||null;this.gid=t.gid||null;this.gname=t.gname||null;this.linkpath=t.linkpath||null;this.mtime=t.mtime||null;this.path=t.path||null;this.size=t.size||null;this.uid=t.uid||null;this.uname=t.uname||null;this.dev=t.dev||null;this.ino=t.ino||null;this.nlink=t.nlink||null;this.global=e||false}encode(){const t=this.encodeBody();if(t===\"\"){return null}const e=Buffer.byteLength(t);const s=512*Math.ceil(1+e/512);const r=Buffer.allocUnsafe(s);for(let t=0;t<512;t++){r[t]=0}new i({path:(\"PaxHeader/\"+n.basename(this.path)).slice(0,99),mode:this.mode||420,uid:this.uid||null,gid:this.gid||null,size:e,mtime:this.mtime||null,type:this.global?\"GlobalExtendedHeader\":\"ExtendedHeader\",linkpath:\"\",uname:this.uname||\"\",gname:this.gname||\"\",devmaj:0,devmin:0,atime:this.atime||null,ctime:this.ctime||null}).encode(r);r.write(t,512,e,\"utf8\");for(let t=e+512;t<r.length;t++){r[t]=0}return r}encodeBody(){return this.encodeField(\"path\")+this.encodeField(\"ctime\")+this.encodeField(\"atime\")+this.encodeField(\"dev\")+this.encodeField(\"ino\")+this.encodeField(\"nlink\")+this.encodeField(\"charset\")+this.encodeField(\"comment\")+this.encodeField(\"gid\")+this.encodeField(\"gname\")+this.encodeField(\"linkpath\")+this.encodeField(\"mtime\")+this.encodeField(\"size\")+this.encodeField(\"uid\")+this.encodeField(\"uname\")}encodeField(t){if(this[t]===null||this[t]===undefined){return\"\"}const e=this[t]instanceof Date?this[t].getTime()/1e3:this[t];const s=\" \"+(t===\"dev\"||t===\"ino\"||t===\"nlink\"?\"SCHILY.\":\"\")+t+\"=\"+e+\"\\n\";const i=Buffer.byteLength(s);let n=Math.floor(Math.log(i)/Math.log(10))+1;if(i+n>=Math.pow(10,n)){n+=1}const r=n+i;return r+s}}Pax.parse=(t,e,s)=>new Pax(merge(parseKV(t),e),s);const merge=(t,e)=>e?Object.keys(t).reduce(((e,s)=>(e[s]=t[s],e)),e):t;const parseKV=t=>t.replace(/\\n$/,\"\").split(\"\\n\").reduce(parseKVLine,Object.create(null));const parseKVLine=(t,e)=>{const s=parseInt(e,10);if(s!==Buffer.byteLength(e)+1){return t}e=e.slice((s+\" \").length);const i=e.split(\"=\");const n=i.shift().replace(/^SCHILY\\.(dev|ino|nlink)/,\"$1\");if(!n){return t}const r=i.join(\"=\");t[n]=/^([A-Z]+\\.)?([mac]|birth|creation)time$/.test(n)?new Date(r*1e3):/^[0-9]+$/.test(r)?+r:r;return t};t.exports=Pax},8116:(t,e,s)=>{\"use strict\";const{Minipass:i}=s(6684);const n=s(6843);const r=Symbol(\"slurp\");t.exports=class ReadEntry extends i{constructor(t,e,s){super();this.pause();this.extended=e;this.globalExtended=s;this.header=t;this.startBlockSize=512*Math.ceil(t.size/512);this.blockRemain=this.startBlockSize;this.remain=t.size;this.type=t.type;this.meta=false;this.ignore=false;switch(this.type){case\"File\":case\"OldFile\":case\"Link\":case\"SymbolicLink\":case\"CharacterDevice\":case\"BlockDevice\":case\"Directory\":case\"FIFO\":case\"ContiguousFile\":case\"GNUDumpDir\":break;case\"NextFileHasLongLinkpath\":case\"NextFileHasLongPath\":case\"OldGnuLongPath\":case\"GlobalExtendedHeader\":case\"ExtendedHeader\":case\"OldExtendedHeader\":this.meta=true;break;default:this.ignore=true}this.path=n(t.path);this.mode=t.mode;if(this.mode){this.mode=this.mode&4095}this.uid=t.uid;this.gid=t.gid;this.uname=t.uname;this.gname=t.gname;this.size=t.size;this.mtime=t.mtime;this.atime=t.atime;this.ctime=t.ctime;this.linkpath=n(t.linkpath);this.uname=t.uname;this.gname=t.gname;if(e){this[r](e)}if(s){this[r](s,true)}}write(t){const e=t.length;if(e>this.blockRemain){throw new Error(\"writing more to entry than is appropriate\")}const s=this.remain;const i=this.blockRemain;this.remain=Math.max(0,s-e);this.blockRemain=Math.max(0,i-e);if(this.ignore){return true}if(s>=e){return super.write(t)}return super.write(t.slice(0,s))}[r](t,e){for(const s in t){if(t[s]!==null&&t[s]!==undefined&&!(e&&s===\"path\")){this[s]=s===\"path\"||s===\"linkpath\"?n(t[s]):t[s]}}}}},5923:(t,e,s)=>{\"use strict\";const i=s(5274);const n=s(7900);const r=s(7147);const o=s(7714);const h=s(1525);const l=s(1017);const c=s(6043);t.exports=(t,e,s)=>{const n=i(t);if(!n.file){throw new TypeError(\"file is required\")}if(n.gzip){throw new TypeError(\"cannot append to compressed archives\")}if(!e||!Array.isArray(e)||!e.length){throw new TypeError(\"no files or directories specified\")}e=Array.from(e);return n.sync?replaceSync(n,e):replace(n,e,s)};const replaceSync=(t,e)=>{const s=new n.Sync(t);let i=true;let o;let h;try{try{o=r.openSync(t.file,\"r+\")}catch(e){if(e.code===\"ENOENT\"){o=r.openSync(t.file,\"w+\")}else{throw e}}const n=r.fstatSync(o);const l=Buffer.alloc(512);t:for(h=0;h<n.size;h+=512){for(let t=0,e=0;t<512;t+=e){e=r.readSync(o,l,t,l.length-t,h+t);if(h===0&&l[0]===31&&l[1]===139){throw new Error(\"cannot append to compressed archives\")}if(!e){break t}}const e=new c(l);if(!e.cksumValid){break}const s=512*Math.ceil(e.size/512);if(h+s+512>n.size){break}h+=s;if(t.mtimeCache){t.mtimeCache.set(e.path,e.mtime)}}i=false;streamSync(t,s,h,o,e)}finally{if(i){try{r.closeSync(o)}catch(t){}}}};const streamSync=(t,e,s,i,n)=>{const r=new o.WriteStreamSync(t.file,{fd:i,start:s});e.pipe(r);addFilesSync(e,n)};const replace=(t,e,s)=>{e=Array.from(e);const i=new n(t);const getPos=(e,s,i)=>{const cb=(t,s)=>{if(t){r.close(e,(e=>i(t)))}else{i(null,s)}};let n=0;if(s===0){return cb(null,0)}let o=0;const h=Buffer.alloc(512);const onread=(i,l)=>{if(i){return cb(i)}o+=l;if(o<512&&l){return r.read(e,h,o,h.length-o,n+o,onread)}if(n===0&&h[0]===31&&h[1]===139){return cb(new Error(\"cannot append to compressed archives\"))}if(o<512){return cb(null,n)}const a=new c(h);if(!a.cksumValid){return cb(null,n)}const u=512*Math.ceil(a.size/512);if(n+u+512>s){return cb(null,n)}n+=u+512;if(n>=s){return cb(null,n)}if(t.mtimeCache){t.mtimeCache.set(a.path,a.mtime)}o=0;r.read(e,h,0,512,n,onread)};r.read(e,h,0,512,n,onread)};const h=new Promise(((s,n)=>{i.on(\"error\",n);let h=\"r+\";const onopen=(l,c)=>{if(l&&l.code===\"ENOENT\"&&h===\"r+\"){h=\"w+\";return r.open(t.file,h,onopen)}if(l){return n(l)}r.fstat(c,((h,l)=>{if(h){return r.close(c,(()=>n(h)))}getPos(c,l.size,((r,h)=>{if(r){return n(r)}const l=new o.WriteStream(t.file,{fd:c,start:h});i.pipe(l);l.on(\"error\",n);l.on(\"close\",s);addFilesAsync(i,e)}))}))};r.open(t.file,h,onopen)}));return s?h.then(s,s):h};const addFilesSync=(t,e)=>{e.forEach((e=>{if(e.charAt(0)===\"@\"){h({file:l.resolve(t.cwd,e.slice(1)),sync:true,noResume:true,onentry:e=>t.add(e)})}else{t.add(e)}}));t.end()};const addFilesAsync=(t,e)=>{while(e.length){const s=e.shift();if(s.charAt(0)===\"@\"){return h({file:l.resolve(t.cwd,s.slice(1)),noResume:true,onentry:e=>t.add(e)}).then((s=>addFilesAsync(t,e)))}else{t.add(s)}}t.end()}},7111:(t,e,s)=>{const{isAbsolute:i,parse:n}=s(1017).win32;t.exports=t=>{let e=\"\";let s=n(t);while(i(t)||s.root){const i=t.charAt(0)===\"/\"&&t.slice(0,4)!==\"//?/\"?\"/\":s.root;t=t.slice(i.length);e+=i;s=n(t)}return[e,t]}},8886:t=>{t.exports=t=>{let e=t.length-1;let s=-1;while(e>-1&&t.charAt(e)===\"/\"){s=e;e--}return s===-1?t:t.slice(0,s)}},4173:(t,e)=>{\"use strict\";e.name=new Map([[\"0\",\"File\"],[\"\",\"OldFile\"],[\"1\",\"Link\"],[\"2\",\"SymbolicLink\"],[\"3\",\"CharacterDevice\"],[\"4\",\"BlockDevice\"],[\"5\",\"Directory\"],[\"6\",\"FIFO\"],[\"7\",\"ContiguousFile\"],[\"g\",\"GlobalExtendedHeader\"],[\"x\",\"ExtendedHeader\"],[\"A\",\"SolarisACL\"],[\"D\",\"GNUDumpDir\"],[\"I\",\"Inode\"],[\"K\",\"NextFileHasLongLinkpath\"],[\"L\",\"NextFileHasLongPath\"],[\"M\",\"ContinuationFile\"],[\"N\",\"OldGnuLongPath\"],[\"S\",\"SparseFile\"],[\"V\",\"TapeVolumeHeader\"],[\"X\",\"OldExtendedHeader\"]]);e.code=new Map(Array.from(e.name).map((t=>[t[1],t[0]])))},7628:(t,e,s)=>{\"use strict\";const i=s(9491);const n=s(8917);const r=s(7147);const o=s(7714);const h=s(1017);const l=s(9624);const c=s(4808);const a=s(9587);const u=s(7111);const f=s(6843);const d=s(8886);const p=s(7118);const m=Symbol(\"onEntry\");const y=Symbol(\"checkFs\");const b=Symbol(\"checkFs2\");const w=Symbol(\"pruneCache\");const E=Symbol(\"isReusable\");const _=Symbol(\"makeFs\");const S=Symbol(\"file\");const g=Symbol(\"directory\");const R=Symbol(\"link\");const O=Symbol(\"symlink\");const k=Symbol(\"hardlink\");const v=Symbol(\"unsupported\");const T=Symbol(\"checkPath\");const L=Symbol(\"mkdir\");const x=Symbol(\"onError\");const A=Symbol(\"pending\");const I=Symbol(\"pend\");const D=Symbol(\"unpend\");const N=Symbol(\"ended\");const B=Symbol(\"maybeClose\");const M=Symbol(\"skip\");const C=Symbol(\"doChown\");const P=Symbol(\"uid\");const F=Symbol(\"gid\");const z=Symbol(\"checkedCwd\");const U=s(6113);const j=s(1172);const Z=process.env.TESTING_TAR_FAKE_PLATFORM||process.platform;const Y=Z===\"win32\";const unlinkFile=(t,e)=>{if(!Y){return r.unlink(t,e)}const s=t+\".DELETE.\"+U.randomBytes(16).toString(\"hex\");r.rename(t,s,(t=>{if(t){return e(t)}r.unlink(s,e)}))};const unlinkFileSync=t=>{if(!Y){return r.unlinkSync(t)}const e=t+\".DELETE.\"+U.randomBytes(16).toString(\"hex\");r.renameSync(t,e);r.unlinkSync(e)};const uint32=(t,e,s)=>t===t>>>0?t:e===e>>>0?e:s;const cacheKeyNormalize=t=>d(f(p(t))).toLowerCase();const pruneCache=(t,e)=>{e=cacheKeyNormalize(e);for(const s of t.keys()){const i=cacheKeyNormalize(s);if(i===e||i.indexOf(e+\"/\")===0){t.delete(s)}}};const dropCache=t=>{for(const e of t.keys()){t.delete(e)}};class Unpack extends n{constructor(t){if(!t){t={}}t.ondone=t=>{this[N]=true;this[B]()};super(t);this[z]=false;this.reservations=a();this.transform=typeof t.transform===\"function\"?t.transform:null;this.writable=true;this.readable=false;this[A]=0;this[N]=false;this.dirCache=t.dirCache||new Map;if(typeof t.uid===\"number\"||typeof t.gid===\"number\"){if(typeof t.uid!==\"number\"||typeof t.gid!==\"number\"){throw new TypeError(\"cannot set owner without number uid and gid\")}if(t.preserveOwner){throw new TypeError(\"cannot preserve owner in archive and also set owner explicitly\")}this.uid=t.uid;this.gid=t.gid;this.setOwner=true}else{this.uid=null;this.gid=null;this.setOwner=false}if(t.preserveOwner===undefined&&typeof t.uid!==\"number\"){this.preserveOwner=process.getuid&&process.getuid()===0}else{this.preserveOwner=!!t.preserveOwner}this.processUid=(this.preserveOwner||this.setOwner)&&process.getuid?process.getuid():null;this.processGid=(this.preserveOwner||this.setOwner)&&process.getgid?process.getgid():null;this.forceChown=t.forceChown===true;this.win32=!!t.win32||Y;this.newer=!!t.newer;this.keep=!!t.keep;this.noMtime=!!t.noMtime;this.preservePaths=!!t.preservePaths;this.unlink=!!t.unlink;this.cwd=f(h.resolve(t.cwd||process.cwd()));this.strip=+t.strip||0;this.processUmask=t.noChmod?0:process.umask();this.umask=typeof t.umask===\"number\"?t.umask:this.processUmask;this.dmode=t.dmode||511&~this.umask;this.fmode=t.fmode||438&~this.umask;this.on(\"entry\",(t=>this[m](t)))}warn(t,e,s={}){if(t===\"TAR_BAD_ARCHIVE\"||t===\"TAR_ABORT\"){s.recoverable=false}return super.warn(t,e,s)}[B](){if(this[N]&&this[A]===0){this.emit(\"prefinish\");this.emit(\"finish\");this.emit(\"end\")}}[T](t){if(this.strip){const e=f(t.path).split(\"/\");if(e.length<this.strip){return false}t.path=e.slice(this.strip).join(\"/\");if(t.type===\"Link\"){const e=f(t.linkpath).split(\"/\");if(e.length>=this.strip){t.linkpath=e.slice(this.strip).join(\"/\")}else{return false}}}if(!this.preservePaths){const e=f(t.path);const s=e.split(\"/\");if(s.includes(\"..\")||Y&&/^[a-z]:\\.\\.$/i.test(s[0])){this.warn(\"TAR_ENTRY_ERROR\",`path contains '..'`,{entry:t,path:e});return false}const[i,n]=u(e);if(i){t.path=n;this.warn(\"TAR_ENTRY_INFO\",`stripping ${i} from absolute path`,{entry:t,path:e})}}if(h.isAbsolute(t.path)){t.absolute=f(h.resolve(t.path))}else{t.absolute=f(h.resolve(this.cwd,t.path))}if(!this.preservePaths&&t.absolute.indexOf(this.cwd+\"/\")!==0&&t.absolute!==this.cwd){this.warn(\"TAR_ENTRY_ERROR\",\"path escaped extraction target\",{entry:t,path:f(t.path),resolvedPath:t.absolute,cwd:this.cwd});return false}if(t.absolute===this.cwd&&t.type!==\"Directory\"&&t.type!==\"GNUDumpDir\"){return false}if(this.win32){const{root:e}=h.win32.parse(t.absolute);t.absolute=e+c.encode(t.absolute.slice(e.length));const{root:s}=h.win32.parse(t.path);t.path=s+c.encode(t.path.slice(s.length))}return true}[m](t){if(!this[T](t)){return t.resume()}i.equal(typeof t.absolute,\"string\");switch(t.type){case\"Directory\":case\"GNUDumpDir\":if(t.mode){t.mode=t.mode|448}case\"File\":case\"OldFile\":case\"ContiguousFile\":case\"Link\":case\"SymbolicLink\":return this[y](t);case\"CharacterDevice\":case\"BlockDevice\":case\"FIFO\":default:return this[v](t)}}[x](t,e){if(t.name===\"CwdError\"){this.emit(\"error\",t)}else{this.warn(\"TAR_ENTRY_ERROR\",t,{entry:e});this[D]();e.resume()}}[L](t,e,s){l(f(t),{uid:this.uid,gid:this.gid,processUid:this.processUid,processGid:this.processGid,umask:this.processUmask,preserve:this.preservePaths,unlink:this.unlink,cache:this.dirCache,cwd:this.cwd,mode:e,noChmod:this.noChmod},s)}[C](t){return this.forceChown||this.preserveOwner&&(typeof t.uid===\"number\"&&t.uid!==this.processUid||typeof t.gid===\"number\"&&t.gid!==this.processGid)||(typeof this.uid===\"number\"&&this.uid!==this.processUid||typeof this.gid===\"number\"&&this.gid!==this.processGid)}[P](t){return uint32(this.uid,t.uid,this.processUid)}[F](t){return uint32(this.gid,t.gid,this.processGid)}[S](t,e){const s=t.mode&4095||this.fmode;const i=new o.WriteStream(t.absolute,{flags:j(t.size),mode:s,autoClose:false});i.on(\"error\",(s=>{if(i.fd){r.close(i.fd,(()=>{}))}i.write=()=>true;this[x](s,t);e()}));let n=1;const done=s=>{if(s){if(i.fd){r.close(i.fd,(()=>{}))}this[x](s,t);e();return}if(--n===0){r.close(i.fd,(s=>{if(s){this[x](s,t)}else{this[D]()}e()}))}};i.on(\"finish\",(e=>{const s=t.absolute;const o=i.fd;if(t.mtime&&!this.noMtime){n++;const e=t.atime||new Date;const i=t.mtime;r.futimes(o,e,i,(t=>t?r.utimes(s,e,i,(e=>done(e&&t))):done()))}if(this[C](t)){n++;const e=this[P](t);const i=this[F](t);r.fchown(o,e,i,(t=>t?r.chown(s,e,i,(e=>done(e&&t))):done()))}done()}));const h=this.transform?this.transform(t)||t:t;if(h!==t){h.on(\"error\",(s=>{this[x](s,t);e()}));t.pipe(h)}h.pipe(i)}[g](t,e){const s=t.mode&4095||this.dmode;this[L](t.absolute,s,(s=>{if(s){this[x](s,t);e();return}let i=1;const done=s=>{if(--i===0){e();this[D]();t.resume()}};if(t.mtime&&!this.noMtime){i++;r.utimes(t.absolute,t.atime||new Date,t.mtime,done)}if(this[C](t)){i++;r.chown(t.absolute,this[P](t),this[F](t),done)}done()}))}[v](t){t.unsupported=true;this.warn(\"TAR_ENTRY_UNSUPPORTED\",`unsupported entry type: ${t.type}`,{entry:t});t.resume()}[O](t,e){this[R](t,t.linkpath,\"symlink\",e)}[k](t,e){const s=f(h.resolve(this.cwd,t.linkpath));this[R](t,s,\"link\",e)}[I](){this[A]++}[D](){this[A]--;this[B]()}[M](t){this[D]();t.resume()}[E](t,e){return t.type===\"File\"&&!this.unlink&&e.isFile()&&e.nlink<=1&&!Y}[y](t){this[I]();const e=[t.path];if(t.linkpath){e.push(t.linkpath)}this.reservations.reserve(e,(e=>this[b](t,e)))}[w](t){if(t.type===\"SymbolicLink\"){dropCache(this.dirCache)}else if(t.type!==\"Directory\"){pruneCache(this.dirCache,t.absolute)}}[b](t,e){this[w](t);const done=s=>{this[w](t);e(s)};const checkCwd=()=>{this[L](this.cwd,this.dmode,(e=>{if(e){this[x](e,t);done();return}this[z]=true;start()}))};const start=()=>{if(t.absolute!==this.cwd){const e=f(h.dirname(t.absolute));if(e!==this.cwd){return this[L](e,this.dmode,(e=>{if(e){this[x](e,t);done();return}afterMakeParent()}))}}afterMakeParent()};const afterMakeParent=()=>{r.lstat(t.absolute,((e,s)=>{if(s&&(this.keep||this.newer&&s.mtime>t.mtime)){this[M](t);done();return}if(e||this[E](t,s)){return this[_](null,t,done)}if(s.isDirectory()){if(t.type===\"Directory\"){const e=!this.noChmod&&t.mode&&(s.mode&4095)!==t.mode;const afterChmod=e=>this[_](e,t,done);if(!e){return afterChmod()}return r.chmod(t.absolute,t.mode,afterChmod)}if(t.absolute!==this.cwd){return r.rmdir(t.absolute,(e=>this[_](e,t,done)))}}if(t.absolute===this.cwd){return this[_](null,t,done)}unlinkFile(t.absolute,(e=>this[_](e,t,done)))}))};if(this[z]){start()}else{checkCwd()}}[_](t,e,s){if(t){this[x](t,e);s();return}switch(e.type){case\"File\":case\"OldFile\":case\"ContiguousFile\":return this[S](e,s);case\"Link\":return this[k](e,s);case\"SymbolicLink\":return this[O](e,s);case\"Directory\":case\"GNUDumpDir\":return this[g](e,s)}}[R](t,e,s,i){r[s](e,t.absolute,(e=>{if(e){this[x](e,t)}else{this[D]();t.resume()}i()}))}}const callSync=t=>{try{return[null,t()]}catch(t){return[t,null]}};class UnpackSync extends Unpack{[_](t,e){return super[_](t,e,(()=>{}))}[y](t){this[w](t);if(!this[z]){const e=this[L](this.cwd,this.dmode);if(e){return this[x](e,t)}this[z]=true}if(t.absolute!==this.cwd){const e=f(h.dirname(t.absolute));if(e!==this.cwd){const s=this[L](e,this.dmode);if(s){return this[x](s,t)}}}const[e,s]=callSync((()=>r.lstatSync(t.absolute)));if(s&&(this.keep||this.newer&&s.mtime>t.mtime)){return this[M](t)}if(e||this[E](t,s)){return this[_](null,t)}if(s.isDirectory()){if(t.type===\"Directory\"){const e=!this.noChmod&&t.mode&&(s.mode&4095)!==t.mode;const[i]=e?callSync((()=>{r.chmodSync(t.absolute,t.mode)})):[];return this[_](i,t)}const[e]=callSync((()=>r.rmdirSync(t.absolute)));this[_](e,t)}const[i]=t.absolute===this.cwd?[]:callSync((()=>unlinkFileSync(t.absolute)));this[_](i,t)}[S](t,e){const s=t.mode&4095||this.fmode;const oner=s=>{let n;try{r.closeSync(i)}catch(t){n=t}if(s||n){this[x](s||n,t)}e()};let i;try{i=r.openSync(t.absolute,j(t.size),s)}catch(t){return oner(t)}const n=this.transform?this.transform(t)||t:t;if(n!==t){n.on(\"error\",(e=>this[x](e,t)));t.pipe(n)}n.on(\"data\",(t=>{try{r.writeSync(i,t,0,t.length)}catch(t){oner(t)}}));n.on(\"end\",(e=>{let s=null;if(t.mtime&&!this.noMtime){const e=t.atime||new Date;const n=t.mtime;try{r.futimesSync(i,e,n)}catch(i){try{r.utimesSync(t.absolute,e,n)}catch(t){s=i}}}if(this[C](t)){const e=this[P](t);const n=this[F](t);try{r.fchownSync(i,e,n)}catch(i){try{r.chownSync(t.absolute,e,n)}catch(t){s=s||i}}}oner(s)}))}[g](t,e){const s=t.mode&4095||this.dmode;const i=this[L](t.absolute,s);if(i){this[x](i,t);e();return}if(t.mtime&&!this.noMtime){try{r.utimesSync(t.absolute,t.atime||new Date,t.mtime)}catch(i){}}if(this[C](t)){try{r.chownSync(t.absolute,this[P](t),this[F](t))}catch(i){}}e();t.resume()}[L](t,e){try{return l.sync(f(t),{uid:this.uid,gid:this.gid,processUid:this.processUid,processGid:this.processGid,umask:this.processUmask,preserve:this.preservePaths,unlink:this.unlink,cache:this.dirCache,cwd:this.cwd,mode:e})}catch(t){return t}}[R](t,e,s,i){try{r[s+\"Sync\"](e,t.absolute);i();t.resume()}catch(e){return this[x](e,t)}}}Unpack.Sync=UnpackSync;t.exports=Unpack},4404:(t,e,s)=>{\"use strict\";const i=s(5274);const n=s(5923);t.exports=(t,e,s)=>{const r=i(t);if(!r.file){throw new TypeError(\"file is required\")}if(r.gzip){throw new TypeError(\"cannot append to compressed archives\")}if(!e||!Array.isArray(e)||!e.length){throw new TypeError(\"no files or directories specified\")}e=Array.from(e);mtimeFilter(r);return n(r,e,s)};const mtimeFilter=t=>{const e=t.filter;if(!t.mtimeCache){t.mtimeCache=new Map}t.filter=e?(s,i)=>e(s,i)&&!(t.mtimeCache.get(s)>i.mtime):(e,s)=>!(t.mtimeCache.get(e)>s.mtime)}},5899:t=>{\"use strict\";t.exports=t=>class extends t{warn(t,e,s={}){if(this.file){s.file=this.file}if(this.cwd){s.cwd=this.cwd}s.code=e instanceof Error&&e.code||t;s.tarCode=t;if(!this.strict&&s.recoverable!==false){if(e instanceof Error){s=Object.assign(e,s);e=e.message}this.emit(\"warn\",s.tarCode,e,s)}else if(e instanceof Error){this.emit(\"error\",Object.assign(e,s))}else{this.emit(\"error\",Object.assign(new Error(`${t}: ${e}`),s))}}}},4808:t=>{\"use strict\";const e=[\"|\",\"<\",\">\",\"?\",\":\"];const s=e.map((t=>String.fromCharCode(61440+t.charCodeAt(0))));const i=new Map(e.map(((t,e)=>[t,s[e]])));const n=new Map(s.map(((t,s)=>[t,e[s]])));t.exports={encode:t=>e.reduce(((t,e)=>t.split(e).join(i.get(e))),t),decode:t=>s.reduce(((t,e)=>t.split(e).join(n.get(e))),t)}},5450:(t,e,s)=>{\"use strict\";const{Minipass:i}=s(6684);const n=s(7996);const r=s(6043);const o=s(7147);const h=s(1017);const l=s(6843);const c=s(8886);const prefixPath=(t,e)=>{if(!e){return l(t)}t=l(t).replace(/^\\.(\\/|$)/,\"\");return c(e)+\"/\"+t};const a=16*1024*1024;const u=Symbol(\"process\");const f=Symbol(\"file\");const d=Symbol(\"directory\");const p=Symbol(\"symlink\");const m=Symbol(\"hardlink\");const y=Symbol(\"header\");const b=Symbol(\"read\");const w=Symbol(\"lstat\");const E=Symbol(\"onlstat\");const _=Symbol(\"onread\");const S=Symbol(\"onreadlink\");const g=Symbol(\"openfile\");const R=Symbol(\"onopenfile\");const O=Symbol(\"close\");const k=Symbol(\"mode\");const v=Symbol(\"awaitDrain\");const T=Symbol(\"ondrain\");const L=Symbol(\"prefix\");const x=Symbol(\"hadError\");const A=s(5899);const I=s(4808);const D=s(7111);const N=s(8371);const B=A(class WriteEntry extends i{constructor(t,e){e=e||{};super(e);if(typeof t!==\"string\"){throw new TypeError(\"path is required\")}this.path=l(t);this.portable=!!e.portable;this.myuid=process.getuid&&process.getuid()||0;this.myuser=process.env.USER||\"\";this.maxReadSize=e.maxReadSize||a;this.linkCache=e.linkCache||new Map;this.statCache=e.statCache||new Map;this.preservePaths=!!e.preservePaths;this.cwd=l(e.cwd||process.cwd());this.strict=!!e.strict;this.noPax=!!e.noPax;this.noMtime=!!e.noMtime;this.mtime=e.mtime||null;this.prefix=e.prefix?l(e.prefix):null;this.fd=null;this.blockLen=null;this.blockRemain=null;this.buf=null;this.offset=null;this.length=null;this.pos=null;this.remain=null;if(typeof e.onwarn===\"function\"){this.on(\"warn\",e.onwarn)}let s=false;if(!this.preservePaths){const[t,e]=D(this.path);if(t){this.path=e;s=t}}this.win32=!!e.win32||process.platform===\"win32\";if(this.win32){this.path=I.decode(this.path.replace(/\\\\/g,\"/\"));t=t.replace(/\\\\/g,\"/\")}this.absolute=l(e.absolute||h.resolve(this.cwd,t));if(this.path===\"\"){this.path=\"./\"}if(s){this.warn(\"TAR_ENTRY_INFO\",`stripping ${s} from absolute path`,{entry:this,path:s+this.path})}if(this.statCache.has(this.absolute)){this[E](this.statCache.get(this.absolute))}else{this[w]()}}emit(t,...e){if(t===\"error\"){this[x]=true}return super.emit(t,...e)}[w](){o.lstat(this.absolute,((t,e)=>{if(t){return this.emit(\"error\",t)}this[E](e)}))}[E](t){this.statCache.set(this.absolute,t);this.stat=t;if(!t.isFile()){t.size=0}this.type=getType(t);this.emit(\"stat\",t);this[u]()}[u](){switch(this.type){case\"File\":return this[f]();case\"Directory\":return this[d]();case\"SymbolicLink\":return this[p]();default:return this.end()}}[k](t){return N(t,this.type===\"Directory\",this.portable)}[L](t){return prefixPath(t,this.prefix)}[y](){if(this.type===\"Directory\"&&this.portable){this.noMtime=true}this.header=new r({path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,mode:this[k](this.stat.mode),uid:this.portable?null:this.stat.uid,gid:this.portable?null:this.stat.gid,size:this.stat.size,mtime:this.noMtime?null:this.mtime||this.stat.mtime,type:this.type,uname:this.portable?null:this.stat.uid===this.myuid?this.myuser:\"\",atime:this.portable?null:this.stat.atime,ctime:this.portable?null:this.stat.ctime});if(this.header.encode()&&!this.noPax){super.write(new n({atime:this.portable?null:this.header.atime,ctime:this.portable?null:this.header.ctime,gid:this.portable?null:this.header.gid,mtime:this.noMtime?null:this.mtime||this.header.mtime,path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,size:this.header.size,uid:this.portable?null:this.header.uid,uname:this.portable?null:this.header.uname,dev:this.portable?null:this.stat.dev,ino:this.portable?null:this.stat.ino,nlink:this.portable?null:this.stat.nlink}).encode())}super.write(this.header.block)}[d](){if(this.path.slice(-1)!==\"/\"){this.path+=\"/\"}this.stat.size=0;this[y]();this.end()}[p](){o.readlink(this.absolute,((t,e)=>{if(t){return this.emit(\"error\",t)}this[S](e)}))}[S](t){this.linkpath=l(t);this[y]();this.end()}[m](t){this.type=\"Link\";this.linkpath=l(h.relative(this.cwd,t));this.stat.size=0;this[y]();this.end()}[f](){if(this.stat.nlink>1){const t=this.stat.dev+\":\"+this.stat.ino;if(this.linkCache.has(t)){const e=this.linkCache.get(t);if(e.indexOf(this.cwd)===0){return this[m](e)}}this.linkCache.set(t,this.absolute)}this[y]();if(this.stat.size===0){return this.end()}this[g]()}[g](){o.open(this.absolute,\"r\",((t,e)=>{if(t){return this.emit(\"error\",t)}this[R](e)}))}[R](t){this.fd=t;if(this[x]){return this[O]()}this.blockLen=512*Math.ceil(this.stat.size/512);this.blockRemain=this.blockLen;const e=Math.min(this.blockLen,this.maxReadSize);this.buf=Buffer.allocUnsafe(e);this.offset=0;this.pos=0;this.remain=this.stat.size;this.length=this.buf.length;this[b]()}[b](){const{fd:t,buf:e,offset:s,length:i,pos:n}=this;o.read(t,e,s,i,n,((t,e)=>{if(t){return this[O]((()=>this.emit(\"error\",t)))}this[_](e)}))}[O](t){o.close(this.fd,t)}[_](t){if(t<=0&&this.remain>0){const t=new Error(\"encountered unexpected EOF\");t.path=this.absolute;t.syscall=\"read\";t.code=\"EOF\";return this[O]((()=>this.emit(\"error\",t)))}if(t>this.remain){const t=new Error(\"did not encounter expected EOF\");t.path=this.absolute;t.syscall=\"read\";t.code=\"EOF\";return this[O]((()=>this.emit(\"error\",t)))}if(t===this.remain){for(let e=t;e<this.length&&t<this.blockRemain;e++){this.buf[e+this.offset]=0;t++;this.remain++}}const e=this.offset===0&&t===this.buf.length?this.buf:this.buf.slice(this.offset,this.offset+t);const s=this.write(e);if(!s){this[v]((()=>this[T]()))}else{this[T]()}}[v](t){this.once(\"drain\",t)}write(t){if(this.blockRemain<t.length){const t=new Error(\"writing more data than expected\");t.path=this.absolute;return this.emit(\"error\",t)}this.remain-=t.length;this.blockRemain-=t.length;this.pos+=t.length;this.offset+=t.length;return super.write(t)}[T](){if(!this.remain){if(this.blockRemain){super.write(Buffer.alloc(this.blockRemain))}return this[O]((t=>t?this.emit(\"error\",t):this.end()))}if(this.offset>=this.length){this.buf=Buffer.allocUnsafe(Math.min(this.blockRemain,this.buf.length));this.offset=0}this.length=this.buf.length-this.offset;this[b]()}});class WriteEntrySync extends B{[w](){this[E](o.lstatSync(this.absolute))}[p](){this[S](o.readlinkSync(this.absolute))}[g](){this[R](o.openSync(this.absolute,\"r\"))}[b](){let t=true;try{const{fd:e,buf:s,offset:i,length:n,pos:r}=this;const h=o.readSync(e,s,i,n,r);this[_](h);t=false}finally{if(t){try{this[O]((()=>{}))}catch(t){}}}}[v](t){t()}[O](t){o.closeSync(this.fd);t()}}const M=A(class WriteEntryTar extends i{constructor(t,e){e=e||{};super(e);this.preservePaths=!!e.preservePaths;this.portable=!!e.portable;this.strict=!!e.strict;this.noPax=!!e.noPax;this.noMtime=!!e.noMtime;this.readEntry=t;this.type=t.type;if(this.type===\"Directory\"&&this.portable){this.noMtime=true}this.prefix=e.prefix||null;this.path=l(t.path);this.mode=this[k](t.mode);this.uid=this.portable?null:t.uid;this.gid=this.portable?null:t.gid;this.uname=this.portable?null:t.uname;this.gname=this.portable?null:t.gname;this.size=t.size;this.mtime=this.noMtime?null:e.mtime||t.mtime;this.atime=this.portable?null:t.atime;this.ctime=this.portable?null:t.ctime;this.linkpath=l(t.linkpath);if(typeof e.onwarn===\"function\"){this.on(\"warn\",e.onwarn)}let s=false;if(!this.preservePaths){const[t,e]=D(this.path);if(t){this.path=e;s=t}}this.remain=t.size;this.blockRemain=t.startBlockSize;this.header=new r({path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,mode:this.mode,uid:this.portable?null:this.uid,gid:this.portable?null:this.gid,size:this.size,mtime:this.noMtime?null:this.mtime,type:this.type,uname:this.portable?null:this.uname,atime:this.portable?null:this.atime,ctime:this.portable?null:this.ctime});if(s){this.warn(\"TAR_ENTRY_INFO\",`stripping ${s} from absolute path`,{entry:this,path:s+this.path})}if(this.header.encode()&&!this.noPax){super.write(new n({atime:this.portable?null:this.atime,ctime:this.portable?null:this.ctime,gid:this.portable?null:this.gid,mtime:this.noMtime?null:this.mtime,path:this[L](this.path),linkpath:this.type===\"Link\"?this[L](this.linkpath):this.linkpath,size:this.size,uid:this.portable?null:this.uid,uname:this.portable?null:this.uname,dev:this.portable?null:this.readEntry.dev,ino:this.portable?null:this.readEntry.ino,nlink:this.portable?null:this.readEntry.nlink}).encode())}super.write(this.header.block);t.pipe(this)}[L](t){return prefixPath(t,this.prefix)}[k](t){return N(t,this.type===\"Directory\",this.portable)}write(t){const e=t.length;if(e>this.blockRemain){throw new Error(\"writing more to entry than is appropriate\")}this.blockRemain-=e;return super.write(t)}end(){if(this.blockRemain){super.write(Buffer.alloc(this.blockRemain))}return super.end()}});B.Sync=WriteEntrySync;B.Tar=M;const getType=t=>t.isFile()?\"File\":t.isDirectory()?\"Directory\":t.isSymbolicLink()?\"SymbolicLink\":\"Unsupported\";t.exports=B},6684:(t,e,s)=>{\"use strict\";const i=typeof process===\"object\"&&process?process:{stdout:null,stderr:null};const n=s(2361);const r=s(2781);const o=s(1576);const h=o.StringDecoder;const l=Symbol(\"EOF\");const c=Symbol(\"maybeEmitEnd\");const a=Symbol(\"emittedEnd\");const u=Symbol(\"emittingEnd\");const f=Symbol(\"emittedError\");const d=Symbol(\"closed\");const p=Symbol(\"read\");const m=Symbol(\"flush\");const y=Symbol(\"flushChunk\");const b=Symbol(\"encoding\");const w=Symbol(\"decoder\");const E=Symbol(\"flowing\");const _=Symbol(\"paused\");const S=Symbol(\"resume\");const g=Symbol(\"buffer\");const R=Symbol(\"pipes\");const O=Symbol(\"bufferLength\");const k=Symbol(\"bufferPush\");const v=Symbol(\"bufferShift\");const T=Symbol(\"objectMode\");const L=Symbol(\"destroyed\");const x=Symbol(\"error\");const A=Symbol(\"emitData\");const I=Symbol(\"emitEnd\");const D=Symbol(\"emitEnd2\");const N=Symbol(\"async\");const B=Symbol(\"abort\");const M=Symbol(\"aborted\");const C=Symbol(\"signal\");const defer=t=>Promise.resolve().then(t);const P=global._MP_NO_ITERATOR_SYMBOLS_!==\"1\";const F=P&&Symbol.asyncIterator||Symbol(\"asyncIterator not implemented\");const z=P&&Symbol.iterator||Symbol(\"iterator not implemented\");const isEndish=t=>t===\"end\"||t===\"finish\"||t===\"prefinish\";const isArrayBuffer=t=>t instanceof ArrayBuffer||typeof t===\"object\"&&t.constructor&&t.constructor.name===\"ArrayBuffer\"&&t.byteLength>=0;const isArrayBufferView=t=>!Buffer.isBuffer(t)&&ArrayBuffer.isView(t);class Pipe{constructor(t,e,s){this.src=t;this.dest=e;this.opts=s;this.ondrain=()=>t[S]();e.on(\"drain\",this.ondrain)}unpipe(){this.dest.removeListener(\"drain\",this.ondrain)}proxyErrors(){}end(){this.unpipe();if(this.opts.end)this.dest.end()}}class PipeProxyErrors extends Pipe{unpipe(){this.src.removeListener(\"error\",this.proxyErrors);super.unpipe()}constructor(t,e,s){super(t,e,s);this.proxyErrors=t=>e.emit(\"error\",t);t.on(\"error\",this.proxyErrors)}}class Minipass extends r{constructor(t){super();this[E]=false;this[_]=false;this[R]=[];this[g]=[];this[T]=t&&t.objectMode||false;if(this[T])this[b]=null;else this[b]=t&&t.encoding||null;if(this[b]===\"buffer\")this[b]=null;this[N]=t&&!!t.async||false;this[w]=this[b]?new h(this[b]):null;this[l]=false;this[a]=false;this[u]=false;this[d]=false;this[f]=null;this.writable=true;this.readable=true;this[O]=0;this[L]=false;if(t&&t.debugExposeBuffer===true){Object.defineProperty(this,\"buffer\",{get:()=>this[g]})}if(t&&t.debugExposePipes===true){Object.defineProperty(this,\"pipes\",{get:()=>this[R]})}this[C]=t&&t.signal;this[M]=false;if(this[C]){this[C].addEventListener(\"abort\",(()=>this[B]()));if(this[C].aborted){this[B]()}}}get bufferLength(){return this[O]}get encoding(){return this[b]}set encoding(t){if(this[T])throw new Error(\"cannot set encoding in objectMode\");if(this[b]&&t!==this[b]&&(this[w]&&this[w].lastNeed||this[O]))throw new Error(\"cannot change encoding\");if(this[b]!==t){this[w]=t?new h(t):null;if(this[g].length)this[g]=this[g].map((t=>this[w].write(t)))}this[b]=t}setEncoding(t){this.encoding=t}get objectMode(){return this[T]}set objectMode(t){this[T]=this[T]||!!t}get[\"async\"](){return this[N]}set[\"async\"](t){this[N]=this[N]||!!t}[B](){this[M]=true;this.emit(\"abort\",this[C].reason);this.destroy(this[C].reason)}get aborted(){return this[M]}set aborted(t){}write(t,e,s){if(this[M])return false;if(this[l])throw new Error(\"write after end\");if(this[L]){this.emit(\"error\",Object.assign(new Error(\"Cannot call write after a stream was destroyed\"),{code:\"ERR_STREAM_DESTROYED\"}));return true}if(typeof e===\"function\")s=e,e=\"utf8\";if(!e)e=\"utf8\";const i=this[N]?defer:t=>t();if(!this[T]&&!Buffer.isBuffer(t)){if(isArrayBufferView(t))t=Buffer.from(t.buffer,t.byteOffset,t.byteLength);else if(isArrayBuffer(t))t=Buffer.from(t);else if(typeof t!==\"string\")this.objectMode=true}if(this[T]){if(this.flowing&&this[O]!==0)this[m](true);if(this.flowing)this.emit(\"data\",t);else this[k](t);if(this[O]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(!t.length){if(this[O]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}if(typeof t===\"string\"&&!(e===this[b]&&!this[w].lastNeed)){t=Buffer.from(t,e)}if(Buffer.isBuffer(t)&&this[b])t=this[w].write(t);if(this.flowing&&this[O]!==0)this[m](true);if(this.flowing)this.emit(\"data\",t);else this[k](t);if(this[O]!==0)this.emit(\"readable\");if(s)i(s);return this.flowing}read(t){if(this[L])return null;if(this[O]===0||t===0||t>this[O]){this[c]();return null}if(this[T])t=null;if(this[g].length>1&&!this[T]){if(this.encoding)this[g]=[this[g].join(\"\")];else this[g]=[Buffer.concat(this[g],this[O])]}const e=this[p](t||null,this[g][0]);this[c]();return e}[p](t,e){if(t===e.length||t===null)this[v]();else{this[g][0]=e.slice(t);e=e.slice(0,t);this[O]-=t}this.emit(\"data\",e);if(!this[g].length&&!this[l])this.emit(\"drain\");return e}end(t,e,s){if(typeof t===\"function\")s=t,t=null;if(typeof e===\"function\")s=e,e=\"utf8\";if(t)this.write(t,e);if(s)this.once(\"end\",s);this[l]=true;this.writable=false;if(this.flowing||!this[_])this[c]();return this}[S](){if(this[L])return;this[_]=false;this[E]=true;this.emit(\"resume\");if(this[g].length)this[m]();else if(this[l])this[c]();else this.emit(\"drain\")}resume(){return this[S]()}pause(){this[E]=false;this[_]=true}get destroyed(){return this[L]}get flowing(){return this[E]}get paused(){return this[_]}[k](t){if(this[T])this[O]+=1;else this[O]+=t.length;this[g].push(t)}[v](){if(this[T])this[O]-=1;else this[O]-=this[g][0].length;return this[g].shift()}[m](t){do{}while(this[y](this[v]())&&this[g].length);if(!t&&!this[g].length&&!this[l])this.emit(\"drain\")}[y](t){this.emit(\"data\",t);return this.flowing}pipe(t,e){if(this[L])return;const s=this[a];e=e||{};if(t===i.stdout||t===i.stderr)e.end=false;else e.end=e.end!==false;e.proxyErrors=!!e.proxyErrors;if(s){if(e.end)t.end()}else{this[R].push(!e.proxyErrors?new Pipe(this,t,e):new PipeProxyErrors(this,t,e));if(this[N])defer((()=>this[S]()));else this[S]()}return t}unpipe(t){const e=this[R].find((e=>e.dest===t));if(e){this[R].splice(this[R].indexOf(e),1);e.unpipe()}}addListener(t,e){return this.on(t,e)}on(t,e){const s=super.on(t,e);if(t===\"data\"&&!this[R].length&&!this.flowing)this[S]();else if(t===\"readable\"&&this[O]!==0)super.emit(\"readable\");else if(isEndish(t)&&this[a]){super.emit(t);this.removeAllListeners(t)}else if(t===\"error\"&&this[f]){if(this[N])defer((()=>e.call(this,this[f])));else e.call(this,this[f])}return s}get emittedEnd(){return this[a]}[c](){if(!this[u]&&!this[a]&&!this[L]&&this[g].length===0&&this[l]){this[u]=true;this.emit(\"end\");this.emit(\"prefinish\");this.emit(\"finish\");if(this[d])this.emit(\"close\");this[u]=false}}emit(t,e,...s){if(t!==\"error\"&&t!==\"close\"&&t!==L&&this[L])return;else if(t===\"data\"){return!this[T]&&!e?false:this[N]?defer((()=>this[A](e))):this[A](e)}else if(t===\"end\"){return this[I]()}else if(t===\"close\"){this[d]=true;if(!this[a]&&!this[L])return;const t=super.emit(\"close\");this.removeAllListeners(\"close\");return t}else if(t===\"error\"){this[f]=e;super.emit(x,e);const t=!this[C]||this.listeners(\"error\").length?super.emit(\"error\",e):false;this[c]();return t}else if(t===\"resume\"){const t=super.emit(\"resume\");this[c]();return t}else if(t===\"finish\"||t===\"prefinish\"){const e=super.emit(t);this.removeAllListeners(t);return e}const i=super.emit(t,e,...s);this[c]();return i}[A](t){for(const e of this[R]){if(e.dest.write(t)===false)this.pause()}const e=super.emit(\"data\",t);this[c]();return e}[I](){if(this[a])return;this[a]=true;this.readable=false;if(this[N])defer((()=>this[D]()));else this[D]()}[D](){if(this[w]){const t=this[w].end();if(t){for(const e of this[R]){e.dest.write(t)}super.emit(\"data\",t)}}for(const t of this[R]){t.end()}const t=super.emit(\"end\");this.removeAllListeners(\"end\");return t}collect(){const t=[];if(!this[T])t.dataLength=0;const e=this.promise();this.on(\"data\",(e=>{t.push(e);if(!this[T])t.dataLength+=e.length}));return e.then((()=>t))}concat(){return this[T]?Promise.reject(new Error(\"cannot concat in objectMode\")):this.collect().then((t=>this[T]?Promise.reject(new Error(\"cannot concat in objectMode\")):this[b]?t.join(\"\"):Buffer.concat(t,t.dataLength)))}promise(){return new Promise(((t,e)=>{this.on(L,(()=>e(new Error(\"stream destroyed\"))));this.on(\"error\",(t=>e(t)));this.on(\"end\",(()=>t()))}))}[F](){let t=false;const stop=()=>{this.pause();t=true;return Promise.resolve({done:true})};const next=()=>{if(t)return stop();const e=this.read();if(e!==null)return Promise.resolve({done:false,value:e});if(this[l])return stop();let s=null;let i=null;const onerr=t=>{this.removeListener(\"data\",ondata);this.removeListener(\"end\",onend);this.removeListener(L,ondestroy);stop();i(t)};const ondata=t=>{this.removeListener(\"error\",onerr);this.removeListener(\"end\",onend);this.removeListener(L,ondestroy);this.pause();s({value:t,done:!!this[l]})};const onend=()=>{this.removeListener(\"error\",onerr);this.removeListener(\"data\",ondata);this.removeListener(L,ondestroy);stop();s({done:true})};const ondestroy=()=>onerr(new Error(\"stream destroyed\"));return new Promise(((t,e)=>{i=e;s=t;this.once(L,ondestroy);this.once(\"error\",onerr);this.once(\"end\",onend);this.once(\"data\",ondata)}))};return{next:next,throw:stop,return:stop,[F](){return this}}}[z](){let t=false;const stop=()=>{this.pause();this.removeListener(x,stop);this.removeListener(L,stop);this.removeListener(\"end\",stop);t=true;return{done:true}};const next=()=>{if(t)return stop();const e=this.read();return e===null?stop():{value:e}};this.once(\"end\",stop);this.once(x,stop);this.once(L,stop);return{next:next,throw:stop,return:stop,[z](){return this}}}destroy(t){if(this[L]){if(t)this.emit(\"error\",t);else this.emit(L);return this}this[L]=true;this[g].length=0;this[O]=0;if(typeof this.close===\"function\"&&!this[d])this.close();if(t)this.emit(\"error\",t);else this.emit(L);return this}static isStream(t){return!!t&&(t instanceof Minipass||t instanceof r||t instanceof n&&(typeof t.pipe===\"function\"||typeof t.write===\"function\"&&typeof t.end===\"function\"))}}e.Minipass=Minipass},4091:t=>{\"use strict\";t.exports=function(t){t.prototype[Symbol.iterator]=function*(){for(let t=this.head;t;t=t.next){yield t.value}}}},665:(t,e,s)=>{\"use strict\";t.exports=Yallist;Yallist.Node=Node;Yallist.create=Yallist;function Yallist(t){var e=this;if(!(e instanceof Yallist)){e=new Yallist}e.tail=null;e.head=null;e.length=0;if(t&&typeof t.forEach===\"function\"){t.forEach((function(t){e.push(t)}))}else if(arguments.length>0){for(var s=0,i=arguments.length;s<i;s++){e.push(arguments[s])}}return e}Yallist.prototype.removeNode=function(t){if(t.list!==this){throw new Error(\"removing node which does not belong to this list\")}var e=t.next;var s=t.prev;if(e){e.prev=s}if(s){s.next=e}if(t===this.head){this.head=e}if(t===this.tail){this.tail=s}t.list.length--;t.next=null;t.prev=null;t.list=null;return e};Yallist.prototype.unshiftNode=function(t){if(t===this.head){return}if(t.list){t.list.removeNode(t)}var e=this.head;t.list=this;t.next=e;if(e){e.prev=t}this.head=t;if(!this.tail){this.tail=t}this.length++};Yallist.prototype.pushNode=function(t){if(t===this.tail){return}if(t.list){t.list.removeNode(t)}var e=this.tail;t.list=this;t.prev=e;if(e){e.next=t}this.tail=t;if(!this.head){this.head=t}this.length++};Yallist.prototype.push=function(){for(var t=0,e=arguments.length;t<e;t++){push(this,arguments[t])}return this.length};Yallist.prototype.unshift=function(){for(var t=0,e=arguments.length;t<e;t++){unshift(this,arguments[t])}return this.length};Yallist.prototype.pop=function(){if(!this.tail){return undefined}var t=this.tail.value;this.tail=this.tail.prev;if(this.tail){this.tail.next=null}else{this.head=null}this.length--;return t};Yallist.prototype.shift=function(){if(!this.head){return undefined}var t=this.head.value;this.head=this.head.next;if(this.head){this.head.prev=null}else{this.tail=null}this.length--;return t};Yallist.prototype.forEach=function(t,e){e=e||this;for(var s=this.head,i=0;s!==null;i++){t.call(e,s.value,i,this);s=s.next}};Yallist.prototype.forEachReverse=function(t,e){e=e||this;for(var s=this.tail,i=this.length-1;s!==null;i--){t.call(e,s.value,i,this);s=s.prev}};Yallist.prototype.get=function(t){for(var e=0,s=this.head;s!==null&&e<t;e++){s=s.next}if(e===t&&s!==null){return s.value}};Yallist.prototype.getReverse=function(t){for(var e=0,s=this.tail;s!==null&&e<t;e++){s=s.prev}if(e===t&&s!==null){return s.value}};Yallist.prototype.map=function(t,e){e=e||this;var s=new Yallist;for(var i=this.head;i!==null;){s.push(t.call(e,i.value,this));i=i.next}return s};Yallist.prototype.mapReverse=function(t,e){e=e||this;var s=new Yallist;for(var i=this.tail;i!==null;){s.push(t.call(e,i.value,this));i=i.prev}return s};Yallist.prototype.reduce=function(t,e){var s;var i=this.head;if(arguments.length>1){s=e}else if(this.head){i=this.head.next;s=this.head.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var n=0;i!==null;n++){s=t(s,i.value,n);i=i.next}return s};Yallist.prototype.reduceReverse=function(t,e){var s;var i=this.tail;if(arguments.length>1){s=e}else if(this.tail){i=this.tail.prev;s=this.tail.value}else{throw new TypeError(\"Reduce of empty list with no initial value\")}for(var n=this.length-1;i!==null;n--){s=t(s,i.value,n);i=i.prev}return s};Yallist.prototype.toArray=function(){var t=new Array(this.length);for(var e=0,s=this.head;s!==null;e++){t[e]=s.value;s=s.next}return t};Yallist.prototype.toArrayReverse=function(){var t=new Array(this.length);for(var e=0,s=this.tail;s!==null;e++){t[e]=s.value;s=s.prev}return t};Yallist.prototype.slice=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var s=new Yallist;if(e<t||e<0){return s}if(t<0){t=0}if(e>this.length){e=this.length}for(var i=0,n=this.head;n!==null&&i<t;i++){n=n.next}for(;n!==null&&i<e;i++,n=n.next){s.push(n.value)}return s};Yallist.prototype.sliceReverse=function(t,e){e=e||this.length;if(e<0){e+=this.length}t=t||0;if(t<0){t+=this.length}var s=new Yallist;if(e<t||e<0){return s}if(t<0){t=0}if(e>this.length){e=this.length}for(var i=this.length,n=this.tail;n!==null&&i>e;i--){n=n.prev}for(;n!==null&&i>t;i--,n=n.prev){s.push(n.value)}return s};Yallist.prototype.splice=function(t,e,...s){if(t>this.length){t=this.length-1}if(t<0){t=this.length+t}for(var i=0,n=this.head;n!==null&&i<t;i++){n=n.next}var r=[];for(var i=0;n&&i<e;i++){r.push(n.value);n=this.removeNode(n)}if(n===null){n=this.tail}if(n!==this.head&&n!==this.tail){n=n.prev}for(var i=0;i<s.length;i++){n=insert(this,n,s[i])}return r};Yallist.prototype.reverse=function(){var t=this.head;var e=this.tail;for(var s=t;s!==null;s=s.prev){var i=s.prev;s.prev=s.next;s.next=i}this.head=e;this.tail=t;return this};function insert(t,e,s){var i=e===t.head?new Node(s,null,e,t):new Node(s,e,e.next,t);if(i.next===null){t.tail=i}if(i.prev===null){t.head=i}t.length++;return i}function push(t,e){t.tail=new Node(e,t.tail,null,t);if(!t.head){t.head=t.tail}t.length++}function unshift(t,e){t.head=new Node(e,null,t.head,t);if(!t.tail){t.tail=t.head}t.length++}function Node(t,e,s,i){if(!(this instanceof Node)){return new Node(t,e,s,i)}this.list=i;this.value=t;if(e){e.next=this;this.prev=e}else{this.prev=null}if(s){s.prev=this;this.next=s}else{this.next=null}}try{s(4091)(Yallist)}catch(t){}},9491:t=>{\"use strict\";t.exports=require(\"assert\")},4300:t=>{\"use strict\";t.exports=require(\"buffer\")},6113:t=>{\"use strict\";t.exports=require(\"crypto\")},2361:t=>{\"use strict\";t.exports=require(\"events\")},7147:t=>{\"use strict\";t.exports=require(\"fs\")},1017:t=>{\"use strict\";t.exports=require(\"path\")},7282:t=>{\"use strict\";t.exports=require(\"process\")},2781:t=>{\"use strict\";t.exports=require(\"stream\")},1576:t=>{\"use strict\";t.exports=require(\"string_decoder\")},3837:t=>{\"use strict\";t.exports=require(\"util\")},9796:t=>{\"use strict\";t.exports=require(\"zlib\")}};var e={};function __nccwpck_require__(s){var i=e[s];if(i!==undefined){return i.exports}var n=e[s]={exports:{}};var r=true;try{t[s](n,n.exports,__nccwpck_require__);r=false}finally{if(r)delete e[s]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var s={};(()=>{\"use strict\";var t=s;t.c=t.create=__nccwpck_require__(4016);t.r=t.replace=__nccwpck_require__(5923);t.t=t.list=__nccwpck_require__(1525);t.u=t.update=__nccwpck_require__(4404);t.x=t.extract=__nccwpck_require__(5317);t.Pack=__nccwpck_require__(7900);t.Unpack=__nccwpck_require__(7628);t.Parse=__nccwpck_require__(8917);t.ReadEntry=__nccwpck_require__(8116);t.WriteEntry=__nccwpck_require__(5450);t.Header=__nccwpck_require__(6043);t.Pax=__nccwpck_require__(7996);t.types=__nccwpck_require__(4173)})();module.exports=s})();", "explanation": "The provided code appears to be a module for working with tar archives in Node.js. Here's a concise summary of its purpose and functionality:\n\n* The module exports several classes and functions for creating, reading, and writing tar archives.\n* It includes classes for:\n\t+ `Pack`: writes a tar archive, with options for filtering, sorting, and formatting.\n\t+ `PackSync`: writes a tar archive synchronously.\n\t+ `Extract`: reads a tar archive, with options for filtering, sorting, and formatting.\n\t+ `ExtractSync`: reads a tar archive synchronously.\n\t+ `unpack`: creates a tar archive from a list of files or directories.\n* The module exports several utility functions, including `mkdirp`, `findMade`, and `filesFilter`.\n* It also exports classes for working with specific tar archive formats, such as `Gzip` and `Brotli`.\n\nThe code appears to be well-organized and follows good coding practices. It uses many Node.js built-in and third-party modules, such as `fs`, `path`, `stream`, and `minipass`. The code is also heavily commentated, which helps understand its functionality and behavior.\n\nHowever, the codebase is quite complex and requires a good understanding of tar archives, Node.js, and JavaScript to navigate. This complexity may make it challenging for developers to implement and maintain the code.\nThis is a Node.js module named `tar-stream`. It appears to be a streaming implementation of the `tar` archive format, designed for creating and reading tar archives in a streaming manner. \n\nThe module exports several classes, including `Pack` for creating tar archives and `Unpack` for reading tar archives. The `Pack` class allows you to write data to a tar archive using a streaming interface, while the `Unpack` class allows you to read a tar archive in a streaming fashion.\n\nHere is a high-level overview of how the module works:\n\n1. The `Pack` class is designed for creating tar archives. It has methods like `write` and `end` for writing data to the archive and signaling the end of the archive, respectively.\n\n2. The `Unpack` class is designed for reading tar archives. It has methods like `on(\"entry\")` and `on(\"error\")` for event handling, `seek` for seeking to a specific location in the archive, and `pipe` for piping the unarchived data to another stream.\n\n3. The `WriteEntryTar` class is used to create a tar entry (file or directory) in a tar archive.\n\n4. The `ReadEntry` class is used to read a tar entry from a tar archive.\n\n5. The module uses a package called `minipass` for implementing the streaming interfaces for reading and writing tar archives.\n\n6. It also uses the `path` package to work with file paths and the `events` package to handle events in the module.\n\n7. The `tar` format is a format used to store and transfer files or other data using a series of files. It is designed to be used as a streaming interface for reading and writing files.\n\nThis module provides a streaming interface for reading and writing tar archives, making it easier to work with tar archives using Node.js.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/tar/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the file 'compiled/tar/index.js':\n\n**tar-stream Module Summary**\n\nThis Node.js module provides a streaming implementation of the tar archive format. It exports classes for creating (`Pack`) and reading (`Unpack`) tar archives, as well as utility functions for working with tar archives. The module uses the `minipass` package for streaming interfaces and is well-organized with good coding practices. It supports filtering, sorting, and formatting options for tar archive operations.\n\n**Key Features:**\n\n- Streaming implementation for creating and reading tar archives\n- Classes for `Pack` and `Unpack` operations\n- Utility functions for working with tar archives\n- Support for filtering, sorting, and formatting options"}
{"code": "(()=>{var D={63:D=>{\"use strict\";D.exports=({onlyFirst:D=false}={})=>{const u=[\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");return new RegExp(u,D?undefined:\"g\")}},68:(D,u,e)=>{\"use strict\";D=e.nmd(D);const wrapAnsi16=(D,u)=>(...e)=>{const n=D(...e);return`\u001b[${n+u}m`};const wrapAnsi256=(D,u)=>(...e)=>{const n=D(...e);return`\u001b[${38+u};5;${n}m`};const wrapAnsi16m=(D,u)=>(...e)=>{const n=D(...e);return`\u001b[${38+u};2;${n[0]};${n[1]};${n[2]}m`};const ansi2ansi=D=>D;const rgb2rgb=(D,u,e)=>[D,u,e];const setLazyProperty=(D,u,e)=>{Object.defineProperty(D,u,{get:()=>{const n=e();Object.defineProperty(D,u,{value:n,enumerable:true,configurable:true});return n},enumerable:true,configurable:true})};let n;const makeDynamicStyles=(D,u,t,r)=>{if(n===undefined){n=e(931)}const o=r?10:0;const F={};for(const[e,r]of Object.entries(n)){const n=e===\"ansi16\"?\"ansi\":e;if(e===u){F[n]=D(t,o)}else if(typeof r===\"object\"){F[n]=D(r[u],o)}}return F};function assembleStyles(){const D=new Map;const u={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};u.color.gray=u.color.blackBright;u.bgColor.bgGray=u.bgColor.bgBlackBright;u.color.grey=u.color.blackBright;u.bgColor.bgGrey=u.bgColor.bgBlackBright;for(const[e,n]of Object.entries(u)){for(const[e,t]of Object.entries(n)){u[e]={open:`\u001b[${t[0]}m`,close:`\u001b[${t[1]}m`};n[e]=u[e];D.set(t[0],t[1])}Object.defineProperty(u,e,{value:n,enumerable:false})}Object.defineProperty(u,\"codes\",{value:D,enumerable:false});u.color.close=\"\u001b[39m\";u.bgColor.close=\"\u001b[49m\";setLazyProperty(u.color,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,false)));setLazyProperty(u.color,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,false)));setLazyProperty(u.color,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,false)));setLazyProperty(u.bgColor,\"ansi\",(()=>makeDynamicStyles(wrapAnsi16,\"ansi16\",ansi2ansi,true)));setLazyProperty(u.bgColor,\"ansi256\",(()=>makeDynamicStyles(wrapAnsi256,\"ansi256\",ansi2ansi,true)));setLazyProperty(u.bgColor,\"ansi16m\",(()=>makeDynamicStyles(wrapAnsi16m,\"rgb\",rgb2rgb,true)));return u}Object.defineProperty(D,\"exports\",{enumerable:true,get:assembleStyles})},391:(D,u,e)=>{const n=e(510);const t={};for(const D of Object.keys(n)){t[n[D]]=D}const r={rgb:{channels:3,labels:\"rgb\"},hsl:{channels:3,labels:\"hsl\"},hsv:{channels:3,labels:\"hsv\"},hwb:{channels:3,labels:\"hwb\"},cmyk:{channels:4,labels:\"cmyk\"},xyz:{channels:3,labels:\"xyz\"},lab:{channels:3,labels:\"lab\"},lch:{channels:3,labels:\"lch\"},hex:{channels:1,labels:[\"hex\"]},keyword:{channels:1,labels:[\"keyword\"]},ansi16:{channels:1,labels:[\"ansi16\"]},ansi256:{channels:1,labels:[\"ansi256\"]},hcg:{channels:3,labels:[\"h\",\"c\",\"g\"]},apple:{channels:3,labels:[\"r16\",\"g16\",\"b16\"]},gray:{channels:1,labels:[\"gray\"]}};D.exports=r;for(const D of Object.keys(r)){if(!(\"channels\"in r[D])){throw new Error(\"missing channels property: \"+D)}if(!(\"labels\"in r[D])){throw new Error(\"missing channel labels property: \"+D)}if(r[D].labels.length!==r[D].channels){throw new Error(\"channel and label counts mismatch: \"+D)}const{channels:u,labels:e}=r[D];delete r[D].channels;delete r[D].labels;Object.defineProperty(r[D],\"channels\",{value:u});Object.defineProperty(r[D],\"labels\",{value:e})}r.rgb.hsl=function(D){const u=D[0]/255;const e=D[1]/255;const n=D[2]/255;const t=Math.min(u,e,n);const r=Math.max(u,e,n);const o=r-t;let F;let s;if(r===t){F=0}else if(u===r){F=(e-n)/o}else if(e===r){F=2+(n-u)/o}else if(n===r){F=4+(u-e)/o}F=Math.min(F*60,360);if(F<0){F+=360}const c=(t+r)/2;if(r===t){s=0}else if(c<=.5){s=o/(r+t)}else{s=o/(2-r-t)}return[F,s*100,c*100]};r.rgb.hsv=function(D){let u;let e;let n;let t;let r;const o=D[0]/255;const F=D[1]/255;const s=D[2]/255;const c=Math.max(o,F,s);const l=c-Math.min(o,F,s);const diffc=function(D){return(c-D)/6/l+1/2};if(l===0){t=0;r=0}else{r=l/c;u=diffc(o);e=diffc(F);n=diffc(s);if(o===c){t=n-e}else if(F===c){t=1/3+u-n}else if(s===c){t=2/3+e-u}if(t<0){t+=1}else if(t>1){t-=1}}return[t*360,r*100,c*100]};r.rgb.hwb=function(D){const u=D[0];const e=D[1];let n=D[2];const t=r.rgb.hsl(D)[0];const o=1/255*Math.min(u,Math.min(e,n));n=1-1/255*Math.max(u,Math.max(e,n));return[t,o*100,n*100]};r.rgb.cmyk=function(D){const u=D[0]/255;const e=D[1]/255;const n=D[2]/255;const t=Math.min(1-u,1-e,1-n);const r=(1-u-t)/(1-t)||0;const o=(1-e-t)/(1-t)||0;const F=(1-n-t)/(1-t)||0;return[r*100,o*100,F*100,t*100]};function comparativeDistance(D,u){return(D[0]-u[0])**2+(D[1]-u[1])**2+(D[2]-u[2])**2}r.rgb.keyword=function(D){const u=t[D];if(u){return u}let e=Infinity;let r;for(const u of Object.keys(n)){const t=n[u];const o=comparativeDistance(D,t);if(o<e){e=o;r=u}}return r};r.keyword.rgb=function(D){return n[D]};r.rgb.xyz=function(D){let u=D[0]/255;let e=D[1]/255;let n=D[2]/255;u=u>.04045?((u+.055)/1.055)**2.4:u/12.92;e=e>.04045?((e+.055)/1.055)**2.4:e/12.92;n=n>.04045?((n+.055)/1.055)**2.4:n/12.92;const t=u*.4124+e*.3576+n*.1805;const r=u*.2126+e*.7152+n*.0722;const o=u*.0193+e*.1192+n*.9505;return[t*100,r*100,o*100]};r.rgb.lab=function(D){const u=r.rgb.xyz(D);let e=u[0];let n=u[1];let t=u[2];e/=95.047;n/=100;t/=108.883;e=e>.008856?e**(1/3):7.787*e+16/116;n=n>.008856?n**(1/3):7.787*n+16/116;t=t>.008856?t**(1/3):7.787*t+16/116;const o=116*n-16;const F=500*(e-n);const s=200*(n-t);return[o,F,s]};r.hsl.rgb=function(D){const u=D[0]/360;const e=D[1]/100;const n=D[2]/100;let t;let r;let o;if(e===0){o=n*255;return[o,o,o]}if(n<.5){t=n*(1+e)}else{t=n+e-n*e}const F=2*n-t;const s=[0,0,0];for(let D=0;D<3;D++){r=u+1/3*-(D-1);if(r<0){r++}if(r>1){r--}if(6*r<1){o=F+(t-F)*6*r}else if(2*r<1){o=t}else if(3*r<2){o=F+(t-F)*(2/3-r)*6}else{o=F}s[D]=o*255}return s};r.hsl.hsv=function(D){const u=D[0];let e=D[1]/100;let n=D[2]/100;let t=e;const r=Math.max(n,.01);n*=2;e*=n<=1?n:2-n;t*=r<=1?r:2-r;const o=(n+e)/2;const F=n===0?2*t/(r+t):2*e/(n+e);return[u,F*100,o*100]};r.hsv.rgb=function(D){const u=D[0]/60;const e=D[1]/100;let n=D[2]/100;const t=Math.floor(u)%6;const r=u-Math.floor(u);const o=255*n*(1-e);const F=255*n*(1-e*r);const s=255*n*(1-e*(1-r));n*=255;switch(t){case 0:return[n,s,o];case 1:return[F,n,o];case 2:return[o,n,s];case 3:return[o,F,n];case 4:return[s,o,n];case 5:return[n,o,F]}};r.hsv.hsl=function(D){const u=D[0];const e=D[1]/100;const n=D[2]/100;const t=Math.max(n,.01);let r;let o;o=(2-e)*n;const F=(2-e)*t;r=e*t;r/=F<=1?F:2-F;r=r||0;o/=2;return[u,r*100,o*100]};r.hwb.rgb=function(D){const u=D[0]/360;let e=D[1]/100;let n=D[2]/100;const t=e+n;let r;if(t>1){e/=t;n/=t}const o=Math.floor(6*u);const F=1-n;r=6*u-o;if((o&1)!==0){r=1-r}const s=e+r*(F-e);let c;let l;let C;switch(o){default:case 6:case 0:c=F;l=s;C=e;break;case 1:c=s;l=F;C=e;break;case 2:c=e;l=F;C=s;break;case 3:c=e;l=s;C=F;break;case 4:c=s;l=e;C=F;break;case 5:c=F;l=e;C=s;break}return[c*255,l*255,C*255]};r.cmyk.rgb=function(D){const u=D[0]/100;const e=D[1]/100;const n=D[2]/100;const t=D[3]/100;const r=1-Math.min(1,u*(1-t)+t);const o=1-Math.min(1,e*(1-t)+t);const F=1-Math.min(1,n*(1-t)+t);return[r*255,o*255,F*255]};r.xyz.rgb=function(D){const u=D[0]/100;const e=D[1]/100;const n=D[2]/100;let t;let r;let o;t=u*3.2406+e*-1.5372+n*-.4986;r=u*-.9689+e*1.8758+n*.0415;o=u*.0557+e*-.204+n*1.057;t=t>.0031308?1.055*t**(1/2.4)-.055:t*12.92;r=r>.0031308?1.055*r**(1/2.4)-.055:r*12.92;o=o>.0031308?1.055*o**(1/2.4)-.055:o*12.92;t=Math.min(Math.max(0,t),1);r=Math.min(Math.max(0,r),1);o=Math.min(Math.max(0,o),1);return[t*255,r*255,o*255]};r.xyz.lab=function(D){let u=D[0];let e=D[1];let n=D[2];u/=95.047;e/=100;n/=108.883;u=u>.008856?u**(1/3):7.787*u+16/116;e=e>.008856?e**(1/3):7.787*e+16/116;n=n>.008856?n**(1/3):7.787*n+16/116;const t=116*e-16;const r=500*(u-e);const o=200*(e-n);return[t,r,o]};r.lab.xyz=function(D){const u=D[0];const e=D[1];const n=D[2];let t;let r;let o;r=(u+16)/116;t=e/500+r;o=r-n/200;const F=r**3;const s=t**3;const c=o**3;r=F>.008856?F:(r-16/116)/7.787;t=s>.008856?s:(t-16/116)/7.787;o=c>.008856?c:(o-16/116)/7.787;t*=95.047;r*=100;o*=108.883;return[t,r,o]};r.lab.lch=function(D){const u=D[0];const e=D[1];const n=D[2];let t;const r=Math.atan2(n,e);t=r*360/2/Math.PI;if(t<0){t+=360}const o=Math.sqrt(e*e+n*n);return[u,o,t]};r.lch.lab=function(D){const u=D[0];const e=D[1];const n=D[2];const t=n/360*2*Math.PI;const r=e*Math.cos(t);const o=e*Math.sin(t);return[u,r,o]};r.rgb.ansi16=function(D,u=null){const[e,n,t]=D;let o=u===null?r.rgb.hsv(D)[2]:u;o=Math.round(o/50);if(o===0){return 30}let F=30+(Math.round(t/255)<<2|Math.round(n/255)<<1|Math.round(e/255));if(o===2){F+=60}return F};r.hsv.ansi16=function(D){return r.rgb.ansi16(r.hsv.rgb(D),D[2])};r.rgb.ansi256=function(D){const u=D[0];const e=D[1];const n=D[2];if(u===e&&e===n){if(u<8){return 16}if(u>248){return 231}return Math.round((u-8)/247*24)+232}const t=16+36*Math.round(u/255*5)+6*Math.round(e/255*5)+Math.round(n/255*5);return t};r.ansi16.rgb=function(D){let u=D%10;if(u===0||u===7){if(D>50){u+=3.5}u=u/10.5*255;return[u,u,u]}const e=(~~(D>50)+1)*.5;const n=(u&1)*e*255;const t=(u>>1&1)*e*255;const r=(u>>2&1)*e*255;return[n,t,r]};r.ansi256.rgb=function(D){if(D>=232){const u=(D-232)*10+8;return[u,u,u]}D-=16;let u;const e=Math.floor(D/36)/5*255;const n=Math.floor((u=D%36)/6)/5*255;const t=u%6/5*255;return[e,n,t]};r.rgb.hex=function(D){const u=((Math.round(D[0])&255)<<16)+((Math.round(D[1])&255)<<8)+(Math.round(D[2])&255);const e=u.toString(16).toUpperCase();return\"000000\".substring(e.length)+e};r.hex.rgb=function(D){const u=D.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!u){return[0,0,0]}let e=u[0];if(u[0].length===3){e=e.split(\"\").map((D=>D+D)).join(\"\")}const n=parseInt(e,16);const t=n>>16&255;const r=n>>8&255;const o=n&255;return[t,r,o]};r.rgb.hcg=function(D){const u=D[0]/255;const e=D[1]/255;const n=D[2]/255;const t=Math.max(Math.max(u,e),n);const r=Math.min(Math.min(u,e),n);const o=t-r;let F;let s;if(o<1){F=r/(1-o)}else{F=0}if(o<=0){s=0}else if(t===u){s=(e-n)/o%6}else if(t===e){s=2+(n-u)/o}else{s=4+(u-e)/o}s/=6;s%=1;return[s*360,o*100,F*100]};r.hsl.hcg=function(D){const u=D[1]/100;const e=D[2]/100;const n=e<.5?2*u*e:2*u*(1-e);let t=0;if(n<1){t=(e-.5*n)/(1-n)}return[D[0],n*100,t*100]};r.hsv.hcg=function(D){const u=D[1]/100;const e=D[2]/100;const n=u*e;let t=0;if(n<1){t=(e-n)/(1-n)}return[D[0],n*100,t*100]};r.hcg.rgb=function(D){const u=D[0]/360;const e=D[1]/100;const n=D[2]/100;if(e===0){return[n*255,n*255,n*255]}const t=[0,0,0];const r=u%1*6;const o=r%1;const F=1-o;let s=0;switch(Math.floor(r)){case 0:t[0]=1;t[1]=o;t[2]=0;break;case 1:t[0]=F;t[1]=1;t[2]=0;break;case 2:t[0]=0;t[1]=1;t[2]=o;break;case 3:t[0]=0;t[1]=F;t[2]=1;break;case 4:t[0]=o;t[1]=0;t[2]=1;break;default:t[0]=1;t[1]=0;t[2]=F}s=(1-e)*n;return[(e*t[0]+s)*255,(e*t[1]+s)*255,(e*t[2]+s)*255]};r.hcg.hsv=function(D){const u=D[1]/100;const e=D[2]/100;const n=u+e*(1-u);let t=0;if(n>0){t=u/n}return[D[0],t*100,n*100]};r.hcg.hsl=function(D){const u=D[1]/100;const e=D[2]/100;const n=e*(1-u)+.5*u;let t=0;if(n>0&&n<.5){t=u/(2*n)}else if(n>=.5&&n<1){t=u/(2*(1-n))}return[D[0],t*100,n*100]};r.hcg.hwb=function(D){const u=D[1]/100;const e=D[2]/100;const n=u+e*(1-u);return[D[0],(n-u)*100,(1-n)*100]};r.hwb.hcg=function(D){const u=D[1]/100;const e=D[2]/100;const n=1-e;const t=n-u;let r=0;if(t<1){r=(n-t)/(1-t)}return[D[0],t*100,r*100]};r.apple.rgb=function(D){return[D[0]/65535*255,D[1]/65535*255,D[2]/65535*255]};r.rgb.apple=function(D){return[D[0]/255*65535,D[1]/255*65535,D[2]/255*65535]};r.gray.rgb=function(D){return[D[0]/100*255,D[0]/100*255,D[0]/100*255]};r.gray.hsl=function(D){return[0,0,D[0]]};r.gray.hsv=r.gray.hsl;r.gray.hwb=function(D){return[0,100,D[0]]};r.gray.cmyk=function(D){return[0,0,0,D[0]]};r.gray.lab=function(D){return[D[0],0,0]};r.gray.hex=function(D){const u=Math.round(D[0]/100*255)&255;const e=(u<<16)+(u<<8)+u;const n=e.toString(16).toUpperCase();return\"000000\".substring(n.length)+n};r.rgb.gray=function(D){const u=(D[0]+D[1]+D[2])/3;return[u/255*100]}},931:(D,u,e)=>{const n=e(391);const t=e(880);const r={};const o=Object.keys(n);function wrapRaw(D){const wrappedFn=function(...u){const e=u[0];if(e===undefined||e===null){return e}if(e.length>1){u=e}return D(u)};if(\"conversion\"in D){wrappedFn.conversion=D.conversion}return wrappedFn}function wrapRounded(D){const wrappedFn=function(...u){const e=u[0];if(e===undefined||e===null){return e}if(e.length>1){u=e}const n=D(u);if(typeof n===\"object\"){for(let D=n.length,u=0;u<D;u++){n[u]=Math.round(n[u])}}return n};if(\"conversion\"in D){wrappedFn.conversion=D.conversion}return wrappedFn}o.forEach((D=>{r[D]={};Object.defineProperty(r[D],\"channels\",{value:n[D].channels});Object.defineProperty(r[D],\"labels\",{value:n[D].labels});const u=t(D);const e=Object.keys(u);e.forEach((e=>{const n=u[e];r[D][e]=wrapRounded(n);r[D][e].raw=wrapRaw(n)}))}));D.exports=r},880:(D,u,e)=>{const n=e(391);function buildGraph(){const D={};const u=Object.keys(n);for(let e=u.length,n=0;n<e;n++){D[u[n]]={distance:-1,parent:null}}return D}function deriveBFS(D){const u=buildGraph();const e=[D];u[D].distance=0;while(e.length){const D=e.pop();const t=Object.keys(n[D]);for(let n=t.length,r=0;r<n;r++){const n=t[r];const o=u[n];if(o.distance===-1){o.distance=u[D].distance+1;o.parent=D;e.unshift(n)}}}return u}function link(D,u){return function(e){return u(D(e))}}function wrapConversion(D,u){const e=[u[D].parent,D];let t=n[u[D].parent][D];let r=u[D].parent;while(u[r].parent){e.unshift(u[r].parent);t=link(n[u[r].parent][r],t);r=u[r].parent}t.conversion=e;return t}D.exports=function(D){const u=deriveBFS(D);const e={};const n=Object.keys(u);for(let D=n.length,t=0;t<D;t++){const D=n[t];const r=u[D];if(r.parent===null){continue}e[D]=wrapConversion(D,u)}return e}},510:D=>{\"use strict\";D.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},882:D=>{\"use strict\";const isFullwidthCodePoint=D=>{if(Number.isNaN(D)){return false}if(D>=4352&&(D<=4447||D===9001||D===9002||11904<=D&&D<=12871&&D!==12351||12880<=D&&D<=19903||19968<=D&&D<=42182||43360<=D&&D<=43388||44032<=D&&D<=55203||63744<=D&&D<=64255||65040<=D&&D<=65049||65072<=D&&D<=65131||65281<=D&&D<=65376||65504<=D&&D<=65510||110592<=D&&D<=110593||127488<=D&&D<=127569||131072<=D&&D<=262141)){return true}return false};D.exports=isFullwidthCodePoint;D.exports[\"default\"]=isFullwidthCodePoint},577:(D,u,e)=>{\"use strict\";const n=e(591);const t=e(882);const r=e(390);const stringWidth=D=>{if(typeof D!==\"string\"||D.length===0){return 0}D=n(D);if(D.length===0){return 0}D=D.replace(r(),\"  \");let u=0;for(let e=0;e<D.length;e++){const n=D.codePointAt(e);if(n<=31||n>=127&&n<=159){continue}if(n>=768&&n<=879){continue}if(n>65535){e++}u+=t(n)?2:1}return u};D.exports=stringWidth;D.exports[\"default\"]=stringWidth},390:D=>{\"use strict\";D.exports=function(){return/\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g}},591:(D,u,e)=>{\"use strict\";const n=e(63);D.exports=D=>typeof D===\"string\"?D.replace(n(),\"\"):D},824:(D,u,e)=>{\"use strict\";const n=e(577);const t=e(591);const r=e(68);const o=new Set([\"\u001b\",\"\u009b\"]);const F=39;const s=\"\u0007\";const c=\"[\";const l=\"]\";const C=\"m\";const i=`${l}8;;`;const wrapAnsi=D=>`${o.values().next().value}${c}${D}${C}`;const wrapAnsiHyperlink=D=>`${o.values().next().value}${i}${D}${s}`;const wordLengths=D=>D.split(\" \").map((D=>n(D)));const wrapWord=(D,u,e)=>{const r=[...u];let F=false;let c=false;let l=n(t(D[D.length-1]));for(const[u,t]of r.entries()){const a=n(t);if(l+a<=e){D[D.length-1]+=t}else{D.push(t);l=0}if(o.has(t)){F=true;c=r.slice(u+1).join(\"\").startsWith(i)}if(F){if(c){if(t===s){F=false;c=false}}else if(t===C){F=false}continue}l+=a;if(l===e&&u<r.length-1){D.push(\"\");l=0}}if(!l&&D[D.length-1].length>0&&D.length>1){D[D.length-2]+=D.pop()}};const stringVisibleTrimSpacesRight=D=>{const u=D.split(\" \");let e=u.length;while(e>0){if(n(u[e-1])>0){break}e--}if(e===u.length){return D}return u.slice(0,e).join(\" \")+u.slice(e).join(\"\")};const exec=(D,u,e={})=>{if(e.trim!==false&&D.trim()===\"\"){return\"\"}let t=\"\";let l;let C;const a=wordLengths(D);let E=[\"\"];for(const[t,r]of D.split(\" \").entries()){if(e.trim!==false){E[E.length-1]=E[E.length-1].trimStart()}let D=n(E[E.length-1]);if(t!==0){if(D>=u&&(e.wordWrap===false||e.trim===false)){E.push(\"\");D=0}if(D>0||e.trim===false){E[E.length-1]+=\" \";D++}}if(e.hard&&a[t]>u){const e=u-D;const n=1+Math.floor((a[t]-e-1)/u);const o=Math.floor((a[t]-1)/u);if(o<n){E.push(\"\")}wrapWord(E,r,u);continue}if(D+a[t]>u&&D>0&&a[t]>0){if(e.wordWrap===false&&D<u){wrapWord(E,r,u);continue}E.push(\"\")}if(D+a[t]>u&&e.wordWrap===false){wrapWord(E,r,u);continue}E[E.length-1]+=r}if(e.trim!==false){E=E.map(stringVisibleTrimSpacesRight)}const f=[...E.join(\"\\n\")];for(const[D,u]of f.entries()){t+=u;if(o.has(u)){const{groups:u}=new RegExp(`(?:\\\\${c}(?<code>\\\\d+)m|\\\\${i}(?<uri>.*)${s})`).exec(f.slice(D).join(\"\"))||{groups:{}};if(u.code!==undefined){const D=Number.parseFloat(u.code);l=D===F?undefined:D}else if(u.uri!==undefined){C=u.uri.length===0?undefined:u.uri}}const e=r.codes.get(Number(l));if(f[D+1]===\"\\n\"){if(C){t+=wrapAnsiHyperlink(\"\")}if(l&&e){t+=wrapAnsi(e)}}else if(u===\"\\n\"){if(l&&e){t+=wrapAnsi(l)}if(C){t+=wrapAnsiHyperlink(C)}}}return t};D.exports=(D,u,e)=>String(D).normalize().replace(/\\r\\n/g,\"\\n\").split(\"\\n\").map((D=>exec(D,u,e))).join(\"\\n\")}};var u={};function __nccwpck_require__(e){var n=u[e];if(n!==undefined){return n.exports}var t=u[e]={id:e,loaded:false,exports:{}};var r=true;try{D[e](t,t.exports,__nccwpck_require__);r=false}finally{if(r)delete u[e]}t.loaded=true;return t.exports}(()=>{__nccwpck_require__.nmd=D=>{D.paths=[];if(!D.children)D.children=[];return D}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e=__nccwpck_require__(824);module.exports=e})();", "explanation": "This code creates a function `e()` that processes a string to add ANSI escape codes for colors, bold, dim, and underlines. \n\nHere are the main functionalities:\n\n1. **String wrapping**: The function breaks long strings into multiple lines, wrapping the string at a specified width.\n2. **Trimming**: It trims excess spaces from the right side of lines.\n3. **Conversion of code points**: It replaces variable-width characters (like emojis) with their Unicode code points.\n4. **Processing of code blocks**: It wraps  \" [] \" blocks with \"[]\" and treats them as a single character.\n5. **Escape codes**: It adds ANSI escape codes to the processed string to apply colors, bold, dim, and underlines.\n6. **Hyperlink support**: It handles links by wrapping them in special escape codes.\n7. **Trimming spaces in words**: It removes words that have been wrapped to the next line.\n\nThis code seems to be part of a larger package for formatting and wrapping text in a terminal or console, possibly for a command line interface (CLI).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/wrap-ansi/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'compiled/wrap-ansi/index.js' file:\n\nThis file exports a function `e()` that formats and wraps text for terminal or console output, offering features such as string wrapping, trimming, color and style codes, hyperlink support, and smoothing over wrapped words with unnecessary spaces removed."}
{"code": "(()=>{var e={670:e=>{function webpackEmptyContext(e){var t=new Error(\"Cannot find module '\"+e+\"'\");t.code=\"MODULE_NOT_FOUND\";throw t}webpackEmptyContext.keys=()=>[];webpackEmptyContext.resolve=webpackEmptyContext;webpackEmptyContext.id=670;e.exports=webpackEmptyContext},147:e=>{\"use strict\";e.exports=require(\"fs\")},17:e=>{\"use strict\";e.exports=require(\"path\")},837:e=>{\"use strict\";e.exports=require(\"util\")},970:(e,t,s)=>{\"use strict\";var n=s(837);var r=s(147);var a=s(17);function camelCase(e){const t=e!==e.toLowerCase()&&e!==e.toUpperCase();if(!t){e=e.toLowerCase()}if(e.indexOf(\"-\")===-1&&e.indexOf(\"_\")===-1){return e}else{let t=\"\";let s=false;const n=e.match(/^-+/);for(let r=n?n[0].length:0;r<e.length;r++){let n=e.charAt(r);if(s){s=false;n=n.toUpperCase()}if(r!==0&&(n===\"-\"||n===\"_\")){s=true}else if(n!==\"-\"&&n!==\"_\"){t+=n}}return t}}function decamelize(e,t){const s=e.toLowerCase();t=t||\"-\";let n=\"\";for(let r=0;r<e.length;r++){const a=s.charAt(r);const i=e.charAt(r);if(a!==i&&r>0){n+=`${t}${s.charAt(r)}`}else{n+=i}}return n}function looksLikeNumber(e){if(e===null||e===undefined)return false;if(typeof e===\"number\")return true;if(/^0x[0-9a-f]+$/i.test(e))return true;if(/^0[^.]/.test(e))return false;return/^[-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(e)}function tokenizeArgString(e){if(Array.isArray(e)){return e.map((e=>typeof e!==\"string\"?e+\"\":e))}e=e.trim();let t=0;let s=null;let n=null;let r=null;const a=[];for(let i=0;i<e.length;i++){s=n;n=e.charAt(i);if(n===\" \"&&!r){if(!(s===\" \")){t++}continue}if(n===r){r=null}else if((n===\"'\"||n==='\"')&&!r){r=n}if(!a[t])a[t]=\"\";a[t]+=n}return a}var i;(function(e){e[\"BOOLEAN\"]=\"boolean\";e[\"STRING\"]=\"string\";e[\"NUMBER\"]=\"number\";e[\"ARRAY\"]=\"array\"})(i||(i={}));let o;class YargsParser{constructor(e){o=e}parse(e,t){const s=Object.assign({alias:undefined,array:undefined,boolean:undefined,config:undefined,configObjects:undefined,configuration:undefined,coerce:undefined,count:undefined,default:undefined,envPrefix:undefined,narg:undefined,normalize:undefined,string:undefined,number:undefined,__:undefined,key:undefined},t);const n=tokenizeArgString(e);const r=combineAliases(Object.assign(Object.create(null),s.alias));const a=Object.assign({\"boolean-negation\":true,\"camel-case-expansion\":true,\"combine-arrays\":false,\"dot-notation\":true,\"duplicate-arguments-array\":true,\"flatten-duplicate-arrays\":true,\"greedy-arrays\":true,\"halt-at-non-option\":false,\"nargs-eats-options\":false,\"negation-prefix\":\"no-\",\"parse-numbers\":true,\"parse-positional-numbers\":true,\"populate--\":false,\"set-placeholder-key\":false,\"short-option-groups\":true,\"strip-aliased\":false,\"strip-dashed\":false,\"unknown-options-as-args\":false},s.configuration);const c=Object.assign(Object.create(null),s.default);const l=s.configObjects||[];const f=s.envPrefix;const u=a[\"populate--\"];const p=u?\"--\":\"_\";const h=Object.create(null);const A=Object.create(null);const d=s.__||o.format;const g={aliases:Object.create(null),arrays:Object.create(null),bools:Object.create(null),strings:Object.create(null),numbers:Object.create(null),counts:Object.create(null),normalize:Object.create(null),configs:Object.create(null),nargs:Object.create(null),coercions:Object.create(null),keys:[]};const y=/^-([0-9]+(\\.[0-9]+)?|\\.[0-9]+)$/;const b=new RegExp(\"^--\"+a[\"negation-prefix\"]+\"(.+)\");[].concat(s.array||[]).filter(Boolean).forEach((function(e){const t=typeof e===\"object\"?e.key:e;const s=Object.keys(e).map((function(e){const t={boolean:\"bools\",string:\"strings\",number:\"numbers\"};return t[e]})).filter(Boolean).pop();if(s){g[s][t]=true}g.arrays[t]=true;g.keys.push(t)}));[].concat(s.boolean||[]).filter(Boolean).forEach((function(e){g.bools[e]=true;g.keys.push(e)}));[].concat(s.string||[]).filter(Boolean).forEach((function(e){g.strings[e]=true;g.keys.push(e)}));[].concat(s.number||[]).filter(Boolean).forEach((function(e){g.numbers[e]=true;g.keys.push(e)}));[].concat(s.count||[]).filter(Boolean).forEach((function(e){g.counts[e]=true;g.keys.push(e)}));[].concat(s.normalize||[]).filter(Boolean).forEach((function(e){g.normalize[e]=true;g.keys.push(e)}));if(typeof s.narg===\"object\"){Object.entries(s.narg).forEach((([e,t])=>{if(typeof t===\"number\"){g.nargs[e]=t;g.keys.push(e)}}))}if(typeof s.coerce===\"object\"){Object.entries(s.coerce).forEach((([e,t])=>{if(typeof t===\"function\"){g.coercions[e]=t;g.keys.push(e)}}))}if(typeof s.config!==\"undefined\"){if(Array.isArray(s.config)||typeof s.config===\"string\"){[].concat(s.config).filter(Boolean).forEach((function(e){g.configs[e]=true}))}else if(typeof s.config===\"object\"){Object.entries(s.config).forEach((([e,t])=>{if(typeof t===\"boolean\"||typeof t===\"function\"){g.configs[e]=t}}))}}extendAliases(s.key,r,s.default,g.arrays);Object.keys(c).forEach((function(e){(g.aliases[e]||[]).forEach((function(t){c[t]=c[e]}))}));let m=null;checkConfiguration();let k=[];const O=Object.assign(Object.create(null),{_:[]});const j={};for(let e=0;e<n.length;e++){const t=n[e];const s=t.replace(/^-{3,}/,\"---\");let r;let i;let o;let c;let l;let f;if(t!==\"--\"&&isUnknownOptionAsArg(t)){pushPositional(t)}else if(s.match(/---+(=|$)/)){pushPositional(t);continue}else if(t.match(/^--.+=/)||!a[\"short-option-groups\"]&&t.match(/^-.+=/)){c=t.match(/^--?([^=]+)=([\\s\\S]*)$/);if(c!==null&&Array.isArray(c)&&c.length>=3){if(checkAllAliases(c[1],g.arrays)){e=eatArray(e,c[1],n,c[2])}else if(checkAllAliases(c[1],g.nargs)!==false){e=eatNargs(e,c[1],n,c[2])}else{setArg(c[1],c[2])}}}else if(t.match(b)&&a[\"boolean-negation\"]){c=t.match(b);if(c!==null&&Array.isArray(c)&&c.length>=2){i=c[1];setArg(i,checkAllAliases(i,g.arrays)?[false]:false)}}else if(t.match(/^--.+/)||!a[\"short-option-groups\"]&&t.match(/^-[^-]+/)){c=t.match(/^--?(.+)/);if(c!==null&&Array.isArray(c)&&c.length>=2){i=c[1];if(checkAllAliases(i,g.arrays)){e=eatArray(e,i,n)}else if(checkAllAliases(i,g.nargs)!==false){e=eatNargs(e,i,n)}else{l=n[e+1];if(l!==undefined&&(!l.match(/^-/)||l.match(y))&&!checkAllAliases(i,g.bools)&&!checkAllAliases(i,g.counts)){setArg(i,l);e++}else if(/^(true|false)$/.test(l)){setArg(i,l);e++}else{setArg(i,defaultValue(i))}}}}else if(t.match(/^-.\\..+=/)){c=t.match(/^-([^=]+)=([\\s\\S]*)$/);if(c!==null&&Array.isArray(c)&&c.length>=3){setArg(c[1],c[2])}}else if(t.match(/^-.\\..+/)&&!t.match(y)){l=n[e+1];c=t.match(/^-(.\\..+)/);if(c!==null&&Array.isArray(c)&&c.length>=2){i=c[1];if(l!==undefined&&!l.match(/^-/)&&!checkAllAliases(i,g.bools)&&!checkAllAliases(i,g.counts)){setArg(i,l);e++}else{setArg(i,defaultValue(i))}}}else if(t.match(/^-[^-]+/)&&!t.match(y)){o=t.slice(1,-1).split(\"\");r=false;for(let s=0;s<o.length;s++){l=t.slice(s+2);if(o[s+1]&&o[s+1]===\"=\"){f=t.slice(s+3);i=o[s];if(checkAllAliases(i,g.arrays)){e=eatArray(e,i,n,f)}else if(checkAllAliases(i,g.nargs)!==false){e=eatNargs(e,i,n,f)}else{setArg(i,f)}r=true;break}if(l===\"-\"){setArg(o[s],l);continue}if(/[A-Za-z]/.test(o[s])&&/^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(l)&&checkAllAliases(l,g.bools)===false){setArg(o[s],l);r=true;break}if(o[s+1]&&o[s+1].match(/\\W/)){setArg(o[s],l);r=true;break}else{setArg(o[s],defaultValue(o[s]))}}i=t.slice(-1)[0];if(!r&&i!==\"-\"){if(checkAllAliases(i,g.arrays)){e=eatArray(e,i,n)}else if(checkAllAliases(i,g.nargs)!==false){e=eatNargs(e,i,n)}else{l=n[e+1];if(l!==undefined&&(!/^(-|--)[^-]/.test(l)||l.match(y))&&!checkAllAliases(i,g.bools)&&!checkAllAliases(i,g.counts)){setArg(i,l);e++}else if(/^(true|false)$/.test(l)){setArg(i,l);e++}else{setArg(i,defaultValue(i))}}}}else if(t.match(/^-[0-9]$/)&&t.match(y)&&checkAllAliases(t.slice(1),g.bools)){i=t.slice(1);setArg(i,defaultValue(i))}else if(t===\"--\"){k=n.slice(e+1);break}else if(a[\"halt-at-non-option\"]){k=n.slice(e);break}else{pushPositional(t)}}applyEnvVars(O,true);applyEnvVars(O,false);setConfig(O);setConfigObjects();applyDefaultsAndAliases(O,g.aliases,c,true);applyCoercions(O);if(a[\"set-placeholder-key\"])setPlaceholderKeys(O);Object.keys(g.counts).forEach((function(e){if(!hasKey(O,e.split(\".\")))setArg(e,0)}));if(u&&k.length)O[p]=[];k.forEach((function(e){O[p].push(e)}));if(a[\"camel-case-expansion\"]&&a[\"strip-dashed\"]){Object.keys(O).filter((e=>e!==\"--\"&&e.includes(\"-\"))).forEach((e=>{delete O[e]}))}if(a[\"strip-aliased\"]){[].concat(...Object.keys(r).map((e=>r[e]))).forEach((e=>{if(a[\"camel-case-expansion\"]&&e.includes(\"-\")){delete O[e.split(\".\").map((e=>camelCase(e))).join(\".\")]}delete O[e]}))}function pushPositional(e){const t=maybeCoerceNumber(\"_\",e);if(typeof t===\"string\"||typeof t===\"number\"){O._.push(t)}}function eatNargs(e,t,s,n){let r;let i=checkAllAliases(t,g.nargs);i=typeof i!==\"number\"||isNaN(i)?1:i;if(i===0){if(!isUndefined(n)){m=Error(d(\"Argument unexpected for: %s\",t))}setArg(t,defaultValue(t));return e}let o=isUndefined(n)?0:1;if(a[\"nargs-eats-options\"]){if(s.length-(e+1)+o<i){m=Error(d(\"Not enough arguments following: %s\",t))}o=i}else{for(r=e+1;r<s.length;r++){if(!s[r].match(/^-[^0-9]/)||s[r].match(y)||isUnknownOptionAsArg(s[r]))o++;else break}if(o<i)m=Error(d(\"Not enough arguments following: %s\",t))}let c=Math.min(o,i);if(!isUndefined(n)&&c>0){setArg(t,n);c--}for(r=e+1;r<c+e+1;r++){setArg(t,s[r])}return e+c}function eatArray(e,t,s,n){let r=[];let i=n||s[e+1];const o=checkAllAliases(t,g.nargs);if(checkAllAliases(t,g.bools)&&!/^(true|false)$/.test(i)){r.push(true)}else if(isUndefined(i)||isUndefined(n)&&/^-/.test(i)&&!y.test(i)&&!isUnknownOptionAsArg(i)){if(c[t]!==undefined){const e=c[t];r=Array.isArray(e)?e:[e]}}else{if(!isUndefined(n)){r.push(processValue(t,n))}for(let n=e+1;n<s.length;n++){if(!a[\"greedy-arrays\"]&&r.length>0||o&&typeof o===\"number\"&&r.length>=o)break;i=s[n];if(/^-/.test(i)&&!y.test(i)&&!isUnknownOptionAsArg(i))break;e=n;r.push(processValue(t,i))}}if(typeof o===\"number\"&&(o&&r.length<o||isNaN(o)&&r.length===0)){m=Error(d(\"Not enough arguments following: %s\",t))}setArg(t,r);return e}function setArg(e,t){if(/-/.test(e)&&a[\"camel-case-expansion\"]){const t=e.split(\".\").map((function(e){return camelCase(e)})).join(\".\");addNewAlias(e,t)}const s=processValue(e,t);const n=e.split(\".\");setKey(O,n,s);if(g.aliases[e]){g.aliases[e].forEach((function(e){const t=e.split(\".\");setKey(O,t,s)}))}if(n.length>1&&a[\"dot-notation\"]){(g.aliases[n[0]]||[]).forEach((function(t){let r=t.split(\".\");const a=[].concat(n);a.shift();r=r.concat(a);if(!(g.aliases[e]||[]).includes(r.join(\".\"))){setKey(O,r,s)}}))}if(checkAllAliases(e,g.normalize)&&!checkAllAliases(e,g.arrays)){const s=[e].concat(g.aliases[e]||[]);s.forEach((function(e){Object.defineProperty(j,e,{enumerable:true,get(){return t},set(e){t=typeof e===\"string\"?o.normalize(e):e}})}))}}function addNewAlias(e,t){if(!(g.aliases[e]&&g.aliases[e].length)){g.aliases[e]=[t];h[t]=true}if(!(g.aliases[t]&&g.aliases[t].length)){addNewAlias(t,e)}}function processValue(e,t){if(typeof t===\"string\"&&(t[0]===\"'\"||t[0]==='\"')&&t[t.length-1]===t[0]){t=t.substring(1,t.length-1)}if(checkAllAliases(e,g.bools)||checkAllAliases(e,g.counts)){if(typeof t===\"string\")t=t===\"true\"}let s=Array.isArray(t)?t.map((function(t){return maybeCoerceNumber(e,t)})):maybeCoerceNumber(e,t);if(checkAllAliases(e,g.counts)&&(isUndefined(s)||typeof s===\"boolean\")){s=increment()}if(checkAllAliases(e,g.normalize)&&checkAllAliases(e,g.arrays)){if(Array.isArray(t))s=t.map((e=>o.normalize(e)));else s=o.normalize(t)}return s}function maybeCoerceNumber(e,t){if(!a[\"parse-positional-numbers\"]&&e===\"_\")return t;if(!checkAllAliases(e,g.strings)&&!checkAllAliases(e,g.bools)&&!Array.isArray(t)){const s=looksLikeNumber(t)&&a[\"parse-numbers\"]&&Number.isSafeInteger(Math.floor(parseFloat(`${t}`)));if(s||!isUndefined(t)&&checkAllAliases(e,g.numbers)){t=Number(t)}}return t}function setConfig(e){const t=Object.create(null);applyDefaultsAndAliases(t,g.aliases,c);Object.keys(g.configs).forEach((function(s){const n=e[s]||t[s];if(n){try{let e=null;const t=o.resolve(o.cwd(),n);const r=g.configs[s];if(typeof r===\"function\"){try{e=r(t)}catch(t){e=t}if(e instanceof Error){m=e;return}}else{e=o.require(t)}setConfigObject(e)}catch(t){if(t.name===\"PermissionDenied\")m=t;else if(e[s])m=Error(d(\"Invalid JSON config file: %s\",n))}}}))}function setConfigObject(e,t){Object.keys(e).forEach((function(s){const n=e[s];const r=t?t+\".\"+s:s;if(typeof n===\"object\"&&n!==null&&!Array.isArray(n)&&a[\"dot-notation\"]){setConfigObject(n,r)}else{if(!hasKey(O,r.split(\".\"))||checkAllAliases(r,g.arrays)&&a[\"combine-arrays\"]){setArg(r,n)}}}))}function setConfigObjects(){if(typeof l!==\"undefined\"){l.forEach((function(e){setConfigObject(e)}))}}function applyEnvVars(e,t){if(typeof f===\"undefined\")return;const s=typeof f===\"string\"?f:\"\";const n=o.env();Object.keys(n).forEach((function(r){if(s===\"\"||r.lastIndexOf(s,0)===0){const a=r.split(\"__\").map((function(e,t){if(t===0){e=e.substring(s.length)}return camelCase(e)}));if((t&&g.configs[a.join(\".\")]||!t)&&!hasKey(e,a)){setArg(a.join(\".\"),n[r])}}}))}function applyCoercions(e){let t;const s=new Set;Object.keys(e).forEach((function(n){if(!s.has(n)){t=checkAllAliases(n,g.coercions);if(typeof t===\"function\"){try{const r=maybeCoerceNumber(n,t(e[n]));[].concat(g.aliases[n]||[],n).forEach((t=>{s.add(t);e[t]=r}))}catch(e){m=e}}}}))}function setPlaceholderKeys(e){g.keys.forEach((t=>{if(~t.indexOf(\".\"))return;if(typeof e[t]===\"undefined\")e[t]=undefined}));return e}function applyDefaultsAndAliases(e,t,s,n=false){Object.keys(s).forEach((function(r){if(!hasKey(e,r.split(\".\"))){setKey(e,r.split(\".\"),s[r]);if(n)A[r]=true;(t[r]||[]).forEach((function(t){if(hasKey(e,t.split(\".\")))return;setKey(e,t.split(\".\"),s[r])}))}}))}function hasKey(e,t){let s=e;if(!a[\"dot-notation\"])t=[t.join(\".\")];t.slice(0,-1).forEach((function(e){s=s[e]||{}}));const n=t[t.length-1];if(typeof s!==\"object\")return false;else return n in s}function setKey(e,t,s){let n=e;if(!a[\"dot-notation\"])t=[t.join(\".\")];t.slice(0,-1).forEach((function(e){e=sanitizeKey(e);if(typeof n===\"object\"&&n[e]===undefined){n[e]={}}if(typeof n[e]!==\"object\"||Array.isArray(n[e])){if(Array.isArray(n[e])){n[e].push({})}else{n[e]=[n[e],{}]}n=n[e][n[e].length-1]}else{n=n[e]}}));const r=sanitizeKey(t[t.length-1]);const i=checkAllAliases(t.join(\".\"),g.arrays);const o=Array.isArray(s);let c=a[\"duplicate-arguments-array\"];if(!c&&checkAllAliases(r,g.nargs)){c=true;if(!isUndefined(n[r])&&g.nargs[r]===1||Array.isArray(n[r])&&n[r].length===g.nargs[r]){n[r]=undefined}}if(s===increment()){n[r]=increment(n[r])}else if(Array.isArray(n[r])){if(c&&i&&o){n[r]=a[\"flatten-duplicate-arrays\"]?n[r].concat(s):(Array.isArray(n[r][0])?n[r]:[n[r]]).concat([s])}else if(!c&&Boolean(i)===Boolean(o)){n[r]=s}else{n[r]=n[r].concat([s])}}else if(n[r]===undefined&&i){n[r]=o?s:[s]}else if(c&&!(n[r]===undefined||checkAllAliases(r,g.counts)||checkAllAliases(r,g.bools))){n[r]=[n[r],s]}else{n[r]=s}}function extendAliases(...e){e.forEach((function(e){Object.keys(e||{}).forEach((function(e){if(g.aliases[e])return;g.aliases[e]=[].concat(r[e]||[]);g.aliases[e].concat(e).forEach((function(t){if(/-/.test(t)&&a[\"camel-case-expansion\"]){const s=camelCase(t);if(s!==e&&g.aliases[e].indexOf(s)===-1){g.aliases[e].push(s);h[s]=true}}}));g.aliases[e].concat(e).forEach((function(t){if(t.length>1&&/[A-Z]/.test(t)&&a[\"camel-case-expansion\"]){const s=decamelize(t,\"-\");if(s!==e&&g.aliases[e].indexOf(s)===-1){g.aliases[e].push(s);h[s]=true}}}));g.aliases[e].forEach((function(t){g.aliases[t]=[e].concat(g.aliases[e].filter((function(e){return t!==e})))}))}))}))}function checkAllAliases(e,t){const s=[].concat(g.aliases[e]||[],e);const n=Object.keys(t);const r=s.find((e=>n.includes(e)));return r?t[r]:false}function hasAnyFlag(e){const t=Object.keys(g);const s=[].concat(t.map((e=>g[e])));return s.some((function(t){return Array.isArray(t)?t.includes(e):t[e]}))}function hasFlagsMatching(e,...t){const s=[].concat(...t);return s.some((function(t){const s=e.match(t);return s&&hasAnyFlag(s[1])}))}function hasAllShortFlags(e){if(e.match(y)||!e.match(/^-[^-]+/)){return false}let t=true;let s;const n=e.slice(1).split(\"\");for(let r=0;r<n.length;r++){s=e.slice(r+2);if(!hasAnyFlag(n[r])){t=false;break}if(n[r+1]&&n[r+1]===\"=\"||s===\"-\"||/[A-Za-z]/.test(n[r])&&/^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(s)||n[r+1]&&n[r+1].match(/\\W/)){break}}return t}function isUnknownOptionAsArg(e){return a[\"unknown-options-as-args\"]&&isUnknownOption(e)}function isUnknownOption(e){e=e.replace(/^-{3,}/,\"--\");if(e.match(y)){return false}if(hasAllShortFlags(e)){return false}const t=/^-+([^=]+?)=[\\s\\S]*$/;const s=/^-+([^=]+?)$/;const n=/^-+([^=]+?)-$/;const r=/^-+([^=]+?\\d+)$/;const a=/^-+([^=]+?)\\W+.*$/;return!hasFlagsMatching(e,t,b,s,n,r,a)}function defaultValue(e){if(!checkAllAliases(e,g.bools)&&!checkAllAliases(e,g.counts)&&`${e}`in c){return c[e]}else{return defaultForType(guessType(e))}}function defaultForType(e){const t={[i.BOOLEAN]:true,[i.STRING]:\"\",[i.NUMBER]:undefined,[i.ARRAY]:[]};return t[e]}function guessType(e){let t=i.BOOLEAN;if(checkAllAliases(e,g.strings))t=i.STRING;else if(checkAllAliases(e,g.numbers))t=i.NUMBER;else if(checkAllAliases(e,g.bools))t=i.BOOLEAN;else if(checkAllAliases(e,g.arrays))t=i.ARRAY;return t}function isUndefined(e){return e===undefined}function checkConfiguration(){Object.keys(g.counts).find((e=>{if(checkAllAliases(e,g.arrays)){m=Error(d(\"Invalid configuration: %s, opts.count excludes opts.array.\",e));return true}else if(checkAllAliases(e,g.nargs)){m=Error(d(\"Invalid configuration: %s, opts.count excludes opts.narg.\",e));return true}return false}))}return{aliases:Object.assign({},g.aliases),argv:Object.assign(j,O),configuration:a,defaulted:Object.assign({},A),error:m,newAliases:Object.assign({},h)}}}function combineAliases(e){const t=[];const s=Object.create(null);let n=true;Object.keys(e).forEach((function(s){t.push([].concat(e[s],s))}));while(n){n=false;for(let e=0;e<t.length;e++){for(let s=e+1;s<t.length;s++){const r=t[e].filter((function(e){return t[s].indexOf(e)!==-1}));if(r.length){t[e]=t[e].concat(t[s]);t.splice(s,1);n=true;break}}}}t.forEach((function(e){e=e.filter((function(e,t,s){return s.indexOf(e)===t}));const t=e.pop();if(t!==undefined&&typeof t===\"string\"){s[t]=e}}));return s}function increment(e){return e!==undefined?e+1:1}function sanitizeKey(e){if(e===\"__proto__\")return\"___proto___\";return e}const c=process&&process.env&&process.env.YARGS_MIN_NODE_VERSION?Number(process.env.YARGS_MIN_NODE_VERSION):10;if(process&&process.version){const e=Number(process.version.match(/v([^.]+)/)[1]);if(e<c){throw Error(`yargs parser supports a minimum Node.js version of ${c}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`)}}const l=process?process.env:{};const f=new YargsParser({cwd:process.cwd,env:()=>l,format:n.format,normalize:a.normalize,resolve:a.resolve,require:e=>{if(true){return s(670)(e)}else{}}});const u=function Parser(e,t){const s=f.parse(e.slice(),t);return s.argv};u.detailed=function(e,t){return f.parse(e.slice(),t)};u.camelCase=camelCase;u.decamelize=decamelize;u.looksLikeNumber=looksLikeNumber;e.exports=u}};var t={};function __nccwpck_require__(s){var n=t[s];if(n!==undefined){return n.exports}var r=t[s]={exports:{}};var a=true;try{e[s](r,r.exports,__nccwpck_require__);a=false}finally{if(a)delete t[s]}return r.exports}(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var s=__nccwpck_require__(970);module.exports=s})();", "explanation": "**Summary:** \n\nThe given block is a JavaScript module that exports a function parser from the yargs-parser library. \n\n**Functionality:**\n\nThis module exports a function called Parser, which parses command-line arguments and options. It is designed to work with the yargs library, which is a powerful and flexible way to handle command-line arguments and options.\n\n**Key Features:**\n\n1. **Command-Line Argument Parsing**: It parses command-line arguments and options.\n2. **Option Handling**: It handles options and their values.\n3. **Default Values**: It allows default values for options.\n4. **Alias Expansion**: It expands aliases of options.\n5. **Environment Variable Handling**: It applies environment variables to options.\n6. **Config File Handling**: It parses configuration files.\n\n**Output:**\n\nThe Parser function returns an object with the following properties:\n\n1. `aliases`: An object containing all the aliases.\n2. `argv`: An object containing the parsed command-line arguments.\n3. `configuration`: An object containing the configuration of the parser.\n4. `defaulted`: An object containing the default values of the options.\n5. `error`: An error message if there is an issue parsing the command-line arguments.\n6. `newAliases`: An object containing newly created aliases.\n\nOverall, this module provides a powerful and flexible way to parse command-line arguments and options.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "compiled/yargs-parser/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'compiled/yargs-parser/index.js':\n\n**Summary:**\n\nThis module exports the `Parser` function, a command-line argument parser from the yargs-parser library, which works seamlessly with yargs to handle options and arguments. It provides robust functionality for parsing command-line inputs, handling options, and applying default values, environment variables, and configuration files.\n\n**Key Features:**\n- Command-Line Argument Parsing\n- Option Handling with Default Values\n- Alias Expansion\n- Environment Variable Handling\n- Config File Handling"}
{"code": "import os from 'os';\nimport { Analytics as Segment } from '@segment/analytics-node';\nimport { loadConfig } from './config';\nimport { addShutdownTask } from './utils/shutdown';\n\nexport interface Analytics {\n  logEvent(event: string, data: any): void;\n  identifyUser(userId: string): void;\n  prepareForShutdown(): Promise<void>;\n}\n\nexport class SegmentAnalytics implements Analytics {\n  private segment: Segment;\n\n  constructor() {\n    this.segment = new Segment({ writeKey: 'g9GIEwAL2HOQHq6PXg9gHzSjEBuAuRLq' });\n    addShutdownTask(async (reason) => {\n      this.logEvent('cli-tool-shutdown', reason);\n      await this.prepareForShutdown();\n    });\n  }\n\n  logEvent(event: string, data: any): void {\n    const config = loadConfig();\n    if (config?.shouldTrackUsageData ?? false) {\n      this.segment.track({ anonymousId: config?.id ?? '', event, properties: data });\n    }\n  }\n\n  identifyUser(userId: string) {\n    const config = loadConfig();\n    if (config?.shouldTrackUsageData ?? false) {", "explanation": "**Summary:**\nThis block implements a class-based analytics system using the Segment analytics platform. It provides methods for logging events, identifying users, and handling shutdown events. The system can be configured to track usage data based on the application's settings.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/analytics.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'core/analytics.ts' file:\n\nThe `core/analytics.ts` file implements a singleton `SharedAnalytics` class that integrates with Segment Analytics for event tracking and user identification. It enables logging of user data and shutdown event handling, providing a centralized analytics system for the application."}
{"code": "      this.segment.identify({ userId, traits: { os: os.platform } });\n    }\n  }\n\n  async prepareForShutdown(): Promise<void> {\n    await this.segment.closeAndFlush();\n  }\n}\n\nexport const SharedAnalytics = new SegmentAnalytics();\n", "explanation": "**Summary:**\n\nThis code defines a `SharedAnalytics` class that integrates with Segment Analytics, a customer data platform. The class has two methods:\n\n1. `identify`: collects user data (os platform) for analytics tracking.\n2. `prepareForShutdown`: closes and flushes analytics data before shutting down.\n\nThe `SharedAnalytics` instance is created as a singleton export, enabling sharing of analytics functionality across the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/analytics.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'core/analytics.ts' file:\n\nThe `core/analytics.ts` file implements a singleton `SharedAnalytics` class that integrates with Segment Analytics for event tracking and user identification. It enables logging of user data and shutdown event handling, providing a centralized analytics system for the application."}
{"code": "import fs from 'fs';\nimport chalk from 'chalk';\nimport got from 'got';\nimport { createApp } from './create-app';\nimport { printHelp } from './help-text';\nimport { resolveToRoot } from './utils/path-helpers';\nimport { CreateMagicAppError, CreateMagicAppErrorCode } from './utils/errors-warnings';\nimport { makeInputsLowercase, parseFlags } from './flags';\nimport { globalOptions } from './global-options';\nimport { shutdown, useGracefulShutdown } from './utils/shutdown';\nimport { SharedAnalytics } from './analytics';\nimport { modifyUsageConsent, initializeUsageConfigIfneeded } from './utils/usagePermissions';\nimport { loadConfig } from './config';\nimport suppressWarnings from './utils/suppress-experimental-warnings';\n\nexport const ConsoleMessages = {\n  bootstrapSuccess: (projectName: string, destination: string) => {\n    console.log(); // Aesthetics!\n\n    const magic = chalk`{rgb(92,101,246) M}{rgb(127,103,246) ag}{rgb(168,140,248) ic}`;\n\n    const msg = [\n      '\u2728\\n',", "explanation": "This block appears to be a JavaScript module containing utility functions and exports for a command-line application. \n\nIn summary, it:\n\n- Exports various functions for handling application functionality and errors.\n- Defines a set of constant console messages (such as `bootstrapSuccess`) with placeholders for dynamic content.\n- Utilizes external libraries like `fs`, `chalk`, and `got` for file system operations, colorized console output, and HTTP requests, respectively.\n- Provides options to manage and handle application flags, global options, shutdown, analytics, usage permissions, and configuration loading.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/cli.ts", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/cli.ts**\n\nThis JavaScript module contains utility functions and exports for a command-line application, leveraging external libraries like `fs`, `chalk`, and `got`. Its main functionalities include:\n\n- Managing application flags and global options.\n- Configuring usage, analytics, and shutdown handling.\n- Creating a Magic App through initialization and error handling.\n\n **Core Functionality:**\n\n1. Handles flags for application functionality and error handling.\n2. Creates a new Magic App using provided project settings.\n3. Initializes analytics tracking for the user and manages usage data consent.\n4. Retrieves and prints the Make Magic version (local and online) and offers update instructions if necessary.\n\nThis module acts as the entry point for a CLI tool that creates a Magic App, providing essential logging and shutdown functionality."}
{"code": "      chalk`{bold {green Success!} You've bootstrapped a ${magic} app with {rgb(0,255,255) ${projectName}}!}`,\n      chalk`Created {bold.rgb(0,255,255) ${projectName}} at {bold.rgb(0,255,255) ${destination}}`,\n    ];\n\n    return msg.join('\\n');\n  },\n\n  postRenderCommands: (installCmd: string | undefined, startCmd: string | undefined, projectName: string) => {\n    console.log(); // Aesthetics!\n\n    const msg = [\n      (installCmd || startCmd) && chalk`Inside your app directory, you can run several commands:\\n`,\n\n      installCmd && chalk`  {rgb(0,255,255) ${installCmd}}`,\n      installCmd && chalk`    Install dependencies.\\n`,\n\n      startCmd && chalk`  {rgb(0,255,255) ${startCmd}}`,\n      startCmd && chalk`    Starts the app with a local development server.\\n`,\n\n      startCmd && chalk`Type the following to restart your newly-created app:\\n`,\n      startCmd && chalk`  {rgb(0,255,255) cd} ${projectName}`,\n      startCmd && chalk`  {rgb(0,255,255) ${startCmd}}`,\n    ].filter(Boolean);\n", "explanation": "**Functionality Summary:**\n\nThis block generates a multi-line output message containing installation and startup instructions for a newly created application. It uses the `chalk` library for colorful text formatting. The message includes information on how to run the application, install dependencies, and restart the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/cli.ts", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/cli.ts**\n\nThis JavaScript module contains utility functions and exports for a command-line application, leveraging external libraries like `fs`, `chalk`, and `got`. Its main functionalities include:\n\n- Managing application flags and global options.\n- Configuring usage, analytics, and shutdown handling.\n- Creating a Magic App through initialization and error handling.\n\n **Core Functionality:**\n\n1. Handles flags for application functionality and error handling.\n2. Creates a new Magic App using provided project settings.\n3. Initializes analytics tracking for the user and manages usage data consent.\n4. Retrieves and prints the Make Magic version (local and online) and offers update instructions if necessary.\n\nThis module acts as the entry point for a CLI tool that creates a Magic App, providing essential logging and shutdown functionality."}
{"code": "    return msg.join('\\n');\n  },\n\n  gitHubIssuesLink: () => {\n    const msg = chalk`For feedback/questions/issues, please use {rgb(0,255,255) https://github.com/magiclabs/create-magic-app/issues/new/choose}`;\n    return msg;\n  },\n};\n\nasync function sayHello() {\n  console.log(chalk`\\n\n {rgb(92,101,246) \u2588\u2580\u2580 \u2588}{rgb(127,103,246) \u2580\u2588 \u2588\u2580\u2580} {rgb(133,139,247) \u2584\u2580\u2588 \u2580\u2588\u2580} {rgb(168,140,248) \u2588\u2580\u2580}\n {rgb(92,101,246) \u2588\u2584\u2584 \u2588}{rgb(127,103,246) \u2580\u2584 \u2588\u2588\u2584} {rgb(133,139,247) \u2588\u2580\u2588  \u2588 } {rgb(168,140,248) \u2588\u2588\u2584}\n\n {rgb(92,101,246) \u2588\u2580\u2584\u2580\u2588} {rgb(127,103,246) \u2584\u2580\u2588 \u2588\u2580}{rgb(133,139,247) \u2580 \u2588 \u2588\u2580\u2580}\n {rgb(92,101,246) \u2588 \u2580 \u2588} {rgb(127,103,246) \u2588\u2580\u2588 \u2588\u2584}{rgb(133,139,247) \u2588 \u2588 \u2588\u2584\u2584}\n\n {rgb(92,101,246) \u2584\u2580\u2588 \u2588}{rgb(127,103,246) \u2580\u2588 \u2588\u2580\u2588}\n {rgb(92,101,246) \u2588\u2580\u2588 \u2588}{rgb(127,103,246) \u2580\u2580 \u2588\u2580\u2580}\n`);\n\n  const currentVersion = getMakeMagicVersion();\n  const latestVersion = await getLatestMakeMagicVersion();\n  if (currentVersion !== latestVersion) {\n    console.log(", "explanation": "The provided block is a JavaScript function that:\n\n- Returns a formatted GitHub issues link.\n- Prints a colorful \"Hello\" message to the console.\n- Checks if the locally installed Make Magic version is up-to-date with the latest version available online.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/cli.ts", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/cli.ts**\n\nThis JavaScript module contains utility functions and exports for a command-line application, leveraging external libraries like `fs`, `chalk`, and `got`. Its main functionalities include:\n\n- Managing application flags and global options.\n- Configuring usage, analytics, and shutdown handling.\n- Creating a Magic App through initialization and error handling.\n\n **Core Functionality:**\n\n1. Handles flags for application functionality and error handling.\n2. Creates a new Magic App using provided project settings.\n3. Initializes analytics tracking for the user and manages usage data consent.\n4. Retrieves and prints the Make Magic version (local and online) and offers update instructions if necessary.\n\nThis module acts as the entry point for a CLI tool that creates a Magic App, providing essential logging and shutdown functionality."}
{"code": "      chalk`{rgb(92,101,246) A new version of {bold make-magic} is available! {rgb(0,255,255) ${currentVersion}} \u2192 {rgb(0,255,255) ${latestVersion}}}`,\n    );\n    console.log(chalk`{rgb(92,101,246) Run {rgb(0,255,255) npm i -g make-magic} to update!}\\n\\n`);\n  } else {\n    console.log(chalk`\\n {dim v${getMakeMagicVersion()}}\\n\\n`);\n  }\n\n  console.log(ConsoleMessages.gitHubIssuesLink());\n  console.log();\n}\n\n(async () => {\n  // Ensures that ExperimentalWarning caused by fetch is suppressed\n  suppressWarnings.fetch();\n\n  useGracefulShutdown();\n\n  const parsedFlags = await parseFlags(globalOptions);\n  const { version, help, projectName, shareUsageData } = parsedFlags;\n  let { template, network, branch } = parsedFlags;\n\n  template = makeInputsLowercase(template);\n  network = makeInputsLowercase(network);\n  branch = makeInputsLowercase(branch);\n\n  const collectUsageData = await initializeUsageConfigIfneeded();\n  const config = loadConfig();\n\n  if (version) {\n    console.log(getMakeMagicVersion());\n    shutdown(0);\n  }\n", "explanation": "**Summary:** \n\nThis block of code checks the current version of a tool called `make-magic` and provides instructions on how to update it. \n\n- If a new version is available, it prints a message with the update instructions.\n- If not, it prints the current version.\n- It also includes links to GitHub issues.\n- Additionally, it parses command-line flags, checks for version updates, and handles event handling for graceful shutdown.\n- The code is part of an asynchronous function. \n\n**Purpose:** \nTo print version update messages and handle initial setup.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/cli.ts", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/cli.ts**\n\nThis JavaScript module contains utility functions and exports for a command-line application, leveraging external libraries like `fs`, `chalk`, and `got`. Its main functionalities include:\n\n- Managing application flags and global options.\n- Configuring usage, analytics, and shutdown handling.\n- Creating a Magic App through initialization and error handling.\n\n **Core Functionality:**\n\n1. Handles flags for application functionality and error handling.\n2. Creates a new Magic App using provided project settings.\n3. Initializes analytics tracking for the user and manages usage data consent.\n4. Retrieves and prints the Make Magic version (local and online) and offers update instructions if necessary.\n\nThis module acts as the entry point for a CLI tool that creates a Magic App, providing essential logging and shutdown functionality."}
{"code": "  if (help) {\n    await sayHello();\n    printHelp(globalOptions, template);\n    shutdown(0);\n  }\n\n  if (shareUsageData !== undefined) {\n    const consent = await modifyUsageConsent(shareUsageData);\n    if (consent) {\n      console.log('Thanks for helping us improve the developer experience by sharing anonymous usage data!');\n    } else {\n      console.log('You are now opted out of sharing anonymous usage data.');\n    }\n    shutdown(0);\n  }\n\n  await sayHello();\n\n  if (collectUsageData && config?.id) {\n    SharedAnalytics.identifyUser(config.id);\n  }\n\n  // Run the scaffold...\n  await createApp({ projectName, template, branch, network });\n})().catch((err) => {\n  SharedAnalytics.logEvent('cli-tool-error', { error: err });\n  if (err instanceof CreateMagicAppError && err.code === CreateMagicAppErrorCode.USER_CANCELED_PROMPT) {\n    // Skip logging errors about users canceling input, just exit!\n    shutdown(1);\n  }\n\n  if (err instanceof CreateMagicAppError) {\n    console.error(`\\n${err.message}`);", "explanation": "**Purpose and Functionality:**\n\nThis block appears to be the entry point for a CLI tool that creates a Magic App. \n\n**Main Functionality:**\n\n1. Handles \"help\" option and shuts down the process.\n2. Determines if user wants to share anonymous usage data and updates their preference accordingly.\n3. Initializes analytics tracking for the user.\n4. Creates a new Magic App using the provided project name, template, and other settings.\n5. Catches any errors that occur during the creation process, logs the error, and exits with an appropriate status code.\n\n**Key Components:**\n\n- \"sayHello\"\n- \"printHelp\"\n- \"shutdown\"\n- \"modifyUsageConsent\"\n- \"SharedAnalytics\"\n- \"createApp\"\n- \"createMagicAppError\" (custom error class)", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/cli.ts", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/cli.ts**\n\nThis JavaScript module contains utility functions and exports for a command-line application, leveraging external libraries like `fs`, `chalk`, and `got`. Its main functionalities include:\n\n- Managing application flags and global options.\n- Configuring usage, analytics, and shutdown handling.\n- Creating a Magic App through initialization and error handling.\n\n **Core Functionality:**\n\n1. Handles flags for application functionality and error handling.\n2. Creates a new Magic App using provided project settings.\n3. Initializes analytics tracking for the user and manages usage data consent.\n4. Retrieves and prints the Make Magic version (local and online) and offers update instructions if necessary.\n\nThis module acts as the entry point for a CLI tool that creates a Magic App, providing essential logging and shutdown functionality."}
{"code": "    console.error(chalk`\\nSee {bold --help} for information about proper options usage.`);\n    shutdown(1);\n  }\n\n  console.error(err);\n  shutdown(1);\n});\n\nfunction getMakeMagicVersion() {\n  return JSON.parse(fs.readFileSync(resolveToRoot('package.json')).toString('utf8')).version;\n}\n\nasync function getLatestMakeMagicVersion() {\n  const latest = await got.get('https://registry.npmjs.org/make-magic/latest');\n\n  return JSON.parse(latest.body).version;\n}\n", "explanation": "This block appears to be written in JavaScript and seems to be part of a Node.js program. Here's a concise summary of its purpose and functionality:\n\n**Purpose:** \n- Handle error cases\n- Retrieve Make Magic version from local package.json\n- Retrieve latest Make Magic version from npm registry\n\n**Functionality:**\n\n1. Prints an error message (includes usage instructions for --help option) and exits the program with a non-zero status code (1).\n2. Prints any error that occurs and exits the program with a non-zero status code (1).\n3. Retrieves the current Make Magic version from the local package.json file.\n4. Retrieves the latest Make Magic version from the npm registry (using the got library).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/cli.ts", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/cli.ts**\n\nThis JavaScript module contains utility functions and exports for a command-line application, leveraging external libraries like `fs`, `chalk`, and `got`. Its main functionalities include:\n\n- Managing application flags and global options.\n- Configuring usage, analytics, and shutdown handling.\n- Creating a Magic App through initialization and error handling.\n\n **Core Functionality:**\n\n1. Handles flags for application functionality and error handling.\n2. Creates a new Magic App using provided project settings.\n3. Initializes analytics tracking for the user and manages usage data consent.\n4. Retrieves and prints the Make Magic version (local and online) and offers update instructions if necessary.\n\nThis module acts as the entry point for a CLI tool that creates a Magic App, providing essential logging and shutdown functionality."}
{"code": "import path from 'path';\nimport os from 'os';\nimport fs from 'fs';\n\n// Relative to `/dist`, so we are actually walking up an additional directory.\nexport const REPO_ROOT = path.resolve(__dirname, '../../');\n\nexport const GITHUB_BASE_URL = 'https://github.com';\nexport const DEFAULT_CREATE_MAGIC_APP_REPO = 'magiclabs/create-magic-app';\nexport const BINARY = 'make-magic';\n\nexport interface CliConfig {\n  shouldTrackUsageData: boolean;\n  id: string;\n}\n\nlet configCache: Partial<CliConfig> | undefined;\n\nexport const saveConfig = (config: Partial<CliConfig>) => {\n  try {\n    configCache = config;\n    const homedir = os.homedir();\n    const configDir = path.resolve(homedir, '.make-magic');\n    if (!fs.existsSync(configDir)) {\n      fs.mkdirSync(configDir);\n    }\n    const configUrl = path.resolve(homedir, '.make-magic/config');\n    const configString = JSON.stringify(config);\n    fs.writeFileSync(configUrl, configString);\n  } catch (err) {}\n};\n\nexport const loadConfig = (): Partial<CliConfig> | undefined => {\n  try {", "explanation": "**Summary of Block Functionality**\n\nThis block exports constants and functions related to configuration and settings for a command-line interface (CLI). It includes:\n\n- Constants defining repository roots, GitHub base URL, and binary name.\n- An interface for CLI configuration, which includes 'shouldTrackUsageData' and 'id' properties.\n- A cache for configuration data.\n- Functions to save and load the configuration, persisting data to a local JSON file.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/config.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/config.ts' file:\n\nThis file exports CLI-related configuration constants and functions for managing config data stored in a local JSON file at '~/.make-magic/config'. It includes an interface for CLI configuration, a cache for data, and methods for saving and loading the configuration."}
{"code": "    if (configCache) return configCache;\n\n    const homedir = os.homedir();\n    const configUrl = path.resolve(homedir, '.make-magic/config');\n    const configString = fs.readFileSync(configUrl, 'utf8');\n    const config = JSON.parse(configString);\n    configCache = config;\n    return config;\n  } catch (err) {\n    return undefined;\n  }\n};\n", "explanation": "This block of code:\n\n1. Checks if a cached configuration is available (`configCache`).\n2. If not, it reads the configuration from a file at `~/.make-magic/config`.\n3. Parses the file contents as JSON into a configuration object.\n4. Caches the newly loaded configuration for future use.\n5. Returns the configuration object or `undefined` if an error occurs during this process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/config.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/config.ts' file:\n\nThis file exports CLI-related configuration constants and functions for managing config data stored in a local JSON file at '~/.make-magic/config'. It includes an interface for CLI configuration, a cache for data, and methods for saving and loading the configuration."}
{"code": "/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\n/* eslint-disable no-param-reassign */\n\nimport fs from 'fs';\nimport { URL } from 'url';\nimport path from 'path';\nimport ora, { Ora } from 'ora';\nimport prettyTime from 'pretty-time';\nimport execa from 'execa';\nimport chalk from 'chalk';\nimport { BlockchainNetworkPrompt } from 'scaffolds/prompts';\nimport { downloadAndExtractRepo, getRepoInfo } from './utils/repo';\nimport { makeDir } from './utils/make-dir';\nimport { DEFAULT_CREATE_MAGIC_APP_REPO, GITHUB_BASE_URL } from './config';\nimport { getAbsoluteTemplatePath, getRelativeTemplatePath, resolveToDist, resolveToRoot } from './utils/path-helpers';\nimport { createProjectDirIfDoesntExists, getScaffoldDefinition } from './utils/scaffold-helpers';\nimport { printWarning } from './utils/errors-warnings';\nimport { parseFlags } from './flags';\nimport { addShutdownTask } from './utils/shutdown';", "explanation": "**Summary**\n\nThis block imports and prepares various modules and functions for use in a Node.js application. It includes:\n\n- Importing required libraries and utilities (e.g., `fs`, `ora`, `chalk`)\n- Defining or requiring custom functions (e.g., `getRepoInfo`, `makeDir`)\n- Loading configuration values (e.g., `DEFAULT_CREATE_MAGIC_APP_REPO`, `GITHUB_BASE_URL`)\n- Preparing paths and directories (e.g., `getAbsoluteTemplatePath`, `createProjectDirIfDoesntExists`)\n- Initializing shutdown tasks (e.g., `addShutdownTask`)\n\n**Functionality**\n\nThe purpose of this block is to set up the application's environment and import necessary modules and functions for use in the rest of the code. It does not perform any significant actions on its own, but rather prepares the application for execution.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/create-app.tsx", "chunk_number": 1, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/create-app.tsx' file:\n\nThis file sets up a Magical repository project by scaffolding and setup process, which includes:\n\n1. Initializing the application environment and importing necessary modules.\n2. Generating and running a project scaffold based on user configuration.\n3. Downloading and extracting a template, and preparing the project directory.\n4. Templating and rendering the generated scaffold to a local project directory.\n5. Invoking post-render shell commands, such as installation and startup instructions."}
{"code": "import { SharedAnalytics } from './analytics';\nimport { buildTemplate, mapTemplateToFlags, mapTemplateToScaffold } from './utils/templateMappings';\nimport { Timer, createTimer } from './utils/timer';\nimport BaseScaffold from './types/BaseScaffold';\nimport { renderScaffold } from './utils/renderScaffold';\nimport { ConsoleMessages } from './cli';\n\nexport interface CreateMagicAppData extends BlockchainNetworkPrompt.Data {\n  /**\n   * The `make-magic` project branch to source templates from.\n   */\n  branch: string;\n\n  /**\n   * The project name maps to a base directory\n   * created to wrap the generated code.\n   */\n  projectName: string;\n\n  /**\n   * The base template to use for scaffolding your Magic-enabled application.\n   */\n  template: string;\n}\n\nexport interface CreateMagicAppConfig extends Partial<CreateMagicAppData> {\n  /**\n   * Arbitrary data to passthrough to the template being scaffolded.\n   * This data will be made available for any template-specific variables.\n   */\n  data?: {};\n}\n\n/**", "explanation": "**Block Summary:**\n\nThis block imports utility functions and types, and defines interfaces for creating a Magic app. It exports two interfaces: `CreateMagicAppData` and `CreateMagicAppConfig`, used to configure the app creation process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/create-app.tsx", "chunk_number": 2, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/create-app.tsx' file:\n\nThis file sets up a Magical repository project by scaffolding and setup process, which includes:\n\n1. Initializing the application environment and importing necessary modules.\n2. Generating and running a project scaffold based on user configuration.\n3. Downloading and extracting a template, and preparing the project directory.\n4. Templating and rendering the generated scaffold to a local project directory.\n5. Invoking post-render shell commands, such as installation and startup instructions."}
{"code": " * Generates and runs a project scaffold.\n */\nexport async function createApp(config: CreateMagicAppConfig) {\n  SharedAnalytics.logEvent('cli-tool-started', { input: config });\n\n  const destinationRoot = process.cwd();\n\n  const availableScaffolds = fs\n    .readdirSync(resolveToDist('scaffolds'))\n    .filter((name) => fs.statSync(resolveToDist('scaffolds', name)).isDirectory())\n    .map((name) => {\n      return {\n        name,\n        message: getScaffoldDefinition(name).shortDescription,\n        featured: getScaffoldDefinition(name).featured,\n      };\n    });\n\n  const isChosenTemplateValid = availableScaffolds\n    .map((i) => i.name)\n    .includes((config?.template ? config.template : '').toLowerCase());\n\n  if (config?.template && !isChosenTemplateValid) {\n    printWarning(chalk`'{bold ${config.template}}' does not match any templates.`);\n    console.warn(); // Aesthetics!\n  }\n\n  config = {\n    ...(await buildTemplate({\n      ...config,\n      chain: undefined,\n      configuration: undefined,", "explanation": "**Functionality Summary:**\n\nThis block of code generates and runs a project scaffold. It takes user configuration (`CreateMagicAppConfig`) as input, lists available project templates, and either selects a default template or validates a user-specified template. It then builds the template, updating the configuration object in the process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/create-app.tsx", "chunk_number": 3, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/create-app.tsx' file:\n\nThis file sets up a Magical repository project by scaffolding and setup process, which includes:\n\n1. Initializing the application environment and importing necessary modules.\n2. Generating and running a project scaffold based on user configuration.\n3. Downloading and extracting a template, and preparing the project directory.\n4. Templating and rendering the generated scaffold to a local project directory.\n5. Invoking post-render shell commands, such as installation and startup instructions."}
{"code": "      isChosenTemplateValid: false,\n      isQuickstart: false,\n    })),\n  };\n\n  const templateFlags: any = await parseFlags(mapTemplateToFlags(config.template as string), config?.data);\n  const repoUrl = new URL(`${DEFAULT_CREATE_MAGIC_APP_REPO}/tree/${config.branch}`, GITHUB_BASE_URL);\n  const repoInfo = await getRepoInfo(repoUrl, getRelativeTemplatePath(config.template as string));\n  if (repoInfo) {\n    const templatePath = getAbsoluteTemplatePath(config.template as string);\n\n    // TODO - come back to this to check if out of date\n    if (!fs.existsSync(templatePath)) {\n      await makeDir(templatePath);\n      await downloadAndExtractRepo(templatePath, repoInfo);\n    }\n  } else {\n    // TODO: Handle case where repo info is not found\n  }\n\n  const cwd = process.cwd();\n  createProjectDirIfDoesntExists(cwd, config.projectName!);\n\n  const templateData = {\n    ...config,\n    ...templateFlags,\n    ...config.data,\n  };\n\n  const { gray, cyan } = chalk;\n  const timer = createTimer();\n", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Initialize a Magical repository project by downloading a template, extracting it, and preparing the project directory.\n\n**Functionality:** \n\n1. Parse template flags from the provided configuration.\n2. Fetch repository information from GitHub.\n3. If the repository exists, download and extract the corresponding template.\n4. Create a project directory if it doesn't exist.\n5. Prepare the template data by combining configuration, template flags, and user data.\n6. Set up a timer for tracking progress.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/create-app.tsx", "chunk_number": 4, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/create-app.tsx' file:\n\nThis file sets up a Magical repository project by scaffolding and setup process, which includes:\n\n1. Initializing the application environment and importing necessary modules.\n2. Generating and running a project scaffold based on user configuration.\n3. Downloading and extracting a template, and preparing the project directory.\n4. Templating and rendering the generated scaffold to a local project directory.\n5. Invoking post-render shell commands, such as installation and startup instructions."}
{"code": "  const spinner = ora({ text: 'Scaffolding', spinner: 'dots10' });\n  startTimerAndSpinner(timer, spinner, false);\n\n  const scaffold = await mapTemplateToScaffold(config.template as string, templateData, spinner, timer);\n\n  startTimerAndSpinner(timer, spinner, true);\n  console.log(`${gray('\\n\\nRunning scaffold ') + cyan.bold(scaffold.templateName)}\\n`);\n\n  await renderScaffold(process.cwd(), scaffold, templateData);\n\n  const prettyTimeElapsed = prettyTime(timer.stop());\n  spinner.succeed(gray(`Generated in ${cyan.bold(prettyTimeElapsed)}\\n\\n`));\n\n  addShutdownTask(() => {\n    console.log(ConsoleMessages.bootstrapSuccess(config.projectName!, path.join(destinationRoot, config.projectName!)));\n  });\n\n  const installCmd = await createPostRenderAction({\n    data: templateData,\n    cmd: 'installDependenciesCommand',\n    scaffold,\n    log: true,\n  })?.wait();\n  const startCmd = createPostRenderAction({ data: templateData, cmd: 'startCommand', scaffold, log: true });\n\n  addShutdownTask(() => {", "explanation": "**Summary:**\n\nThis block appears to be part of a project scaffolding and setup process. It does the following:\n\n1. Displays a progress indicator (spinner) while executing the scaffolding process.\n2. Runs a templating function to generate a scaffold based on a template and data.\n3. Renders the generated scaffold to a local project directory.\n4. Displays a success message with the time it took to generate the scaffold.\n5. Sets up a shutdown task to display a success message when the process is complete.\n6. Creates and logs commands for installing dependencies and starting the project.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/create-app.tsx", "chunk_number": 5, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/create-app.tsx' file:\n\nThis file sets up a Magical repository project by scaffolding and setup process, which includes:\n\n1. Initializing the application environment and importing necessary modules.\n2. Generating and running a project scaffold based on user configuration.\n3. Downloading and extracting a template, and preparing the project directory.\n4. Templating and rendering the generated scaffold to a local project directory.\n5. Invoking post-render shell commands, such as installation and startup instructions."}
{"code": "    console.log(ConsoleMessages.postRenderCommands(installCmd, startCmd, config.projectName!));\n  });\n}\n\n/**\n * After the scaffold is rendered, we call this\n * function to invoke post-render shell commands.\n */\nfunction createPostRenderAction(options: {\n  data: CreateMagicAppData & Record<string, any>;\n  cmd: 'installDependenciesCommand' | 'startCommand';\n  scaffold: BaseScaffold;\n  log?: boolean;\n}) {\n  const getCmd =\n    options.cmd === 'installDependenciesCommand' ? options.scaffold.installationCommand : options.scaffold.startCommand;\n\n  if (getCmd) {\n    const subprocess = execa(getCmd.command, getCmd.args, { stdio: 'inherit' });\n    const bin = `${getCmd.command} ${getCmd.args.join(' ')}`;\n\n    return Object.assign(bin, {\n      wait: async () => {\n        await subprocess;\n        return bin;\n      },\n    });\n  }\n}\n\nexport function startTimerAndSpinner(timer: Timer, spinner: Ora, isPaused: boolean) {\n  if (isPaused) {\n    timer.resume();\n  }\n  timer.start();\n  spinner.start();\n}\n", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Invokes post-render shell commands after a scaffold is rendered.\n\n**Functionality:**\n\n1. Retrieves the installation or start command based on the provided options.\n2. Executes the command using `execa` with inherited stdio.\n3. Returns a customizable object with a `wait` function that runs the subprocess and returns the command string.\n4. Optionally, starts a timer and spinner with the provided options.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/create-app.tsx", "chunk_number": 6, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/create-app.tsx' file:\n\nThis file sets up a Magical repository project by scaffolding and setup process, which includes:\n\n1. Initializing the application environment and importing necessary modules.\n2. Generating and running a project scaffold based on user configuration.\n3. Downloading and extracting a template, and preparing the project directory.\n4. Templating and rendering the generated scaffold to a local project directory.\n5. Invoking post-render shell commands, such as installation and startup instructions."}
{"code": "export function pauseTimerAndSpinner(timer: Timer, spinner: Ora) {\n  timer.pause();\n  if (spinner.isSpinning) {\n    spinner.stop();\n  }\n}\n", "explanation": "This block pauses a timer (`timer.pause()`) and stops a spinner (`spinner.stop()`) if it's currently spinning.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/create-app.tsx", "chunk_number": 7, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/create-app.tsx' file:\n\nThis file sets up a Magical repository project by scaffolding and setup process, which includes:\n\n1. Initializing the application environment and importing necessary modules.\n2. Generating and running a project scaffold based on user configuration.\n3. Downloading and extracting a template, and preparing the project directory.\n4. Templating and rendering the generated scaffold to a local project directory.\n5. Invoking post-render shell commands, such as installation and startup instructions."}
{"code": "import parseArgs from 'yargs-parser';\nimport decamelize from 'decamelize';\nimport { createValidationError } from './utils/errors-warnings';\nimport { filterNilValues } from './utils/filter-nil-values';\n\nexport type ValueType = string | string[] | number | number[] | boolean;\n\ntype FlagType<T extends ValueType = ValueType> = T extends string\n  ? StringConstructor\n  : T extends string[]\n  ? [StringConstructor]\n  : T extends number\n  ? NumberConstructor\n  : T extends number[]\n  ? [NumberConstructor]\n  : T extends boolean\n  ? BooleanConstructor\n  : StringConstructor | NumberConstructor | BooleanConstructor;\n\n/**\n * Configuration to modify the behavior of flag-based template data inputs.\n */\ntype BaseFlag<T extends ValueType = ValueType> = {\n  /**\n   * A factory function to transform raw command-line input\n   * into the requisite native type (string, boolean, or number).\n   */\n  readonly type: FlagType<T>;\n\n  /**\n   * A single-character alias which can be used to assign the CLI flag in an", "explanation": "**Summary:**\n\nThis code defines two custom types and a type system for handling flag-based template data inputs. It includes functionality for transforming raw command-line input into native types (string, boolean, or number) and filtering nil values. \n\n**Main Functionality:**\n\n- Type system for handling flag-based template data inputs\n- Type transformation from raw command-line input to native types\n- Nil value filtering", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/flags.ts", "chunk_number": 1, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'core/flags.ts':\n\nThis file defines a set of functions for handling and validating flags in a command-line interface (CLI) or configuration system. It includes functionality for:\n\n- Transforming raw command-line input into native types (string, boolean, or number)\n- Filtering nil values\n- Validating flag inputs against predefined flags\n- Merging validated results with default flag values\n- Parsing command-line arguments\n\nThe file provides type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types. It also includes a `parseFlags` function to parse and validate user input, and several utility functions for flag management and validation."}
{"code": "   * abbreviated way. For example, `--help` has the alias `h`, which can be used\n   * like `-h`.\n   */\n  readonly alias?: string;\n\n  /**\n   * A help-text description for this flag. This will be printed along with\n   * global `make-magic` documentation when the respective template is used\n   * alongside the standard `--help` flag.\n   */\n  readonly description: string;\n\n  /**\n   * An optional validation function that may return an error message\n   * to be raised indicating invalid command-line input.\n   */\n  readonly validate?: (value: T) => (string | boolean | Promise<string | boolean>) | undefined;\n\n  /**\n   * Provides a default value for the flag.\n   */\n  readonly default?: T | (() => T);\n};\n\n/**\n * Configuration to modify the behavior of flag-based template data inputs.\n */\ntype BaseFlagWithRequiredDefault<T extends ValueType = ValueType> = BaseFlag<T> & {\n  /**\n   * Provides a default value for the flag.\n   */\n  readonly default: T | (() => T);\n};\n\n/**", "explanation": "This block defines the properties of an object used to configure command-line flags. \n\nIt has four properties:\n\n- `alias`: an optional abbreviated version of the flag\n- `description`: a help-text description for the flag\n- `validate`: an optional function to validate the flag's value\n- `default`: an optional default value for the flag\n\nThere are also two types defined: `BaseFlag` and `BaseFlagWithRequiredDefault`.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/flags.ts", "chunk_number": 2, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'core/flags.ts':\n\nThis file defines a set of functions for handling and validating flags in a command-line interface (CLI) or configuration system. It includes functionality for:\n\n- Transforming raw command-line input into native types (string, boolean, or number)\n- Filtering nil values\n- Validating flag inputs against predefined flags\n- Merging validated results with default flag values\n- Parsing command-line arguments\n\nThe file provides type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types. It also includes a `parseFlags` function to parse and validate user input, and several utility functions for flag management and validation."}
{"code": " * Configuration to modify the behavior of flag-based template data inputs.\n */\nexport type Flag<T extends ValueType = ValueType> = BaseFlag<T> | BaseFlagWithRequiredDefault<T>;\n\n/**\n * A record of `ScaffoldFlag` values with data types given by `T`.\n */\nexport type Flags<T extends Record<string, ValueType | null | undefined> = Record<string, any>> = {\n  [P in keyof Required<T>]: undefined extends T[P]\n    ? BaseFlag<NonNullable<T[P]>>\n    : null extends T[P]\n    ? BaseFlag<NonNullable<T[P]>>\n    : BaseFlagWithRequiredDefault<NonNullable<T[P]>>;\n};\n\nexport type TypedFlags<F extends Flags> = F extends Flags<infer R> ? R : unknown;\n\n/**\n * Parse and validate input given by the user via CLI flags.\n */\nexport async function parseFlags<T extends Flags>(flags: T, data?: {}): Promise<TypedFlags<T>> {\n  const isProgrammaticFlow = !!data;\n  const aliases: Record<string, string[]> = {};\n  const booleans: string[] = [];\n\n  Object.entries(flags).forEach(([flag, options]) => {\n    if (options.alias) {", "explanation": "**Purpose and Functionality**\n\nThis block configures and parses user input for flag-based template data using CLI flags. It provides:\n\n* Type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types.\n* An `parseFlags` function that takes `flags` and optional `data` as input, validates and parses user input, and returns the parsed flags.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/flags.ts", "chunk_number": 3, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'core/flags.ts':\n\nThis file defines a set of functions for handling and validating flags in a command-line interface (CLI) or configuration system. It includes functionality for:\n\n- Transforming raw command-line input into native types (string, boolean, or number)\n- Filtering nil values\n- Validating flag inputs against predefined flags\n- Merging validated results with default flag values\n- Parsing command-line arguments\n\nThe file provides type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types. It also includes a `parseFlags` function to parse and validate user input, and several utility functions for flag management and validation."}
{"code": "      aliases[flag] = [options.alias.toLowerCase()];\n    }\n\n    if (options.type === Boolean) {\n      booleans.push(flag);\n    }\n  });\n\n  const results: {} =\n    data ??\n    parseArgs(process.argv.slice(2), {\n      alias: aliases,\n      boolean: booleans,\n    });\n\n  const defaultResults = getFlagDefaults(flags);\n  const validatedResults = await validateFlagInputs(flags, results);\n  const finalResults = { ...defaultResults, ...validatedResults };\n\n  // If `data` is provided (in other words, if the flow is programmatic rather\n  // than CLI-based), we validate that all required fields are present in the\n  // final result.\n  if (isProgrammaticFlow) {\n    const requiredFields = Object.keys(flags).filter((flag) => flags[flag].default == null);\n    const givenFields = Object.keys(results);\n    const missingFields = requiredFields\n      .map((field) => {\n        if (!givenFields.includes(field)) return field;\n        return undefined;\n      })\n      .filter(Boolean);\n\n    if (missingFields.length) {", "explanation": "The purpose of this block is to:\n\n- Parse command-line arguments\n- Validate the parsed inputs against predefined flags\n- Merge the validated results with default flag values\n- If in a programmatic flow, ensure all required fields are present in the final result.\n\nFunctionality includes:\n\n- Creating an aliases dictionary\n- Identifying boolean flags\n- Parsing command-line arguments using `parseArgs`\n- Validating flag inputs using `validateFlagInputs`\n- Getting default flag values using `getFlagDefaults`", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/flags.ts", "chunk_number": 4, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'core/flags.ts':\n\nThis file defines a set of functions for handling and validating flags in a command-line interface (CLI) or configuration system. It includes functionality for:\n\n- Transforming raw command-line input into native types (string, boolean, or number)\n- Filtering nil values\n- Validating flag inputs against predefined flags\n- Merging validated results with default flag values\n- Parsing command-line arguments\n\nThe file provides type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types. It also includes a `parseFlags` function to parse and validate user input, and several utility functions for flag management and validation."}
{"code": "      throw createValidationError(`Missing required template data (${missingFields.join(', ')})`);\n    }\n  }\n\n  return finalResults;\n}\n\nfunction getFlagDefaults<T extends Flags>(flags: T) {\n  return filterNilValues<TypedFlags<T>>(\n    Object.fromEntries(\n      Object.keys(flags)\n        .filter((flag) => flags[flag].default != null)\n        .map((key) => {\n          const flag = flags[key] as unknown as Flag;\n          return [key, typeof flag.default === 'function' ? flag.default() : flag.default];\n        }),\n    ) as TypedFlags<T>,\n  );\n}\n\nasync function validateFlagInputs<T extends Flags>(flags: T, inputs: {} = {}) {\n  return filterNilValues<TypedFlags<T>>(\n    Object.fromEntries(\n      await Promise.all(\n        Object.entries(inputs).map(async ([key, value]) => {\n          const flag = flags[key] as unknown as Flag;\n\n          if (flag) {\n            // Coerce result type\n            const typeFactory = flag.type;\n            let result: any;\n            if (Array.isArray(typeFactory)) {", "explanation": "**Block Summary:**\n\nThis code appears to be a set of functions related to flag validation and management, likely used in a command-line interface (CLI) or configuration system.\n\nThe main functions are:\n\n1. `getFlagDefaults`: Returns an object with default values for flags that have a specified default value, excluding null values.\n2. `validateFlagInputs`: Validates input values against a set of flags, returning the validated flag values with null values filtered out.\n\nThe code likely checks for required template data, validates flag inputs, and returns a result after filtering out nil values.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/flags.ts", "chunk_number": 5, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'core/flags.ts':\n\nThis file defines a set of functions for handling and validating flags in a command-line interface (CLI) or configuration system. It includes functionality for:\n\n- Transforming raw command-line input into native types (string, boolean, or number)\n- Filtering nil values\n- Validating flag inputs against predefined flags\n- Merging validated results with default flag values\n- Parsing command-line arguments\n\nThe file provides type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types. It also includes a `parseFlags` function to parse and validate user input, and several utility functions for flag management and validation."}
{"code": "              result = Array.isArray(value) ? value.map((i) => typeFactory[0](i)) : [typeFactory[0](value)];\n            } else {\n              // In the case that we expect the flag argument to NOT be an\n              // array, but we receive multiple instances of the flag anyway,\n              // we simply use the last instance.\n              result = Array.isArray(value) ? typeFactory(value[value.length - 1]) : typeFactory(value);\n            }\n\n            // Validate results\n            const invalidMessage = await flag?.validate?.(result);\n\n            if (invalidMessage && typeof invalidMessage === 'string') {\n              throw createValidationError(invalidMessage);\n            } else if (!invalidMessage && typeof invalidMessage === 'boolean') {\n              throw createValidationError(`--${decamelize(key, { separator: '-' })} received invalid input.`);\n            }\n\n            return [key, result ?? (typeof flag.default === 'function' ? flag.default() : flag.default)];\n          }\n", "explanation": "**Purpose and Functionality:**\n\nThe given block of code is used to process flag value(s) and validate them against a schema. It:\n\n1. Maps or transforms the input value(s) to the expected type.\n2. Validates the transformed result(s) against a given flag schema.\n3. Returns the key and the processed value(s), or a default value if provided.\n\nThe purpose is to ensure that flag values are correctly processed and validated, and return a standardized result.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/flags.ts", "chunk_number": 6, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'core/flags.ts':\n\nThis file defines a set of functions for handling and validating flags in a command-line interface (CLI) or configuration system. It includes functionality for:\n\n- Transforming raw command-line input into native types (string, boolean, or number)\n- Filtering nil values\n- Validating flag inputs against predefined flags\n- Merging validated results with default flag values\n- Parsing command-line arguments\n\nThe file provides type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types. It also includes a `parseFlags` function to parse and validate user input, and several utility functions for flag management and validation."}
{"code": "          // Return undefined if no flag is defined (we'll filter it out)\n          return [key, undefined];\n        }),\n      ),\n    ),\n  );\n}\n\nexport function makeInputsLowercase(arg: string | undefined): string | undefined {\n  if (arg === undefined) {\n    return undefined;\n  }\n  return arg.toLowerCase();\n}\n", "explanation": "**Summary**\n\nThese two functions appear to be JavaScript code written in TypeScript. \n\n1. `makeInputsLowercase`: Converts a given string to lowercase if it exists, otherwise returns `undefined`.\n\n2. The initial code block (wrapped in export and import/typing statements) does not have a clear description, but it seems to be creating an array of key-value pairs and mapping an array transformation to make the keys lowercase using the `makeInputsLowercase` function.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/flags.ts", "chunk_number": 7, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'core/flags.ts':\n\nThis file defines a set of functions for handling and validating flags in a command-line interface (CLI) or configuration system. It includes functionality for:\n\n- Transforming raw command-line input into native types (string, boolean, or number)\n- Filtering nil values\n- Validating flag inputs against predefined flags\n- Merging validated results with default flag values\n- Parsing command-line arguments\n\nThe file provides type definitions for working with flags, including `Flag`, `Flags`, and `TypedFlags` types. It also includes a `parseFlags` function to parse and validate user input, and several utility functions for flag management and validation."}
{"code": "import chalk from 'chalk';\nimport { BlockchainNetworkPrompt } from 'scaffolds/prompts';\nimport { BINARY } from './config';\nimport { CreateMagicAppData } from './create-app';\nimport { Flags } from './flags';\n\nexport interface GlobalOptions extends Partial<CreateMagicAppData & BlockchainNetworkPrompt.Data> {\n  help?: boolean;\n  version?: boolean;\n  [key: string]: any;\n}\n\nexport const globalOptions: Flags<GlobalOptions> = {\n  projectName: {\n    type: String,\n    alias: 'p',\n    description:\n      'The name of your project. A top-level directory will be created from this value. If omitted, the project name will be prompted for interactively.',\n  },\n\n  template: {\n    type: String,\n    alias: 't',\n    description: 'The base template to use. If omitted or invalid, the template will be prompted for interactively.',\n  },\n\n  branch: {\n    type: String,\n    alias: 'b',\n    description: `The remote Git branch of \\`${BINARY}\\` from which to source templates.`,\n    default: 'master',\n  },\n\n  help: {\n    type: Boolean,", "explanation": "This block is a TypeScript code snippet defining a set of global options for a command-line application. The options include:\n\n- Project name\n- Template\n- Git branch\n- Help and version flags\n\nThese options are configured using a `Flags` utility to define their types, aliases, and descriptions, allowing for interactive prompts and command-line argument parsing.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/global-options.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise summary of the file 'core/global-options.ts':\n\nThis file defines global options for a command-line application using the Flags utility. It includes options for project name, template, Git branch, and specifies flags for help, version information, and anonymous usage data sharing. The options are then merged with blockchain network flags to provide a comprehensive set of CLI commands."}
{"code": "    alias: 'h',\n    description: chalk`Show help (you're lookin' at it). {bold If --template or -t is provided, template-specific documentation will be printed, too.}`,\n  },\n\n  version: {\n    type: Boolean,\n    alias: 'v',\n    description: `Show which version of \\`${BINARY}\\` is currently in use.`,\n  },\n\n  shareUsageData: {\n    type: Boolean,\n    description:\n      'A boolean representing whether or not to share anonymous usage data with Magic. The data cannot be traced back to you and is used to improve the developer experience.',\n  },\n\n  ...BlockchainNetworkPrompt.flags,\n};\n", "explanation": "This block defines CLI flags (options) for a program. \n\n- It provides a summary of the flags:\n  - '--help' or '-h': shows the help document (the current content).\n  - '--version' or '-v': displays the program's current version.\n  - 'shareUsageData': enables sharing anonymous usage data with Magic for improving the developer experience.\n\nThe block ultimately merges the defined flags with other blockchain network flags (from `BlockchainNetworkPrompt.flags`).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/global-options.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise summary of the file 'core/global-options.ts':\n\nThis file defines global options for a command-line application using the Flags utility. It includes options for project name, template, Git branch, and specifies flags for help, version information, and anonymous usage data sharing. The options are then merged with blockchain network flags to provide a comprehensive set of CLI commands."}
{"code": "/* eslint-disable no-param-reassign */\n/* eslint-disable consistent-return */\n\nimport { c } from 'tar';\nimport chalk from 'chalk';\nimport decamelize from 'decamelize';\nimport wrapAnsi from 'wrap-ansi';\nimport { BINARY } from './config';\nimport { Flags, Flag } from './flags';\nimport { mapTemplateToFlags } from './utils/templateMappings';\n\nconst styled = {\n  Usage: chalk.bold.inverse(' USAGE '),\n  Options: chalk.bold.inverse(' OPTIONS '),\n  Examples: chalk.bold.inverse(' EXAMPLES '),\n  sh: chalk.gray.dim('$'),\n  bin: chalk.green(BINARY),\n};\n\n/**\n * Prints help text, including specific options for the given `scaffoldName`.\n */\nexport function printHelp(globalOptions: Flags, scaffoldName?: string) {\n  const helpSections: string[] = [];\n\n  // Basic usage information\n  helpSections.push(\n    createHelpSection({\n      heading: styled.Usage,\n      content: `  ${styled.sh} ${styled.bin} [options]`,\n    }),\n  );\n\n  // Global options\n  helpSections.push(\n    createHelpSection({\n      heading: styled.Options,", "explanation": "**Summary:**\nThe given block is a JavaScript function called `printHelp` which prints help text for a command-line application. It generates a help page with basic usage information, global options, and specific options for a given `scaffoldName` if provided.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/help-text.ts", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'core/help-text.ts':\n\nThis file provides utility functions to generate formatted help text for a command-line interface (CLI) application. It includes functions for creating sections, tables, and styled strings. The primary function `printHelp` generates a help page with usage information, global and specific options, and example usage. It uses ANSI escape codes for styling and printing the help content to the console."}
{"code": "      content: createOptionsTable({\n        ...globalOptions,\n        '[...]': chalk`Additional CLI flags are given as data to the chosen template. Data provided as CLI flags will {italic not be prompted for interactively.}`,\n      }),\n    }),\n  );\n\n  // Template-specific options\n  try {\n    const flags = mapTemplateToFlags(scaffoldName!);\n    helpSections.push(\n      createHelpSection({\n        heading: styled.Options + chalk.bold(' \u276f ') + chalk.bold.hex('#b93fff').inverse(` ${scaffoldName} `),\n        content: createOptionsTable(flags),\n      }),\n    );\n  } catch {}\n\n  // Usage examples\n  helpSections.push(\n    createHelpSection({\n      heading: styled.Examples,\n      content: [\n        `  ${styled.sh} npx ${styled.bin}`,\n        `  ${styled.sh} npx ${styled.bin} --version`,\n        `  ${styled.sh} npx ${styled.bin} --template=hello-world`,\n        `  ${styled.sh} npx ${styled.bin} --project-name=my-app`,\n      ].join('\\n'),\n    }),\n  );\n\n  // Print it out!\n  console.log(helpSections.join('\\n\\n'));\n}\n\n/**", "explanation": "This block is responsible for generating help content for a CLI (Command-Line Interface) application. It creates multiple sections with different types of content, including:\n\n1. A table of options.\n2. Template-specific options.\n3. Usage examples.\n\nThe content is then printed out to the console.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/help-text.ts", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'core/help-text.ts':\n\nThis file provides utility functions to generate formatted help text for a command-line interface (CLI) application. It includes functions for creating sections, tables, and styled strings. The primary function `printHelp` generates a help page with usage information, global and specific options, and example usage. It uses ANSI escape codes for styling and printing the help content to the console."}
{"code": " * Join a help section heading together with its content.\n */\nfunction createHelpSection(config: { heading: string; content: string }) {\n  return `${config.heading}\\n\\n${config.content}`;\n}\n\n/**\n * From the record of args to descriptions given by `source`,\n * output a printable table of arguments for the help text.\n */\nfunction createOptionsTable(flags: Record<string, string | Flag>) {\n  const normalizeArg = (arg: string, config?: Flag) => {\n    if (arg.startsWith('-') || arg.startsWith('[')) return arg;\n    return config?.alias\n      ? `--${decamelize(arg, { separator: '-' })}, -${config?.alias}`\n      : `--${decamelize(arg, { separator: '-' })}`;\n  };\n\n  // Get a list of rows containing de-camelized args\n  // as keys and formatted description texts as values\n  const rows: Array<[string, string]> = Object.entries(flags).map(([arg, config]) => {\n    const configStr = typeof config === 'string' ? config : config.description + getDefaultArgLabel(config);\n", "explanation": "**Block Purpose and Functionality:**\n\nThis block is a collection of two JavaScript functions used to create formatted help text.\n\n1. **`createHelpSection`**: Combines a heading with its content into a formatted string.\n2. **`createOptionsTable`**: Generates a printable table of arguments from a record of args to descriptions. It normalizes arg input, formats description text, and returns an array of rows for a table.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/help-text.ts", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'core/help-text.ts':\n\nThis file provides utility functions to generate formatted help text for a command-line interface (CLI) application. It includes functions for creating sections, tables, and styled strings. The primary function `printHelp` generates a help page with usage information, global and specific options, and example usage. It uses ANSI escape codes for styling and printing the help content to the console."}
{"code": "    return [`  ${normalizeArg(arg, typeof config === 'string' ? undefined : config)}`, configStr];\n  });\n\n  const gap = 3; // Space between args column & description text\n  const maxWidth = 80 - gap;\n  const argColumnWidth = Math.max(...rows.map(([arg]) => arg.length));\n\n  const helpTexts = rows.map(([_, helpText]) => formatDescription(helpText, maxWidth, argColumnWidth + gap));\n\n  return rows.map(([arg], i) => [arg, helpTexts[i]].join(' '.repeat(argColumnWidth - arg.length + gap))).join('\\n\\n');\n}\n\n/**\n * Creates a default value label based on the\n * value type associated to the given `flag`.\n */\nfunction getDefaultArgLabel(flag: Flag) {\n  const type = Array.isArray(flag.default) ? typeof flag.default[0] : typeof flag.default;\n  const value = Array.isArray(flag.default)\n    ? `[${(flag.default as any).map(JSON.stringify).join(', ')}]`\n    : JSON.stringify(flag.default);\n\n  switch (type) {\n    case 'string':\n    case 'number':\n    case 'boolean':\n      return chalk` {dim Default: {yellow ${value}}}`;\n", "explanation": "Summary: \nThis block of code generates formatted help text for a set of arguments. It takes in a configuration, formats each argument with its corresponding help text, and returns a formatted string displaying the argument and its description.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/help-text.ts", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'core/help-text.ts':\n\nThis file provides utility functions to generate formatted help text for a command-line interface (CLI) application. It includes functions for creating sections, tables, and styled strings. The primary function `printHelp` generates a help page with usage information, global and specific options, and example usage. It uses ANSI escape codes for styling and printing the help content to the console."}
{"code": "    case 'function':\n      return chalk` {dim Default: {yellow.italic auto-generated at runtime}}`;\n\n    default:\n      return '';\n  }\n}\n\n/**\n * Wraps the source `str` at `maxWidth`,\n * with leading whitespace for every line after the first.\n */\nfunction formatDescription(str: string, maxWidth: number, leadingWhitespaceAmount: number) {\n  const result = wrapAnsi(str, maxWidth - leadingWhitespaceAmount);\n  return result.split('\\n').join(`\\n${' '.repeat(leadingWhitespaceAmount)}`);\n}\n", "explanation": "**Summary**\n\nThis block consists of two parts:\n\n1. A switch statement that returns a formatted string using ANSI escape codes (with varying levels of dimness, color, and italicization) based on the value of an unknown variable.\n2. A function named `formatDescription` that takes a string `str` and reformats it with a maximum width `maxWidth` and leading whitespace `leadingWhitespaceAmount`. It wraps the string using the `wrapAnsi` function and adds leading whitespace to every line but the first.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/help-text.ts", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'core/help-text.ts':\n\nThis file provides utility functions to generate formatted help text for a command-line interface (CLI) application. It includes functions for creating sections, tables, and styled strings. The primary function `printHelp` generates a help page with usage information, global and specific options, and example usage. It uses ANSI escape codes for styling and printing the help content to the console."}
{"code": "import { createApp, CreateMagicAppConfig } from './create-app';\n\n/**\n * Generates boilerplate app code integrated with\n * passwordless login powered by Magic Labs.\n *\n * @see https://magic.link/\n */\nexport default async function makeMagic(options: CreateMagicAppConfig = {}) {\n  const { projectName = 'my-app', template = 'hello-world', branch = 'master', data = {} } = options;\n  await createApp({ projectName, template, branch, data });\n}\n", "explanation": "**Purpose:** Generates boilerplate app code integrated with Magic Labs' passwordless login.\n\n**Functionality:** A utility function, `makeMagic`, that creates a new app with preconfigured Magic Labs passwordless login functionality, based on provided project settings and options.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/lib.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'core/lib.ts' file:\n\n**Summary:** Core library file, providing the `makeMagic` utility function to create a new app with pre-configured Magic Labs passwordless login integration based on project settings and options."}
{"code": "export default abstract class BaseScaffold {\n  public abstract templateName: string;\n  public abstract source: string | string[];\n  public abstract installationCommand: ExecaCommand;\n  public abstract startCommand: ExecaCommand;\n}\n\nexport type ExecaCommand = { command: string; args: string[] };\n", "explanation": "This code defines a base class `BaseScaffold` and a type alias `ExecaCommand`.\n\n**Purpose:** The `BaseScaffold` class is an abstract base class that defines a common interface for various scaffolding implementations.\n\n**Functionality:** \n\n- It provides a template for subclasses to inherit from.\n- It defines four abstract properties: `templateName`, `source`, `installationCommand`, and `startCommand`, which must be implemented by subclasses.\n- The `ExecaCommand` type alias defines a command and its arguments, which can be used to represent executable commands.\n\nIn essence, this code sets up a framework for creating scaffolding tools, allowing developers to easily create and manage new scaffolding implementations by inheriting from the `BaseScaffold` class.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/types/BaseScaffold.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary: BaseScaffold Class**\n\nThe `BaseScaffold` class is an abstract base class that provides a template for subclasses, encapsulating common properties and functionality for scaffolding implementations. It defines four abstract properties and does not include any concrete logic, allowing subclasses to inherit from it and implement their specific scaffolding logic."}
{"code": "declare module 'cfonts' {\n  const CFonts: any;\n  export default CFonts;\n}\n", "explanation": "This block declares a module for the external library 'cfonts'. It exports the default function or object from the module, allowing it to be imported and used in the current project.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/types/shims.d.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "There is no code provided in the description. However, if I were to provide an example of such a code block, here is a holographic summary of 'core/types/shims.d.ts':\n\n**Summary:** \nA type declaration file (`shims.d.ts`) that exports the default module from an external library, allowing it to be imported and used in the project."}
{"code": "/**\n * Get a union of value types from `T`.\n */\nexport type ValuesOf<T> = T extends ReadonlyArray<any> ? T[number] : T[keyof T];\n", "explanation": "This block defines a TypeScript type called `ValuesOf<T>`. Its purpose is to get a union of all value types from the given type `T`, essentially returning all unique type values within `T`.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/types/utility-types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'utility-types.ts' file:\n\nThe 'utility-types.ts' file provides several TypeScript utility types, including `ValuesOf<T>`, which extracts a union of all unique type values from a given type `T`."}
{"code": "export type AsyncPromiseExecutor<TResult> = (\n  resolve: (value: TResult | PromiseLike<TResult>) => void,\n  reject: (reason?: any) => void,\n) => void | Promise<void>;\n\nexport function createPromise<TResult>(executor: AsyncPromiseExecutor<TResult>) {\n  return new Promise<TResult>((resolve, reject) => {\n    const result = executor(resolve, reject);\n    Promise.resolve(result).catch(reject);\n  });\n}\n", "explanation": "This block is a function factory that creates a Promise. It exports two main components:\n\n1. `AsyncPromiseExecutor`: A functional type that defines a callback function expected by the `createPromise` function. This callback must return either a value (or a Promise that resolves to that value) to resolve the Promise, or it can be called with no arguments to reject the Promise.\n\n2. `createPromise`: A function that uses the `executor` to create a new Promise, allowing it to resolve or reject based on the callback's return value. The returned Promise can then be used as a normal Promise.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/create-promise.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'create-promise.ts' file:\n\n\"Definition of a promise factory, exporting `createPromise` and `AsyncPromiseExecutor`. `createPromise` utilizes the `Executor` callback to create a Promise that can resolve or reject based on its return values.\""}
{"code": "import chalk from 'chalk';\n\n/**\n * Enum of possible error codes associated\n * with `CreateMagicAppError` instances.\n */\nexport enum CreateMagicAppErrorCode {\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  USER_CANCELED_PROMPT = 'USER_CANCELED_PROMPT',\n}\n\n/**\n * Base class representing `make-magic` errors.\n */\nexport class CreateMagicAppError<Code extends CreateMagicAppErrorCode = CreateMagicAppErrorCode> extends Error {\n  constructor(public readonly code: Code, message?: string) {\n    super(chalk`{red Error:} ${message}`);\n  }\n}\n\n/**\n * Prints a prefixed warning to the console.\n */\nexport function printWarning(message?: string) {\n  console.warn(chalk`{yellow Warning:} ${message}`);\n}\n\n/**\n * Creates a validation error\n */\nexport function createValidationError(message?: string) {\n  return new CreateMagicAppError(CreateMagicAppErrorCode.VALIDATION_ERROR, message);\n}\n\nexport function createUserCanceledPromptError(message?: string) {\n  return new CreateMagicAppError(CreateMagicAppErrorCode.USER_CANCELED_PROMPT, message);\n}\n", "explanation": "**Summary:**\n\nThis block defines a set of classes and functions for handling errors in a `make-magic` application. It includes:\n\n- An enumeration of possible error codes (VALIDATION_ERROR and USER_CANCELED_PROMPT)\n- A base class `CreateMagicAppError` for creating custom error instances\n- Three functions for creating specific error types (validation error, user canceled prompt error) and a function for printing warnings to the console.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/errors-warnings.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'core/utils/errors-warnings.ts':\n\nThis file provides utilities for error handling in a `make-magic` application. It defines error codes, a base error class, and functions for creating specific error instances, including validation errors and user canceled prompt errors."}
{"code": "/**\n * Returns a shallow copy of `obj` without `null` or `undefined` values.\n */\nexport function filterNilValues<T>(obj: Partial<T>): T {\n  const result: any = {};\n\n  for (const [prop, value] of Object.entries(obj)) {\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n\n  return result;\n}\n", "explanation": "**Purpose:** This block creates a shallow copy of an object, removing any null or undefined values.\n\n**Functionality:** It iterates through the object's properties, preserving only those with values that are not null or undefined, and returns the filtered object.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/filter-nil-values.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'core/utils/filter-nil-values.ts':\n\nThis file provides a utility function that creates a shallow copy of an object, removing null and undefined values. It iterates through the object's properties, preserving only those with non-null and non-undefined values."}
{"code": "import fs from 'fs';\nimport { renderFile } from 'ejs';\nimport fse from 'fs-extra';\nimport chalk from 'chalk';\nimport { createPromise } from 'core/utils/create-promise';\nimport { isBinary } from './is-binary';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { Confirm } = require('enquirer');\n\n// TODO - rename so that we know it also renders ejs\nexport const copyFileWithEjsData = async (from: string, to: string, data: any) => {\n  await createPromise<void>(async (resolve, reject) => {\n    const buffer = await fse.readFile(from);\n    const shouldRenderEjs = !isBinary(from, buffer);\n\n    if (shouldRenderEjs) {\n      await renderFile(from, data || {}, async (err, str) => {\n        if (err) {\n          reject(err);\n        } else {\n          try {\n            await outputFile(to, str).then(resolve).catch(reject);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    } else {\n      try {\n        await outputFile(to, buffer).then(resolve).catch(reject);", "explanation": "**Functionality Summary**\n\nThe `copyFileWithEjsData` function copies a file from a source location to a target location, with the option to render EJS templates.\n\n**Key Functions:**\n\n- Copies a file with or without EJS rendering\n- Supports checking if the file contains binary data\n- Utilizes the `renderFile` function from 'ejs' to render EJS templates if the file is text-based\n- Utilizes the `fse` library for file operations and the `chalk` library for logging. \n\n**Parameters:**\n\n- `from`: source file path\n- `to`: target file path\n- `data`: EJS template data (optional)", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/fs.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/utils/fs.ts:**\n\nThe `fs.ts` file provides a set of utility functions for file operations, including copying files with EJS rendering and recursively reading directories. \n\nKey features:\n\n- Copies files with or without EJS rendering\n- Checks for file overwrite and prompts user for confirmation\n- Handles binary data detection and EJS rendering for text-based files\n- Utilizes libraries `fse` for file operations, `chalk` for logging, and `ejs` for template rendering\n\nMain functions include:\n\n- `readTemplateDirs`: Recursively collects file paths from directories\n- `outputFile`: Writes data to file if it's allowed to be overwritten"}
{"code": "      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n};\n\nasync function outputFile(to: string, data: any) {\n  if (await shouldOverwriteFile(to)) {\n    await fse.outputFile(to, data);\n  }\n}\n\nexport const readTemplateDirs = (\n  root: string,\n  done: (err: NodeJS.ErrnoException | null, results: string[]) => void,\n): string[] => {\n  let filePaths: string[] = [];\n  fs.readdir(root, (err, files) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    let pending = files.length;\n    if (!pending) return done(null, filePaths);\n    files.forEach((file) => {\n      const stats = fs.statSync(`${root}/${file}`);\n      if (stats && stats.isDirectory()) {\n        readTemplateDirs(`${root}/${file}`, async (error, res) => {\n          filePaths = filePaths.concat(res);\n          if (!--pending) done(null, filePaths);\n        });\n      } else {\n        filePaths.push(`${root}/${file}`);\n        if (!--pending) done(null, filePaths);\n      }\n    });\n  });\n  return filePaths;\n};\n", "explanation": "**Purpose:** Reading directories recursively to collect file paths.\n\n**Functionality:**\n\n1. `readTemplateDirs`: Recursively reads directories to collect all files and subdirectory paths.\n2. `outputFile`: Checks if a file should be overwritten and outputs data to it if allowed.\n3. Error Handling: Catches and rejects errors in the `readTemplateDirs` function.\n\n**Key Features:**\n\n- Recursively collects files and subdirectory paths\n- Checks for file overwrite before writing data\n- Manages error handling in the `readTemplateDirs` function", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/fs.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/utils/fs.ts:**\n\nThe `fs.ts` file provides a set of utility functions for file operations, including copying files with EJS rendering and recursively reading directories. \n\nKey features:\n\n- Copies files with or without EJS rendering\n- Checks for file overwrite and prompts user for confirmation\n- Handles binary data detection and EJS rendering for text-based files\n- Utilizes libraries `fse` for file operations, `chalk` for logging, and `ejs` for template rendering\n\nMain functions include:\n\n- `readTemplateDirs`: Recursively collects file paths from directories\n- `outputFile`: Writes data to file if it's allowed to be overwritten"}
{"code": "const shouldOverwriteFile = async (filePath: string): Promise<boolean> => {\n  const exists = await fse.pathExists(filePath);\n  if (exists) {\n    const overwrite = await new Confirm({\n      name: 'overwrite',\n      message: `Conflict on \\`${filePath.split('/').pop()}\\` ${chalk.red('\\n  Overwrite?')}`,\n      initial: false,\n    }).run();\n\n    return overwrite;\n  }\n  return true;\n};\n", "explanation": "This function checks if a file exists and prompts the user to confirm whether to overwrite it if it does. It returns true (default overwrite) if the file doesn't exist, and the user's confirmation for overwrite if it does.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/fs.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of core/utils/fs.ts:**\n\nThe `fs.ts` file provides a set of utility functions for file operations, including copying files with EJS rendering and recursively reading directories. \n\nKey features:\n\n- Copies files with or without EJS rendering\n- Checks for file overwrite and prompts user for confirmation\n- Handles binary data detection and EJS rendering for text-based files\n- Utilizes libraries `fse` for file operations, `chalk` for logging, and `ejs` for template rendering\n\nMain functions include:\n\n- `readTemplateDirs`: Recursively collects file paths from directories\n- `outputFile`: Writes data to file if it's allowed to be overwritten"}
{"code": "/**\n * The utilities in this file are based on the NPM module `istextorbinary`.\n *\n * The implementation is copied here to reduce dependency overhead\n * and improve compatibility with NodeJS compilers like `@vercel/ncc`.\n *\n * @see the `LICENSE` file at the root of this source tree:\n *   https://github.com/bevry/istextorbinary/blob/master/source/index.ts\n */\n\nimport type Buffer from 'buffer';\nimport * as pathUtil from 'path';\nimport textExtensions from 'textextensions';\nimport binaryExtensions from 'binaryextensions';\n\n/**\n * Determine if the filename and/or buffer is text.\n *\n * Determined by extension checks first (if filename is available), otherwise if\n * the extension is unrecognized or no filename is provided, will perform a\n * slower buffer encoding detection.\n *\n * Extension checks are quicker.\n * Encoding checks cannot guarantee accuracy for chars between utf8 and utf16.\n *\n * The extension checks are performed using the following resources:\n *   - https://github.com/bevry/textextensions", "explanation": "**Summary:**\n\nThis block implements a utility to determine if a file is text or binary based on its extension or content. It uses a combination of extension checks and encoding detection to make the determination. The implementation is copied from the `istextorbinary` NPM module to improve compatibility and reduce dependency overhead.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'core/utils/is-binary.ts' file:\n\nThis file provides a utility function to determine whether a file is text or binary, based on its extension or content. It combines extension checks and encoding detection, and uses fallback functionality to ensure compatibility and reduce dependency overhead. The function can be used with a filename, a buffer, or without any input, and returns a boolean value or null accordingly."}
{"code": " *   - https://github.com/bevry/binaryextensions\n *\n * @param filename The filename for the file/buffer if available\n * @param buffer The buffer for the file if available\n * @returns Will be `null` if neither `filename` nor `buffer` were provided. Otherwise will be a `boolean` value with the detection result.\n */\nfunction isText(filename?: string | null, buffer?: Buffer | null): boolean | null {\n  // Test extensions\n  if (filename) {\n    // Extract filename\n    const parts = pathUtil.basename(filename).split('.').reverse();\n\n    // Cycle extensions\n    for (const extension of parts) {\n      if (textExtensions.includes(extension)) {\n        return true;\n      }\n      if (binaryExtensions.includes(extension)) {\n        return false;\n      }\n    }\n  }\n\n  // Fallback to encoding if extension check was not enough\n  if (buffer) {\n    return getEncoding(buffer) === 'utf8';\n  }\n\n  // No buffer was provided\n  return null;\n}\n\ninterface EncodingOpts {\n  /**\n   * Defaults to 24.\n   */\n  chunkLength?: number;\n\n  /**", "explanation": "**Purpose:**\nDetermines whether a file is text-based or binary.\n\n**Functionality:**\n\n1. If a filename is provided, checks the file extension for common text or binary extensions.\n2. If no filename, but a buffer is provided, checks the encoding of the buffer. If the encoding is 'utf8', returns `true`, indicating text.\n3. If neither filename nor buffer is provided, returns `null`.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'core/utils/is-binary.ts' file:\n\nThis file provides a utility function to determine whether a file is text or binary, based on its extension or content. It combines extension checks and encoding detection, and uses fallback functionality to ensure compatibility and reduce dependency overhead. The function can be used with a filename, a buffer, or without any input, and returns a boolean value or null accordingly."}
{"code": "   * If not provided, will check the start, beginning, and end.\n   */\n  chunkBegin?: number;\n}\n\n/**\n * Get the encoding of a buffer.\n *\n * Checks the start, middle, and end of the buffer for characters that are\n * unrecognized within UTF8 encoding. History has shown that inspection at all\n * three locations is necessary.\n *\n * @returns Will be `null` if `buffer` was not provided. Otherwise will be either `'utf8'` or `'binary'`.\n */\nfunction getEncoding(buffer: Buffer | null, opts?: EncodingOpts): 'utf8' | 'binary' | null {\n  // Check\n  if (!buffer) return null;\n\n  // Prepare\n  const textEncoding = 'utf8';\n  const binaryEncoding = 'binary';\n  const chunkLength = opts?.chunkLength ?? 24;\n  let chunkBegin = opts?.chunkBegin ?? 0;\n\n  // Discover\n  if (opts?.chunkBegin == null) {\n    // Start\n    let encoding = getEncoding(buffer, { chunkLength, chunkBegin });\n    if (encoding === textEncoding) {\n      // Middle\n      chunkBegin = Math.max(0, Math.floor(buffer.length / 2) - chunkLength);", "explanation": "**Purpose:** \nThe function `getEncoding` determines the encoding of a given buffer, specifically whether it's in UTF-8 or binary format.\n\n**Functionality:**\n\n1. Checks the boundary between the buffer, searching for UTF-8 encoding.\n2. If no encoding is found at the start, examines a chunk of 24 bytes in the middle of the buffer.\n3. Returns either 'utf8' for text or 'binary' for non-text, or null if no buffer is provided.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'core/utils/is-binary.ts' file:\n\nThis file provides a utility function to determine whether a file is text or binary, based on its extension or content. It combines extension checks and encoding detection, and uses fallback functionality to ensure compatibility and reduce dependency overhead. The function can be used with a filename, a buffer, or without any input, and returns a boolean value or null accordingly."}
{"code": "      encoding = getEncoding(buffer, {\n        chunkLength,\n        chunkBegin,\n      });\n      if (encoding === textEncoding) {\n        // End\n        chunkBegin = Math.max(0, buffer.length - chunkLength);\n        encoding = getEncoding(buffer, {\n          chunkLength,\n          chunkBegin,\n        });\n      }\n    }\n\n    // Return\n    return encoding;\n  }\n  // Extract\n  const chunkEnd = Math.min(buffer.length, chunkBegin + chunkLength);\n  const contentChunkUTF8 = buffer.toString(textEncoding, chunkBegin, chunkEnd);\n\n  // Detect encoding\n  for (let i = 0; i < contentChunkUTF8.length; ++i) {\n    const charCode = contentChunkUTF8.charCodeAt(i);\n    if (charCode === 65533 || charCode <= 8) {\n      // 8 and below are control characters (e.g. backspace, null, eof, etc.)\n      // 65533 is the unknown character\n      // console.log(charCode, contentChunkUTF8[i])\n      return binaryEncoding;\n    }\n  }\n\n  // Return\n  return textEncoding;\n}\n\n/**\n * Determine if the filename and/or buffer is binary.\n *", "explanation": "**Function Purpose:** \nThis block determines the encoding of a buffer as either binary or text based on its contents.\n\n**Functionality:**\n\n1. Attempts to read a chunk of the buffer as text using the specified text encoding.\n2. If reading the chunk as text results in unknown or control characters, it is deemed binary.\n3. If the buffer can be read as text, the function returns the text encoding.\n4. If the buffer cannot be read as text, the function returns a binary encoding.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'core/utils/is-binary.ts' file:\n\nThis file provides a utility function to determine whether a file is text or binary, based on its extension or content. It combines extension checks and encoding detection, and uses fallback functionality to ensure compatibility and reduce dependency overhead. The function can be used with a filename, a buffer, or without any input, and returns a boolean value or null accordingly."}
{"code": " * Determined by extension checks first (if filename is available), otherwise if\n * the extension is unrecognized or no filename is provided, will perform a\n * slower buffer encoding detection.\n *\n * Extension checks are quicker.\n * Encoding checks cannot guarantee accuracy for chars between utf8 and utf16.\n *\n * The extension checks are performed using the following resources:\n *   - https://github.com/bevry/textextensions\n *   - https://github.com/bevry/binaryextensions\n *\n * @param filename The filename for the file/buffer if available\n * @param buffer The buffer for the file if available\n * @returns Will be `null` if neither `filename` nor `buffer` were provided. Otherwise will be a `boolean` value with the detection result.\n */\nexport function isBinary(filename?: string | null, buffer?: Buffer | null) {\n  const text = isText(filename, buffer);\n  if (text == null) return null;\n  return !text;\n}\n", "explanation": "This block determines whether data is binary or text-based. \n\nFunctionality:\n\n1. It checks the file extension first, using GitHub resources, for quick detection.\n2. If the file extension is unrecognized, it performs a slower buffer encoding detection.\n3. If neither a filename nor a buffer is provided, it returns `null`.\n4. If a filename or buffer is provided, it returns a boolean value indicating whether the data is binary (false) or text (true).\n\nNote: This function uses another function named `isText()` which is not shown in this snippet but seems to return text if the data is text and null if the data is binary.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/is-binary.ts", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'core/utils/is-binary.ts' file:\n\nThis file provides a utility function to determine whether a file is text or binary, based on its extension or content. It combines extension checks and encoding detection, and uses fallback functionality to ensure compatibility and reduce dependency overhead. The function can be used with a filename, a buffer, or without any input, and returns a boolean value or null accordingly."}
{"code": "import fs from 'fs';\n\n/**\n * Creates a directory recursively using NodeJS `fs` promises.\n *\n * Based on the `helpers/make-dir.ts` utility from `create-next-app`.\n *\n * @see the `package.json#license` field at the root of this source tree:\n *   https://github.com/vercel/next.js/blob/master/packages/create-next-app/helpers/make-dir.ts\n */\nexport async function makeDir(root: string, options = { recursive: true }): Promise<void> {\n  await fs.promises.mkdir(root, options);\n}\n", "explanation": "This block creates a directory recursively using NodeJS JavaScript, allowing multiple levels of directories to be created at once. It exports a single async function, `makeDir`, that takes a `root` directory path and an optional `options` object, with the default being recursive.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/make-dir.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the file 'core/utils/make-dir.ts':\n\n\"The `make-dir.ts` file exports a single async function, `makeDir`, which recursively creates a directory at the specified `root` path, optionally configurable through an `options` object.\""}
{"code": "import path from 'path';\nimport { REPO_ROOT } from '../config';\n\n/**\n * Resolve an absolute path relative to the repository root.\n */\nexport function resolveToRoot(...pathSegments: string[]): string {\n  return path.resolve(REPO_ROOT, ...pathSegments);\n}\n\n/**\n * Resolve an absolute path relative to the output directory.\n */\nexport function resolveToDist(...pathSegments: string[]) {\n  return path.resolve(REPO_ROOT, 'dist', ...pathSegments);\n}\n\n/**\n * Get a relative path to the target template.\n */\nexport function getRelativeTemplatePath(scaffoldName: string) {\n  return path.join('scaffolds', scaffoldName, 'template');\n}\n\n/**\n * Resolve an absolute path to the target template.\n *\n * NOTE: this is always resolved from the repository root (not `/dist`),\n * so that we can download templates from the remote repository if necessary.\n */\nexport function getAbsoluteTemplatePath(scaffoldName: string) {\n  return resolveToRoot('scaffolds', scaffoldName, 'template');\n}\n", "explanation": "This block provides functions to handle paths in a repository. It offers:\n\n1. Path resolution relative to the repository root (`resolveToRoot`).\n2. Path resolution relative to the output directory (`resolveToDist`).\n3. Getting a relative path to a template (`getRelativeTemplatePath`).\n4. Getting an absolute path to a template (`getAbsoluteTemplatePath`).\n\nIt uses Node.js's built-in `path` module for path operations and is parameterized for both path segments and other variables.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/path-helpers.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to the point summary of the 'core/utils/path-helpers.ts' file:\n\nThis module provides utility functions for path manipulation, allowing for resolution of paths relative to the repository root and output directory, as well as retrieval of template path references both relatively and absolutely, leveraging Node.js's built-in `path` module."}
{"code": "import path from 'path';\nimport fs from 'fs';\nimport BaseScaffold from 'core/types/BaseScaffold';\nimport { resolveToRoot } from './path-helpers';\nimport { copyFileWithEjsData, readTemplateDirs } from './fs';\n\n// TODO - update templateData type to be more specific\nexport const renderScaffold = async (cwd: string, scaffold: BaseScaffold, templateData: any) => {\n  const basePath = resolveToRoot('scaffolds', scaffold.templateName, 'template');\n  const allDirFilePaths: string[] = [];\n  // typeof scaffold.source being a string means it's a directory and we should copy all files\n  if (typeof scaffold.source === 'string') {\n    readTemplateDirs(basePath, async (err, filePaths) => {\n      if (err) {\n        console.log(err);\n      }\n      for (const filePath of filePaths) {\n        allDirFilePaths.push(filePath);\n      }\n      await copyFilesAndRenameEnv(allDirFilePaths, basePath, cwd, templateData);\n    });\n    // Otherwise it's an array and we should copy all the files in the array\n  } else {", "explanation": "**Purpose:** \nThe `renderScaffold` function is used to render a scaffolding structure based on a given template.\n\n**Functionality:** \nThis function:\n\n1. Resolves the base path to the template directory.\n2. Reads all directory file paths within the template.\n3. If the source is a directory, it copies all files and environment variables are set for the new files.\n\nIt appears to be part of a scaffolding system for generating new project structures, but more context would be helpful for further accuracy.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/renderScaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `core/utils/renderScaffold.ts` file:\n\n**Summary**\n\nThe `renderScaffold` function is part of a scaffolding system used to generate new project structures. It resolves the base path to a template directory, reads file paths recursively, and copies files while replacing relative paths with actual directory paths."}
{"code": "    for (const filePath of scaffold.source) {\n      const resolvedPath = resolveToRoot('scaffolds', scaffold.templateName, 'template', filePath);\n\n      const isDirectory = fs.statSync(resolvedPath).isDirectory();\n      if (isDirectory) {\n        readTemplateDirs(resolvedPath, (err, filePaths) => {\n          if (err) {\n            console.log(err);\n          }\n          for (const sourceFilePath of filePaths) {\n            allDirFilePaths.push(sourceFilePath);\n          }\n        });\n      } else {\n        allDirFilePaths.push(resolvedPath);\n      }\n    }\n    await copyFilesAndRenameEnv(allDirFilePaths, basePath, cwd, templateData);\n  }\n};\n\nasync function copyFilesAndRenameEnv(allDirFilePaths: string[], basePath: string, cwd: string, templateData: any) {\n  for (const filePath of allDirFilePaths) {\n    // eslint-disable-next-line no-await-in-loop\n    await copyFileWithEjsData(filePath, path.join(cwd, filePath.replace(basePath, '')), templateData);\n  }\n  if (fs.existsSync(path.join(cwd, '.env.example'))) {", "explanation": "**Block Purpose:** \nThe block is designed to find and copy files from a scaffolding system, replacing relative paths with actual directory paths.\n\n**Functionality:**\n\n1. It iterates through a list of file paths (`scaffold.source`).\n2. For each file path, it checks if the resolved path is a directory using `fs.statSync`. \n3. If it's a directory, it reads its contents recursively (`readTemplateDirs`) and pushes the resulting file paths to `allDirFilePaths`.\n4. If it's a file, it directly pushes the file path to `allDirFilePaths`.\n5. After gathering all file paths, it calls `copyFilesAndRenameEnv` to copy and replace environment variables.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/renderScaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `core/utils/renderScaffold.ts` file:\n\n**Summary**\n\nThe `renderScaffold` function is part of a scaffolding system used to generate new project structures. It resolves the base path to a template directory, reads file paths recursively, and copies files while replacing relative paths with actual directory paths."}
{"code": "    fs.renameSync(path.join(cwd, '.env.example'), path.join(cwd, '.env'));\n  }\n}\n", "explanation": "This block renames a file from '.env.example' to '.env' in the current working directory (cwd) synchronously.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/renderScaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `core/utils/renderScaffold.ts` file:\n\n**Summary**\n\nThe `renderScaffold` function is part of a scaffolding system used to generate new project structures. It resolves the base path to a template directory, reads file paths recursively, and copies files while replacing relative paths with actual directory paths."}
{"code": "/* eslint-disable consistent-return */\n\n/**\n * The utilities in this file are based on the\n * `helpers/examples.ts` module from `create-next-app`.\n *\n * @see the `package.json#license` field at the root of this source tree:\n *   https://github.com/vercel/next.js/blob/master/packages/create-next-app/helpers/examples.ts\n */\n\nimport { Stream } from 'stream';\nimport { promisify } from 'util';\nimport { URL } from 'url';\nimport path from 'path';\nimport tar from 'tar';\nimport got from 'got';\n\nconst pipeline = promisify(Stream.pipeline);\n\ninterface RepoInfo {\n  username: string;\n  name: string;\n  branch: string;\n  filePath: string;\n}\n\n/**\n * Gets repository information for the given remote\n * `url` (must be a GitHub origin) and `templatePath`.\n */\nexport async function getRepoInfo(url: URL, templatePath?: string): Promise<RepoInfo | undefined> {\n  const [, username, name, t, _branch, ...file] = url.pathname.split('/');\n  const filePath = templatePath ? templatePath.replace(/^\\//, '') : file.join('/');\n", "explanation": "**Summary of Block Functionality:**\n\nThis block is a JavaScript module that imports various utility functions and libraries. It exports a single function, `getRepoInfo`, which retrieves information about a GitHub repository given a URL and optional template path. \n\n**Key Functionality:**\n\n- Parses a GitHub repository URL to extract information about the repository (username, name, branch, and file path).\n- Returns a `RepoInfo` object with the extracted information.\n- Supports optional template path for customizing the file path.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/repo.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point holistic summary of the 'core/utils/repo.ts' file:\n\nThe 'core/utils/repo.ts' file imports utility functions and libraries to export a single function, `getRepoInfo`, which retrieves information about a GitHub repository. It parses a GitHub repository URL to extract information and returns a `RepoInfo` object. The file also supports downloading and extracting repository archives from a specified GitHub repository to a target directory."}
{"code": "  // If examplePath is available, the branch name takes the entire path\n  const branch = templatePath ? `${_branch}/${file.join('/')}`.replace(new RegExp(`/${filePath}|/$`), '') : _branch;\n\n  if (username && name && branch && t === 'tree') {\n    return { username, name, branch, filePath: filePath.split(path.sep).join('/') };\n  }\n}\n\n/**\n * Downloads an archive of the template repository using the given `RepoInfo`.\n * The archive is extracted at the given `root`, which is expected to already\n * exist before calling this function.\n */\nexport function downloadAndExtractRepo(root: string, { username, name, branch, filePath }: RepoInfo): Promise<void> {\n  return pipeline(\n    got.stream(`https://codeload.github.com/${username}/${name}/tar.gz/${branch}`),\n    tar.extract({ cwd: root, strip: filePath ? filePath.split('/').length + 1 : 1 }, [\n      `${name}-${branch}${filePath ? `/${filePath}` : ''}`,\n    ]),\n  );\n}\n", "explanation": "**Summary:**\n\nThis code is composed of two main parts:\n\n1. **Branch Path Resolver:** Resolves the branch path by either taking the entire path if `templatePath` is available, or using the `_branch` variable. It then extracts the effective `branch`, `username`, and `filePath` from the resolved path.\n\n2. **Archive Downloader and Extractor:** Downloads an archive of a GitHub repository using `got` and extracts it to a specified `root` directory using `tar`. The `username`, `name`, `branch`, and `filePath` parameters determine the repository URL and extraction target. It returns a `Promise<void>` indicating the extraction process has completed.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/repo.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point holistic summary of the 'core/utils/repo.ts' file:\n\nThe 'core/utils/repo.ts' file imports utility functions and libraries to export a single function, `getRepoInfo`, which retrieves information about a GitHub repository. It parses a GitHub repository URL to extract information and returns a `RepoInfo` object. The file also supports downloading and extracting repository archives from a specified GitHub repository to a target directory."}
{"code": "/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\n\nimport fs from 'fs';\nimport { ExecaCommand } from 'core/types/BaseScaffold';\nimport { getAbsoluteTemplatePath, resolveToDist, resolveToRoot } from './path-helpers';\nimport type { CreateMagicAppData } from '../create-app';\nimport type { Flags, ValueType } from '../flags';\n\n/**\n * Metadata about the scaffold being defined.\n */\ntype ScaffoldMetadata<T extends Record<string, ValueType> = Record<string, any>> = {\n  /**\n   * This will be printed as the display name for this scaffold\n   * under the standard templates prompt.\n   */\n  shortDescription: string;\n\n  /**\n   * If true, shows this scaffold with greater prominence in the templates\n   * prompt. If provided with an object containing a numeric `order` field, that\n   * will be used to sort this scaffold amongst the other featured scaffolds.\n   */", "explanation": "This block defines a type `ScaffoldMetadata` that holds metadata about a scaffold. It contains two properties:\n\n1. `shortDescription`: a string that will be displayed as the scaffold's name in a templates prompt.\n2. `featured`: a boolean Optional to represent if this scaffold should be shown with greater prominence or an object that holds an order, for sorting amongst other featured scaffolds", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/scaffold-helpers.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'core/utils/scaffold-helpers.ts':\n\nThis file provides scaffolding utilities for setting up and accessing project scaffolding tools. It includes types and functions for defining and retrieving scaffold metadata, definitions, and managing project directories. Key functions include getting a scaffold definition from a file and creating/probing a project directory."}
{"code": "  featured?: boolean | { order: number };\n\n  /**\n   * Provides an optional shell command to install dependencies\n   * required by the scaffolded project.\n   */\n  installDependenciesCommand?: ExecaCommand | ((data: T & CreateMagicAppData) => ExecaCommand);\n\n  /**\n   * Provides an optional shell command to start the scaffolded project.\n   */\n  startCommand?: ExecaCommand | ((data: T & CreateMagicAppData) => ExecaCommand);\n\n  /**\n   * Provides metadata about CLI flags that may be used\n   * to input template data for this scaffold.\n   */\n  flags: Flags<Partial<T>>;\n};\n\nexport type ScaffoldDefinition<T extends Record<string, ValueType> = Record<string, any>> = ScaffoldMetadata<T>;\n\n/**\n * Gets the definition object for a scaffolding template.\n */\nexport function getScaffoldDefinition(scaffoldName: string): ScaffoldDefinition {\n  // We are requiring this file in context of the\n  // transpiled `/dist` output, so we use a JS extension...", "explanation": "**Summary:**\n\nThis code defines a structure for a scaffolding template. It contains optional properties for custom installation and start commands, as well as metadata for CLI flags to input template data. It also exports a type `ScaffoldDefinition` and a function `getScaffoldDefinition` to retrieve the definition object for a specific scaffolding template.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/scaffold-helpers.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'core/utils/scaffold-helpers.ts':\n\nThis file provides scaffolding utilities for setting up and accessing project scaffolding tools. It includes types and functions for defining and retrieving scaffold metadata, definitions, and managing project directories. Key functions include getting a scaffold definition from a file and creating/probing a project directory."}
{"code": "  return require(resolveToDist('scaffolds', scaffoldName, 'scaffold.js')).definition;\n}\n\n/**\n * Creates a new project directory if it doesn't exist and makes it cwd.\n * @param cwd Destination directory where the scaffold will be created\n * @param projectName Project name\n */\nexport function createProjectDirIfDoesntExists(cwd: string, projectName: string) {\n  if (!fs.existsSync(resolveToRoot(cwd, projectName))) {\n    fs.mkdirSync(resolveToRoot(cwd, projectName));\n  }\n  process.chdir(projectName);\n}\n", "explanation": "This block appears to be a JavaScript code snippet, likely part of a higher-level program like a project or scaffolding tool. \n\nThe two functions in this block serve the following purposes:\n\n1. **Gets scaffold definition**: Retrieves a scaffold definition from a file (`scaffold.js`) in the specified scaffolds directory.\n2. **Creates and sets project directory**: Creates a new project directory if it does not exist and sets the current working directory (cwd) to this new directory.\n\nIn summary, this block is responsible for setting up and accessing project scaffolding tools.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/scaffold-helpers.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'core/utils/scaffold-helpers.ts':\n\nThis file provides scaffolding utilities for setting up and accessing project scaffolding tools. It includes types and functions for defining and retrieving scaffold metadata, definitions, and managing project directories. Key functions include getting a scaffold definition from a file and creating/probing a project directory."}
{"code": "export const ShutdownSignals = [\n  'SIGHUP',\n  'SIGINT',\n  'SIGQUIT',\n  'SIGILL',\n  'SIGTRAP',\n  'SIGABRT',\n  'SIGBUS',\n  'SIGFPE',\n  'SIGSEGV',\n  'SIGUSR1',\n  'SIGUSR2',\n  'SIGTERM',\n] as const;\nexport type ShutdownSignal = (typeof ShutdownSignals)[number];\n\ntype ShutdownTask = (reason: { signal: ShutdownSignal } | { code: number }) => void | Promise<void>;\n\ninterface ShutdownState {\n  tasks: Set<ShutdownTask>;\n  isShuttingDown: boolean;\n}\n\nconst state: ShutdownState = {\n  tasks: new Set(),\n  isShuttingDown: false,\n};\n\n/**\n * Attach the given `task` to `process`\n * events for known shutdown signals.\n */\nexport function addShutdownTask(task: ShutdownTask) {\n  state.tasks.add(task);\n}\n\n/**\n * Remove the given `task` from `process`\n * events for known shutdown signals.\n */\nexport function removeShutdownTask(task: ShutdownTask) {\n  state.tasks.delete(task);\n}\n\n/**\n * Create process listeners for\n * each registered shutdown signal.\n */\nexport function useGracefulShutdown() {\n  process.stdin.resume();\n", "explanation": "**Purpose:** Manage process shutdown tasks and signal listeners.\n\n**Functionality:** Attach, remove, and execute tasks when a registered shutdown signal occurs, providing a way to handle process shutdown gracefully.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/shutdown.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'core/utils/shutdown.ts':\n\nThe 'core/utils/shutdown.ts' file handles process shutdown tasks and signal listeners. It registers shutdown event listeners for various signals and ensures cleanup of pending tasks before exiting the process with a specified exit status when a registered shutdown signal occurs."}
{"code": "  ShutdownSignals.forEach((signal) => {\n    const onShutdown = async () => {\n      if (state.isShuttingDown) return;\n      state.isShuttingDown = true;\n\n      await handleShutdownTasks({ signal });\n\n      process.exit();\n    };\n\n    process.on(signal, onShutdown as any);\n  });\n}\n\nasync function handleShutdownTasks(reason: { signal: ShutdownSignal } | { code: number }) {\n  const shutdownPromises = [...state.tasks.values()].map((task) => Promise.resolve(task(reason)));\n  await Promise.all(shutdownPromises);\n}\n\n/**\n * Shutdown process in a way that allows for cleanup\n * @param code exit status\n */\nexport function shutdown(code: number) {\n  handleShutdownTasks({ code });\n  process.exit(code);\n}\n", "explanation": "**Purpose:** This block handles system shutdowns and ensures cleanup of pending tasks before exiting the process.\n\n**Functionality:**\n\n1. Registers shutdown event listeners for various signals (e.g., Ctrl+C, Ctrl+Z, SIGTERM).\n2. Upon receiving a shutdown signal, calls the `handleShutdownTasks` function to resolve pending tasks.\n3. If shutdown is already in progress, skips further actions.\n4. Exits the process with a specified exit status (code).\n\n**Support functions:**\n\n1. `handleShutdownTasks` - Resolves pending tasks by passing a reason object to each task.\n2. `shutdown` - A function to exit the process with a specified exit status after calling `handleShutdownTasks`.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/shutdown.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'core/utils/shutdown.ts':\n\nThe 'core/utils/shutdown.ts' file handles process shutdown tasks and signal listeners. It registers shutdown event listeners for various signals and ensures cleanup of pending tasks before exiting the process with a specified exit status when a registered shutdown signal occurs."}
{"code": "/**\n * This will prevent specific experimental warnings from being logged\n * to the console. For example if in Node 18 you are using the now native\n * fetch, you will see a warning about it.\n * To suppress this warning:\n *\n * import suppressWarnings from './suppress-experimental-warnings';\n * suppressWarnings.fetch();\n */\nimport process from 'process';\nconst originalEmit = process.emit;\n\nexport default {\n  fetch: function () {\n    process.emit = function (name, data) {\n      if (\n        name === 'warning' &&\n        typeof data === 'object' &&\n        data.name === 'ExperimentalWarning' &&\n        data.message.includes('The Fetch API is an experimental feature')\n      ) {\n        return false;\n      }\n      return originalEmit.apply(process, arguments);\n    };\n  },\n};\n", "explanation": "**Summary**: This block suppresses specific experimental warnings, such as those about the Fetch API in Node 18, from being logged to the console. It temporarily overrides the built-in `process.emit` function to ignore warnings matching specific criteria, then restores its original behavior when the `fetch` function is called.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/suppress-experimental-warnings.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'core/utils/suppress-experimental-warnings.js':\n\n\"This module suppresses experimental warnings in Node 18, specifically those relating to the Fetch API, by temporarily overriding the built-in `process.emit` function until the `fetch` function is called.\""}
{"code": "import { Ora, Spinner } from 'ora';\nimport {\n  AuthTypePrompt,\n  BlockchainNetworkPrompt,\n  ConfigurationPrompt,\n  ProjectNamePrompt,\n  PublishableApiKeyPrompt,\n} from 'scaffolds/prompts';\nimport { CreateMagicAppConfig, pauseTimerAndSpinner } from 'core/create-app';\nimport { makeInputsLowercase } from 'core/flags';\nimport BaseScaffold from '../types/BaseScaffold';\nimport DedicatedScaffold, { flags as dedicatedFlags } from '../../scaffolds/nextjs-dedicated-wallet/scaffold';\nimport FlowDedicatedScaffold, {\n  flags as flowDedicatedFlags,\n} from '../../scaffolds/nextjs-flow-dedicated-wallet/scaffold';\nimport SolanaDedicatedScaffold, {\n  flags as solanaDedicatedFlags,\n} from '../../scaffolds/nextjs-solana-dedicated-wallet/scaffold';\nimport { Timer } from './timer';\n\nexport type Chain = 'evm' | 'solana' | 'flow';\nexport type Template = 'nextjs-dedicated-wallet' | 'nextjs-solana-dedicated-wallet' | 'nextjs-flow-dedicated-wallet';\n\ntype ConfigType = CreateMagicAppConfig & {\n  chain: Chain | undefined;", "explanation": "**Purpose:**\n\nThis block is a collection of imports and type declarations for scaffolding and configuration in a Next.js application.\n\n**Functionality:**\n\n- Imports prompts, spinners, and configurations for scaffolding\n- Defines scaffolds and their associated flags\n- Declares types for chain and template options\n- Extends the CreateMagicAppConfig with a chain property", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**core/utils/templateMappings.ts Summary**\n\nThis file is responsible for mapping templates to their corresponding chain types and scaffold configurations in a Next.js application. It contains functions for:\n\n- Mapping a template to a chain type ('evm', 'solana', or 'flow') based on template name.\n- Configuring scaffold settings based on template type and user input, including network selection, publishable API key, and login methods.\n- Customizing an application configuration based on a given template and handling different template types.\n\nIt guides the user through selecting a template and configuring necessary settings before creating a scaffold for the chosen template, making it an essential part of a wizard or setup process for development environments."}
{"code": "  configuration: string | undefined;\n  isChosenTemplateValid: boolean;\n  isQuickstart: boolean;\n};\n\nfunction mapTemplateToChain(template: string): Chain | undefined {\n  switch (template) {\n    case 'nextjs-dedicated-wallet':\n      return 'evm';\n    case 'nextjs-solana-dedicated-wallet':\n      return 'solana';\n    case 'nextjs-flow-dedicated-wallet':\n      return 'flow';\n    default:\n      return undefined;\n  }\n}\n\nexport async function mapTemplateToScaffold(\n  template: string,\n  appData: any,\n  spinner: Ora,\n  timer: Timer,\n): Promise<BaseScaffold> {\n  const data = appData;\n  data.network = makeInputsLowercase(data.network);\n  pauseTimerAndSpinner(timer, spinner);\n  if (!data.publishableApiKey) {\n    data.publishableApiKey = await PublishableApiKeyPrompt.publishableApiKeyPrompt();\n  }\n  switch (template) {\n    case 'nextjs-dedicated-wallet':\n      if (!data.network) {\n        data.network = await BlockchainNetworkPrompt.evmNetworkPrompt();\n      }\n\n      if (data.isQuickstart) {\n        data.loginMethods = ['Email OTP'];", "explanation": "**Block Purpose and Functionality:**\n\nThis block is responsible for mapping templates to their corresponding chain types and scaffold configurations. It contains two main functions:\n\n1. `mapTemplateToChain(template: string)`: maps a given template to a chain type ('evm', 'solana', or 'flow') based on template name.\n2. `mapTemplateToScaffold(template: string, appData: any, spinner: Ora, timer: Timer)`: prepares the scaffold configuration for a given template by handling network selection, publishable API key, and login methods based on template type and user input.\n\nThe block uses switches to handle different template cases and returns the corresponding configurations or chain types.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**core/utils/templateMappings.ts Summary**\n\nThis file is responsible for mapping templates to their corresponding chain types and scaffold configurations in a Next.js application. It contains functions for:\n\n- Mapping a template to a chain type ('evm', 'solana', or 'flow') based on template name.\n- Configuring scaffold settings based on template type and user input, including network selection, publishable API key, and login methods.\n- Customizing an application configuration based on a given template and handling different template types.\n\nIt guides the user through selecting a template and configuring necessary settings before creating a scaffold for the chosen template, making it an essential part of a wizard or setup process for development environments."}
{"code": "      } else if (!data.loginMethods || data.loginMethods.length === 0) {\n        data.loginMethods = await AuthTypePrompt.loginMethodsPrompt();\n      }\n      return new DedicatedScaffold(data);\n    case 'nextjs-solana-dedicated-wallet':\n      if (!data.network) {\n        data.network = await BlockchainNetworkPrompt.solanaNetworkPrompt();\n      }\n      if (!data.loginMethods || data.loginMethods.length === 0) {\n        data.loginMethods = await AuthTypePrompt.loginMethodsPrompt();\n      }\n      return new SolanaDedicatedScaffold(data);\n    case 'nextjs-flow-dedicated-wallet':\n      if (!data.network) {\n        data.network = await BlockchainNetworkPrompt.flowNetworkPrompt();\n      }\n      if (!data.loginMethods || data.loginMethods.length === 0) {\n        data.loginMethods = await AuthTypePrompt.loginMethodsPrompt();\n      }\n      return new FlowDedicatedScaffold(data);\n    default:\n      throw new Error(`Invalid template: ${template}`);\n  }\n}\n\nexport function mapTemplateToFlags(template: string): any {", "explanation": "**Summary:** This block is a function that maps a given template to a set of flags, including network and login methods, and creates an instance of a corresponding scaffold class based on the template. \n\n**Functionality:** It takes a template string as input and:\n\n- Prompts the user for network information if not provided.\n- Prompts the user for login methods if none are provided.\n- Returns an instance of a scaffold class (e.g., DedicatedScaffold, SolanaDedicatedScaffold, or FlowDedicatedScaffold) based on the template, passing the gathered data to the constructor. \n\n**Purpose:** This function appears to be part of a wizard or setup process for a development environment, where it guides the user through selecting a template and configuring necessary settings before creating a scaffold (likely a project structure or base code) for the chosen template.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**core/utils/templateMappings.ts Summary**\n\nThis file is responsible for mapping templates to their corresponding chain types and scaffold configurations in a Next.js application. It contains functions for:\n\n- Mapping a template to a chain type ('evm', 'solana', or 'flow') based on template name.\n- Configuring scaffold settings based on template type and user input, including network selection, publishable API key, and login methods.\n- Customizing an application configuration based on a given template and handling different template types.\n\nIt guides the user through selecting a template and configuring necessary settings before creating a scaffold for the chosen template, making it an essential part of a wizard or setup process for development environments."}
{"code": "  switch (template) {\n    case 'nextjs-dedicated-wallet':\n      return dedicatedFlags;\n    case 'nextjs-solana-dedicated-wallet':\n      return solanaDedicatedFlags;\n    case 'nextjs-flow-dedicated-wallet':\n      return flowDedicatedFlags;\n    default:\n      throw new Error(`Invalid template: ${template}`);\n  }\n}\n\nconst quickstartConfig = (config: ConfigType): ConfigType => ({\n  ...config,\n  template: 'nextjs-dedicated-wallet',\n  network: 'polygon-amoy',\n  chain: 'evm',\n  isChosenTemplateValid: true,\n  isQuickstart: true,\n});\n\nconst solanaConfig = async (config: ConfigType): Promise<ConfigType> => ({\n  ...config,\n  template: 'nextjs-solana-dedicated-wallet',\n  network: await BlockchainNetworkPrompt.solanaNetworkPrompt(),\n  chain: 'solana',\n  isChosenTemplateValid: true,\n  isQuickstart: false,\n});\n\nexport const buildTemplate = async (appConfig: ConfigType): Promise<ConfigType> => {\n  let config = { ...appConfig };\n\n  if (!config.projectName) {\n    config.projectName = await ProjectNamePrompt.askProjectName();\n  }\n", "explanation": "**Summary:**\n\nThis block is a function called `buildTemplate` that customizes an application configuration (`ConfigType`) based on a given template. \n\n**Functionality:**\n\n1. It checks the provided `template` parameter and returns a corresponding configuration.\n2. If no `projectName` is provided, it prompts the user to enter one.\n3. It handles different template types (such as Next.js with dedicated wallets for Solana, Flow, etc.).\n4. It uses a default configuration if the provided `template` is invalid.\n\n**Key Outputs:**\n\n- A customized configuration object (`ConfigType`) with the selected template and associated parameters.\n- The `isChosenTemplateValid` flag set to true.\n- The `isQuickstart` flag set to true by default, but changed to false when using the Solana template.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**core/utils/templateMappings.ts Summary**\n\nThis file is responsible for mapping templates to their corresponding chain types and scaffold configurations in a Next.js application. It contains functions for:\n\n- Mapping a template to a chain type ('evm', 'solana', or 'flow') based on template name.\n- Configuring scaffold settings based on template type and user input, including network selection, publishable API key, and login methods.\n- Customizing an application configuration based on a given template and handling different template types.\n\nIt guides the user through selecting a template and configuring necessary settings before creating a scaffold for the chosen template, making it an essential part of a wizard or setup process for development environments."}
{"code": "  if (!config.template) {\n    config.configuration = await ConfigurationPrompt.askConfiguration();\n\n    if (config.configuration === 'quickstart') {\n      return quickstartConfig(config);\n    }\n  } else {\n    config.chain = mapTemplateToChain(config.template);\n  }\n\n  if (!config.chain) {\n    config.chain = await BlockchainNetworkPrompt.chainPrompt();\n  }\n\n  if (!config.network) {\n    switch (config.chain) {\n      case 'solana':\n        config = await solanaConfig(config);\n        break;\n      case 'flow':\n        config.network = await BlockchainNetworkPrompt.flowNetworkPrompt();\n        break;\n      case 'evm':\n        config.network = await BlockchainNetworkPrompt.evmNetworkPrompt();\n        break;\n      default:\n        config.network = await BlockchainNetworkPrompt.evmNetworkPrompt();\n        break;\n    }\n  } else {\n    const evmNetworks = [\n      'ethereum',\n      'ethereum-sepolia',\n      'polygon',\n      'polygon-amoy',\n      'etherlink',\n      'etherlink-testnet',\n      'zksync',\n      'zksync-sepolia',\n    ];", "explanation": "**Summary:** \n\nThis block checks and sets configuration options for blockchain interactions. It prompts the user for configuration if not provided and maps a template to a chain if it's available. It then determines the chain and network based on user input or default options, depending on the chain type. \n\n**Key Functionality:** \n\n1. Configures blockchain interactions based on user input\n2. Prompts user for configuration and maps template to chain if provided\n3. Determines chain and network based on user input or default options", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**core/utils/templateMappings.ts Summary**\n\nThis file is responsible for mapping templates to their corresponding chain types and scaffold configurations in a Next.js application. It contains functions for:\n\n- Mapping a template to a chain type ('evm', 'solana', or 'flow') based on template name.\n- Configuring scaffold settings based on template type and user input, including network selection, publishable API key, and login methods.\n- Customizing an application configuration based on a given template and handling different template types.\n\nIt guides the user through selecting a template and configuring necessary settings before creating a scaffold for the chosen template, making it an essential part of a wizard or setup process for development environments."}
{"code": "    const solanaNetworks = ['solana-devnet', 'solana-mainnet'];\n\n    if (evmNetworks.includes(config.network)) {\n      config.chain = 'evm';\n    } else if (solanaNetworks.includes(config.network)) {\n      config.chain = 'solana';\n    } else {\n      config.chain = 'flow';\n    }\n  }\n\n  config.template = config.chain === 'flow' ? 'nextjs-flow-dedicated-wallet' : 'nextjs-dedicated-wallet';\n  config.isChosenTemplateValid = true;\n\n  return config;\n};\n", "explanation": "**Functionality Summary:**\n\nThis block determines the type of blockchain (EVM, Solana, or Flow) based on the provided network and sets the corresponding chain type in the configuration object. It also selects a template based on the chain type and marks it as valid.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/templateMappings.ts", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**core/utils/templateMappings.ts Summary**\n\nThis file is responsible for mapping templates to their corresponding chain types and scaffold configurations in a Next.js application. It contains functions for:\n\n- Mapping a template to a chain type ('evm', 'solana', or 'flow') based on template name.\n- Configuring scaffold settings based on template type and user input, including network selection, publishable API key, and login methods.\n- Customizing an application configuration based on a given template and handling different template types.\n\nIt guides the user through selecting a template and configuring necessary settings before creating a scaffold for the chosen template, making it an essential part of a wizard or setup process for development environments."}
{"code": "export type HrTime = [number, number];\n\n/**\n * Calculate the difference between two Node hrtime (`[second, nanosecond]`)\n * tuples.\n *\n * Based on the `diff-hrtime` NPM package.\n *\n * @see the `package.json#license` field at the root of this source tree:\n *   https://github.com/firefoxes/diff-hrtime/blob/master/index.js\n */\nfunction subtractTime(a: HrTime, b: HrTime): HrTime {\n  // Capture seconds and nanoseconds\n  const [aS, aNS] = a;\n  const [bS, bNS] = b;\n  let ns = aNS - bNS; // Nanoseconds delta\n  let s = aS - bS; // Seconds delta\n\n  // If we have overflow nanoseconds\n  if (ns >= 1e9) {\n    s -= 1; // Subtract a second\n    ns += 1e9; // Add a billion nanoseconds\n  }\n\n  return [s, ns];\n}\n\nexport function createTimer() {\n  let startTime: HrTime;\n  let pauses: HrTime[] = [];\n  let resumes: HrTime[] = [];\n\n  return {\n    start() {\n      startTime = process.hrtime();\n      pauses = [];\n      resumes = [];\n    },\n\n    pause() {\n      pauses.push(process.hrtime());\n    },\n\n    resume() {", "explanation": "**Summary:**\n\nThis block of code provides a timer library for measuring elapsed time. It includes:\n\n1. A `subtractTime` function to calculate the difference between two Node hrtime timestamps.\n2. A `createTimer` function that returns an object with methods to:\n\t* Start a timer.\n\t* Pause the timer (storing the current timestamp).\n\t* Resume the timer (adding the pause delta to the elapsed time).\n\nThe library aims to provide accurate timing measurements with handling of nanosecond-level precision and second-level resolution.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/timer.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Core Timer Library**\n\nThis file implements a timer library for accurate time measurements, supporting stopwatch functionality and nanosecond-level precision. It includes two primary functions:\n\n* `subtractTime`: Calculates the difference between two Node hrtime timestamps.\n* `createTimer`: Returns an object with start, pause, and resume methods, enabling users to track multiple time intervals and measure the total elapsed time since the start."}
{"code": "      resumes.push(process.hrtime(pauses.pop()));\n    },\n\n    stop() {\n      return resumes.reduce((prev, curr) => subtractTime(prev, curr), process.hrtime(startTime));\n    },\n  };\n}\n\nexport type Timer = ReturnType<typeof createTimer>;\n", "explanation": "This code is used to implement a timer with stopwatch functionality, allowing users to track the time elapsed between multiple events.\n\nKey features:\n\n- Tracks multiple time intervals (resumes) and aggregates them.\n- Provides a start/stop functionality, measuring the total time elapsed since the start.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/timer.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Core Timer Library**\n\nThis file implements a timer library for accurate time measurements, supporting stopwatch functionality and nanosecond-level precision. It includes two primary functions:\n\n* `subtractTime`: Calculates the difference between two Node hrtime timestamps.\n* `createTimer`: Returns an object with start, pause, and resume methods, enabling users to track multiple time intervals and measure the total elapsed time since the start."}
{"code": "/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport crypto from 'crypto';\nimport { loadConfig, saveConfig } from '../config';\n\nexport const initializeUsageConfigIfneeded = async (): Promise<boolean> => {\n  let config = await loadConfig();\n\n  if (!config) {\n    config = { shouldTrackUsageData: true };\n    await saveConfig(config);\n  }\n\n  if ((config.shouldTrackUsageData ?? false) && !config.id) {\n    config.id = crypto.randomUUID();\n    await saveConfig(config);\n  }\n\n  return config.shouldTrackUsageData ?? false;\n};\n\nexport const modifyUsageConsent = async (shouldTrackUsageData: boolean) => {\n  let config = await loadConfig();\n  config = { ...config, shouldTrackUsageData };\n  await saveConfig(config);\n  return config?.shouldTrackUsageData ?? false;\n};\n", "explanation": "**Purpose and Functionality:**\n\nThis code block manages user usage tracking consent settings for an application.\n\n**Key Functions:**\n\n1. `initializeUsageConfigIfneeded`: Initializes or updates the usage tracking configuration if it doesn't exist, generates a unique ID if needed, and returns the tracked data setting.\n2. `modifyUsageConsent`: Updates the user's tracked data setting and saves the new configuration.\n\n**Note:** This code seems to be designed to support GDPR-like consent mechanisms, where the user can opt-out of usage tracking.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "core/utils/usagePermissions.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the file 'core/utils/usagePermissions.ts':\n\nThis file manages user consent for application usage tracking, supporting GDPR-like opt-out mechanisms. It provides functions for initializing and updating usage tracking configuration, including generating unique IDs and saving user preferences."}
{"code": "export const templateDevData = {\n  'nextjs-dedicated-wallet': {\n    network: 'ethereum-sepolia',\n    publishableApiKey: 'pk_live_FD2D70B32ABE11BD',\n    loginMethods: ['EmailOTP', 'SMSOTP'],\n    projectName: 'My Dedicated Wallet',\n  },\n  'nextjs-flow-dedicated-wallet': {\n    network: 'flow-testnet',\n    publishableApiKey: 'pk_live_FD2D70B32ABE11BD',\n    loginMethods: ['EmailOTP', 'SMSOTP'],\n    projectName: 'My Flow Dedicated Wallet',\n  },\n  'nextjs-solana-dedicated-wallet': {\n    network: 'solana-devnet',\n    publishableApiKey: 'pk_live_FD2D70B32ABE11BD',\n    loginMethods: ['EmailOTP', 'SMSOTP'],\n    projectName: 'My Solana Dedicated Wallet',\n  },\n};\n", "explanation": "This block is an object (JSON) named `templateDevData` that contains configuration settings for multiple dedicated wallet projects, likely for web applications. \n\nIt has the following functionality:\n\n- Stores project-specific settings in key-value pairs.\n- Allows for easy configuration and modification of wallet settings.\n\nEach key in the object represents a unique project, with its own settings for \n- Network (e.g., Ethereum-Sepolia, Flow-Testnet, Solana-Devnet)\n- Publishable API Key\n- Supported login methods\n- Project name. \n\nThis structure can be easily used to generate different wallet configurations based on the project being developed.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/dev-data.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/dev-data.ts':\n\n`scaffolds/dev-data.ts` contains the `templateDevData` object, a configurable settings hub for multiple dedicated wallet projects. It stores project-specific settings in key-value pairs, enabling easy modification of wallet configurations for various projects."}
{"code": "import { Flags } from '../../core/flags';\nimport BaseScaffold, { ExecaCommand } from '../../core/types/BaseScaffold';\nimport { AuthTypePrompt, BlockchainNetworkPrompt, PublishableApiKeyPrompt } from '../prompts';\n\nexport type Data = BlockchainNetworkPrompt.Data & PublishableApiKeyPrompt.Data & AuthTypePrompt.Data;\n\nexport const flags: Flags<Partial<Data>> = {\n  ...BlockchainNetworkPrompt.flags,\n  ...PublishableApiKeyPrompt.flags,\n  ...AuthTypePrompt.flags,\n};\n\nexport const definition = {\n  shortDescription: 'A dedicated wallet scaffold for Next.js',\n  featured: true,\n};\n\nexport default class DedicatedScaffold extends BaseScaffold {\n  public templateName = 'nextjs-dedicated-wallet';\n  private data: Data;\n  public installationCommand: ExecaCommand = { command: 'npm', args: ['install'] };\n  public startCommand: ExecaCommand = { command: 'npm', args: ['run', 'dev'] };\n  public source: string | string[] = [\n    './public/favicon.ico',\n    './public/logo.svg',\n    './public/info.svg',\n    './public/link.svg',", "explanation": "This block appears to be a definition for a \"DedicatedScaffold\" class, which is a type of template generator for Next.js applications. \n\nIts purpose is to provide a scaffold for a dedicated wallet application, allowing users to easily set up and configure the application.\n\nThe functionality includes:\n\n- Generating a Next.js project based on a template\n- Asking users for specific data (Blockchain network, publishable API key, and authentication type)\n- Installing dependencies using npm\n- Running a development server", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/scaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/scaffold.ts':\n\nThis file contains the implementation of a Next.js application scaffold generator for a dedicated wallet. The scaffold is designed to guide users through the setup and configuration of the wallet application, prompting them for specific data (blockchain network, API key, and authentication type). The scaffold generates the project based on a template, installs necessary dependencies, and starts the development server. It also incorporates user-defined authentication type to dynamically load project resources (source code files and social media logos)."}
{"code": "    './public/link_white.svg',\n    './public/redirect_bg.png',\n    './public/login_bg.png',\n    './.env.example',\n    './.eslintrc.json',\n    './.gitignore',\n    './package.json',\n    './postcss.config.js',\n    './tailwind.config.js',\n    './tsconfig.json',\n    './README.md',\n    './src/components/ui',\n    './src/components/magic/cards',\n    './src/components/magic/wallet-methods/Disconnect.tsx',\n    './src/components/magic/wallet-methods/GetIdToken.tsx',\n    './src/components/magic/wallet-methods/GetMetadata.tsx',\n    './src/components/magic/Login.tsx',\n    './src/hooks/MagicProvider.tsx',\n    './src/hooks/Web3.tsx',\n    './src/pages',\n    './src/styles',\n    './src/utils',\n  ];\n\n  constructor(data: Data) {\n    super();\n    this.data = data;\n\n    if (typeof this.source !== 'string') {\n      this.data.loginMethods = this.data.loginMethods.map((authType) =>\n        AuthTypePrompt.mapInputToLoginMethods(authType),\n      );\n      this.data.loginMethods.forEach((authType) => {", "explanation": "This block appears to be a list of file paths and directories within a project, possibly in TypeScript or JavaScript. \n\nThe purpose of this block is to define the data used in a constructor of a class.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/scaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/scaffold.ts':\n\nThis file contains the implementation of a Next.js application scaffold generator for a dedicated wallet. The scaffold is designed to guide users through the setup and configuration of the wallet application, prompting them for specific data (blockchain network, API key, and authentication type). The scaffold generates the project based on a template, installs necessary dependencies, and starts the development server. It also incorporates user-defined authentication type to dynamically load project resources (source code files and social media logos)."}
{"code": "        (this.source as string[]).push(`./src/components/magic/auth/${authType}.tsx`);\n        if (\n          authType === 'Discord' ||\n          authType === 'Facebook' ||\n          authType === 'Github' ||\n          authType === 'Google' ||\n          authType === 'Twitch' ||\n          authType === 'Twitter'\n        ) {\n          (this.source as string[]).push(`./public/social/${authType}.svg`);\n        }\n        if (authType === 'EmailOTP') {\n          (this.source as string[]).push('./src/components/magic/wallet-methods/UpdateEmail.tsx');\n        }\n      });\n    }\n  }\n}\n", "explanation": "This block of code appears to be part of a class or function that handles adding resources to a project. Specifically, it dynamically loads files based on a user-defined `authType`. The purpose and functionality can be summarized as follows:\n\n- Adds JavaScript and/or TypeScript files to the project source code based on the `authType`.\n- Depends on the `authType` to add corresponding social media logo SVGs or additional widget files.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/scaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/scaffold.ts':\n\nThis file contains the implementation of a Next.js application scaffold generator for a dedicated wallet. The scaffold is designed to guide users through the setup and configuration of the wallet application, prompting them for specific data (blockchain network, API key, and authentication type). The scaffold generates the project based on a template, installs necessary dependencies, and starts the development server. It also incorporates user-defined authentication type to dynamically load project resources (source code files and social media logos)."}
{"code": "# Publishable API Key found in the Magic Dashboard\nNEXT_PUBLIC_MAGIC_API_KEY=<%= publishableApiKey %>\n\n# The RPC URL for the blockchain network\nNEXT_PUBLIC_BLOCKCHAIN_NETWORK=<%= network %>", "explanation": "This block appears to be a configuration section for a Next.js project (based on the usage of <%= %> syntax, which is specific to Next.js). It defines two environment variables:\n\n1. `NEXT_PUBLIC_MAGIC_API_KEY`: a publishable API key for the Magic Dashboard service, making it publicly accessible.\n2. `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: the RPC URL for a blockchain network, which allows interactions with the blockchain.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/.env.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a configuration file, `.env.example`, for a Next.js project which sets two environment variables:\n\n- `NEXT_PUBLIC_MAGIC_API_KEY`: Publishable API key for Magic Dashboard.\n- `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: RPC URL for interacting with a blockchain network."}
{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block is a configuration for a linter or code formatter, specific to Next.js. It:\n\n- Extends the Next.js core rules for web vitals\n- Enforces:\n  - Single quotes for string literals\n  - Indentation with 2 spaces.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/.eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary:\n\nThis `.eslintrc.json` file configures ESLint for a Next.js project, extending its core web vitals rules and enforcing specific formatting guidelines: using single quotes for string literals and 2-space indentation."}
{"code": "This scaffold is meant to help you bootstrap your own projects with Magic's [Dedicated Wallet](https://magic.link/docs/auth/overview). Magic is a developer SDK that integrates with your application to enable passwordless Web3 onboarding.\n\nThe folder structure of this scaffold is designed to encapsulate all things Magic into one place so you can easily add or remove components and functionality. For example, all Magic-specific components are in the `src/components/magic` directory while generic UI components are in the `src/components/ui` directory.\n\n## Usage\n\nThis project uses Next.js but relies on fairly standard React components and hooks. Magic-related components are in the `/src/components/magic` directory, all other UI components are in the `/src/components/ui` directory, utility functions are in `/src/utils` and hooks are in the `/src/hooks` directory.\n\nUse this project as a reference for how to use this template or implement Magic in your own project. Key areas to look at include:\n", "explanation": "This scaffold provides a template for integrating Magic's Dedicated Wallet into a project, specifically a Next.js application using React components, with all Magic-related functionality organized in a single, easily manageable structure.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 1, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Next.js Dedicated Wallet Template**\n\nThis template provides a Next.js project structure for integrating Magic's Dedicated Wallet, allowing developers to build and manage user authentication and interactions efficiently. The template includes:\n\n- Custom OAuth integration with multiple authentication methods\n- User information and transaction components for a seamless user experience\n- Utility files for authentication, session management, and network configurations\n- Smart contract interaction utilities and reusable UI components\n- A starter kit for Next.js, including development server setup and deployment options\n\nThis comprehensive template makes it easy for developers to get started with Next.js and provide a robust, user-friendly experience for their applications."}
{"code": "### Custom Hooks\nIn the `/src/hooks` directory, the `MagicProvider` hook sets up and provides a Magic instance for using the Magic SDK and OAuth extension. Additionally, the `Web3.tsx` hook initializes and provides a Web3 instance using the Magic provider.\n\n### Login Functionality \nThe `Login.tsx` component, located in `/src/components/magic`, manages the display and functionality of various login methods on the login page. It is a central piece for handling user authentication.\n\nOne thing to note is that whenever `getInfo` is called from any of the authentication providers, the user session is rehydrated.\n\nHere is a list of the available authentication methods:\n- `Discord.tsx` - Handles authentication using Discord OAuth.\n- `Facebook.tsx` - Handles authentication using Facebook OAuth.\n- `Google.tsx` - Handles authentication using Google OAuth.\n- `Twitch.tsx` - Handles authentication using Twitch OAuth.\n- `EmailOTP.tsx` - Handles authentication using email one-time password (OTP).", "explanation": "**Purpose and Functionality Summary:**\n\nThis block outlines the structure and functionality of a login system using custom hooks and OAuth extensions. It provides a Magic instance for SDK usage and rehydrates user sessions on authentication provider calls. The system offers multiple authentication methods: Discord, Facebook, Google, Twitch, and Email OTP.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 2, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Next.js Dedicated Wallet Template**\n\nThis template provides a Next.js project structure for integrating Magic's Dedicated Wallet, allowing developers to build and manage user authentication and interactions efficiently. The template includes:\n\n- Custom OAuth integration with multiple authentication methods\n- User information and transaction components for a seamless user experience\n- Utility files for authentication, session management, and network configurations\n- Smart contract interaction utilities and reusable UI components\n- A starter kit for Next.js, including development server setup and deployment options\n\nThis comprehensive template makes it easy for developers to get started with Next.js and provide a robust, user-friendly experience for their applications."}
{"code": "- `Github.tsx` - Handles authentication using GitHub OAuth.\n- `SMSOTP.tsx` - Handles authentication using SMS one-time password (OTP).\n- `Twitter.tsx` - Handles authentication using Twitter OAuth.\n\n### User Interaction Components\n\n- `/src/components/magic/auth`: This contains all of the authentication methods.\n\n- `/src/components/magic/cards`: The `SendTransactionCard.tsx` component facilitate transaction processes, `UserInfoCard.tsx` displays user information, `WalletMethodsCard.tsx` manages authentication tokens and user metadata and `SmartContract.tsx` interacts with a basic storage contract. \n\n- `/src/components/magic/wallet-methods`: This directory includes several components that provide specific functionalities:\n    - `Disconnect.tsx` handles the disconnection of the user's session from the application.\n    - `GetIdToken.tsx` retrieves the ID token for the authenticated user.", "explanation": "**Summary:**\n\nThis code block outlines the structure and functionality of a web application's user interaction components. It includes:\n\n1. Authentication methods: Handles OAuth and OTP authentication using GitHub, Twitter, and SMS.\n2. User Information Components:\n   - Displays user information\n   - Facilitates transaction processes\n   - Manages authentication tokens and user metadata\n   - Interacts with a basic storage contract.\n\nThese components provide a comprehensive user interaction experience for the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 3, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Next.js Dedicated Wallet Template**\n\nThis template provides a Next.js project structure for integrating Magic's Dedicated Wallet, allowing developers to build and manage user authentication and interactions efficiently. The template includes:\n\n- Custom OAuth integration with multiple authentication methods\n- User information and transaction components for a seamless user experience\n- Utility files for authentication, session management, and network configurations\n- Smart contract interaction utilities and reusable UI components\n- A starter kit for Next.js, including development server setup and deployment options\n\nThis comprehensive template makes it easy for developers to get started with Next.js and provide a robust, user-friendly experience for their applications."}
{"code": "    - `GetMetadata.tsx` retrieves metadata information about the authenticated user. This will rehydrate the user session every time it is rendered. It does this when calling the `getInfo` function. The user session is rehydrated whenever `getInfo` is invoked\n    - `UpdateEmail.tsx` allows the user to update their email address.\n\n### Utility Functions\nThe `/src/utils` directory includes utility files that support various aspects of the application:\n- `common.ts` manages user authentication processes. The `logout` function handle the process of logging out a user and clearing their authentication data, while `saveUserInfo` saves the user's token, login method, and address to local storage.\n- `network.ts` defines network configurations and utilities, such as URLs, chain IDs, tokens, and block explorer links.\n- `showToast.ts` handles customizable toast notifications.", "explanation": "**Summary**\n\nThis block consists of two components and three utility files that support user authentication and session management. The components and utilities provide functionality for:\n\n- Retrieving user metadata and rehydrating the user session\n- Updating the user's email address\n- Managing user authentication, including logging out and saving user information\n- Defining network configurations and utilities\n- Displaying customizable toast notifications", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 4, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Next.js Dedicated Wallet Template**\n\nThis template provides a Next.js project structure for integrating Magic's Dedicated Wallet, allowing developers to build and manage user authentication and interactions efficiently. The template includes:\n\n- Custom OAuth integration with multiple authentication methods\n- User information and transaction components for a seamless user experience\n- Utility files for authentication, session management, and network configurations\n- Smart contract interaction utilities and reusable UI components\n- A starter kit for Next.js, including development server setup and deployment options\n\nThis comprehensive template makes it easy for developers to get started with Next.js and provide a robust, user-friendly experience for their applications."}
{"code": "- `smartContract.ts` contains functions and configurations for interacting with smart contracts, such as retrieving contract IDs, determining testnet status, generating hash links, and defining contract ABIs.\n\nThese utilities are essential for supporting various aspects of the application.\n\n### UI Components\nThe `/src/components/ui` directory contains reusable UI components for building the user interface. This includes components for creating and styling cards (`Card`, `CardHeader`, `CardLabel`), layout elements for the dashboard (`Dashboard`), separators (`Divider`), error messages (`ErrorText`), form elements (`FormButton`, `FormInput`), redirection handling within the Magic dashboard (`MagicDashboardRedirect`), spacing elements (`Spacer`), loading indicators (`Spinner`), and displaying transaction history (`TransactionHistory`).\n## Next.js\n", "explanation": "**Summary:**\n\nThis block describes the purpose and functionality of two distinct components within a project:\n\n1. **smartContract.ts**: A module containing utilities for interacting with smart contracts, including functions for retrieving contract IDs, determining testnet status, generating hash links, and defining contract ABIs.\n2. **/src/components/ui**: A directory containing reusable UI components for building the user interface, including components for layout, forms, loading states, and more.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 5, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Next.js Dedicated Wallet Template**\n\nThis template provides a Next.js project structure for integrating Magic's Dedicated Wallet, allowing developers to build and manage user authentication and interactions efficiently. The template includes:\n\n- Custom OAuth integration with multiple authentication methods\n- User information and transaction components for a seamless user experience\n- Utility files for authentication, session management, and network configurations\n- Smart contract interaction utilities and reusable UI components\n- A starter kit for Next.js, including development server setup and deployment options\n\nThis comprehensive template makes it easy for developers to get started with Next.js and provide a robust, user-friendly experience for their applications."}
{"code": "This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n### Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n### Learn More\n", "explanation": "This block appears to be a set of installation and usage instructions for a Next.js project. The purpose is to get a developer up and running with a basic Next.js setup, allowing them to start building and testing their application. The functionality includes starting the development server and accessing various parts of the project, such as a React page and API routes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 6, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Next.js Dedicated Wallet Template**\n\nThis template provides a Next.js project structure for integrating Magic's Dedicated Wallet, allowing developers to build and manage user authentication and interactions efficiently. The template includes:\n\n- Custom OAuth integration with multiple authentication methods\n- User information and transaction components for a seamless user experience\n- Utility files for authentication, session management, and network configurations\n- Smart contract interaction utilities and reusable UI components\n- A starter kit for Next.js, including development server setup and deployment options\n\nThis comprehensive template makes it easy for developers to get started with Next.js and provide a robust, user-friendly experience for their applications."}
{"code": "To learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n### Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n", "explanation": "This block provides a concise introduction to Next.js, including: \n\n- Resource links for learning Next.js\n- A deployment option using the Vercel Platform\n- Additional documentation for more information.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/README.md", "chunk_number": 7, "total_chunks": 7}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Next.js Dedicated Wallet Template**\n\nThis template provides a Next.js project structure for integrating Magic's Dedicated Wallet, allowing developers to build and manage user authentication and interactions efficiently. The template includes:\n\n- Custom OAuth integration with multiple authentication methods\n- User information and transaction components for a seamless user experience\n- Utility files for authentication, session management, and network configurations\n- Smart contract interaction utilities and reusable UI components\n- A starter kit for Next.js, including development server setup and deployment options\n\nThis comprehensive template makes it easy for developers to get started with Next.js and provide a robust, user-friendly experience for their applications."}
{"code": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n}\n\nmodule.exports = nextConfig\n", "explanation": "This block is a configuration file for a Next.js project. Its purpose is to export a settings object that enables **React Strict Mode**.\n\nIn other words, it is enabling a mode that warns developers about potential errors in their React applications.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/next.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The Next.js configuration file 'next.config.js' enables React Strict Mode, which warns developers about potential errors in their React applications by exporting a settings object."}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "**Summary:** This is a JavaScript module exporting a configuration object for plug-ins used in tailwind CSS (a utility-first CSS framework). The plug-ins included are:\n\n- **tailwindcss**: enables Tailwind CSS support\n- **autoprefixer**: adds vendor prefixes to CSS rules for cross-browser compatibility", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/postcss.config.js':\n\nThis module exports a PostCSS configuration that enables Tailwind CSS support and Autoprefixer for cross-browser compatibility."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) icon. \n\nIt is represented by a path that forms a drop-down or arrow indicator shape.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-dedicated-wallet/template/public/info.svg' is a Scalable Vector Graphics (SVG) icon that represents a drop-down or arrow indicator shape."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG (Scalable Vector Graphics) element, defining a graphical icon. Its primary function is to provide a container for drawing vector graphics, but in this specific case, it seems to be setting up a base structure for a SVG image with a empty container.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The 'link.svg' file in 'scaffolds/nextjs-dedicated-wallet/template/public' is a Scalable Vector Graphics (SVG) file fragment that appears to be a closing or terminating component of an SVG structure."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block is a vector graphics path definition in SVG (Scalable Vector Graphics) format. Its primary function is to render a blue color heart symbol at a specified location on a graphical canvas.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The 'link.svg' file in 'scaffolds/nextjs-dedicated-wallet/template/public' is a Scalable Vector Graphics (SVG) file fragment that appears to be a closing or terminating component of an SVG structure."}
{"code": "</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) file, but it's not a complete file; it appears to be a fragment of an SVG or the closing part of an SVG.\n\nWithout the opening tag, its purpose and functionality are unknown, but likely it's meant to end an SVG structure, possibly closing or terminating an SVG element.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The 'link.svg' file in 'scaffolds/nextjs-dedicated-wallet/template/public' is a Scalable Vector Graphics (SVG) file fragment that appears to be a closing or terminating component of an SVG structure."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG (Scalable Vector Graphics) element that defines a 24x24 pixel icon or image, primarily used for visual representation.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary:\n\nThe 'scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg' file is an SVG graphics element that defines a 24x24 pixel white icon or image used for visual representation."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block is a SVG path used to draw a custom icon or a shape.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary:\n\nThe 'scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg' file is an SVG graphics element that defines a 24x24 pixel white icon or image used for visual representation."}
{"code": "</svg>", "explanation": "This block is an SVG image tag, indicating the end of an SVG element. Its purpose is to close an SVG file or section.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary:\n\nThe 'scaffolds/nextjs-dedicated-wallet/template/public/link_white.svg' file is an SVG graphics element that defines a 24x24 pixel white icon or image used for visual representation."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "The purpose of this block is to render a logo or favicon as a small SVG image. \n\nFunctionality: It defines two paths (or shapes) with specific coordinates and fills them with white, creating a binary or monogram with two components.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/public/logo.svg' file:\n\nThe logo.svg file defines a binary or monogram SVG logo composed of two filled shapes with white color, likely a geometric design."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) element that represents a path to be filled with white color. It appears to be a geometric shape, likely a curve or a combination of curves, defining the outline of an object.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/public/logo.svg' file:\n\nThe logo.svg file defines a binary or monogram SVG logo composed of two filled shapes with white color, likely a geometric design."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 127.14 96.36\"><defs><style>.cls-1{fill:#5865f2;}</style></defs><g id=\"\u56fe\u5c42_2\" data-name=\"\u56fe\u5c42 2\"><g id=\"Discord_Logos\" data-name=\"Discord Logos\"><g id=\"Discord_Logo_-_Large_-_White\" data-name=\"Discord Logo - Large - White\"><path class=\"cls-1\" d=\"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z\"/></g></g></g></svg>", "explanation": "The block is an SVG (Scalable Vector Graphics) code that consists of a Discord logo. It defines a logo with a complex path that outlines the shape of the logo, including its various layers and elements. The logo is filled with a blue color (#5865f2).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Discord.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG code for a Discord logo, consisting of a complex path that outlines the logo's shape. The logo is filled with a blue color (#5865f2)."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#039be5\" d=\"M24 5A19 19 0 1 0 24 43A19 19 0 1 0 24 5Z\"/><path fill=\"#fff\" d=\"M26.572,29.036h4.917l0.772-4.995h-5.69v-2.73c0-2.075,0.678-3.915,2.619-3.915h3.119v-4.359c-0.548-0.074-1.707-0.236-3.897-0.236c-4.573,0-7.254,2.415-7.254,7.917v3.323h-4.701v4.995h4.701v13.729C22.089,42.905,23.032,43,24,43c0.875,0,1.729-0.08,2.572-0.194V29.036z\"/></svg>", "explanation": "This block is an SVG icon, a blue and white icon with a diamond shape, likely used for a notification or alert symbol.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Facebook.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-dedicated-wallet/template/public/social/Facebook.svg' contains a blue and white diamond-shaped SVG icon, likely used as a notification or alert symbol."}
{"code": "<svg width=\"98\" height=\"96\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z\" fill=\"#24292f\"/></svg>", "explanation": "This block is an SVG icon rendering a rounded triangle shape, likely used as a grayscale or semi-transparent background element in a web design.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Github.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise summary of the 'scaffolds/nextjs-dedicated-wallet/template/public/social/Github.svg' file:\n\n\"Rounded triangle SVG icon, likely used as a grayscale or semi-transparent background element in web design for representation of GitHub social media.\""}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"705.6\" height=\"720\" viewBox=\"0 0 186.69 190.5\" xmlns:v=\"https://vecta.io/nano\"><g transform=\"translate(1184.583 765.171)\"><path clip-path=\"none\" mask=\"none\" d=\"M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z\" fill=\"#4285f4\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z\" fill=\"#34a853\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z\" fill=\"#fbbc05\"/><path d=\"M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z\" fill=\"#ea4335\" clip-path=\"none\" mask=\"none\"/></g></svg>", "explanation": "This block of code is an SVG (Scalable Vector Graphics) file. It defines a stylized, multi-colored icon. \n\nThe icon consists of four shapes, each with a different color. The icon appears to be a simplified representation of a chart or a graph, possibly indicating growth or statistics.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Google.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Google.svg' file:\n\nThe Google.svg file is a stylized SVG icon representing a simplified chart or graph, consisting of four multi-colored shapes, possibly indicating growth or statistics."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.6, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 2400 2800\" style=\"enable-background:new 0 0 2400 2800;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#FFFFFF;}\n\t.st1{fill:#9146FF;}\n</style>\n<title>Asset 2</title>\n<g>\n\t<polygon class=\"st0\" points=\"2200,1300 1800,1700 1400,1700 1050,2050 1050,1700 600,1700 600,200 2200,200 \t\"/>\n\t<g>\n\t\t<g id=\"Layer_1-2\">\n\t\t\t<path class=\"st1\" d=\"M500,0L0,500v1800h600v500l500-500h400l900-900V0H500z M2200,1300l-400,400h-400l-350,350v-350H600V200h1600\n\t\t\t\tV1300z\"/>\n\t\t\t<rect x=\"1700\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t\t<rect x=\"1150\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) file, likely generated by Adobe Illustrator. It defines a complex graphic composition comprising:\n\n1. A white-filled polygon.\n2. A blue-filled path with animations of shapes and transitions (specifically, curves and rectangles).\n3. Three blue-filled rectangles positioned within the path.\n\nThe purpose of this block is to create a visual graphical design or asset, potentially for use in digital art, graphics, or web design.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Twitch.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file 'social/Twitch.svg' is an SVG file generated by Adobe Illustrator, featuring a complex graphic composition with multiple animated shapes and transitions within a blue-filled path and a white-filled polygon, including three blue-filled rectangles."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 248 204\" style=\"enable-background:new 0 0 248 204;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#1D9BF0;}\n</style>\n<g id=\"Logo_1_\">\n\t<path id=\"white_background\" class=\"st0\" d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26", "explanation": "This block is an SVG (Scalable Vector Graphics) file. \n\nPurpose: To create a scalable vector graphic for use in digital applications such as web pages, logos, andicons.\n\nFunctionality: The SVG file defines a logo with a blue color and a complex shape, likely created using Adobe Illustrator. The 'style' section defines a CSS class '.st0' for the blue color, while the 'g' and 'path' sections describe the geometry and appearance of the logo.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg':\n\nThis SVG file defines a Twitter logo with a blue color, consisting of a complex geometric shape created using Adobe Illustrator. It includes CSS styles and path declarations to render the logo in digital applications."}
{"code": "\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"/>\n</g>\n</svg>\n", "explanation": "This appears to be an SVG (Scalable Vector Graphics) path declaration. It defines a specific geometric shape, likely used to create graphics or designs.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/public/social/Twitter.svg':\n\nThis SVG file defines a Twitter logo with a blue color, consisting of a complex geometric shape created using Adobe Illustrator. It includes CSS styles and path declarations to render the logo in digital applications."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from '@/components/ui/Header'\n<% loginMethods.forEach(authType => { %>\n  <%-`import ${authType.replaceAll(' ', '')} from './auth/${authType.replaceAll(' ', '')}';`-%>\n  <% }) %>\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-<%= Math.min(loginMethods.length, 3) %> grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      <% loginMethods.forEach(authType => { %>\n      <% if (authType !== \"Social Logins\") { %>\n        <%-`<${authType.replaceAll(' ', '')} token={token} setToken={setToken} />`-%>\n      <% } %>\n  \t\t<% }) %>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "**Purpose:** \nThe purpose of this block is to render a login page with various authentication methods, along with a common header, using a generic layout controlled by `loginMethods` array.\n\n**Functionality:**\n\n1. Dynamically imports and renders authentication modules based on the `loginMethods` array.\n2. Uses a variable column grid created based on the length of the `loginMethods` array (maximum of 3 columns).\n3. Renders each authentication module with its token and setToken props, except for \"Social Logins\" method.\n4. Displays a header and wraps the entire layout with a specific container class.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/Login.tsx':\n\n**Login Page Component**\n\nThis component renders a login page with a common header, featuring various authentication methods dynamically imported and rendered based on the `loginMethods` array. The layout is divided into a variable number of columns (up to 3) containing each authentication module with its token and setToken props, except for \"Social Logins\"."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '@/components/ui/Spinner';\nimport Image from 'next/image';\nimport discord from 'public/social/Discord.svg';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\n\nconst Discord = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**summary**\nThis block of code is a React functional component named `Discord` that handles user authentication with the Magic API and Discord. It uses React hooks (`useEffect`, `useState`) to handle state and effects. The component checks for an existing authentication status and, if authenticated, retrieves user information and sets a token for use in the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Discord.tsx' file:\n\nThe `Discord` component is a React functional component that handles user authentication with the Magic API and Discord. It allows users to log in using their Discord account. When clicked, it triggers a login process using Discord OAuth, retrieving user information and setting a token for application use."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'discord',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"discord\">Discord Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "This block is a login functionality for discord users. It does the following:\n\n- Checks the current login status (using `checkLogin()` function)\n- Tries to log in using discord OAuth (using `magic?.oauth.loginWithRedirect()` function) if a token is not present\n- Saves user info and sets the loading flag to false once the login is successful\n- Handles login errors and sets the loading flag to false in case of an error", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Discord.tsx' file:\n\nThe `Discord` component is a React functional component that handles user authentication with the Magic API and Discord. It allows users to log in using their Discord account. When clicked, it triggers a login process using Discord OAuth, retrieving user information and setting a token for application use."}
{"code": "            <Image src={discord} alt=\"Discord\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Discord</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Discord;\n", "explanation": "This block is a React component that represents a Discord login button. It contains:\n\n- An image icon of Discord\n- A text label \"Continue with Discord\"\n- A button that likely triggers the login process when clicked", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Discord.tsx' file:\n\nThe `Discord` component is a React functional component that handles user authentication with the Magic API and Discord. It allows users to log in using their Discord account. When clicked, it triggers a login process using Discord OAuth, retrieving user information and setting a token for application use."}
{"code": "import { useMagic } from '@/hooks/MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveUserInfo } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });", "explanation": "**Summary:**\n\nThis React functional component, `EmailOTP`, handles email-based login with one-time password (OTP) verification. It fetches the `magic` object from a global context, collects the user's email, and makes an authentication request using the `loginWithEmailOTP` method. If the email is valid, it initiates a login process that displays a spinner and attempts to save user info.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\nThis React functional component, `EmailOTP`, facilitates email-based login with One-Time Password (OTP) verification. It collects user input, initiates authentication, and displays a spinner while verifying the OTP. If successful, it rehydrates the user session, saves user info to local storage, and resets the login state. It also handles errors and related errors, showcasing error messages to the user."}
{"code": "        // Rehydrates the user session whenever getInfo is invoked\n        const metadata = await magic?.user.getInfo();\n\n        if (!token || !metadata?.publicAddress) {\n          throw new Error('Magic login failed');\n        }\n\n        setToken(token);\n        saveUserInfo(token, 'EMAIL', metadata?.publicAddress);\n        setEmail('');\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }", "explanation": "**Purpose:** Rehydrate the user session after a successful login and handle potential errors.\n\n**Functionality:**\n\n1. Retrieves user metadata using the `getInfo` method.\n2. Saves the user info to local storage if the login is successful.\n3. Handles errors, including Magic Link related errors, and displays error messages.\n4. Resets the login in progress state after the process is complete.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\nThis React functional component, `EmailOTP`, facilitates email-based login with One-Time Password (OTP) verification. It collects user input, initiates authentication, and displays a spinner while verifying the OTP. If successful, it rehydrates the user session, saves user info to local storage, and resets the login state. It also handles errors and related errors, showcasing error messages to the user."}
{"code": "    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);\n            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "**Summary:**\n\nThis block is a React component that renders a login form for email-based One-Time Password (OTP) authentication. It has a text input field for the user to enter their email, a submit button to initiate login, and a spinner indicator for in-progress requests.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\nThis React functional component, `EmailOTP`, facilitates email-based login with One-Time Password (OTP) verification. It collects user input, initiates authentication, and displays a spinner while verifying the OTP. If successful, it rehydrates the user session, saves user info to local storage, and resets the login state. It also handles errors and related errors, showcasing error messages to the user."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport facebook from 'public/social/Facebook.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Facebook = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Component Purpose and Functionality Summary:**\n\nThis is a React component for Facebook login functionality. It uses the Magic SDK to handle authentication and token management. Its primary purpose is to verify a user's login status and store their token if authenticated. It also displays a spinner if authentication is in progress.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component, Facebook.tsx, is responsible for Facebook login functionality using the Magic SDK. It authenticates users via Facebook OAuth, checks for existing login status, and stores user authentication tokens."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'facebook',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"facebook\">Facebook Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "**Block Purpose and Functionality:**\n\nThis block handles user authentication using Facebook OAuth through the Magic API. \n\n**Main Functionality:**\n\n1. It checks if the user is authenticated by calling the `checkLogin` function.\n2. If not, it prompts the user to authenticate by calling the `login` function, which redirects the user to Facebook for authentication.\n3. Once authentication is complete, it saves user information, including the ID token and public address.\n4. It then updates the loading flag to indicate that the authentication process is complete.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component, Facebook.tsx, is responsible for Facebook login functionality using the Magic SDK. It authenticates users via Facebook OAuth, checks for existing login status, and stores user authentication tokens."}
{"code": "            <Image src={facebook} alt=\"Facebook\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Facebook</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Facebook;\n", "explanation": "This appears to be a React component snippet, specifically a button element. The purpose and functionality of this block are:\n\n- To render a Facebook logo as an image icon\n- To display a button with the text \"Continue with Facebook\"\n- To serve as an authorization or login button for users to continue with Facebook.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component, Facebook.tsx, is responsible for Facebook login functionality using the Magic SDK. It authenticates users via Facebook OAuth, checks for existing login status, and stores user authentication tokens."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport github from 'public/social/Github.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Github = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Purpose:** The `Github` component checks for an existing GitHub login session using the Magic SDK and updates the token and user information accordingly.\n\n**Functionality:**\n\n1. Retrieves user session data from local storage.\n2. Checks for a valid Magic SDK instance.\n3. Retrieves redirect results from the GitHub OAuth flow, if successful.\n4. Retrieves user metadata (public address) to verify a valid session.\n5. Updates the token state with the Magic user's ID token.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Github.tsx' file:\n\n**GitHub Login Component**\n\nThis component enables GitHub authentication using the Magic library. It checks for stored session data, retrieves GitHub login results, and updates the user's token state with their Magic user ID token to verify a valid session."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'github',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"github\">Github Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "**Summary:**\n\nThis block appears to handle a login process with GitHub using the Magic library. It checks if a user is authenticated with the `checkLogin` function and logs in with GitHub using the `login` function when the button is clicked. The login result is then saved to local storage and the loading flag is updated accordingly.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Github.tsx' file:\n\n**GitHub Login Component**\n\nThis component enables GitHub authentication using the Magic library. It checks for stored session data, retrieves GitHub login results, and updates the user's token state with their Magic user ID token to verify a valid session."}
{"code": "            <Image src={github} alt=\"Github\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Github</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Github;\n", "explanation": "**Purpose:** Allow a user to log in or connect with their GitHub account.\n\n**Functionality:** Display a GitHub logo and a \"Continue with Github\" button, enabling users to authenticate with their GitHub credentials.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Github.tsx' file:\n\n**GitHub Login Component**\n\nThis component enables GitHub authentication using the Magic library. It checks for stored session data, retrieves GitHub login results, and updates the user's token state with their Magic user ID token to verify a valid session."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport google from 'public/social/Google.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Google = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Google Authentication Block Functionality Summary:**\n\nThis block handles Google authentication for a React application using the Magic provider. \n\n1. It uses the `magic` instance to authenticate the user using Google OAuth.\n2. It attempts to get the user's session data from the Local Storage.\n3. If the user is successfully authenticated, it sets an authentication token (`result.magic.idToken`) in the component props.\n4. It displays a loader (Spinner) during the authentication process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Google Authentication Component Summary:**\n\nThe Google.tsx component in the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/' directory handles Google authentication using Magic's OAuth provider. It authenticates users, displays a loader during the process, and sets an authentication token in the component props if successful. The component displays a login button or loader based on the user's current login status, initiating the login process via `loginWithRedirect` if not logged in."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'google',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"google\">Google Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "**Summary:**\n\nThis block of code handles social login functionality, specifically with Magic's Google OAuth provider. It involves:\n\n- Checking if the user is authenticated (login status)\n- If not, it initiates a login process using Magic's `loginWithRedirect` method\n- After login, it saves user information and sets the login status to false\n- The login status is displayed as a Spinner or a login button based on whether the user is currently logging in.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Google Authentication Component Summary:**\n\nThe Google.tsx component in the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/' directory handles Google authentication using Magic's OAuth provider. It authenticates users, displays a loader during the process, and sets an authentication token in the component props if successful. The component displays a login button or loader based on the user's current login status, initiating the login process via `loginWithRedirect` if not logged in."}
{"code": "            <Image src={google} alt=\"Google\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Google</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Google;\n", "explanation": "**Block Summary**\n\nThis block displays a Google login button with an image and text. When clicked, it likely initiates a Google OAuth flow to authenticate the user, but without more context, this functionality is not explicitly stated.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Google Authentication Component Summary:**\n\nThe Google.tsx component in the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/' directory handles Google authentication using Magic's OAuth provider. It authenticates users, displays a loader during the process, and sets an authentication token in the component props if successful. The component displays a login button or loader based on the user's current login status, initiating the login process via `loginWithRedirect` if not logged in."}
{"code": "import { useState } from 'react';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveUserInfo } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport FormInput from '@/components/ui/FormInput';\n\nconst SMSOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!phone.match(/^\\+?\\d{10,14}$/)) {\n      setPhoneError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setPhoneError(false);\n        const token = await magic?.auth.loginWithSMS({\n          phoneNumber: phone,\n        });", "explanation": "**Functionality Summary:**\n\nThis block is a React functional component named `SMSOTP` that handles phone number-based login with SMS OTP through the Magic SDK. It collects the user's phone number, validates and attempts to log in, and displays a loading spinner or error message if necessary.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'SMSOTP' component:\n\n**SMSOTP Component Summary:**\nThe SMSOTP component is a React functional component that enables phone number-based login with SMS OTP through the Magic SDK. It collects the user's phone number, validates, and attempts to log in, displaying a loading spinner or error message as needed. The component provides a user-friendly interface with a header, form input, error message, and login button that is disabled during request processing."}
{"code": "        // Rehydrates the user session whenever getInfo is invoked\n        const metadata = await magic?.user.getInfo();\n\n        if (!token || !metadata?.publicAddress) {\n          throw new Error('Magic login failed');\n        }\n\n        setToken(token);\n        saveUserInfo(token, 'EMAIL', metadata?.publicAddress);\n        setPhone('');\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }", "explanation": "**Block Summary:**\n\nThis code block is responsible for logging the user in by verifying a Magic login session and updating the local user information. It handles errors and exceptions, such as rate-limited Magic Link verification, expired links, and existing user logins, and displays error messages accordingly.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'SMSOTP' component:\n\n**SMSOTP Component Summary:**\nThe SMSOTP component is a React functional component that enables phone number-based login with SMS OTP through the Magic SDK. It collects the user's phone number, validates, and attempts to log in, displaying a loading spinner or error message as needed. The component provides a user-friendly interface with a header, form input, error message, and login button that is disabled during request processing."}
{"code": "    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"sms\">SMS Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (phoneError) setPhoneError(false);\n            setPhone(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : '+11234567890'}\n          value={phone}\n        />\n        {phoneError && (\n          <span className=\"self-start text-xs font-semibold text-red-700 justify-self-start\">\n            Enter a valid phone number\n          </span>\n        )}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : phone.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default SMSOTP;\n", "explanation": "**Summary:**\n\nThis block is a React component called \"SMSOTP\" that handles SMS-based login functionality. It features a card layout with the following elements:\n\n- A header displaying \"SMS Login\".\n- A form input field for the user to enter their phone number.\n- An error message indicating a \"valid phone number\" if the input is incorrect.\n- A login button that is disabled if the phone number input is empty or if a login request is in progress.\n- A loading indicator (\"Spinner\") is displayed when the button is clicked and a request is being processed.\n\nWhen the login button is clicked, it triggers the \"handleLogin\" function, which attempts to authenticate the user.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'SMSOTP' component:\n\n**SMSOTP Component Summary:**\nThe SMSOTP component is a React functional component that enables phone number-based login with SMS OTP through the Magic SDK. It collects the user's phone number, validates, and attempts to log in, displaying a loading spinner or error message as needed. The component provides a user-friendly interface with a header, form input, error message, and login button that is disabled during request processing."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport twitch from 'public/social/Twitch.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitch = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Twitch Login Component**\n\n* Purpose: Login to Twitch using Authentical (formerly known as Magic Auth) and save user info.\n* Functionality:\n 1. Retrieves user data using Authentical API.\n 2. Checks if user is already authenticated.\n 3. If authenticated, saves user info and stores access token.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx' file:\n\nThis React component provides a Twitch login functionality using Authentical. Upon successful login, it saves user info and stores the access token. When clicked, it redirects the user to Twitch for authentication and updates the component with the result."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitch',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitcg\">Twitch Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "**Summary**\n\nThis block appears to be a React functional component that handles Twitch social login functionality. It:\n\n1. Calls the `checkLogin` function whenever `magic` or `setToken` changes.\n2. Uses the `login` function to handle Twitch login, redirecting to twitch and storing the result upon successful login.\n3. Displays a spinner while the login process is in progress, and displays a button to initiate the login process when not loading.\n\n**Note**: This is likely a part of a larger authentication flow, and does not include the full component or its dependencies.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx' file:\n\nThis React component provides a Twitch login functionality using Authentical. Upon successful login, it saves user info and stores the access token. When clicked, it redirects the user to Twitch for authentication and updates the component with the result."}
{"code": "            <Image src={twitch} alt=\"Twitch\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Twitch</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitch;\n", "explanation": "**Summary:**\n\nThis block of code is a button component that allows the user to continue with a Twitch account. It features a Twitch logo and a text label. When clicked, it's likely to redirect the user to the Twitch platform for authentication.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx' file:\n\nThis React component provides a Twitch login functionality using Authentical. Upon successful login, it saves user info and stores the access token. When clicked, it redirects the user to Twitch for authentication and updates the component with the result."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveUserInfo } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport Image from 'next/image';\nimport twitter from 'public/social/Twitter.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitter = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          // Rehydrates the user session whenever getInfo is invoked\n          const metadata = await magic?.user.getInfo();\n          if (!metadata?.publicAddress) return;\n          setToken(result.magic.idToken);", "explanation": "**Purpose:** \nThis block of code is used to handle Twitter login authentication. \n\n**Functionality:**\n\n1. Retrieves user credentials through Magic's OAuth system.\n2. Checks if the user is logged in using the `isAuthLoading` state and local storage.\n3. Calls `getRedirectResult` to retrieve the user's redirect result after authorization.\n4. Retrieves user metadata using `getInfo`.\n5. If the user has a public address, it sets the `token` state variable with the user's ID token. \n\nThis code appears to be part of a larger login flow, where the `token` is used to authenticate the user.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Twitter Authentication Component:**\n\nThis React component handles Twitter login authentication using Magic's OAuth library. It:\n\n1. Checks if the `token` variable is set, and if not, initiates a login redirect to Twitter.\n2. Performs actions after login, such as saving user info and data, and resets the loading flag.\n3. Manages errors and loading state.\n4. Exports functions for initiating the login redirect and managing the loading state."}
{"code": "          saveUserInfo(result.magic.idToken, 'SOCIAL', metadata?.publicAddress);\n          setLoadingFlag('false');\n        }\n      } catch (e) {\n        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitter',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitter\">Twitter Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >", "explanation": "**Block Summary:**\n\nThis block handles Twitter login functionality using the Magic OAuth library. It:\n\n1. Checks for the existence of the `token` variable, and if it's empty, initiates a login redirect to Twitter.\n2. After login, it attempts to save user info and user data, and resets the `isAuthLoading` flag.\n3. If any errors occur, it logs the error and resets the `isAuthLoading` flag.\n4. It exports a `login` function to initiate the login redirect and a `setLoadingFlag` function to manage the loading state.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Twitter Authentication Component:**\n\nThis React component handles Twitter login authentication using Magic's OAuth library. It:\n\n1. Checks if the `token` variable is set, and if not, initiates a login redirect to Twitter.\n2. Performs actions after login, such as saving user info and data, and resets the loading flag.\n3. Manages errors and loading state.\n4. Exports functions for initiating the login redirect and managing the loading state."}
{"code": "            <Image src={twitter} alt=\"Twitter\" height={24} width={24} className=\"mr-6\" />\n            <div className=\"w-full text-xs font-semibold text-center\">Continue with Twitter</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitter;\n", "explanation": "This block appears to be a React component that renders a button for Twitter login. It contains:\n\n- An image of Twitter's logo\n- A label \"Continue with Twitter\"\n- When executed, it likely opens a Twitter login dialogue.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Twitter Authentication Component:**\n\nThis React component handles Twitter login authentication using Magic's OAuth library. It:\n\n1. Checks if the `token` variable is set, and if not, initiates a login redirect to Twitter.\n2. Performs actions after login, such as saving user info and data, and resets the loading flag.\n3. Manages errors and loading state.\n4. Exports functions for initiating the login redirect and managing the loading state."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport useWeb3 from '@/hooks/Web3';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { getFaucetUrl, getNetworkToken, isEip1559Supported } from '@/utils/network';\nimport showToast from '@/utils/showToast';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { TxnParams } from '@/utils/types';\n\nconst SendTransaction = () => {\n  const web3 = useWeb3();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);\n  const [hash, setHash] = useState('');", "explanation": "This block is a React functional component named `SendTransaction`. Its primary purpose is to facilitate sending a transaction to a specified Ethereum address. It integrates with web3 functionality, allowing users to input a recipient's address and the transaction amount, and then submit the transaction.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx' file:\n\nThe `SendTransaction` component is a React-powered transaction form that enables users to send a specific amount of Ether to a designated Ethereum address. It provides:\n\n1. Form fields for inputting receiving address and transaction amount.\n2. Validation of address and amount to ensure valid inputs.\n3. Error messaging for invalid transactions.\n4. A send transaction button.\n5. Interactive sending and transaction logging, with success or error message display."}
{"code": "  const [toAddressError, setToAddressError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const sendTransaction = useCallback(async () => {\n    if (!web3?.utils.isAddress(toAddress)) {\n      return setToAddressError(true);\n    }\n    if (isNaN(Number(amount))) {\n      return setAmountError(true);\n    }\n    setDisabled(true);\n\n    const txnParams: TxnParams = {\n      from: publicAddress,\n      to: toAddress,\n      value: web3.utils.toWei(amount, 'ether'),\n    };\n\n    if (isEip1559Supported()) {\n      const feeData = await web3.eth.calculateFeeData();\n      txnParams.maxFeePerGas = BigInt(feeData.maxFeePerGas);\n      txnParams.maxPriorityFeePerGas = BigInt(feeData.maxPriorityFeePerGas);\n    } else {\n      txnParams.gasPrice = await web3.eth.getGasPrice();\n    }\n\n    web3.eth", "explanation": "**Purpose:**\nThis block handles sending a transaction from a user's wallet, ensuring the recipient's address and transaction amount are valid.\n\n**Main Functionality:**\n\n- Manages error states for the recipient's address and transaction amount.\n- Enables or disables the send transaction button based on the recipient's address and transaction amount.\n- Validates the recipient's address and transaction amount before sending the transaction.\n- Defines the parameters for the transaction, including the sender's address, recipient's address, and transaction amount.\n- Calculates gas and fee settings based on whether EIP-1559 is supported.\n- Initiates the sending of the transaction through the Web3 library.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx' file:\n\nThe `SendTransaction` component is a React-powered transaction form that enables users to send a specific amount of Ether to a designated Ethereum address. It provides:\n\n1. Form fields for inputting receiving address and transaction amount.\n2. Validation of address and amount to ensure valid inputs.\n3. Error messaging for invalid transactions.\n4. A send transaction button.\n5. Interactive sending and transaction logging, with success or error message display."}
{"code": "      .sendTransaction(txnParams as any)\n      .on('transactionHash', (txHash) => {\n        setHash(txHash);\n        console.log('Transaction hash:', txHash);\n      })\n      .then((receipt) => {\n        showToast({\n          message: 'Transaction Successful',\n          type: 'success',\n        });\n        setToAddress('');\n        setAmount('');\n        console.log('Transaction receipt:', receipt);\n      })\n      .catch((error) => {\n        console.error('Transaction error:', error);\n        setDisabled(false);\n        showToast({\n          message: 'Transaction Failed: ' + error.message,\n          type: 'error',\n        });\n      });\n\n  }, [web3, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      {getFaucetUrl() && (\n        <div>\n          <a href={getFaucetUrl()} target=\"_blank\" rel=\"noreferrer\">\n            <FormButton onClick={() => null} disabled={false}>\n              Get Test {getNetworkToken()}", "explanation": "**Purpose:** This block sends a transaction via the Ethereum network using Web3, displaying a success or error message, and resetting the transaction form fields.\n\n**Functionality:**\n\n1. Sends a transaction with specified parameters.\n2. Logs the transaction hash when the transaction is mined.\n3. Logs the transaction receipt when the transaction is successful.\n4. Displays a success or error message to the user (via `showToast` function).\n5. Resets the transaction form fields (toAddress, amount) when successful.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx' file:\n\nThe `SendTransaction` component is a React-powered transaction form that enables users to send a specific amount of Ether to a designated Ethereum address. It provides:\n\n1. Form fields for inputting receiving address and transaction amount.\n2. Validation of address and amount to ensure valid inputs.\n3. Error messaging for invalid transactions.\n4. A send transaction button.\n5. Interactive sending and transaction logging, with success or error message display."}
{"code": "              <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n            </FormButton>\n          </a>\n          <Divider />\n        </div>\n      )}\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput\n        value={amount}\n        onChange={(e: any) => setAmount(e.target.value)}\n        placeholder={`Amount (${getNetworkToken()})`}\n      />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        Send Transaction\n      </FormButton>\n\n      {hash ? (\n        <>\n          <Spacer size={20} />\n          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "**Summary:**\n\nThis code snippet is a React component that represents a payment or transaction form. Its purpose is to facilitate sending a transaction to a specified receiving address with a specific amount.\n\n**Key Functionality:**\n\n- Form input fields for receiving address and amount\n- Validation for address and amount\n- Error messaging for invalid input\n- Button to send transaction\n- Display of transaction history after sending a transaction", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx' file:\n\nThe `SendTransaction` component is a React-powered transaction form that enables users to send a specific amount of Ether to a designated Ethereum address. It provides:\n\n1. Form fields for inputting receiving address and transaction amount.\n2. Validation of address and amount to ensure valid inputs.\n3. Error messaging for invalid transactions.\n4. A send transaction button.\n5. Interactive sending and transaction logging, with success or error message display."}
{"code": "import { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getContractId, abi } from '@/utils/smartContract';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport useWeb3 from '@/hooks/Web3';\nimport FormInput from '@/components/ui/FormInput';\nimport FormButton from '@/components/ui/FormButton';\nimport showToast from '@/utils/showToast';\nimport Spacer from '@/components/ui/Spacer';\n\nconst SmartContract = () => {\n  const { magic } = useMagic();\n  const web3 = useWeb3();\n  const [contractAddress, setContractAddress] = useState<string | undefined>(undefined);\n  const [value, setValue] = useState<number | undefined>(undefined);\n  const [newValue, setNewValue] = useState<string>('');\n  const [copied, setCopied] = useState('Copy');", "explanation": "This block appears to be a React component for interacting with a smart contract. Its purpose is to:\n\n- Connect to Web3 (a blockchain interaction library) and Magic (a decentralized authentication library)\n- Display and manage user input for a smart contract\n- Allow the user to call a function on the smart contract (value is not specified)\n- Display contract address and possibly the result of the function call\n- Provide a \"Copy\" button to copy the contract address. \n\nIts functional components include:\n\n- Retrieving and managing contract address and values from the component's state\n- Displaying progress with a Spinner\n- Showing a toast message using the showToast function.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**SmartContract Component Summary**\n\nThe SmartContract component is a React component for interacting with a smart contract on a blockchain. It allows users to connect to Web3 and Magic, display and manage contract input, call contract functions, and display contract addresses and results. The component includes features such as:\n\n- Initializing and updating the contract instance with Web3 and blockchain data\n- Retrieving and storing contract values in the component's state\n- Displaying a Spinner while loading, and toast messages for notifications\n- Providing a \"Copy\" button to copy the contract address to the clipboard\n- Submitting and updating contract values with real-time notifications\n- Displaying error messages, transaction hashes, and updates upon successful submission\n\n**Key Functionality:**\n\n- Submit a value to the smart contract and retrieve updates\n- Display the contract address, value, and loading indicator\n- Provide an input field for users to enter a new value\n- Update the stored value with an \"Update\" or \"Submit\" button"}
{"code": "  const [updating, setUpdating] = useState<boolean>(false);\n  const [hash, setHash] = useState<string>(\"\");\n\n  useEffect(() => {\n    const initialize = async () => {\n      const address = getContractId();\n      setContractAddress(address);\n\n      if (web3 && address) {\n        const contract = new web3.eth.Contract(abi, address);\n\n        try {\n          const value = await contract.methods.retrieve().call();\n          setValue(value);\n        } catch (error) {\n          console.error('Error retrieving value:', error);\n        }\n      }\n    };\n\n    initialize();\n  }, [web3, updating]);\n\n  const submit = async () => {\n    if (web3 && contractAddress) {\n      const contract = new web3.eth.Contract(abi, contractAddress);\n      setUpdating(true);\n\n      try {\n        if (!newValue) {\n          throw new Error('No value entered');\n        }\n\n        const accounts = await web3.eth.getAccounts();\n        const accountBalance = await web3.eth.getBalance(accounts[0]);\n\n        const gasPrice = await web3.eth.getGasPrice();", "explanation": "This block appears to be JavaScript code from a React application, specifically using the React Hooks API. Its purpose is:\n\n**Initialization and Data Retrieval**\n\n- Initializes a Web3 contract instance when necessary (i.e., when `web3` and `contractAddress` are available).\n- Retrieves data from the contract and stores it in the `value` state variable.\n- Sets boolean states for initializing and updating the contract instance.\n\nFunctionality includes:\n\n- Eventual Data submission and updating a state when submitting", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**SmartContract Component Summary**\n\nThe SmartContract component is a React component for interacting with a smart contract on a blockchain. It allows users to connect to Web3 and Magic, display and manage contract input, call contract functions, and display contract addresses and results. The component includes features such as:\n\n- Initializing and updating the contract instance with Web3 and blockchain data\n- Retrieving and storing contract values in the component's state\n- Displaying a Spinner while loading, and toast messages for notifications\n- Providing a \"Copy\" button to copy the contract address to the clipboard\n- Submitting and updating contract values with real-time notifications\n- Displaying error messages, transaction hashes, and updates upon successful submission\n\n**Key Functionality:**\n\n- Submit a value to the smart contract and retrieve updates\n- Display the contract address, value, and loading indicator\n- Provide an input field for users to enter a new value\n- Update the stored value with an \"Update\" or \"Submit\" button"}
{"code": "        console.log(`Current gas price: ${gasPrice}`);\n\n        // Estimate gas limit\n        const gasLimit = await contract.methods.store(Number(newValue)).estimateGas({\n          from: accounts[0]\n        });\n        console.log(`Estimated gas limit: ${gasLimit}`);\n\n        // Check if account balance is sufficient\n        const transactionCost = BigInt(gasPrice) * BigInt(gasLimit);\n        if (BigInt(accountBalance) < transactionCost) {\n          throw new Error(`Insufficient funds for gas * price + value: have ${accountBalance}, need ${transactionCost}`);\n        }\n\n        // Send the transaction\n        await contract.methods.store(Number(newValue)).send({\n          from: accounts[0],\n          gasPrice: gasPrice,\n          gas: gasLimit\n        })\n          .on('transactionHash', (txHash) => {\n            setHash(txHash);\n            console.log('Transaction hash:', txHash);\n          })\n          .then((receipt) => {\n            showToast({ message: 'Value updated!', type: 'success' });", "explanation": "**Transaction Validator and Executor Block:**\n\nThis block:\n\n1. Checks the current gas price.\n2. Estimates the gas limit for a transaction to store a new value.\n3. Verifies if the account balance is sufficient to cover the transaction cost.\n4. If sufficient, sends the transaction with the estimated gas limit and gas price, updating the stored value.\n\nIt also provides real-time notifications for the transaction hash and displays a success message upon a successful update.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**SmartContract Component Summary**\n\nThe SmartContract component is a React component for interacting with a smart contract on a blockchain. It allows users to connect to Web3 and Magic, display and manage contract input, call contract functions, and display contract addresses and results. The component includes features such as:\n\n- Initializing and updating the contract instance with Web3 and blockchain data\n- Retrieving and storing contract values in the component's state\n- Displaying a Spinner while loading, and toast messages for notifications\n- Providing a \"Copy\" button to copy the contract address to the clipboard\n- Submitting and updating contract values with real-time notifications\n- Displaying error messages, transaction hashes, and updates upon successful submission\n\n**Key Functionality:**\n\n- Submit a value to the smart contract and retrieve updates\n- Display the contract address, value, and loading indicator\n- Provide an input field for users to enter a new value\n- Update the stored value with an \"Update\" or \"Submit\" button"}
{"code": "            console.log('Transaction receipt:', receipt);\n            setNewValue('');\n          })\n          .catch((error) => {\n            console.error('Error submitting value:', error);\n            showToast({ message: error.message, type: 'error' });\n          });\n\n        setUpdating(false);\n        setValue(await contract.methods.retrieve().call());\n      } catch (error: any) {\n        showToast({ message: error.message, type: 'error' });\n        console.error('Error submitting value:', error);\n        setUpdating(false);\n      }\n    }\n  };\n\n  const copy = useCallback(() => {\n    if (contractAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(contractAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, contractAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"Wallet\">Smart Contract</CardHeader>\n      <CardLabel\n        leftHeader=\"Contract Address\"", "explanation": "**Purpose:** The block of code appears to handle interaction with a smart contract, specifically submitting and retrieving value from the contract.\n\n**Functionality:** \n\n1. It submits a value to a smart contract, which results in a receipt being logged to the console.\n2. If the submission is successful, the block updates the contract's value by calling a retrieve method.\n3. If there's an error, it displays an error message, shows a toast notification with the error message, and logs the error to the console.\n4. It also provides a \"Copy\" button functionality to copy the contract address to the clipboard.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**SmartContract Component Summary**\n\nThe SmartContract component is a React component for interacting with a smart contract on a blockchain. It allows users to connect to Web3 and Magic, display and manage contract input, call contract functions, and display contract addresses and results. The component includes features such as:\n\n- Initializing and updating the contract instance with Web3 and blockchain data\n- Retrieving and storing contract values in the component's state\n- Displaying a Spinner while loading, and toast messages for notifications\n- Providing a \"Copy\" button to copy the contract address to the clipboard\n- Submitting and updating contract values with real-time notifications\n- Displaying error messages, transaction hashes, and updates upon successful submission\n\n**Key Functionality:**\n\n- Submit a value to the smart contract and retrieve updates\n- Display the contract address, value, and loading indicator\n- Provide an input field for users to enter a new value\n- Update the stored value with an \"Update\" or \"Submit\" button"}
{"code": "        rightAction={!contractAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>}\n      />\n      <div className=\"code\">{contractAddress}</div>\n      <Divider />\n      <div>\n        <div>\n          <strong>Stored Value: </strong>{value !== undefined ? value.toString() : \"...loading\"}\n        </div>\n        <Spacer size={20} />\n        <FormInput\n          type=\"number\"\n          value={newValue}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNewValue(e.target.value)}\n          placeholder=\"Enter new value\"\n        />\n        <FormButton onClick={submit} disabled={updating}>\n          {updating ? \"Updating value\" : \"Submit\"}\n        </FormButton>\n      </div>\n    </Card>\n  );\n};\n\nexport default SmartContract;\n", "explanation": "**Component Purpose and Functionality:**\n\nThis code snippet appears to be from a ReactJS UI component named \"SmartContract\". Its primary purpose is to display information and functionality related to a smart contract. \n\nThe component's functionality includes:\n\n- Displaying a contract address, either as a clickable copy button or a spinning loading indicator when not available.\n- Displaying the stored value of the smart contract, loading a placeholder message if the value is undefined.\n- Providing an input field for users to enter a new value, with an \"Update\" or \"Submit\" button to modify the stored value.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/SmartContract.tsx", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**SmartContract Component Summary**\n\nThe SmartContract component is a React component for interacting with a smart contract on a blockchain. It allows users to connect to Web3 and Magic, display and manage contract input, call contract functions, and display contract addresses and results. The component includes features such as:\n\n- Initializing and updating the contract instance with Web3 and blockchain data\n- Retrieving and storing contract values in the component's state\n- Displaying a Spinner while loading, and toast messages for notifications\n- Providing a \"Copy\" button to copy the contract address to the clipboard\n- Submitting and updating contract values with real-time notifications\n- Displaying error messages, transaction hashes, and updates upon successful submission\n\n**Key Functionality:**\n\n- Submit a value to the smart contract and retrieve updates\n- Display the contract address, value, and loading indicator\n- Provide an input field for users to enter a new value\n- Update the stored value with an \"Update\" or \"Submit\" button"}
{"code": "import { useCallback, useEffect, useMemo, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport { logout } from '@/utils/common';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport useWeb3 from '@/hooks/Web3';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getNetworkName, getNetworkToken } from '@/utils/network';\n\nconst UserInfo = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const web3 = useWeb3();\n\n  const [balance, setBalance] = useState('...');\n  const [copied, setCopied] = useState('Copy');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const [publicAddress] = useState(localStorage.getItem('user'));\n\n  const getBalance = useCallback(async () => {\n    if (publicAddress && web3) {", "explanation": "**Summary:**\n\nThis block appears to be a React component (`UserInfo`) that displays user information, including their balance and public address. It utilizes several hooks from the `react` library, including `useState`, `useCallback`, and `useEffect`, as well as custom hooks (`useMagic` and `useWeb3`) from the application's utility library. The component also uses local storage to store and retrieve the user's public address. It fetches the user's balance using the Web3 library and displays a progress indicator (Spinner) while refreshing the balance.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `UserInfoCard.tsx` file:\n\nThe `UserInfoCard` component is a React functional component that displays user wallet information, including balance and public address, and manages wallet connection status. It uses React hooks, custom utility functions, and local storage to fetch and refresh the user's balance, handle wallet disconnection, and copy the public address to the clipboard."}
{"code": "      const balance = await web3.eth.getBalance(publicAddress);\n      if (balance == BigInt(0)) {\n        setBalance('0');\n      } else {\n        setBalance(web3.utils.fromWei(balance, 'ether'));\n      }\n      console.log('BALANCE: ', balance);\n    }\n  }, [web3, publicAddress]);\n\n  const refresh = useCallback(async () => {\n    setIsRefreshing(true);\n    await getBalance();\n    setTimeout(() => {\n      setIsRefreshing(false);\n    }, 500);\n  }, [getBalance]);\n\n  useEffect(() => {\n    if (web3) {\n      refresh();\n    }\n  }, [web3, refresh]);\n\n  useEffect(() => {\n    setBalance('...');\n  }, [magic]);\n\n  const disconnect = useCallback(async () => {\n    if (magic) {\n      await logout(setToken, magic);\n    }\n  }, [magic, setToken]);\n\n  const copy = useCallback(() => {\n    if (publicAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(publicAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, publicAddress]);\n\n  return (\n    <Card>", "explanation": "**Code Block Summary**\n\nThis block is a React functional component snippet that handles wallet-related functionality. It:\n\n1. Retrieves and displays the wallet balance if connected.\n2. Employs a refresh mechanism to update the wallet balance.\n3. Triggers wallet disconnection upon logout.\n4. Copies the public wallet address to the clipboard upon copy click.\n\n**Key Functions:**\n\n- `getBalance()`: Retrieves and displays the wallet balance.\n- `refresh()`: Refreshes the wallet balance and indicates a loading state.\n- `disconnect()`: Triggers wallet disconnection and logout.\n- `copy()`: Copies the public wallet address to the clipboard.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `UserInfoCard.tsx` file:\n\nThe `UserInfoCard` component is a React functional component that displays user wallet information, including balance and public address, and manages wallet connection status. It uses React hooks, custom utility functions, and local storage to fetch and refresh the user's balance, handle wallet disconnection, and copy the public address to the clipboard."}
{"code": "      <CardHeader id=\"Wallet\">Wallet</CardHeader>\n      <CardLabel leftHeader=\"Status\" rightAction={<div onClick={disconnect}>Disconnect</div>} isDisconnect />\n      <div className=\"flex-row\">\n        <div className=\"green-dot\" />\n        <div className=\"connected\">Connected to {getNetworkName()}</div>\n      </div>\n      <Divider />\n      <CardLabel leftHeader=\"Address\" rightAction={!publicAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>} />\n      <div className=\"code\">{publicAddress?.length == 0 ? 'Fetching address..' : publicAddress}</div>\n      <Divider />\n      <CardLabel\n        leftHeader=\"Balance\"\n        rightAction={\n          isRefreshing ? (\n            <div className=\"loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            <div onClick={refresh}>Refresh</div>\n          )\n        }\n      />\n      <div className=\"code\">\n        {balance.substring(0, 7)} {getNetworkToken()}\n      </div>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n", "explanation": "This block appears to be a user info card component, likely used for displaying a user's wallet information. \n\nIts primary functions are:\n\n1. Displaying connection status and network information.\n2. Displaying and managing the user's wallet address.\n3. Displaying and refreshing the user's wallet balance.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `UserInfoCard.tsx` file:\n\nThe `UserInfoCard` component is a React functional component that displays user wallet information, including balance and public address, and manages wallet connection status. It uses React hooks, custom utility functions, and local storage to fetch and refresh the user's balance, handle wallet disconnection, and copy the public address to the clipboard."}
{"code": "import React, { useState } from 'react';\nimport Disconnect from '../wallet-methods/Disconnect';\nimport GetIdToken from '../wallet-methods/GetIdToken';\nimport GetMetadata from '../wallet-methods/GetMetadata';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { LoginMethod } from '@/utils/common';\n<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n<%-`import UpdateEmail from '../wallet-methods/UpdateEmail'`-%>\n<% }%>\n\nconst WalletMethods = ({ token, setToken }: LoginProps) => {\n  const [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n    localStorage.getItem('loginMethod') as LoginMethod,\n  );\n  return (\n    <Card>\n      <CardHeader id=\"methods\">User Methods</CardHeader>\n\t  <% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n\t  \t<%-`{loginMethod && loginMethod == 'EMAIL' && (\n\t\t\t<>", "explanation": "**Purpose:** \nProvides a configurable wallet methods component that can be used for user authentication, featuring a card layout with methods such as Email, Disconnect, and others.\n\n**Functionality:**\n\n- Stores and retrieves the user's current login method from local storage.\n- Displays a card with the title \"User Methods\".\n- Includes customizable wallet methods such as Email OTP, Disconnect, and Metadata.\n- Allows for conditional import and rendering of components based on available login methods.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**WalletMethodsCard Overview:**\n\nThe WalletMethodsCard is a configurable ReactJS component that displays various wallet methods for user authentication in a card layout. It retrieves and stores the user's current login method from local storage, allowing for conditional rendering of customizable wallet methods. The component includes functionalities such as updating the email address, fetching an ID token, and retrieving user metadata, as well as an option to disconnect the account. \n\nThis component provides a flexible and easy-to-use solution for integrating wallet methods in a user authentication workflow."}
{"code": "\t\t\t\t<UpdateEmail />\n\t\t\t\t<Divider />\n\t\t\t</>\n\t\t)}`-%>\n\t  <% }%>\n      <GetIdToken />\n      <Divider />\n      <GetMetadata />\n      <Divider />\n      <Disconnect token={token} setToken={setToken} />\n    </Card>\n  );\n};\n\nexport default WalletMethods;\n", "explanation": "**Block Purpose:**\n\nThe block appears to be a ReactJS component that renders a card with various wallet methods.\n\n**Functionalities:**\n\n1. UPDATE EMAIL: Possibly updates the user's email address.\n2. ID TOKEN FETCHING: Retrieves an ID token.\n3. METADATA FETCHING: Fetches user metadata.\n4. DISCONNECT: Allows the user to disconnect their account with the option to reconnect (via the token).\n\n**Flow:**\n\n1. Checks for a condition ( UpdateEmail  portion).\n2. If true, renders the content inside.\n3. Fetches an ID token using GetIdToken.\n4. Fetches metadata using GetMetadata.\n5. Allows user to disconnect with Disconnect.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**WalletMethodsCard Overview:**\n\nThe WalletMethodsCard is a configurable ReactJS component that displays various wallet methods for user authentication in a card layout. It retrieves and stores the user's current login method from local storage, allowing for conditional rendering of customizable wallet methods. The component includes functionalities such as updating the email address, fetching an ID token, and retrieving user metadata, as well as an option to disconnect the account. \n\nThis component provides a flexible and easy-to-use solution for integrating wallet methods in a user authentication workflow."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { logout } from '@/utils/common';\nimport { LoginProps } from '@/utils/types';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst Disconnect = ({ setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const disconnect = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      await logout(setToken, magic);\n      setDisabled(false);\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic, setToken]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={disconnect} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[115px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'disconnect()'\n        )}\n      </button>", "explanation": "**Disconnect Button Functionality**\n\nThis component renders a \"Disconnect\" button that allows users to disconnect their account from the application.\n\n**Key Features:**\n\n- Clicking the button initiates a disconnection process.\n- Displays a loading spinner while the disconnection is in progress.\n- Attempts to log out the user and update the application token state using the `logout` function.\n- Prevents multiple disconnections by adding a disabled state when the process is initiated.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Disconnect.tsx' component:\n\n**Description:** \nThe Disconnect component is a React component that renders a \"Disconnect\" button allowing users to disconnect their account from a decentralized application (dApp). \n\n**Key Features:** \n- Initiates disconnection on click.\n- Displays a loading spinner during disconnection.\n- Logs out the user and updates the application token state."}
{"code": "      <div className=\"wallet-method-desc\">Disconnects user from dApp.</div>\n    </div>\n  );\n};\n\nexport default Disconnect;\n", "explanation": "This block is a React component named \"Disconnect\" and its purpose is to render a button or link that discontinues the user's connection to a decentralized application (dApp).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Disconnect.tsx' component:\n\n**Description:** \nThe Disconnect component is a React component that renders a \"Disconnect\" button allowing users to disconnect their account from a decentralized application (dApp). \n\n**Key Features:** \n- Initiates disconnection on click.\n- Displays a loading spinner during disconnection.\n- Logs out the user and updates the application token state."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetIdToken = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getWalletType = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const idToken = await magic.user.getIdToken();\n      setDisabled(false);\n      console.log('ID Token: ' + idToken);\n      showToast({\n        message: 'Please check console for the ID Token Log',\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getWalletType} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[86px]\">\n            <Spinner />\n          </div>\n        ) : (", "explanation": "This block is a React functional component named `GetIdToken`. Its purpose is to retrieve an ID token using the Realm Magic provider's `magic.user.getIdToken()` method when a button is clicked. \n\nFunctionality:\n\n- Checks if the Realm Magic provider is available before attempting to retrieve the ID token.\n- Displays a loading spinner and disables the button while the ID token is being retrieved.\n- Logs the retrieved ID token to the console and displays a success message when the retrieval is successful.\n- Displays an error message in the console if the retrieval fails.\n- Re-enables the button after the ID token has been retrieved.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary:\n\nThe `GetIdToken` React component in `src/components/magic/wallet-methods/GetIdToken.tsx` is a button that, upon click, retrieves an ID token using Realm Magic's `magic.user.getIdToken()` method. The ID token is logged to the console and a success message is displayed when successfully retrieved."}
{"code": "          'getIdToken()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Generates a Decentralized Id Token which acts as a proof of authentication to resource servers.\n      </div>\n    </div>\n  );\n};\n\nexport default GetIdToken;\n", "explanation": "This block appears to be a React functional component named `GetIdToken`. The purpose is to generate an Id Token, which is used for proof of authentication, and provide it as a response when a button is clicked.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary:\n\nThe `GetIdToken` React component in `src/components/magic/wallet-methods/GetIdToken.tsx` is a button that, upon click, retrieves an ID token using Realm Magic's `magic.user.getIdToken()` method. The ID token is logged to the console and a success message is displayed when successfully retrieved."}
{"code": "import React, { useCallback, useState } from 'react';\nimport showToast from '@/utils/showToast';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetMetadata = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getMetadata = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      // Rehydrates the user session whenever getInfo is invoked\n      const userInfo = await magic.user.getInfo();\n      setDisabled(false);\n      showToast({\n        message: `Public Address: ${userInfo.publicAddress}`,\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getMetadata} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[220px]\">\n            <Spinner />\n          </div>", "explanation": "**Summary:**\n\nThis is a React component named `GetMetadata`. Its purpose is to retrieve a user's metadata (public address) using the `magic.user.getInfo()` method from theMagic library. The component is rendered as a button that shows a loading spinner while the data is being retrieved. If successful, a toast notification is displayed with the user's public address.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'GetMetadata.tsx' file:\n\nThe `GetMetadata` component is a clickable button that retrieves a user's metadata (public address) using `magic.user.getInfo()`. When clicked, it displays a loading spinner and upon successful retrieval, a toast notification with the user's public address is displayed."}
{"code": "        ) : (\n          'getInfo()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">Retrieves information for the authenticated user.</div>\n    </div>\n  );\n};\n\nexport default GetMetadata;\n", "explanation": "Summary: This block is a clickable button component that retrieves information for the authenticated user when clicked, through a function named 'getInfo()'.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'GetMetadata.tsx' file:\n\nThe `GetMetadata` component is a clickable button that retrieves a user's metadata (public address) using `magic.user.getInfo()`. When clicked, it displays a loading spinner and upon successful retrieval, a toast notification with the user's public address is displayed."}
{"code": "import React, { useCallback, useState } from 'react';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Spacer from '@/components/ui/Spacer';\nimport { useMagic } from '@/hooks/MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\nimport FormInput from '@/components/ui/FormInput';\nimport showToast from '@/utils/showToast';\nimport { RPCError } from 'magic-sdk';\n\nconst UpdateEmail = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n\n  const updateEmail = useCallback(async () => {\n    if (!magic) return;\n    try {\n      if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n        setEmailError(true);\n        setDisabled(false);\n      } else {\n        setDisabled(true);\n        await magic.auth.updateEmailWithUI({ email, showUI: true });\n        showToast({ message: 'Email Updated!', type: 'success' });", "explanation": "**Update Email Component Summary**\n\nThis component allows users to update their email address. Key functionalities include:\n\n- Input validation for email format\n- Showing a spinner when the update process is in progress\n- Displaying an error if email format is invalid\n- Updating the email address using the Magic authentication library\n- Displaying a success message after successful email update", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'Update Email Component':\n\n**Update Email Component Summary**\n\nThis UI component allows users to update their email address by:\n\n- Inputting a new email\n- Initiating the update flow\n- Displaying a loading indicator\n- Displaying error messages on update failure or invalid email format\n- Showing a success message after successful email update"}
{"code": "        setDisabled(false);\n        setEmail('');\n      }\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n      if (error instanceof RPCError) {\n        showToast({ message: error.message, type: 'error' });\n      } else {\n        showToast({ message: 'Update email failed', type: 'error' });\n      }\n    }\n  }, [magic, email]);\n\n  const handleEmailChange = (e: any) => {\n    setEmailError(false);\n    setEmail(e.target.value);\n  };\n\n  return (\n    <div className=\"wallet-method-container\">\n      <FormInput value={email} onChange={handleEmailChange} placeholder=\"New Email\" />\n      <button className=\"wallet-method\" onClick={updateEmail} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[76px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'updateEmail()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Initiates the update email flow that allows a user to change their email address.\n      </div>", "explanation": "This block is a user interface component for updating a user's email address in a wallet system. \n\nIts main functionalities include:\n\n1. Allowing users to input a new email address.\n2. Initiating an update email flow upon user input.\n3. Displaying a loading indicator while the update is in progress.\n4. Displaying error messages if the update fails.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'Update Email Component':\n\n**Update Email Component Summary**\n\nThis UI component allows users to update their email address by:\n\n- Inputting a new email\n- Initiating the update flow\n- Displaying a loading indicator\n- Displaying error messages on update failure or invalid email format\n- Showing a success message after successful email update"}
{"code": "      {emailError ? (\n        <div className=\"mb-[-10px]\">\n          <Spacer size={20} />\n          <ErrorText>Enter a valid email!</ErrorText>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UpdateEmail;\n", "explanation": "**Purpose and Functionality:**\n\n Displays an error message if the email is invalid.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'Update Email Component':\n\n**Update Email Component Summary**\n\nThis UI component allows users to update their email address by:\n\n- Inputting a new email\n- Initiating the update flow\n- Displaying a loading indicator\n- Displaying error messages on update failure or invalid email format\n- Showing a success message after successful email update"}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "This block is a React functional component named 'Card'. Its purpose is to render a basic HTML div element with a CSS class 'card' and allow the wrapping of any React content using JSX 'children'.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Card' component in the 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Card.tsx' file:\n\n`Card` is a basic React component that renders a div with class 'card' and allows wrapping any content using JSX 'children'."}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "**Summary:** The `CardHeader` component is a React functional component that renders an `<h1>` element with a dynamic `id` attribute and displays its child content using the `children` prop.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `CardHeader` component is a React functional component that renders an `<h1>` element with a dynamic `id` attribute, containing its child content defined by the `children` prop."}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "This block of code defines a React component named `CardLabel`. \n\n**Purpose:** \nIt serves as a reusable container for displaying a label (left Header) and an optional action or button (right Action).\n\n**Functionality:**\nThe component accepts customizable props for the left Header, right Action, and a boolean indicator for disconnection status. It renders the left Header and an optional Action or Disconnect button on the right, based on the props provided.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'CardLabel.tsx' file:\n\nThe `CardLabel` React component is a reusable container displaying a left header and an optional action or button on the right, with customizable props for header and action content, as well as disconnection status."}
{"code": "import React from 'react';\nimport WalletMethods from '../magic/cards/WalletMethodsCard';\nimport SendTransaction from '../magic/cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from '@/components/magic/cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\nimport SmartContract from '../magic/cards/SmartContract';\nimport { isTestnet } from '@/utils/smartContract';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n        {isTestnet() && <SmartContract />}\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "**Dashboard Functionality:**\n\nThis code defines a React functional component named `Dashboard`. Its primary purpose is to render a user interface for a cryptocurrency or blockchain-based application, providing key features and information:\n\n* Displays the user's account information through the `UserInfoCard`.\n* Allows users to send transactions via the `SendTransactionCard`.\n* Shows wallet-related methods (e.g., handling tokens) via the `WalletMethodsCard`.\n* Optionally displays a Smart Contract interface, depending on the network (testnet-specific).\n* Includes links to developer resources through the `DevLinks` component.\n* Utilizes a generic `Header` component.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Dashboard' component in the 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Dashboard.tsx' file:\n\n**Dashboard Component Summary:**\n\nA React functional component that serves as the primary user interface for a cryptocurrency/blockchain application, featuring key sections for:\n\n- User Account Information (`UserInfoCard`)\n- Transaction sending (`SendTransactionCard`)\n- Wallet management (`WalletMethodsCard`)\n- Smart Contract interface (testnet-specific)\n- Developer resources (`DevLinks` component)\n- Generic `Header` component."}
{"code": "import classNames from 'classnames';\nimport Link from 'next/link';\n\nconst DevLinks = ({ primary = false, footer = false }: { primary?: boolean; footer?: boolean }) => (\n  <div className={`links ${footer ? 'footer-links' : ''}`}>\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://magic.link/docs/home/welcome\" target=\"_blank\" rel=\"noreferrer\">\n        Dev Docs\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://dashboard.magic.link/signup\" target=\"_blank\" rel=\"noreferrer\">\n        Dashboard\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://discord.gg/magiclabs\" target=\"_blank\" rel=\"noreferrer\">\n        Discord\n      </a>\n    </div>\n  </div>\n);\n", "explanation": "**Summary**\n\nThis block is a functional React component named `DevLinks` that renders a collection of links in a specific layout. It accepts two optional props: `primary` and `footer`, which control the styling and position of the links. The component contains three links (Dev Docs, Dashboard, and Discord) with customizable text color based on the `primary` prop.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/DevLinks.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/DevLinks.tsx':\n\nThis file exports a React component named `DevLinks` that renders a customizable collection of links, including Dev Docs, Dashboard, and Discord, with optional styling and positioning controls."}
{"code": "export default DevLinks;\n", "explanation": "This block exports a JavaScript module named \"DevLinks\" by default, making it available for use in other parts of the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/DevLinks.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/DevLinks.tsx':\n\nThis file exports a React component named `DevLinks` that renders a customizable collection of links, including Dev Docs, Dashboard, and Discord, with optional styling and positioning controls."}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "This block is a React component named \"Divider\". Its purpose is to render a simple HTML div element, and its functionality is to provide a basic way to visually separate content on a webpage using CSS classes defined elsewhere.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the Divider component:\n\nThe Divider component is a simple React component that renders an HTML div element, used to visually separate content on a webpage, leveraging CSS classes defined elsewhere for styling."}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "This block is a React functional component named \"ErrorText\". \n\nPurpose: \n- To display error messages in a formatted way.\n\nFunctionality:\n- It renders a `<div>` element with a class of 'error'.\n- It accepts any content (children) and displays it within the 'error' div.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'ErrorText' component:\n\n`ErrorText` is a React functional component that displays error messages in a formatted way. It renders a wrapper `<div>` with the class 'error' and allows displaying any content within it."}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "This block is a React component named \"FormButton\".\n\n**Purpose:** A customizable form button component that can be clicked to trigger an action.\n\n**Functionality:**\n\n- Accepts children elements to display as the button label.\n- Permits a callback function to be executed when clicked (onClick).\n- Allows the button to be disabled if a boolean value is passed (disabled).\n- Appearances seem controlled via the included className 'form-button'.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'FormButton.tsx' file:\n\nThe FormButton component is a customizable React button that can be used to trigger actions. It accepts children elements as a label, allows an optional onClick callback, and can be disabled with a boolean value, while inheriting appearance from the 'form-button' CSS class."}
{"code": "import React from 'react'\n\ninterface Props {\n  value?: string\n  type?: string\n  onChange: (e: any) => void\n  placeholder: string\n}\n\nconst FormInput = ({ value, type, onChange, placeholder }: Props) => {\n  return (\n    <input\n      type={type ?? 'text'}\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "**Summary:**\n\nThis block is a custom React input component, named `FormInput`, designed to render a basic form input field with standardized properties. It accepts user-input values, rendering them as the input field's content, and triggers an `onChange` event when user input changes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `FormInput` component is a custom React input field that renders a standardized form input with the ability to display user-input values and trigger an `onChange` event upon changes."}
{"code": "import Image from 'next/image';\nimport Logo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <div className=\"flex flex-col gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <DevLinks />\n      <p className=\"text-sm font-semibold text-white\">Take a look at our <a href=\"https://github.com/magiclabs/create-magic-app/blob/master/scaffolds/nextjs-dedicated-wallet/template/README.md\" target='_blank' className=\"cursor-pointer text-[#6851ff]\">developer guide</a> to learn more about this template</p>\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "This block is a React functional component named `Header`. \n\nPurpose: It represents the top navigation bar or header section of an application.\n\nFunctionality:\n\n- Displays an application logo.\n- Displays the application name (\"Magic\") with a prominent font.\n- Displays a secondary text (\"Demo\").\n- Renders a link to developer resources (\"DevLinks\").\n- Includes a link to a developer guide in a popup window.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Header.tsx':\n\nThe Header component represents the top navigation bar of an application. It displays the application logo, prominent application name ('Magic'), and secondary text ('Demo'). The component also includes links to developer resources ('DevLinks') and a developer guide, with an optional popup window for the guide."}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "**Summary:**\n\nThis block of code renders a Magic Dashboard redirect link. It includes:\n\n- A logo and title (\"Magic\")\n- A redirect card with a link to open the Magic Dashboard signup page in a new tab.\n- Use callback function to prevent unnecessary re-renders in React.\n\n**Purpose:**\nA React component that serves as a redirect link to the Magic Dashboard signup page.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx' file:\n\nThis React component serves as a redirect link to the Magic Dashboard signup page. It displays a warning message to set the NEXT_PUBLIC_MAGIC_API_KEY environment variable, a button to retrieve API keys, and a button to redirect to the Magic Dashboard. The component is designed to prevent unnecessary re-renders and includes a custom DevLinks component for development purposes."}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "This block is a section of UI code that:\n\n1. Displays a warning message to set an environment variable `NEXT_PUBLIC_MAGIC_API_KEY` in the `.env` file.\n2. Provides a button to retrieve API keys, accompanied by an icon.\n3. Includes a custom component `DevLinks`. \n\nIt appears to be a part of a larger application or dashboard for the Magic API.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/components/ui/MagicDashboardRedirect.tsx' file:\n\nThis React component serves as a redirect link to the Magic Dashboard signup page. It displays a warning message to set the NEXT_PUBLIC_MAGIC_API_KEY environment variable, a button to retrieve API keys, and a button to redirect to the Magic Dashboard. The component is designed to prevent unnecessary re-renders and includes a custom DevLinks component for development purposes."}
{"code": "import React from 'react'\n\nconst Spacer = ({ size }: { size: number }) => {\n  return <div style={{ height: `${size}px` }} />\n}\n\nexport default Spacer\n", "explanation": "This block defines a reusable React component called \"Spacer\". \n\nPurpose: To create a container element with a specified height to add spacing in a UI.\n\nFunctionality: It takes a single prop \"size\" which determines the height of the spacer element.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise summary of the 'Spacer.tsx' file:\n\n**Spacer Component**\nA reusable React component that creates a container element with a specified height to add spacing in a UI. It accepts a single 'size' prop to determine the height of the spacer element."}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "The purpose of this block is to render a loading spinner. \n\nFunctionality: It displays an animated SVG circle as a loading indicator, with customizable styles such as color and size.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This code block renders a customizable loading spinner as an animated SVG circle, providing a visual indicator for a webpage or application that is processing data or loading content."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "This block is a SVG element that represents a spinner animation. It appears to be a pre-drawn path (`d='...'`) that outlines the shape of a spinning object, likely a circle or a similar shape. The path is drawn using a series of coordinate points (M, C, C, etc.) that define the shape's arc.\n\nThe purpose of this block is to display a loading animation or a spinner, likely used as a visual indicator for a webpage or application that is processing data or loading content. The animation can be achieved by simply rendering this SVG element on a web page, and it will likely rotate as it responds to user interactions or JavaScript animations.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This code block renders a customizable loading spinner as an animated SVG circle, providing a visual indicator for a webpage or application that is processing data or loading content."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "**Summary:**\n\nThis is a React functional component named `TransactionHistory`. Its purpose is to render a link to a block explorer page, displaying the user's transaction history, when a logged-in user clicks on it. The component uses the user's public address stored in local storage to generate the link.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a React component named `TransactionHistory` that renders a link to a block explorer page displaying a logged-in user's transaction history, generated by their public address stored in local storage."}
{"code": "import { getChainId, getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\n\nexport type Magic = MagicBase<OAuthExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n\n  useEffect(() => {\n    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        network: {\n          rpcUrl: getNetworkUrl(),\n          chainId: getChainId(),\n        },\n        extensions: [new OAuthExtension()],\n      });\n\n      setMagic(magic);\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n    };", "explanation": "**Summary:** \n\nThis block provides a React context (MagicContext) for managing a Magic SDK instance, which facilitate authentication and wallet interactions. It:\n\n1. Creates a context for sharing the Magic SDK instance across the application.\n2. Provides a hook (useMagic) for components to access the context.\n3. Creates a provider component (MagicProvider) that, when initialized, sets up a Magic SDK instance using an API key if available and sets the instance as context value.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx':\n\nThis file provides a Magic SDK context for authentication and wallet interactions, allowing components to access the Magic instance through the `useMagic` hook."}
{"code": "  }, [magic]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;", "explanation": "Summary: The `MagicProvider` function is a React hook that wraps a component tree with a Magic Context, providing the `MagicContext.Provider` component with a `value` prop that will be passed down to its children.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-dedicated-wallet/template/src/hooks/MagicProvider.tsx':\n\nThis file provides a Magic SDK context for authentication and wallet interactions, allowing components to access the Magic instance through the `useMagic` hook."}
{"code": "import { Web3 } from 'web3';\nimport { useEffect, useState } from 'react';\nimport { useMagic } from './MagicProvider';\n\nconst useWeb3 = () => {\n  const { magic } = useMagic();\n  const [web3, setWeb3] = useState<Web3 | null>(null);\n\n  useEffect(() => {\n    if (magic) {\n      setWeb3(new Web3((magic as any).rpcProvider));\n    } else {\n      console.log('Magic is not initialized');\n    }\n  }, [magic]);\n\n  return web3;\n};\n\nexport default useWeb3;", "explanation": "**Summary:**\n\nThe `useWeb3` hook retrieves and manages a Web3.js instance for interacting with the Ethereum blockchain. It relies on the `useMagic` hook to fetch a Magic.js instance, which is used to establish a connection to the Ethereum network through the RPC provider. If the provider is successfully obtained, the hook returns the Web3.js instance; otherwise, it logs an error message.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/hooks/Web3.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `useWeb3` hook provides a convenient way to manage a Web3.js instance, enabling interaction with the Ethereum blockchain. It achieves this by leveraging the `useMagic` hook to connect to the Ethereum network through a Magic.js instance, and logs any errors encountered during the process."}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "This block is a Next.js application entry point, also known as the `App.js` file. \n\nIts purpose is to wrap and render every page component in the application, passing required props to it.\n\nIn simple terms, it exports the pages and makes them accessible as a part of the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary:\n\nThis file is the entry point for the Next.js application, responsible for rendering all page components with required props, making them accessible as part of the application."}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "**Summary:** This block is a Next.js document component, responsible for wrapping the entire HTML document. Its primary function is to render the HTML structure, including the language attribute and JavaScript scripts.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-dedicated-wallet/template/src/pages/_document.tsx' is a Next.js document component, responsible for wrapping the entire HTML document, rendering its structure, including a language attribute and JavaScript scripts."}
{"code": "import MagicProvider from '@/hooks/MagicProvider';\n\nimport { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from '@/components/magic/Login';\nimport Dashboard from '@/components/ui/Dashboard';\nimport MagicDashboardRedirect from '@/components/ui/MagicDashboardRedirect';\n\nexport default function Home() {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    setToken(localStorage.getItem('token') ?? '');\n  }, [setToken]);\n\n  return (\n    <MagicProvider>\n      <ToastContainer />\n      {process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n        token.length > 0 ? (\n          <Dashboard token={token} setToken={setToken} />\n        ) : (\n          <Login token={token} setToken={setToken} />\n        )\n      ) : (\n        <MagicDashboardRedirect />\n      )}\n    </MagicProvider>\n  );\n}\n", "explanation": "**Home Functionality Summary:**\n\nThis block is the main component of a React application ('Home') that handles user authentication and redirects to different screens based on the user's state. It integrates with the Magic library for authentication and provides a Toast container for notifications. The functionality includes:\n\n- Loading user token from local storage\n- Displaying a login screen if the token is missing, and a dashboard if the token is present and a magic API key is provided\n- Redirects to a magic dashboard if no magic API key is provided", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'index.tsx' file:\n\n**Home Page Functionality Summary**\n\nThis is the main entry point of the Next.js application ('Home'). It handles user authentication using the Magic library, checking for a stored token in local storage. Depending on the presence and validity of the token and a provided Magic API key, it:\n\n- Displays a login screen if token is missing\n- Shows the dashboard if token is present and Magic API key is provided\n- Redirects to Magic's dashboard if Magic API key is missing."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "**Summary:** \n\nThis block appears to be a set of CSS styles and configurations for a web application, utilizing the Tailwind CSS framework. The purpose is to define a consistent and customizable visual design for the application.\n\n**Key functionalities:**\n\n1. Importing font styles from Google Fonts (Inter font family).\n2. Defining variables for colors and backgrounds that adapt to the user's preferred color scheme (dark/light mode).\n3. Setting up basic styles for the HTML and body elements, including font family, font smoothing, and background color.\n4. Defining styles for specific elements, such as navigation menus, list items, active states, NFT list items, and more.\n5. Using the Tailwind utility classes to apply styles and layout configurations.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "This block of code defines a set of CSS classes (or \"utility-first CSS\") that can be applied to HTML elements to customize their appearance. The purpose is to provide a collection of pre-defined styles for common UI components, such as dropdown menus, network options, and logos.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px] bg-no-repeat;\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 transition-[0.1s] text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {", "explanation": "The block is written in CSS (Cascading Style Sheets) code, and its purpose is to define styles for a web application, specifically for login and homepage elements. The main styles include:\n\n- Text and font properties for specific elements (e.g., text color, size, and family)\n- Flexbox and layout styles for components like login grids and buttons\n- State-specific styles (e.g., hover, active, and disabled states) for buttons\n- Background images and colors for the homepage and login pages\n\nIn short, this block sets up visual styles for a web application's login and homepage features.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": "  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {\n  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;", "explanation": "**Purpose:** This block is a collection of CSS styles and definitions for various HTML elements in a web application.\n\n**Functionality:**\n\n- Defines the styling for a \"link\" component with hover and active states.\n- Sets up responsive designs for smaller screen sizes.\n- Styles a \"wallet-method\" component with hover and active effects.\n- Defines the design for a \"footer-links\" section.\n- Defines the design for a \"wallet-method-container\" and other components.\n\nThis block appears to be part of a larger stylesheet, likely targeting an application with a dark theme, given the use of the `text-white` and `bg-[#edebff]` classes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": "}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {\n  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n", "explanation": "This block appears to be CSS code, specifically utilizing Tailwind CSS classes to define styles for various HTML elements on a web page. It consists of five sections:\n\n1. **Wallet method description styling**: Defines the text style for wallet method descriptions.\n2. **Form input styling**: Styles form input fields, including color, font, and border settings.\n3. **Form button styling**: Styles form buttons, including color, font, hover, active, and disabled states.\n4. **Loading container styling**: Defines the style for a loading container, including width, text alignment, and cursor type.\n5. **Loading animation styling**: Animates a loading animation, which is likely a spinner.\n\nIn summary, this code block defines a set of reusable styles for a web page's UI components, using Tailwind CSS classes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": "@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];", "explanation": "This block is a CSS snippet that defines various styles and animations for components in a web application.\n\n**Key Features:**\n\n- Defines a rotation animation for 360 degrees.\n- Applies layouts and styles for components such as cards, headers, labels, and buttons.\n- Customizes the appearance of buttons with hover and active states.\n- Defines styles for a toast notification and a code snippet.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": "  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {\n  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {", "explanation": "This block appears to be CSS styles, likely in a SASS or SCSS format. \n\nIt defines various classes for different elements within a website or application, including error messages, divider elements, layouts, and specific style rules for elements like buttons and containers.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": "  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {\n  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "This block is a CSS code snippet that defines styles for two types of buttons: `.social-login-button` and `.api-button`. \n\nIts purpose is to determine the design and behavior of these buttons, including:\n\n* Visual styles (colors, font, size, border, etc.)\n* Hover and active states\n* Disabled state (for `social-login-button` only)\n\nThe functionality includes:\n\n* Flexibility and responsiveness\n* Gradient backgrounds on hover\n* Semantics for accessibility", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the 'globals.css' file:\n\nThis CSS file, utilizing Tailwind CSS, defines a set of reusable styles for a web application's UI components. The styles are designed to provide a consistent and customizable visual design, adapting to both light and dark themes. Key features include managing colors and background, font styles, layout configurations, button states, and modal animations. The file consists of multiple sections, such as wallet method descriptions, form input and button styling, and loading animations, defining styles for components, error notifications, and specific elements like buttons and containers. The goal is to provide a visually appealing and responsive UI framework for the application."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveUserInfo = (token: string, loginMethod: LoginMethod, userAddress: string) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n  localStorage.setItem('user', userAddress);\n};\n", "explanation": "This block contains two functions: `logout` and `saveUserInfo`. \n\n- `logout`: A function that logs out the user, clearing their session and local storage, and updates the `token` state to an empty string.\n- `saveUserInfo`: A function that saves the user's information to local storage, storing their token, login method, and user address.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/utils/common.ts' file:\n\nThis file contains utility functions for managing user sessions and data. It exports two primary functions: `logout` and `saveUserInfo`. The `logout` function removes the user's session and local storage, resetting the authentication token, while the `saveUserInfo` function saves the user's essential information, including token, login method, and user address, to local storage."}
{"code": "export enum Network {\n  POLYGON_AMOY = 'polygon-amoy',\n  POLYGON = 'polygon',\n  ETHEREUM_SEPOLIA = 'ethereum-sepolia',\n  ETHEREUM = 'ethereum',\n  ETHERLINK = 'etherlink',\n  ETHERLINK_TESTNET = 'etherlink-testnet',\n  ZKSYNC = 'zksync',\n  ZKSYNC_SEPOLIA = 'zksync-sepolia',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'https://polygon-rpc.com/';\n    case Network.POLYGON_AMOY:\n      return 'https://rpc-amoy.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'https://eth-sepolia.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    case Network.ETHEREUM:\n      return 'https://eth-mainnet.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    case Network.ETHERLINK:\n      return 'https://node.mainnet.etherlink.com';\n    case Network.ETHERLINK_TESTNET:\n      return 'https://node.ghostnet.etherlink.com';\n    case Network.ZKSYNC:\n      return 'https://mainnet.era.zksync.io';\n    case Network.ZKSYNC_SEPOLIA:", "explanation": "**Summary:**\n\nThis block defines an enum called `Network` with various Ethereum network providers, including Polygon, Ethereum, and others. It also exports a function `getNetworkUrl` that returns the RPC (Remote Procedure Call) URL for the network based on the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable. The function uses a switch statement to determine which URL to return.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This JavaScript file contains a set of utility functions for interacting with various Ethereum blockchain networks. The file defines an enum `Network` with various providers and exports a `getNetworkUrl` function that returns the RPC URL for the network based on the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable. \n\nKey functions include:\n\n- `getRpcUrl()`: Returns the RPC URL for a specific blockchain network\n- `getChainId()` and `getNetworkToken()`: Return the chain ID and token symbol of the blockchain network, respectively\n- `getBlockExplorer(address: string)`: Returns the explorer URL for a specified address on the active blockchain network\n- `getEip1559Supported()`: Checks if the active blockchain network supports EIP-1559"}
{"code": "      return 'https://zksync-era-sepolia.blockpi.network/v1/rpc/public';\n    default:\n      throw new Error('Network not supported');\n  }\n};\n\nexport const getChainId = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 137;\n    case Network.POLYGON_AMOY:\n      return 80002;\n    case Network.ETHEREUM_SEPOLIA:\n      return 11155111;\n    case Network.ZKSYNC:\n      return 324;\n    case Network.ZKSYNC_SEPOLIA:\n      return 300;\n    case Network.ETHEREUM:\n      return 1;\n    case Network.ETHERLINK:\n      return 42793;\n    case Network.ETHERLINK_TESTNET:\n      return 128123;\n  }\n};\n\nexport const getNetworkToken = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n    case Network.POLYGON:\n      return 'MATIC';\n    case Network.ETHEREUM:\n    case Network.ETHEREUM_SEPOLIA:\n    case Network.ZKSYNC:\n    case Network.ZKSYNC_SEPOLIA:\n      return 'ETH';\n    case Network.ETHERLINK:\n    case Network.ETHERLINK_TESTNET:\n      return 'XTZ';\n  }\n};\n", "explanation": "The purpose of this block is to return blockchain-specific configurations based on the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable. \n\nThe functionalities include:\n- `getRpcUrl()`: Returns the RPC URL for a specific blockchain network.\n- `getChainId()`: Returns the chain ID of the blockchain network.\n- `getNetworkToken()`: Returns the token symbol of the blockchain network (e.g. MATIC for Polygon, ETH for Ethereum, XTZ for Etherlink).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This JavaScript file contains a set of utility functions for interacting with various Ethereum blockchain networks. The file defines an enum `Network` with various providers and exports a `getNetworkUrl` function that returns the RPC URL for the network based on the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable. \n\nKey functions include:\n\n- `getRpcUrl()`: Returns the RPC URL for a specific blockchain network\n- `getChainId()` and `getNetworkToken()`: Return the chain ID and token symbol of the blockchain network, respectively\n- `getBlockExplorer(address: string)`: Returns the explorer URL for a specified address on the active blockchain network\n- `getEip1559Supported()`: Checks if the active blockchain network supports EIP-1559"}
{"code": "export const getFaucetUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return 'https://faucet.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'https://sepoliafaucet.com/';\n    case Network.ETHERLINK_TESTNET:\n      return 'https://faucet.etherlink.com/';\n    case Network.ZKSYNC_SEPOLIA:\n      return 'https://faucet.quicknode.com/ethereum/sepolia';\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'Polygon (Mainnet)';\n    case Network.POLYGON_AMOY:\n      return 'Polygon (Amoy)';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'Ethereum (Sepolia)';\n    case Network.ETHEREUM:\n      return 'Ethereum (Mainnet)';\n    case Network.ETHERLINK:\n      return 'Etherlink (Mainnet)';\n    case Network.ETHERLINK_TESTNET:\n      return 'Etherlink (Testnet)';\n    case Network.ZKSYNC:\n      return 'zkSync (Mainnet)';\n    case Network.ZKSYNC_SEPOLIA:", "explanation": "**Functionality Summary:**\n\nThis block is a JavaScript function that returns a specific URL or network name based on the current blockchain network being used. It uses environment variables to determine the network and switch between different URLs or network names.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This JavaScript file contains a set of utility functions for interacting with various Ethereum blockchain networks. The file defines an enum `Network` with various providers and exports a `getNetworkUrl` function that returns the RPC URL for the network based on the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable. \n\nKey functions include:\n\n- `getRpcUrl()`: Returns the RPC URL for a specific blockchain network\n- `getChainId()` and `getNetworkToken()`: Return the chain ID and token symbol of the blockchain network, respectively\n- `getBlockExplorer(address: string)`: Returns the explorer URL for a specified address on the active blockchain network\n- `getEip1559Supported()`: Checks if the active blockchain network supports EIP-1559"}
{"code": "      return 'zkSync (Sepolia)';\n  }\n};\n\nexport const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return `https://polygonscan.com/address/${address}`;\n    case Network.POLYGON_AMOY:\n      return `https://www.oklink.com/amoy/address/${address}`;\n    case Network.ETHEREUM:\n      return `https://etherscan.io/address/${address}`;\n    case Network.ETHEREUM_SEPOLIA:\n      return `https://sepolia.etherscan.io/address/${address}`;\n    case Network.ETHERLINK:\n      return `https://explorer.etherlink.com/address/${address}`;\n    case Network.ETHERLINK_TESTNET:\n      return `https://testnet-explorer.etherlink.com/address/${address}`;\n    case Network.ZKSYNC:\n      return `https://explorer.zksync.io/address/${address}`;\n    case Network.ZKSYNC_SEPOLIA:\n      return `https://sepolia.explorer.zksync.io/address/${address}`;\n  }\n};\n\nexport const isEip1559Supported = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {", "explanation": "The code provided is a collection of utility functions for interacting with blockchain networks.\n\n**Purpose:** The functions are used to retrieve explorer URLs for a given blockchain address or to check if EIP-1559 is supported on the current network.\n\n- The `getBlockExplorer(address: string)` function takes an address as input and returns the explorer URL for the specified address on the active blockchain network. \n- The `getEip1559Supported()` function checks the active blockchain network environment to determine if EIP-1559 is supported.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This JavaScript file contains a set of utility functions for interacting with various Ethereum blockchain networks. The file defines an enum `Network` with various providers and exports a `getNetworkUrl` function that returns the RPC URL for the network based on the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable. \n\nKey functions include:\n\n- `getRpcUrl()`: Returns the RPC URL for a specific blockchain network\n- `getChainId()` and `getNetworkToken()`: Return the chain ID and token symbol of the blockchain network, respectively\n- `getBlockExplorer(address: string)`: Returns the explorer URL for a specified address on the active blockchain network\n- `getEip1559Supported()`: Checks if the active blockchain network supports EIP-1559"}
{"code": "    case Network.ETHEREUM_SEPOLIA:\n    case Network.ETHEREUM:\n      return true;\n    case Network.ZKSYNC:\n    case Network.ZKSYNC_SEPOLIA:\n    case Network.POLYGON:\n    case Network.POLYGON_AMOY:\n    case Network.ETHERLINK:\n    case Network.ETHERLINK_TESTNET:\n      return false;\n  }\n};\n", "explanation": "This block is used to determine whether a network is supported or not. \n\n- If the network is Ethereum or Ethereum Sepolia, it's supported.\n- For all other listed networks (including ZkSync, Polygon, and Etherlink), it's not supported.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This JavaScript file contains a set of utility functions for interacting with various Ethereum blockchain networks. The file defines an enum `Network` with various providers and exports a `getNetworkUrl` function that returns the RPC URL for the network based on the `NEXT_PUBLIC_BLOCKCHAIN_NETWORK` environment variable. \n\nKey functions include:\n\n- `getRpcUrl()`: Returns the RPC URL for a specific blockchain network\n- `getChainId()` and `getNetworkToken()`: Return the chain ID and token symbol of the blockchain network, respectively\n- `getBlockExplorer(address: string)`: Returns the explorer URL for a specified address on the active blockchain network\n- `getEip1559Supported()`: Checks if the active blockchain network supports EIP-1559"}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "**Toasty Notification Block**\n\n**Purpose:** Displays a customizable notification message to the user using React Toastify.\n\n**Functionality:** Shows a customizable toast notification with a specified message type (success, error, info, default, or warning) at the top-center of the screen, configured with default settings (auto-closes after 3 seconds, close on click, pause on hover, and draggable).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'utils/showToast.ts' file:\n\n**Purpose:** Displays customizable toast notifications using React Toastify, with options for different message types, auto-closure, and drag-ability.\n\n**Key Features:** \n\n- Top-center screen display\n- Customizable message types (success, error, info, default, warning)\n- Auto-closes after 3 seconds\n- Close on click, pause on hover, and drillable\n- Customizable theme (currently set to 'light')"}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "The purpose of this code is to create a toast notification system with various customization options.\n\nThe functionality includes:\n\n- Displaying error or information messages at the top-center of the screen.\n- Automatic closure of the toast after 3 seconds.\n- Ability to close the toast by clicking on it.\n- Hiding the progress bar.\n- Pausing the countdown timer on hover.\n- Allowing the toast to be dragged.\n- Customizable theme (currently set to 'light').", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'utils/showToast.ts' file:\n\n**Purpose:** Displays customizable toast notifications using React Toastify, with options for different message types, auto-closure, and drag-ability.\n\n**Key Features:** \n\n- Top-center screen display\n- Customizable message types (success, error, info, default, warning)\n- Auto-closes after 3 seconds\n- Close on click, pause on hover, and drillable\n- Customizable theme (currently set to 'light')"}
{"code": "import { Network } from \"./network\";\n\nexport const getContractId = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return '0xabBb65DD49c18e1ee504C92a83f8f60eC0726e1b';\n    case Network.ETHEREUM_SEPOLIA:\n      return '0xa5bf55cC9afF6E0Ab59D8Fdd835c63983F124d03';\n    case Network.ZKSYNC_SEPOLIA:\n      return '0xDA39B00b285B6344E420Fe6F4FC0Aa4Ee5A4312d';\n  }\n};\n\nexport const isTestnet = (): boolean => {\n  const testnets: Network[] = [Network.POLYGON_AMOY, Network.ETHEREUM_SEPOLIA, Network.ZKSYNC_SEPOLIA];\n  const currentNetwork = process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK as Network | undefined;\n\n  if (currentNetwork && testnets.includes(currentNetwork)) {\n    return true;\n  }\n  return false;\n};\n\nexport const getHashLink = (hash: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return `https://www.oklink.com/amoy/tx/${hash}`;\n    case Network.ETHEREUM_SEPOLIA:", "explanation": "**Summary:**\n\nThis block of code provides functions for:\n\n1. **getContractId**: Returns the contract ID based on the specified blockchain network (e.g., Polygon AMOY, Ethereum Sepolia).\n2. **isTestnet**: Checks if the current network is a testnet (e.g., Polygon AMOY, Ethereum Sepolia, ZkSync Sepolia).\n3. **getHashLink**: Generates a link to a blockchain explorer (e.g., OkLink) for a given transaction hash, specific to the current blockchain network.\n\nThese functions rely on environment variables set by Next.js to determine the current network and behavior.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/smartContract.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/utils/smartContract.ts' file:\n\nThis utility file provides functions for smart contract interactions. It includes:\n\n- **Network detection**: Functions (`getContractId` and `isTestnet`) that determine the contract ID and check if the current network is a testnet based on environment variables.\n- **Transaction link generation**: A function (`getHashLink`) that generates a link to a blockchain explorer for a given transaction hash.\n- **Contract ABI definition**: A definition of the contract's Application Binary Interface (ABI), including two functions: `retrieve` (a view function) and `store` (a nonpayable function)."}
{"code": "      return `https://sepolia.etherscan.io/tx/${hash}`;\n    case Network.ZKSYNC_SEPOLIA:\n      return `https://sepolia.explorer.zksync.io/tx/${hash}`;\n  }\n};\n\nexport const abi = [\n  {\n    \"inputs\": [],\n    \"name\": \"retrieve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"num\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"store\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];", "explanation": "This block consists of two parts:\n\n1. **Function to generate transaction links**: It takes a `hash` as input and returns a URL to a transaction explorer based on the Ethereum network (e.g., Sepolia, ZKSync Sepolia).\n2. **Contract ABI (Application Binary Interface)**: It defines the functions and their parameters that can be called on a smart contract. There are two functions:\n   - `retrieve`: A view function that returns a single `uint256` value.\n   - `store`: A nonpayable function that takes a `uint256` value as input and doesn't return any output.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/smartContract.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'scaffolds/nextjs-dedicated-wallet/template/src/utils/smartContract.ts' file:\n\nThis utility file provides functions for smart contract interactions. It includes:\n\n- **Network detection**: Functions (`getContractId` and `isTestnet`) that determine the contract ID and check if the current network is a testnet based on environment variables.\n- **Transaction link generation**: A function (`getHashLink`) that generates a link to a blockchain explorer for a given transaction hash.\n- **Contract ABI definition**: A definition of the contract's Application Binary Interface (ABI), including two functions: `retrieve` (a view function) and `store` (a nonpayable function)."}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type TxnParams = {\n  from: string | null;\n  to: string | null;\n  value: string;\n  maxFeePerGas?: bigint;\n  maxPriorityFeePerGas?: bigint;\n  gasPrice?: string;\n};\n\n\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "This block defines and exports several types and interfaces for use in a React application. \n\n- It defines a `LoginProps` type, which contains `token` and `setToken` properties, likely used for managing authentication tokens.\n- It defines a `TxnParams` type, which contains properties for defining transaction parameters, such as sender, recipient, value, and gas prices.\n- It re-exports a `Magic` type (previously imported) for potential use elsewhere in the application. \n\nIn summary, this block enables typing for login and transaction functionality, as well as making a Magic type available for use in other parts of the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This module defines and exports types and interfaces for a Next.js application. Specifically, it provides:\n\n1. `LoginProps` for managing authentication tokens.\n2. `TxnParams` for transaction parameters.\n3. `Magic` type for potential use elsewhere in the application.\n\nThese types enable robust typing for login and transaction functionality, promoting code organization and maintainability."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "This is a configuration file for Tailwind CSS, a utility-first CSS framework. It specifies where to look for CSS classes to generate, customizes the framework's default theme, and defines custom background image gradients.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Tailwind Configuration File**\n\nThis is a Tailwind CSS configuration file (`tailwind.config.js`) for a Next.js dedicated wallet template. It sets up the framework to generate CSS classes and customizes its default theme, including defining custom background image gradients for use in the project."}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "This block defines a set of compiler options for a TypeScript configuration. It controls how TypeScript compiles and transforms source code, including:\n\n- Target browser compatibility (ES5)\n- Library and module imports\n- Type checking and JSX handling\n- Module resolution and exports\n\nIt also specifies which files to include and exclude from the compilation process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-dedicated-wallet/template/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `tsconfig.json` file in 'scaffolds/nextjs-dedicated-wallet/template' configure TypeScript to compile source code targeting ES5 browser compatibility, enabling type checking and JSX handling while controlling imports, module resolution, and exports."}
{"code": "import { Flags } from '../../core/flags';\nimport BaseScaffold, { ExecaCommand } from '../../core/types/BaseScaffold';\nimport { AuthTypePrompt, NpmClientPrompt, PublishableApiKeyPrompt } from '../prompts';\n\nexport type Data = NpmClientPrompt.Data & PublishableApiKeyPrompt.Data & AuthTypePrompt.Data;\n\nexport const flags: Flags<Partial<Data>> = {\n  ...NpmClientPrompt.flags,\n  ...PublishableApiKeyPrompt.flags,\n  ...AuthTypePrompt.flags,\n};\n\nexport const definition = {\n  shortDescription: 'A dedicated wallet scaffold for Next.js using Flow',\n  featured: true,\n};\n\nexport default class FlowDedicatedScaffold extends BaseScaffold {\n  public templateName = 'nextjs-flow-dedicated-wallet';\n  private data: Data;\n  public installationCommand: ExecaCommand = { command: 'npm', args: ['install'] };\n  public startCommand: ExecaCommand = { command: 'npm', args: ['run', 'dev'] };\n  public source: string | string[] = [\n    './public/favicon.ico',\n    './public/logo.svg',\n    './public/info.svg',\n    './public/link.svg',", "explanation": "This block defines a scaffold class called `FlowDedicatedScaffold` used to create a Next.js project with Flow support. \n\nKey functionalities:\n\n- Combines data and flags from multiple prompts (NpmClientPrompt, PublishableApiKeyPrompt, and AuthTypePrompt).\n- Provides a short description and enables the scaffold for feature promotion.\n- Specifies template and installation commands.\n- Exposes commands for running the project in development mode.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts' file:\n\n**Class:** `FlowDedicatedScaffold`\n\n**Purpose:** Create a Next.js project with Flow support, providing a scaffold to initialize a dedicated wallet application.\n\n**Functionalities:**\n\n1. Combines project and feature flags from multiple prompts.\n2. Initializes project data with configuration, image, and component files.\n3. Updates `loginMethods` by mapping authentication types and adding corresponding file paths to the `source` array.\n4. Adds social media icons and additional wallet method components based on authentication types.\n\nThis scaffold enables users to create a dedicated wallet application with customizable authentication options and relevant initial project files."}
{"code": "    './public/link_white.svg',\n    './public/redirect_bg.png',\n    './public/login_bg.png',\n    './.env.example',\n    './.eslintrc.json',\n    './.gitignore',\n    './package.json',\n    './postcss.config.js',\n    './tailwind.config.js',\n    './tsconfig.json',\n    './README.md',\n    './src/components/ui',\n    './src/components/magic/cards',\n    './src/components/magic/wallet-methods/Disconnect.tsx',\n    './src/components/magic/wallet-methods/GetIdToken.tsx',\n    './src/components/magic/wallet-methods/GetMetadata.tsx',\n    './src/components/magic/Dashboard.tsx',\n    './src/components/magic/DevLinks.tsx',\n    './src/components/magic/Header.tsx',\n    './src/components/magic/Login.tsx',\n    './src/components/magic/MagicProvider.tsx',\n    './src/components/magic/MagicDashboardRedirect.tsx',\n    './src/pages',\n    './src/styles',\n    './src/utils',\n  ];\n\n  constructor(data: Data) {\n    super();\n    this.data = data;\n\n    if (typeof this.source !== 'string') {", "explanation": "This appears to be a list of file paths or directory locations. The purpose and functionality of this block is to specify the initialization data, including various project files (e.g., configuration files, images, and component files), for a project or application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts' file:\n\n**Class:** `FlowDedicatedScaffold`\n\n**Purpose:** Create a Next.js project with Flow support, providing a scaffold to initialize a dedicated wallet application.\n\n**Functionalities:**\n\n1. Combines project and feature flags from multiple prompts.\n2. Initializes project data with configuration, image, and component files.\n3. Updates `loginMethods` by mapping authentication types and adding corresponding file paths to the `source` array.\n4. Adds social media icons and additional wallet method components based on authentication types.\n\nThis scaffold enables users to create a dedicated wallet application with customizable authentication options and relevant initial project files."}
{"code": "      this.data.loginMethods = this.data.loginMethods.map((authType) =>\n        AuthTypePrompt.mapInputToLoginMethods(authType),\n      );\n      this.data.loginMethods.forEach((authType) => {\n        (this.source as string[]).push(`./src/components/magic/auth/${authType.replaceAll(' ', '')}.tsx`);\n        if (\n          authType === 'Discord' ||\n          authType === 'Facebook' ||\n          authType === 'Github' ||\n          authType === 'Google' ||\n          authType === 'Twitch' ||\n          authType === 'Twitter'\n        ) {\n          (this.source as string[]).push(`./public/social/${authType.replaceAll(' ', '')}.svg`);\n        }\n        if (authType.replaceAll(' ', '') === 'EmailOTP') {\n          (this.source as string[]).push('./src/components/magic/wallet-methods/UpdateEmail.tsx');\n        }\n      });\n    }\n  }\n}\n", "explanation": "**Purpose:** Update the `loginMethods` array and add relevant file paths to the `source` array.\n\n**Functionality:** \n\n1. Maps each `authType` in the `loginMethods` array to a new value using `AuthTypePrompt.mapInputToLoginMethods(authType)`.\n2. Pushes the file path of the corresponding authentication component to the `source` array for each `authType`.\n3. If a specific `authType` (e.g., Discord, Facebook, etc.) matches certain conditions, it also pushes the file path of the corresponding social media icon to the `source` array.\n4. If the `authType` is `EmailOTP`, it pushes the file path of an additional wallet method component to the `source` array.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'scaffolds/nextjs-flow-dedicated-wallet/scaffold.ts' file:\n\n**Class:** `FlowDedicatedScaffold`\n\n**Purpose:** Create a Next.js project with Flow support, providing a scaffold to initialize a dedicated wallet application.\n\n**Functionalities:**\n\n1. Combines project and feature flags from multiple prompts.\n2. Initializes project data with configuration, image, and component files.\n3. Updates `loginMethods` by mapping authentication types and adding corresponding file paths to the `source` array.\n4. Adds social media icons and additional wallet method components based on authentication types.\n\nThis scaffold enables users to create a dedicated wallet application with customizable authentication options and relevant initial project files."}
{"code": "# Publishable API Key found in the Magic Dashboard\nNEXT_PUBLIC_MAGIC_API_KEY=<%= publishableApiKey %>\n\n# The RPC URL for the blockchain network\nNEXT_PUBLIC_BLOCKCHAIN_NETWORK=<%= network %>", "explanation": "This block defines and exposes two environment variables for a Next.js application:\n\n1. `NEXT_PUBLIC_MAGIC_API_KEY`: publishes a Magic API key for external use.\n2. `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: exposes the RPC URL for a blockchain network.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/.env.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `.env.example` file for a Next.js application exposes two environment variables for external use:\n\n- `NEXT_PUBLIC_MAGIC_API_KEY`: publishes a Magic API key\n- `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: exposes the RPC URL for a blockchain network."}
{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block is a configuration for ESLint or Prettier, specifying:\n\n- The configuration format (extends next/core-web-vitals)\n- Code formatting rules:\n  - Quotes should be single\n  - Indentation should be 2 spaces", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/.eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Based on the given block summaries, here's a concise and to-the-point summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/.eslintrc.json':\n\nThe file is an ESLint configuration that extends the 'next/core-web-vitals' format. It enforces code formatting rules with single quotes and 2-space indentation."}
{"code": "This scaffold is meant to help you bootstrap your own projects with Magic's [Dedicated Wallet](https://magic.link/docs/auth/overview). Magic is a developer SDK that integrates with your application to enable passwordless Web3 onboarding.\n\nThe folder structure of this scaffold is designed to encapsulate all things Magic into one place so you can easily add or remove components and functionality. For example, all Magic-specific components are in the `src/components/magic` directory while generic UI components are in the `src/components/ui` directory.\n\n## Next.js\n\nThis is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n### Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n", "explanation": "This block is a project scaffold for bootstrapping applications with Magic's Dedicated Wallet, a passwordless Web3 onboarding system. It uses Next.js as the framework, providing a structured directory for adding or removing Magic and generic UI components. The main function is to provide a starting point for Magic-enabled applications.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/README.md", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a project scaffold for Next.js applications with Magic's Dedicated Wallet, a passwordless Web3 onboarding system. It provides a structured directory for components and setup information for:\n\n- Page editing and auto-update functionality\n- Accessing and editing API routes\n- Font optimization with `next/font`\n\nThe scaffold also includes links for further learning about Next.js, deployment instructions, and resources for feedback and contributions."}
{"code": "You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n### Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n", "explanation": "This block provides setup information for a Next.js project, explaining:\n\n1. Page editing and auto-update functionality.\n2. How to access and edit API routes.\n3. The use of the `next/font` library for font optimization.\n\nIt also offers links for further learning about Next.js.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/README.md", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a project scaffold for Next.js applications with Magic's Dedicated Wallet, a passwordless Web3 onboarding system. It provides a structured directory for components and setup information for:\n\n- Page editing and auto-update functionality\n- Accessing and editing API routes\n- Font optimization with `next/font`\n\nThe scaffold also includes links for further learning about Next.js, deployment instructions, and resources for feedback and contributions."}
{"code": "You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n### Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n", "explanation": "This block serves two main purposes:\n\n1. Directs users to the official Next.js repository for feedback and contributions.\n2. Provides information on how to deploy a Next.js app on the Vercel Platform, including a link to deployment documentation.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/README.md", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a project scaffold for Next.js applications with Magic's Dedicated Wallet, a passwordless Web3 onboarding system. It provides a structured directory for components and setup information for:\n\n- Page editing and auto-update functionality\n- Accessing and editing API routes\n- Font optimization with `next/font`\n\nThe scaffold also includes links for further learning about Next.js, deployment instructions, and resources for feedback and contributions."}
{"code": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n}\n\nmodule.exports = nextConfig\n", "explanation": "This code defines a configuration object for Next.js, a JavaScript framework for building server-side rendered (SSR) web applications. The configuration specifies:\n\n- Enabling strict mode for React.\n\nIt then exports this configuration for use in a Next.js project.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/next.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/next.config.js':\n\nThis file exports a Next.js configuration object enabling strict React mode for a server-side rendered web application."}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "**Summary:** \n\nThis block exports a configuration object for Webpack. It specifies plugins for CSS processing, including TailwindCSS for styling and Autoprefixer for prefixing CSS rules to ensure browser compatibility.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The 'postcss.config.js' file exports a configuration object for Webpack, enabling CSS processing with TailwindCSS for styling and Autoprefixer for browser compatibility."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "The purpose of this block is to render an SVG icon, specifically a trash can or waste bin icon, likely used for deleting or disposing of content. \n\nFunctionality:\n- It displays a simple image consistent with an icon.\n- The icon's presence or focus likely triggers a corresponding action upon a user interaction, i.e., clicking on it would probably lead to deleting content.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary:\n\nThe `info.svg` file is an SVG icon representing a trash can or waste bin, intended to be interacted with by users for deleting or disposing of content. Upon click, it likely performs a corresponding action, such as deleting media or content."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG (Scalable Vector Graphics) element, likely used for rendering an icon or image. Its primary purpose is to define the visual aspects of the icon, including its size, color, and structure.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg' is an SVG (Scalable Vector Graphics) element used to define the visual aspects of an icon. It consists of a complex path with multiple lines and curves, rendering an image or icon in a specific size, color, and structure."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block of code appears to be SVG (Scalable Vector Graphics) syntax, specifically describing a path for rendering an icon or shape. The path consists of multiple lines and curves, forming a complex shape with multiple segments.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg' is an SVG (Scalable Vector Graphics) element used to define the visual aspects of an icon. It consists of a complex path with multiple lines and curves, rendering an image or icon in a specific size, color, and structure."}
{"code": "</svg>\n", "explanation": "This block is likely code, specifically an HTML snippet. It is used to close an SVG (Scalable Vector Graphics) element.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/link.svg' is an SVG (Scalable Vector Graphics) element used to define the visual aspects of an icon. It consists of a complex path with multiple lines and curves, rendering an image or icon in a specific size, color, and structure."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block defines an SVG (Scalable Vector Graphics) element, typically used for displaying icons or graphics on web pages, and specifies its dimensions and attributes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg':\n\nThis is a Scalable Vector Graphics (SVG) file representing a simple white shuttle or airplane silhouette icon, designed to be legible against a darker background."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block of text appears to be a SVG path definition for a graphic element. \n\nIn more specific terms, this is an SVG icon of a shuttle or an airplane silhouette, which is a simple geometric shape consisting of lines and curves. The icon is designed to be white (#FFFFFF) against a darker background or color, making it legible.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg':\n\nThis is a Scalable Vector Graphics (SVG) file representing a simple white shuttle or airplane silhouette icon, designed to be legible against a darker background."}
{"code": "</svg>", "explanation": "Unsupported image type or closing SVG tag. \n\nIt appears this block is closing an SVG element (a Scalable Vector Graphics file).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/link_white.svg':\n\nThis is a Scalable Vector Graphics (SVG) file representing a simple white shuttle or airplane silhouette icon, designed to be legible against a darker background."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "This block is an SVG (Scalable Vector Graphics) code representing a logo or icon. It consists of two paths that make up the shape of the logo, with the fill color set to white.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "A white logo icon is represented within an SVG image, consisting of a single path that forms a simple geometric shape, likely an ellipse."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This block is a piece of SVG code, likely used for graphic design or user interface purposes.\n\nThe code defines a single white path within an SVG image. The path represents a simple geometric shape (a curved line or a closed curve, likely an ellipse).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "A white logo icon is represented within an SVG image, consisting of a single path that forms a simple geometric shape, likely an ellipse."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 127.14 96.36\"><defs><style>.cls-1{fill:#5865f2;}</style></defs><g id=\"\u56fe\u5c42_2\" data-name=\"\u56fe\u5c42 2\"><g id=\"Discord_Logos\" data-name=\"Discord Logos\"><g id=\"Discord_Logo_-_Large_-_White\" data-name=\"Discord Logo - Large - White\"><path class=\"cls-1\" d=\"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z\"/></g></g></g></svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) image, specifically a logo of Discord.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Discord.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Discord.svg' contains a scalable vector graphics representation of the Discord logo."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#039be5\" d=\"M24 5A19 19 0 1 0 24 43A19 19 0 1 0 24 5Z\"/><path fill=\"#fff\" d=\"M26.572,29.036h4.917l0.772-4.995h-5.69v-2.73c0-2.075,0.678-3.915,2.619-3.915h3.119v-4.359c-0.548-0.074-1.707-0.236-3.897-0.236c-4.573,0-7.254,2.415-7.254,7.917v3.323h-4.701v4.995h4.701v13.729C22.089,42.905,23.032,43,24,43c0.875,0,1.729-0.08,2.572-0.194V29.036z\"/></svg>", "explanation": "This block is an SVG icon, consisting of two filled paths:\n\n* A larger dark blue path representing a circle or disk.\n* A smaller white path representing an inner shape within the circle.\n\nThe purpose appears to be to display a custom icon, possibly used as a visual element in a digital design or user interface.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Facebook.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The 'Facebook.svg' file is an SVG icon consisting of a blue circle (path) with a smaller white center shape (path)."}
{"code": "<svg width=\"98\" height=\"96\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z\" fill=\"#24292f\"/></svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) icon. \n\nIts purpose is to render a dark-colored geometric design, likely used as a decorative element or icon in a digital design or application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Github.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This SVG file 'Github.svg' is a dark-colored geometric design icon, likely used as a decorative element or icon in a digital design or application."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"705.6\" height=\"720\" viewBox=\"0 0 186.69 190.5\" xmlns:v=\"https://vecta.io/nano\"><g transform=\"translate(1184.583 765.171)\"><path clip-path=\"none\" mask=\"none\" d=\"M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z\" fill=\"#4285f4\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z\" fill=\"#34a853\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z\" fill=\"#fbbc05\"/><path d=\"M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z\" fill=\"#ea4335\" clip-path=\"none\" mask=\"none\"/></g></svg>", "explanation": "This is an SVG (Scalable Vector Graphics) block. \n\nFunctionality: \n- It displays a simple logo composed of four colored shapes (blue, green, yellow, and red) arranged in a specific design.\n\nPurpose:\n- This SVG logo appears to be for Google services, possibly Google Maps, and serves as an icon or branding element on various applications.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Google.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The 'Google.svg' file is a Scalable Vector Graphics (SVG) logo composed of four colored shapes: blue, green, yellow, and red. It is a branding element likely used for Google services, such as Google Maps, and serves as an icon or logo on various applications."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.6, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 2400 2800\" style=\"enable-background:new 0 0 2400 2800;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#FFFFFF;}\n\t.st1{fill:#9146FF;}\n</style>\n<title>Asset 2</title>\n<g>\n\t<polygon class=\"st0\" points=\"2200,1300 1800,1700 1400,1700 1050,2050 1050,1700 600,1700 600,200 2200,200 \t\"/>\n\t<g>\n\t\t<g id=\"Layer_1-2\">\n\t\t\t<path class=\"st1\" d=\"M500,0L0,500v1800h600v500l500-500h400l900-900V0H500z M2200,1300l-400,400h-400l-350,350v-350H600V200h1600\n\t\t\t\tV1300z\"/>\n\t\t\t<rect x=\"1700\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t\t<rect x=\"1150\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) file. Its purpose is to represent a vector image, specifically an icon or logo, using a combination of geometric shapes and colors. \n\nIt defines:\n\n- A background shape with a white fill.\n- A blue polygon shape with a point pattern.\n- A set of interconnected shapes with a blue fill, including a path and two rectangles.\n\nThe functionality of this code is to render the described image when loaded by a compatible application or browser.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitch.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a Scalable Vector Graphics (SVG) file named 'Twitch.svg' containing a vector representation of a Twitch logo, which consists of:\n\n- A white background shape\n- A blue polygon with a point pattern\n- Interconnected blue shapes (a path and two rectangles)\n\nWhen loaded, it renders the described Twitch logo image."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 248 204\" style=\"enable-background:new 0 0 248 204;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#1D9BF0;}\n</style>\n<g id=\"Logo_1_\">\n\t<path id=\"white_background\" class=\"st0\" d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26", "explanation": "This block is an SVG (Scalable Vector Graphics) file. Its purpose is to represent a logo. The functionality allows it to be rendered on a web page or other applications that support SVG, scaling and maintaining its shape and design.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "A concise summary of the 'Twitter.svg' file is:\n\nThe 'Twitter.svg' file is a Scalable Vector Graphics (SVG) representation of the Twitter logo, containing a path element that defines its shape and coordinates, allowing it to be scaled and rendered on web pages or applications supporting SVG."}
{"code": "\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"/>\n</g>\n</svg>\n", "explanation": "This block is a fragment of an SVG (Scalable Vector Graphics) file, likely a path element.\n\nSummary: Defines a shape or graphic element, specifying its coordinates and path.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "A concise summary of the 'Twitter.svg' file is:\n\nThe 'Twitter.svg' file is a Scalable Vector Graphics (SVG) representation of the Twitter logo, containing a path element that defines its shape and coordinates, allowing it to be scaled and rendered on web pages or applications supporting SVG."}
{"code": "import React from 'react';\nimport WalletMethods from './cards/WalletMethodsCard';\nimport SendTransaction from './cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from './cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "**Purpose:**\nThe purpose of this block is to render a dashboard component in a React application.\n\n**Functionality:**\nIt displays a header, user information, send transaction functionality, wallet methods, and developer links, with layouts managed by spacer components. It also passes props to these components for dynamic functionality.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Dashboard.tsx':\n\nThis file renders a dashboard component in a React application, displaying a header, user info, send transaction functionality, wallet methods, and developer links, with dynamic functionality managed through props."}
{"code": "import classNames from 'classnames'\nimport Link from 'next/link'\n\nconst DevLinks = ({\n\tprimary = false,\n\tfooter = false,\n}: {\n\tprimary?: boolean\n\tfooter?: boolean\n}) => (\n\t<div className={`links ${footer ? 'footer-links' : ''}`}>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://magic.link/docs/home/welcome'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDev Docs\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://dashboard.magic.link/signup'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDashboard\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://discord.gg/magiclabs'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDiscord\n\t\t\t</a>\n\t\t</div>\n\t</div>\n)\n\nexport default DevLinks\n", "explanation": "**Purpose:** \nA reusable React component to display developer links.\n\n**Functionality:** \nThe component takes two optional props (primary and footer) to conditionally change the styling and layout of the displayed links. It includes links to developer documentation, the dashboard, and a Discord community channel.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/DevLinks.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/DevLinks.tsx':\n\nThis file defines a reusable React component, `DevLinks`, which displays developer links and content. It can be customized with optional `primary` and `footer` props to adjust styling and layout."}
{"code": "import Image from 'next/image';\nimport MagicLogo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <Image src={MagicLogo} alt=\"magic-logo\" className=\"magic-logo\" />\n      <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n      <h3 className=\"demo-sub-header\">Demo</h3>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "**Summary:**\n\nThis block is a React functional component named `Header`. Its purpose is to render the top navigation bar of a web application. It displays a logo, a main title (\"Magic\"), and a sub-header (\"Demo\"), along with a list of development links.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary: \n\nThe `Header` component is a React functional component responsible for rendering the top navigation bar of a web application, featuring a logo, main title (\"Magic\"), and sub-header, along with a list of development links."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from './Header'\n<% loginMethods.forEach(authType => { %>\n<%-`import ${authType.replaceAll(' ', '')} from './auth/${authType.replaceAll(' ', '')}';`-%>\n<% }) %>\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-<%= Math.min(loginMethods.length, 3) %> grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      <% loginMethods.forEach(authType => { %>\n      <% if (authType !== \"Social Logins\") { %>\n        <%-`<${authType.replaceAll(' ', '')} token={token} setToken={setToken} />`-%>\n      <% } %>\n  \t\t<% }) %>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "**Summary:**\n\nThis block is a React functional component named `Login`. It imports and displays different login methods (e.g., Google, Facebook, etc.) based on an array of methods (`loginMethods`), and renders a `Header` component. It allows the user to select and use a login method to authenticate, passing the resulting token to the component's props.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a React functional component named `Login` that renders a header and displays various login methods, allowing users to select and authenticate using one of the supported methods, and then passes the resulting token to its parent component through props."}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "**Summary:**\n\nThis block is a React component named `MagicDashboardRedirect`. Its purpose is to redirect users to a specific website (`https://dashboard.magic.link/signup`) when a target (currently missing) is clicked. The component displays a branded logo, title, and subtitle, likely for demo or production use cases.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file contains two separate React components:\n\n1. **MagicDashboardRedirect**: A redirect component that sends users to `https://dashboard.magic.link/signup` when a target is clicked. It displays a branded logo, title, and subtitle for demo or production use cases.\n\n2. A **prompt component** that requires the user to set up the `NEXT_PUBLIC_MAGIC_API_KEY` environment variable to access Magic API keys. It includes a \"Get API keys\" button to initiate the API key acquisition process."}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "**Summary:**\n\nThis block is a user interface component that displays a prompt to set up an environment variable (`NEXT_PUBLIC_MAGIC_API_KEY`) to access Magic API keys. It includes a \"Get API keys\" button, when clicked, which is likely linked to an API key acquisition process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file contains two separate React components:\n\n1. **MagicDashboardRedirect**: A redirect component that sends users to `https://dashboard.magic.link/signup` when a target is clicked. It displays a branded logo, title, and subtitle for demo or production use cases.\n\n2. A **prompt component** that requires the user to set up the `NEXT_PUBLIC_MAGIC_API_KEY` environment variable to access Magic API keys. It includes a \"Get API keys\" button to initiate the API key acquisition process."}
{"code": "import { getNetwork, getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { FlowExtension } from '@magic-ext/flow';\nimport * as fcl from '@onflow/fcl';\n\nexport type Magic = MagicBase<OAuthExtension[] & FlowExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n\n  useEffect(() => {\n    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        extensions: [\n          new OAuthExtension(),\n          new FlowExtension({\n            rpcUrl: getNetworkUrl(),", "explanation": "**Summary:**\n\nThis block creates a React context for managing a Magic.js web3 library instance. It allows for the creation of a Magic provider that wraps the library, enabling the use of Magic in a React application. The provider handles the initialization of the Magic instance with OAuth and Flow extensions and makes it available through a `useMagic` hook.\n\n**Key functionality:**\n\n- Initializes a Magic.js library instance\n- Adds OAuth and Flow extensions to the instance\n- Provides a React context to access the Magic instance\n- Offers a `useMagic` hook for convenient access to the Magic instance", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'MagicProvider.tsx' file:\n\nThis React component, `MagicProvider`, manages and shares Magic API credentials with its child components through a context provider. It initializes a Magic.js library instance with OAuth and Flow extensions, and makes it accessible through a `useMagic` hook, enabling seamless web3 library integration in a React application."}
{"code": "            network: getNetwork() as string,\n          }),\n        ],\n      });\n      setMagic(magic);\n      fcl.config().put('accessNode.api', getNetworkUrl());\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n    };\n  }, [magic]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;\n", "explanation": "**Summary:**\n\nThis is a React hook, specifically the `MagicProvider`, which wraps a React application with a context provider. Its purpose is to manage and share Magic API credentials with its children components. It:\n\n1. Retrieves the network URL through an API call.\n2. Sets Magic API credentials using the `fcl.config()` method.\n3. Creates a context provider instance with an object containing the Magic account as a value.\n4. Renders its children components with the Magic context.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'MagicProvider.tsx' file:\n\nThis React component, `MagicProvider`, manages and shares Magic API credentials with its child components through a context provider. It initializes a Magic.js library instance with OAuth and Flow extensions, and makes it accessible through a `useMagic` hook, enabling seamless web3 library integration in a React application."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '@/components/ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport discord from 'public/social/Discord.svg';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\n\nconst Discord = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Purpose:** \nThis block is a React component that handles Discord authentication through the Magic provider.\n\n**Functionality:** \n\n1. It uses the Magic provider to check if a user is already logged in.\n2. If logged in, it retrieves the user's profile data and saves the authentication token.\n3. If authentication is still in progress, it displays a spinner.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `Discord.tsx` component is a React component that handles Discord authentication through the Magic provider. It checks if a user is logged in, retrieves user profile data if logged in, and displays a spinner during authentication. If no token is available, it redirects the user to the Discord login page. The component uses Magic library for OAuth redirect and displays a loading indicator."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'discord',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"discord\">Discord Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={discord} alt=\"Discord\" height={24} width={24} className=\"mr-6\" />", "explanation": "This block of code appears to be a React component responsible for handling Discord social login authentication. \n\nThe purpose of this block is to:\n\n- Check if an existing token is available (upon component mount)\n- If no token is found, direct the user to the Discord login page\n- Handle potential errors during the login process\n- Display a loading indicator while the login process is in progress\n\nFunctionality:\n\n- It uses the 'Magic' library to facilitate the Discord login process with OAuth redirect.\n- It uses local storage to persist the loading flag state.\n- It displays a button to initiate the login process when a token is not available, or displays a spinner when the login process is ongoing.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `Discord.tsx` component is a React component that handles Discord authentication through the Magic provider. It checks if a user is logged in, retrieves user profile data if logged in, and displays a spinner during authentication. If no token is available, it redirects the user to the Discord login page. The component uses Magic library for OAuth redirect and displays a loading indicator."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Discord</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Discord;\n", "explanation": "This block appears to be a clickable button component, likely part of a login or authentication system. It prompts users to continue the process with their Discord account.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `Discord.tsx` component is a React component that handles Discord authentication through the Magic provider. It checks if a user is logged in, retrieves user profile data if logged in, and displays a spinner during authentication. If no token is available, it redirects the user to the Discord login page. The component uses Magic library for OAuth redirect and displays a loading indicator."}
{"code": "import { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });\n        if (token) {", "explanation": "**EmailOTP Component Summary**\n\nThis is a React functional component responsible for handling email-based login with one-time password (OTP) verification. It:\n\n1. Retrieves email input from the user.\n2. Verifies the email's validity using a regular expression.\n3. Calls the `magic.auth.loginWithEmailOTP` function to authenticate the user via email and OTP.\n4. Saves the authentication token upon successful login.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'EmailOTP.tsx' file:\n\n**EmailOTP.tsx Component Summary:**\n\nThis React functional component handles email-based login with one-time password (OTP) verification. It validates user input, calls the `magic.auth.loginWithEmailOTP` function, and saves the authentication token upon successful login. It displays error messages based on the type of error and progress status after handling the outcome of an email OTP login attempt."}
{"code": "          saveToken(token, setToken, 'EMAIL');\n          setEmail('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);", "explanation": "**Purpose**: Handle the outcome of an email OTP login attempt after sending the user an email for verification.\n\n**Functionality**:\n\n- Attempts to verify an email by checking if a token has been provided.\n- If the token is valid, sets it as the logged-in user.\n- If an error occurs, displays an error message based on the type of error.\n- Eventually, sets the login progress to false, indicating that the login is no longer in progress.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'EmailOTP.tsx' file:\n\n**EmailOTP.tsx Component Summary:**\n\nThis React functional component handles email-based login with one-time password (OTP) verification. It validates user input, calls the `magic.auth.loginWithEmailOTP` function, and saves the authentication token upon successful login. It displays error messages based on the type of error and progress status after handling the outcome of an email OTP login attempt."}
{"code": "            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "**Summary:**\n\nThis block is a login or sign-up input form. Its main components are:\n\n1. A text input field for entering an email address.\n2. A button to submit the email for login or sign-up, which is enabled only when a valid email is entered and not when a login token is present.\n3. A message indicating any email validation error.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'EmailOTP.tsx' file:\n\n**EmailOTP.tsx Component Summary:**\n\nThis React functional component handles email-based login with one-time password (OTP) verification. It validates user input, calls the `magic.auth.loginWithEmailOTP` function, and saves the authentication token upon successful login. It displays error messages based on the type of error and progress status after handling the outcome of an email OTP login attempt."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport facebook from 'public/social/Facebook.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Facebook = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Summary:**\n\nThis block is a React component for logging in with Facebook using the Magic Provider. It checks for an existing OAuth result, retrieves the user's ID token, and saves it using the `saveToken` function. It uses `useEffect` hooks to handle the authentication process and displays a Spinner while loading.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This ReactJS component handles Facebook login functionality using the Magic Provider. Its main functions include:\n\n- Periodic login status checks using the `checkLogin` function.\n- Rendering a \"Continue with Facebook\" button that initiates the Facebook login process using the `login` function.\n- Displaying a spinner while the user logs in using a loading flag stored in local storage.\n\nWhen the login button is clicked, it redirects the user to the Facebook login page, setting the loading flag to `true` during the process."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'facebook',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"facebook\">Facebook Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={facebook} alt=\"Facebook\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThe purpose of this block is to handle Facebook social login functionality, with the following main functionalities:\n\n1. **Login Check**: The `checkLogin` function is called periodically to check the user's login status.\n2. **Login Button**: A button is rendered that if clicked and the user is not logged in, triggers the Facebook login process using the `login` function.\n3. **Loading Flag**: A loading flag is used to display a spinner while the user is logging in, and stored in local storage.\n\n**Functionality:**\n\nWhen the login button is clicked and the user is not logged in, the following steps occur:\n\n1. The loading flag is set to `true`.\n2. The `login` function is called, which redirects the user to the Facebook login page.\n3. If the user encounters an error during login, an error message is logged to the console.\n\nWhen the user completes the Facebook login process, the app will likely fetch the user's authentication information and update the local storage and App state accordingly.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This ReactJS component handles Facebook login functionality using the Magic Provider. Its main functions include:\n\n- Periodic login status checks using the `checkLogin` function.\n- Rendering a \"Continue with Facebook\" button that initiates the Facebook login process using the `login` function.\n- Displaying a spinner while the user logs in using a loading flag stored in local storage.\n\nWhen the login button is clicked, it redirects the user to the Facebook login page, setting the loading flag to `true` during the process."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Facebook</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Facebook;\n", "explanation": "This block appears to be a ReactJS component snippet, specifically a login or authentication button for social media network Facebook. \n\nIt displays a label \"Continue with Facebook\" and is expected to be triggered upon click, initiating the Facebook login process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This ReactJS component handles Facebook login functionality using the Magic Provider. Its main functions include:\n\n- Periodic login status checks using the `checkLogin` function.\n- Rendering a \"Continue with Facebook\" button that initiates the Facebook login process using the `login` function.\n- Displaying a spinner while the user logs in using a loading flag stored in local storage.\n\nWhen the login button is clicked, it redirects the user to the Facebook login page, setting the loading flag to `true` during the process."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport github from 'public/social/Github.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Github = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Purpose and Functionality:**\n\nThis code block appears to be a React component responsible for handling GitHub login functionality. It uses the Magic SDK to authenticate users, saves the obtained token, and displays a loading indicator.\n\n**Key Features:**\n\n- Authenticates users using GitHub's OAuth Redirect Flow\n- Saves the obtained token using the `saveToken` utility function\n- Displays a loading indicator using the `Spinner` component\n- Uses React's `useState` and `useEffect` hooks for state management and lifecycle methods", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This code block is a React component responsible for authenticating users with GitHub using the Magic SDK, displaying a loading indicator, and storing the obtained token. It appears as a clickable button labeled \"Continue with GitHub\" in a full-width design, which triggers the GitHub OAuth login process upon click."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'github',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"github\">Github Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={github} alt=\"Github\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThis block is responsible for handling the login process using the GitHub OAuth provider. It checks if the user is authenticated, retrieves a token, and if valid, sets a loading flag to true. When the login button is clicked, it initiates the login process using the `magic.oauth.loginWithRedirect` method, which redirects the user to the GitHub login page. The loading status is also updated accordingly.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This code block is a React component responsible for authenticating users with GitHub using the Magic SDK, displaying a loading indicator, and storing the obtained token. It appears as a clickable button labeled \"Continue with GitHub\" in a full-width design, which triggers the GitHub OAuth login process upon click."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Github</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Github;\n", "explanation": "This block appears to be part of a ReactJS component, likely a button within a card or similar widget. \n\nPurpose: \n- To create a clickable button labeled \"Continue with Github\".\n- The design consists of a small text, centered in a full-width button.\n\nFunctionality:\n- Upon click, the button is expected to trigger some action or redirect to a GitHub login or authorization page.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This code block is a React component responsible for authenticating users with GitHub using the Magic SDK, displaying a loading indicator, and storing the obtained token. It appears as a clickable button labeled \"Continue with GitHub\" in a full-width design, which triggers the GitHub OAuth login process upon click."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport google from 'public/social/Google.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Google = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Purpose:** This block is a React functional component that handles Google OAuth login functionality.\n\n**Functionality:**\n\n1. Retrieves token and setToken from props.\n2. Retrieves magic instance from MagicProvider using useMagic hook.\n3. Checks local storage for authentication loading flag.\n4. Uses useEffect to handle Google OAuth login redirects and retrieve user profile data.\n5. Saves the token to local storage using the saveToken function.\n\n**Context:** This component appears to be part of a larger login system, likely integrated with a Next.js application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the code:\n\n**Google Login Component**\n\nThis React functional component handles Google OAuth login functionality using the Magic SDK. It checks local storage for authentication status, displays a \"Google Login\" button when the user is not authenticated, and redirects the user to Google for OAuth login when clicked. The component updates the authentication status and loading status in local storage and state, displaying a loading spinner while waiting for the login response."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'google',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"google\">Google Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={google} alt=\"Google\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThis block appears to be a social login feature, specifically for Google OAuth, within a React application. It uses the Magic SDK to handle login and authentication. The purpose is to:\n\n1. Check if the user is already logged in (via `checkLogin()` function).\n2. Display a login button when the user is not authenticated.\n3. Trigger a login request to Google when the button is clicked.\n4. Display a loading spinner while waiting for the login response and load the user's information.\n\n**Functionality:**\n\nThe code defines three functions:\n\n1. `checkLogin()`: Checks if the user is already authenticated.\n2. `login()`: Redirects the user to Google for OAuth login and updates the authentication status.\n3. `setLoadingFlag()`: Updates the loading status in both local storage and state.\n\nThe component displays a button labeled \"Google Login\" when the user is not authenticated and is not in a loading state. When clicked, it triggers the `login()` function.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the code:\n\n**Google Login Component**\n\nThis React functional component handles Google OAuth login functionality using the Magic SDK. It checks local storage for authentication status, displays a \"Google Login\" button when the user is not authenticated, and redirects the user to Google for OAuth login when clicked. The component updates the authentication status and loading status in local storage and state, displaying a loading spinner while waiting for the login response."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Google</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Google;\n", "explanation": "This code block appears to be a ReactJS component that renders a button for continuing with Google authentication.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the code:\n\n**Google Login Component**\n\nThis React functional component handles Google OAuth login functionality using the Magic SDK. It checks local storage for authentication status, displays a \"Google Login\" button when the user is not authenticated, and redirects the user to Google for OAuth login when clicked. The component updates the authentication status and loading status in local storage and state, displaying a loading spinner while waiting for the login response."}
{"code": "import { useState } from 'react';\nimport { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport FormInput from '@/components/ui/FormInput';\n\nconst SMSOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!phone.match(/^\\+?\\d{10,14}$/)) {\n      setPhoneError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setPhoneError(false);\n        const token = await magic?.auth.loginWithSMS({\n          phoneNumber: phone,\n        });\n        if (token) {", "explanation": "**Summary:**\n\nThis block is a React functional component named `SMSOTP` that handles SMS One-Time Password (OTP) login functionality. It uses the Magic library to authenticate a user's phone number and stores the resulting token. If the provided phone number is invalid, it displays an error. Otherwise, it initiates a login request and displays a spinner while processing.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx' file:\n\n**Purpose:** Handles SMS One-Time Password (OTP) login functionality using the Magic library, storing the resulting token and displaying error messages if login fails.\n\n**Key Functionality:**\n\n- Validates and autocompletes phone number input\n- Initiates login upon button click with a spinner indicator\n- Saves token upon successful login\n- Displays error messages for specific and generic errors\n- Logs out user upon reset or invalid inputs"}
{"code": "          saveToken(token, setToken, 'SMS');\n          setPhone('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"sms\">SMS Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (phoneError) setPhoneError(false);", "explanation": "**Block Purpose:** \nHandles SMS login process, saves token, and displays error messages if login fails.\n\n**Functionality:**\n\n- Saves token upon successful login.\n- Logs out user by resetting token and phone number input.\n- Displays error messages for specific RPCError codes and generic errors.\n- Resets login in-progress state after completion.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx' file:\n\n**Purpose:** Handles SMS One-Time Password (OTP) login functionality using the Magic library, storing the resulting token and displaying error messages if login fails.\n\n**Key Functionality:**\n\n- Validates and autocompletes phone number input\n- Initiates login upon button click with a spinner indicator\n- Saves token upon successful login\n- Displays error messages for specific and generic errors\n- Logs out user upon reset or invalid inputs"}
{"code": "            setPhone(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : '+11234567890'}\n          value={phone}\n        />\n        {phoneError && (\n          <span className=\"self-start text-xs font-semibold text-red-700 justify-self-start\">\n            Enter a valid phone number\n          </span>\n        )}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : phone.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default SMSOTP;\n", "explanation": "**Block Purpose and Functionality Summary**\n\nThis block is a login/signup form containing:\n\n1. An input field for entering a phone number with validation for invalid numbers.\n2. A button to initiate the login/signup process.\n3. A conditional placeholder for the input field.\n4. A visual indicator (spinner) to show login progress.\n\nThe form is disabled unless a valid phone number is entered and login is not in progress. When clicked, it calls the `handleLogin` function to process the login/signup request.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx' file:\n\n**Purpose:** Handles SMS One-Time Password (OTP) login functionality using the Magic library, storing the resulting token and displaying error messages if login fails.\n\n**Key Functionality:**\n\n- Validates and autocompletes phone number input\n- Initiates login upon button click with a spinner indicator\n- Saves token upon successful login\n- Displays error messages for specific and generic errors\n- Logs out user upon reset or invalid inputs"}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitch from 'public/social/Twitch.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitch = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Block Purpose:**\nThe block is a Twitch login component that uses the Magic OAuth library to handle authentication and save user token.\n\n**Functionality:**\n1. Uses the Magic library to authenticate users through Twitch.\n2. Checks if the user is already logged in upon component initialization.\n3. If the user is logged in, retrieves user profile data and saves the access token.\n4. Displays a spinner while the authentication process is in progress.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Twitch Login Component Summary**\n\nThe Twitch login component, sourced from the 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx' file, is a dedicated section for Twitch authentication. It utilizes the Magic OAuth library to initiate and manage Twitch login functionality.\n\nKey actions include:\n\n- Authenticating the user through Twitch using the Magic library.\n- Checking for existing logins and retrieving user profile data with saved access tokens.\n- Displaying a loading spinner during authentication, and logging errors that occur during the process.\n\nThis component facilitates seamless Twitch login experiences within a React application."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitch',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitcg\">Twitch Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitch} alt=\"Twitch\" height={24} width={24} className=\"mr-6\" />", "explanation": "This block of code appears to be a functional component in a React application, which handles Twitch login functionality. \n\nFunctionality:\n\n- It makes an API call to initiate Twitch login when a user clicks the login button and has a valid token. \n- It displays a loading spinner while the login process is in progress. \n- It logs any errors that occur during the login process.\n\nPurpose: \nThe purpose of this code is to facilitate the login process for users on the Twitch platform.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Twitch Login Component Summary**\n\nThe Twitch login component, sourced from the 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx' file, is a dedicated section for Twitch authentication. It utilizes the Magic OAuth library to initiate and manage Twitch login functionality.\n\nKey actions include:\n\n- Authenticating the user through Twitch using the Magic library.\n- Checking for existing logins and retrieving user profile data with saved access tokens.\n- Displaying a loading spinner during authentication, and logging errors that occur during the process.\n\nThis component facilitates seamless Twitch login experiences within a React application."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitch</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitch;\n", "explanation": "This block is a JSX element, part of a React component, displaying a button that allows the user to continue with Twitch authentication.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Twitch Login Component Summary**\n\nThe Twitch login component, sourced from the 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx' file, is a dedicated section for Twitch authentication. It utilizes the Magic OAuth library to initiate and manage Twitch login functionality.\n\nKey actions include:\n\n- Authenticating the user through Twitch using the Magic library.\n- Checking for existing logins and retrieving user profile data with saved access tokens.\n- Displaying a loading spinner during authentication, and logging errors that occur during the process.\n\nThis component facilitates seamless Twitch login experiences within a React application."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitter from 'public/social/Twitter.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitter = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Purpose:**\nThe given block is a React component named \"Twitter\" that handles user authentication and token management for a Twitter login functionality.\n\n**Functionality:**\nIt utilizes the Magic Provider to authenticate users through the Twitter OAuth process. Upon authentication, it saves the user's token and sets the loaded token status to the parent component. It also displays a loading indicator if authentication is in progress.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis React component, \"Twitter\", enables Twitter login functionality. It utilizes the Magic Provider for authentication, performing OAuth login upon button click and updating the component's state along with local storage in real-time, while featuring a loading indicator during the authentication process."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitter',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitter\">Twitter Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitter} alt=\"Twitter\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThis block of code appears to be a part of a React application, specifically handling Twitter social login functionality.\n\n**Key Functionality:**\n\n1. Check if a user is logged in upon component mount.\n2. Perform a Twitter login when a button is clicked, redirecting the user to the Twitter login page.\n3. Display a loading spinner while the login process is in progress.\n4. Update the login status in local storage and the component's state.\n\n**Components Involved:**\n\n- `Card` and `CardHeader`\n- `Spinner`\n- `Image` (Twitter logo)", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis React component, \"Twitter\", enables Twitter login functionality. It utilizes the Magic Provider for authentication, performing OAuth login upon button click and updating the component's state along with local storage in real-time, while featuring a loading indicator during the authentication process."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitter</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitter;\n", "explanation": "The purpose of this block is to render a Twitter login button within a card component.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis React component, \"Twitter\", enables Twitter login functionality. It utilizes the Magic Provider for authentication, performing OAuth login upon button click and updating the component's state along with local storage in real-time, while featuring a loading indicator during the authentication process."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { useMagic } from '../MagicProvider';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\nimport { getFaucetUrl, getNetwork } from '@/utils/network';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport * as fcl from '@onflow/fcl';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\n\nconst SendTransaction = () => {\n  const { magic } = useMagic();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);", "explanation": "This block is a React functional component named \"SendTransaction\". Its purpose is to handle sending transactions, likely on the Flow blockchain, given the use of the `@onflow/fcl` library. It has the following main functionalities:\n\n- Allows users to enter a recipient address and transaction amount.\n- Enables or disables the send button based on whether both fields are filled.\n- Possibly provides a transaction history feature.\n\nIt does not currently display the send functionality, but the presence of disable logic implies there's a button and some error prevention to prevent empty form submission (i.e. a \"send\" button).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThe SendTransactionCard component is a React functional component responsible for handling cryptocurrency transactions on the Flow blockchain. It includes features for:\n\n* User input of recipient address and transaction amount\n* Dynamic disabling/enabling of the send button based on input validation\n* Possible display of transaction history\n* Sending transactions to the Flow blockchain network when requested\n* Handling transaction processing errors and loading states\n\nWhen sending a transaction, the component checks the transaction status, success code, and logs response details. In both success and failure cases, it clears loading status and form fields, and displays alerts to the user. The component also catches and logs any errors that occur during the process."}
{"code": "  const [toAddressError, setToAddressError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const [hash, setHash] = useState('');\n  const [transactionLoading, setTransactionLoading] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const sendTransaction = useCallback(async () => {\n    if (!magic) {\n      return;\n    }\n    try {\n      setTransactionLoading(true);\n\n      const response = await fcl.mutate({\n        //cadence: transaction,\n        template: 'https://flix.flow.com/v1/templates?name=transfer-flow',\n        args: (arg, t) => [arg(Number(amount).toFixed(2), t.UFix64), arg(toAddress, t.Address)],\n        proposer: magic.flow.authorization,\n        authorizations: [magic.flow.authorization],\n        payer: magic.flow.authorization,\n        limit: 999,\n      });\n      setHash(response);", "explanation": "**Block Summary**\n\nThis code block manages a cryptocurrency transaction functionality. It:\n\n1. Tracks errors and loading states for transaction processing.\n2. Updates the disabled state of a transaction button based on address and amount inputs.\n3. Sends a transaction to a Flow blockchain network when called, using the `fcl.mutate` method.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThe SendTransactionCard component is a React functional component responsible for handling cryptocurrency transactions on the Flow blockchain. It includes features for:\n\n* User input of recipient address and transaction amount\n* Dynamic disabling/enabling of the send button based on input validation\n* Possible display of transaction history\n* Sending transactions to the Flow blockchain network when requested\n* Handling transaction processing errors and loading states\n\nWhen sending a transaction, the component checks the transaction status, success code, and logs response details. In both success and failure cases, it clears loading status and form fields, and displays alerts to the user. The component also catches and logs any errors that occur during the process."}
{"code": "      console.log('response: ', JSON.stringify(response));\n\n      console.log('Waiting for transaction to be sealed');\n      var data = await fcl.tx(response).onceSealed();\n      console.log('sealed: ', JSON.stringify(data));\n\n      if (data.status === 4 && data.statusCode === 0) {\n        alert('Transaction successful');\n      } else {\n        alert('Transaction Failed! Check console for more details');\n        console.log('transaction error: ' + data.errorMessage);\n      }\n      setTransactionLoading(false);\n      setToAddress('');\n      setAmount('');\n    } catch (e) {\n      setTransactionLoading(false);\n      alert('Transaction Failed! Check console for more details');\n      console.log(e);\n    }\n  }, [magic, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      {getNetwork() == 'testnet' && (\n        <div>\n          <a href={getFaucetUrl()} target=\"_blank\" rel=\"noreferrer\">", "explanation": "**Summary**: This block appears to be a function that processes the sealing of a transaction on a blockchain network. It checks if the transaction was successful, and if so, alerts the user with a success message. If the transaction fails, it alerts the user with an error message and logs the error details to the console, disabling loading status and clearing form fields. \n\n**Functionality**: \n\n1. It logs the response and checks if the transaction is sealed.\n2. If sealed, it checks the transaction status and success code.\n3. It alerts the user with a success message if the transaction is successful, or an error message if it fails.\n4. It clears loading status and form fields in both success and failure cases.\n5. It catches and logs any errors that occur during the process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThe SendTransactionCard component is a React functional component responsible for handling cryptocurrency transactions on the Flow blockchain. It includes features for:\n\n* User input of recipient address and transaction amount\n* Dynamic disabling/enabling of the send button based on input validation\n* Possible display of transaction history\n* Sending transactions to the Flow blockchain network when requested\n* Handling transaction processing errors and loading states\n\nWhen sending a transaction, the component checks the transaction status, success code, and logs response details. In both success and failure cases, it clears loading status and form fields, and displays alerts to the user. The component also catches and logs any errors that occur during the process."}
{"code": "            <FormButton onClick={() => null} disabled={false}>\n              Get Test FLOW\n              <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n            </FormButton>\n          </a>\n          <Divider />\n        </div>\n      )}\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput value={amount} onChange={(e: any) => setAmount(e.target.value)} placeholder={`Amount (FLOW)`} />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        {transactionLoading ? (\n          <div className=\"w-full loading-container\">\n            <Spinner />\n          </div>\n        ) : (\n          'Send Transaction'\n        )}\n      </FormButton>\n\n      {hash ? (\n        <>\n          <Spacer size={20} />", "explanation": "**Summary:**\n\nThis code block appears to be a part of a React frontend, likely for a cryptocurrency transaction form. It consists of:\n\n1. A button to trigger a 'Get Test FLOW' action.\n2. A form with two input fields:\n\t* Receiving address\n\t* Amount (in FLOW)\n3. Error messages displayed if the input fields are invalid.\n4. A send transaction button, which is only enabled if the input fields are valid.\n5. Once the transaction is sent, it displays the transaction hash and may proceed to further actions.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThe SendTransactionCard component is a React functional component responsible for handling cryptocurrency transactions on the Flow blockchain. It includes features for:\n\n* User input of recipient address and transaction amount\n* Dynamic disabling/enabling of the send button based on input validation\n* Possible display of transaction history\n* Sending transactions to the Flow blockchain network when requested\n* Handling transaction processing errors and loading states\n\nWhen sending a transaction, the component checks the transaction status, success code, and logs response details. In both success and failure cases, it clears loading status and form fields, and displays alerts to the user. The component also catches and logs any errors that occur during the process."}
{"code": "          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "Summary: This block renders a `<Card>` element if the component `SendTransaction` has a non-null value, containing a JSX element `<TransactionHistory />`.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx':\n\nThe SendTransactionCard component is a React functional component responsible for handling cryptocurrency transactions on the Flow blockchain. It includes features for:\n\n* User input of recipient address and transaction amount\n* Dynamic disabling/enabling of the send button based on input validation\n* Possible display of transaction history\n* Sending transactions to the Flow blockchain network when requested\n* Handling transaction processing errors and loading states\n\nWhen sending a transaction, the component checks the transaction status, success code, and logs response details. In both success and failure cases, it clears loading status and form fields, and displays alerts to the user. The component also catches and logs any errors that occur during the process."}
{"code": "import {useCallback, useEffect, useState} from 'react'\nimport Divider from '@/components/ui/Divider'\nimport {LoginProps} from '@/utils/types'\nimport {logout} from '@/utils/common'\nimport {useMagic} from '../MagicProvider'\nimport Card from '@/components/ui/Card'\nimport CardHeader from '@/components/ui/CardHeader'\nimport CardLabel from '@/components/ui/CardLabel'\nimport Spinner from '@/components/ui/Spinner'\nimport {getNetworkName} from '@/utils/network'\nimport {convertAccountBalance} from '@/utils/flowUtils'\nimport * as fcl from '@onflow/fcl'\n\nconst UserInfo = ({token, setToken}: LoginProps) => {\n\tconst {magic} = useMagic()\n\n\tconst [balance, setBalance] = useState('...')\n\tconst [copied, setCopied] = useState('Copy')\n\tconst [isRefreshing, setIsRefreshing] = useState(false)\n\n\tconst [publicAddress, setPublicAddress] = useState(\n\t\tlocalStorage.getItem('user')\n\t)\n\n\tuseEffect(() => {\n\t\tconst checkLoginandGetBalance = async () => {\n\t\t\tconst isLoggedIn = await magic?.user.isLoggedIn()\n\t\t\tif (isLoggedIn) {\n\t\t\t\ttry {", "explanation": "**Block Purpose and Functionality:**\n\nThis block is a React component named `UserInfo` that displays user information and functionality. Its primary purpose is to:\n\n1. Fetch and display a user's public address stored in local storage.\n2. Authenticate and check if the user is logged in using the Magic Provider.\n3. Fetch the user's Flow cryptocurrency balance.\n4. Display a \"Copy\" button and copy the user's public address on click.\n5. Display a spinner while refreshing user information.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'UserInfoCard.tsx' file:\n\nThe `UserInfoCard` component is a React component that fetches and displays a user's public address and FLOW cryptocurrency balance. It includes features such as:\n\n- Copying the public address with a \"Copied!\" message\n- Refreshing balance display with animation\n- Handling connection disconnection and login status\n- Displaying current balance and connection status in a card container"}
{"code": "\t\t\t\t\tconst metadata = await magic?.user.getInfo()\n\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\tlocalStorage.setItem('user', metadata?.publicAddress!)\n\t\t\t\t\t\tsetPublicAddress(metadata?.publicAddress!)\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('error in fetching address: ' + e)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => checkLoginandGetBalance(), 5000)\n\t}, [])\n\n\tconst getBalance = useCallback(async () => {\n\t\tif (publicAddress) {\n\t\t\tconst account = await fcl.account(publicAddress)\n\t\t\tsetBalance(convertAccountBalance(account.balance))\n\t\t}\n\t}, [magic, publicAddress])\n\n\tconst refresh = useCallback(async () => {\n\t\tsetIsRefreshing(true)\n\t\tawait getBalance()\n\t\tsetTimeout(() => {\n\t\t\tsetIsRefreshing(false)\n\t\t}, 500)\n\t}, [getBalance])\n\n\tuseEffect(() => {\n\t\tif (magic) {\n\t\t\trefresh()\n\t\t}\n\t}, [magic, refresh])\n\n\tuseEffect(() => {\n\t\tsetBalance('...')\n\t}, [magic])\n\n\tconst disconnect = useCallback(async () => {\n\t\tif (magic) {\n\t\t\tawait logout(setToken, magic)\n\t\t}\n\t}, [magic, setToken])\n\n\tconst copy = useCallback(() => {\n\t\tif (publicAddress && copied === 'Copy') {", "explanation": "**Summary:**\n\nThis block is responsible for:\n\n* Fetching user metadata (public address) after a 5-second delay\n* Storing the public address in local storage and updating state\n* Refreshing the balance display when the user logs in or the magic library is updated\n* Displaying the current balance based on the user's public address\n* Refreshing the balance display with a 0.5-second animation\n* Handling the disconnection of the user (logout)\n* Allowing the user to copy their public address.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'UserInfoCard.tsx' file:\n\nThe `UserInfoCard` component is a React component that fetches and displays a user's public address and FLOW cryptocurrency balance. It includes features such as:\n\n- Copying the public address with a \"Copied!\" message\n- Refreshing balance display with animation\n- Handling connection disconnection and login status\n- Displaying current balance and connection status in a card container"}
{"code": "\t\t\tsetCopied('Copied!')\n\t\t\tnavigator.clipboard.writeText(publicAddress)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetCopied('Copy')\n\t\t\t}, 1000)\n\t\t}\n\t}, [copied, publicAddress])\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardHeader id='Wallet'>Wallet</CardHeader>\n\t\t\t<CardLabel\n\t\t\t\tleftHeader='Status'\n\t\t\t\trightAction={<div onClick={disconnect}>Disconnect</div>}\n\t\t\t\tisDisconnect\n\t\t\t/>\n\t\t\t<div className='flex-row'>\n\t\t\t\t<div className='green-dot' />\n\t\t\t\t<div className='connected'>Connected to {getNetworkName()}</div>\n\t\t\t</div>\n\t\t\t<Divider />\n\t\t\t<CardLabel\n\t\t\t\tleftHeader='Address'\n\t\t\t\trightAction={\n\t\t\t\t\t!publicAddress ? (\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div onClick={copy}>{copied}</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<div className='code'>\n\t\t\t\t{publicAddress?.length == 0\n\t\t\t\t\t? 'Fetching address..'\n\t\t\t\t\t: publicAddress}\n\t\t\t</div>\n\t\t\t<Divider />\n\t\t\t<CardLabel\n\t\t\t\tleftHeader='Balance'\n\t\t\t\trightAction={\n\t\t\t\t\tisRefreshing ? (\n\t\t\t\t\t\t<div className='loading-container'>\n\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div onClick={refresh}>Refresh</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>", "explanation": "**Functionality Summary:**\n\nThis block is a React component displaying wallet information. It handles the following:\n\n1. **Connection Status**: Displays wallet connection status and disconnection button.\n2. **Address Copy**: Copies the wallet public address when clicked and shows a temporary \"Copied!\" message.\n3. **Address Display**: Shows the wallet public address, indicating a fetching phase if address data is not available.\n4. **Balance Refresh**: Displays balance refresh button and loading state while refreshing.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'UserInfoCard.tsx' file:\n\nThe `UserInfoCard` component is a React component that fetches and displays a user's public address and FLOW cryptocurrency balance. It includes features such as:\n\n- Copying the public address with a \"Copied!\" message\n- Refreshing balance display with animation\n- Handling connection disconnection and login status\n- Displaying current balance and connection status in a card container"}
{"code": "\t\t\t<div className='code'>{balance} FLOW</div>\n\t\t</Card>\n\t)\n}\n\nexport default UserInfo\n", "explanation": "**Purpose:** Display a user's balance in FLOW currency.\n \n**Functionality:** Show the user's balance followed by 'FLOW' within a card container.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'UserInfoCard.tsx' file:\n\nThe `UserInfoCard` component is a React component that fetches and displays a user's public address and FLOW cryptocurrency balance. It includes features such as:\n\n- Copying the public address with a \"Copied!\" message\n- Refreshing balance display with animation\n- Handling connection disconnection and login status\n- Displaying current balance and connection status in a card container"}
{"code": "import React, {useState} from 'react'\nimport Disconnect from '../wallet-methods/Disconnect'\nimport Divider from '@/components/ui/Divider'\nimport {LoginProps} from '@/utils/types'\nimport Card from '@/components/ui/Card'\nimport CardHeader from '@/components/ui/CardHeader'\nimport {LoginMethod} from '@/utils/common'\nimport GetIdToken from '../wallet-methods/GetIdToken'\nimport GetMetadata from '../wallet-methods/GetMetadata'\n<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n<%-`import UpdateEmail from '../wallet-methods/UpdateEmail'`-%>\n<% }%>\n\nconst WalletMethods = ({token, setToken}: LoginProps) => {\n\tconst [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n\t\tlocalStorage.getItem('loginMethod') as LoginMethod\n\t)\n\treturn (\n\t\t<Card>\n\t\t\t<CardHeader id='methods'>Wallet Methods</CardHeader>\n\t\t\t<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n\t\t\t\t<%-`{loginMethod && loginMethod == 'EMAIL' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<UpdateEmail />", "explanation": "**Purpose:** The provided block appears to be a React functional component that manages wallet methods and related functionalities.\n\n**Functionality:** \n\n- It sets the local storage 'loginMethod' state based on the component's props.\n- It displays a card with a header that says 'Wallet Methods'.\n- Depending on the logged-in authentication method (Email OTP), it includes and renders an 'Update Email' component when the login method is set to 'EMAIL'. \n\n**Note:** The code uses Webiny's templating engine (e.g., <% %>, <%= %>), indicating it's likely part of a larger Webiny project.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\nThis React functional component manages wallet methods and related functionalities. It displays a 'Wallet Methods' card and conditionally renders an 'Update Email' component based on the authentication method. It provides a UI that showcases wallet methods, allows users to connect and disconnect from services, and displays relevant user metadata."}
{"code": "\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</>\n\t\t\t\t)}`-%>\n\t\t\t<% }%>\n\t\t\t<GetIdToken />\n\t\t\t<Divider />\n\t\t\t<GetMetadata />\n\t\t\t<Divider />\n\t\t\t<Disconnect token={token} setToken={setToken} />\n\t\t</Card>\n\t)\n}\n\nexport default WalletMethods\n", "explanation": "This block appears to be a React functional component (or a part of one) that represents a \"Wallet Methods\" card on a user interface. \n\nHere's a concise summary of its purpose and functionality:\n\n1. It displays a card with wallet methods.\n2. It renders a sequence of components:\n   - Displays a divider.\n   - Retrieves a user's ID token.\n   - Displays another divider.\n   - Retrieves user metadata.\n   - Displays a third divider.\n   - Allows the user to disconnect from a service, passing a token and a token update function.\n3. The purpose of this sequence is likely to provide a UI that displays wallet methods, allows users to connect to a service, and disconnect when needed.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx':\n\nThis React functional component manages wallet methods and related functionalities. It displays a 'Wallet Methods' card and conditionally renders an 'Update Email' component based on the authentication method. It provides a UI that showcases wallet methods, allows users to connect and disconnect from services, and displays relevant user metadata."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {logout} from '@/utils/common'\nimport {LoginProps} from '@/utils/types'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\n\nconst Disconnect = ({setToken}: LoginProps) => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst disconnect = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tawait logout(setToken, magic)\n\t\t\tsetDisabled(false)\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic, setToken])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={disconnect}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[115px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'disconnect()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tDisconnects user from dApp.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Disconnect\n", "explanation": "**Purpose:** Disconnect users from a dApp.\n\n**Functionality:** \n\n- Uses MagicProvider to handle user authentication.\n- Allows users to disconnect from the dApp.\n- Displays a loading spinner while disconnecting.\n- Handles potential errors during the disconnection process.\n- Updates the UI to prevent multiple disconnection requests.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Disconnect.tsx' file:\n\nThis file provides a disconnect functionality for users from a dApp, handling user authentication using MagicProvider, displaying a loading spinner, and updating the UI to prevent concurrent disconnection requests while handling potential errors during the process."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {useMagic} from '../MagicProvider'\nimport showToast from '@/utils/showToast'\nimport Spinner from '@/components/ui/Spinner'\n\nconst GetIdToken = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst getWalletType = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tconst idToken = await magic.user.getIdToken()\n\t\t\tsetDisabled(false)\n\t\t\tconsole.log('ID Token: ' + idToken)\n\t\t\tshowToast({\n\t\t\t\tmessage: 'Please check console for the ID Token Log',\n\t\t\t\ttype: 'success',\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={getWalletType}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[86px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'getIdToken()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>", "explanation": "**GetIdToken Block Purpose and Functionality:**\n\nThis block, named `GetIdToken`, is a React functional component. Its primary purpose is to obtain an ID token from the Magic user's account using the `magic.user.getIdToken()` function.\n\n**Functionality:**\n\n1. When the button is clicked, it:\n\t* Toggles a loading state (`disabled` flag) to display a spinner or disable the button.\n\t* Calls `magic.user.getIdToken()` and logs the result to the console.\n\t* Displays a toast notification with a success message.\n\t* Resets the loading state after the operation completes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of GetIdToken Component:**\n\nThe GetIdToken component is a React functional component that fetches an ID token from the Magic user's account when a button is clicked. It toggles a loading state, calls the `magic.user.getIdToken()` function, logs the result to the console, and displays a success message via a toast notification before resetting the loading state."}
{"code": "\t\t\t\tGenerates a Decentralized Id Token which acts as a proof of\n\t\t\t\tauthentication to resource servers.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GetIdToken\n", "explanation": "This block generates a Decentralized Id (ID) Token, serving as authentication proof for resource servers.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary of GetIdToken Component:**\n\nThe GetIdToken component is a React functional component that fetches an ID token from the Magic user's account when a button is clicked. It toggles a loading state, calls the `magic.user.getIdToken()` function, logs the result to the console, and displays a success message via a toast notification before resetting the loading state."}
{"code": "import React, {useCallback, useState} from 'react'\nimport showToast from '@/utils/showToast'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\n\nconst GetMetadata = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst getMetadata = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tconst userInfo = await magic.user.getInfo()\n\t\t\tsetDisabled(false)\n\t\t\tshowToast({\n\t\t\t\tmessage: `Public Address: ${userInfo.publicAddress}`,\n\t\t\t\ttype: 'success',\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={getMetadata}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[220px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'getInfo()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tRetrieves information for the authenticated user.\n\t\t\t</div>\n\t\t</div>", "explanation": "**Summary:** \n\nThis is a React component named `GetMetadata` that handles retrieving user metadata from a Magic Provider. It displays a button that toggles between displaying the text 'getInfo()' and a loading spinner when clicked. When clicked, it fetches user information, sets a success message, and updates the button state.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx':\n\nThis React component, `GetMetadata`, retrieves user metadata from a Magic Provider and displays a button to initiate the metadata fetch. It toggles between a \"getInfo()\" button and a loading spinner, providing a user-friendly way to access their metadata."}
{"code": "\t)\n}\n\nexport default GetMetadata\n", "explanation": "This block appears to be a JavaScript code snippet, likely concluding a function or class definition. The purpose is to:\n\n- End a function or class definition\n- Export a default function named \"GetMetadata\" for use in other parts of the code.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx':\n\nThis React component, `GetMetadata`, retrieves user metadata from a Magic Provider and displays a button to initiate the metadata fetch. It toggles between a \"getInfo()\" button and a loading spinner, providing a user-friendly way to access their metadata."}
{"code": "import React, {useCallback, useState} from 'react'\nimport ErrorText from '@/components/ui/ErrorText'\nimport Spacer from '@/components/ui/Spacer'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\nimport FormInput from '@/components/ui/FormInput'\nimport showToast from '@/utils/showToast'\nimport {RPCError} from 'magic-sdk'\n\nconst UpdateEmail = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\tconst [email, setEmail] = useState('')\n\tconst [emailError, setEmailError] = useState(false)\n\n\tconst updateEmail = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tif (\n\t\t\t\t!email.match(\n\t\t\t\t\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetEmailError(true)\n\t\t\t\tsetDisabled(false)\n\t\t\t} else {\n\t\t\t\tsetDisabled(true)\n\t\t\t\tawait magic.auth.updateEmailWithUI({email, showUI: true})\n\t\t\t\tshowToast({message: 'Email Updated!', type: 'success'})\n\t\t\t\tsetDisabled(false)\n\t\t\t\tsetEmail('')\n\t\t\t}\n\t\t} catch (error) {", "explanation": "**Summary:**\n\nThis block appears to be a React functional component used for updating a user's email address. It features a form input field for entering a new email address and a button for submitting the update. The functionality includes:\n\n- Email validation using a regular expression\n- Disabling the submit button while the update is in progress\n- Displaying a success toast message after a successful email update\n- Handling errors, including invalid email format and Magic RPC errors. \n\nThe component uses the Magic SDK, a authentication and authorization library, to manage the email update process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'UpdateEmail.tsx' file:\n\nThe `UpdateEmail.tsx` file is a React functional component that handles updating a user's email address. It includes functionality for email validation, disabling the submit button during the update process, displaying success messages, and handling errors. The component utilizes the Magic SDK to manage the email update process."}
{"code": "\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t\tif (error instanceof RPCError) {\n\t\t\t\tshowToast({message: error.message, type: 'error'})\n\t\t\t} else {\n\t\t\t\tshowToast({message: 'Update email failed', type: 'error'})\n\t\t\t}\n\t\t}\n\t}, [magic, email])\n\n\tconst handleEmailChange = (e: any) => {\n\t\tsetEmailError(false)\n\t\tsetEmail(e.target.value)\n\t}\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<FormInput\n\t\t\t\tvalue={email}\n\t\t\t\tonChange={handleEmailChange}\n\t\t\t\tplaceholder='New Email'\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={updateEmail}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[76px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'updateEmail()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tInitiates the update email flow that allows a user to change\n\t\t\t\ttheir email address.\n\t\t\t</div>\n\t\t\t{emailError ? (\n\t\t\t\t<div className='mb-[-10px]'>\n\t\t\t\t\t<Spacer size={20} />\n\t\t\t\t\t<ErrorText>Enter a valid email!</ErrorText>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n", "explanation": "**Summary:**\n\nThis block is a React component that handles email updates in a user wallet. \n\n**Functionality:**\n\n- It allows the user to input a new email address.\n- It displays an error message if the entered email is invalid or if the update fails.\n- It shows a 'Please wait' animation when the update button is clicked and disabled before updating.\n- It initiates the email update process when the update button is clicked.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'UpdateEmail.tsx' file:\n\nThe `UpdateEmail.tsx` file is a React functional component that handles updating a user's email address. It includes functionality for email validation, disabling the submit button during the update process, displaying success messages, and handling errors. The component utilizes the Magic SDK to manage the email update process."}
{"code": "export default UpdateEmail\n", "explanation": "This block is exporting a default component or function named \"UpdateEmail\".", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the 'UpdateEmail.tsx' file:\n\nThe `UpdateEmail.tsx` file is a React functional component that handles updating a user's email address. It includes functionality for email validation, disabling the submit button during the update process, displaying success messages, and handling errors. The component utilizes the Magic SDK to manage the email update process."}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "**Summary:**\n\nThis is a reusable React component named \"Card\". Its purpose is to create a basic card container that holds a specified content (children). It receives a props object with a single property \"children\", which is rendered within a <div> element with a CSS class \"card\".", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Card' component:\n\nThis 'Card' component is a reusable React component that creates a basic card container, rendering its child content within a <div> tagged with the CSS class \"card\"."}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "This block defines a React component called `CardHeader`. It:\n\n- Accepts a `children` prop to render as heading content.\n- Accepts an `id` prop to assign an HTML ID to the heading element.\n- Returns an `<h1>` element with the specified ID and class name \"card-header\" containing the `children` content.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `CardHeader` component is a reusable React UI element that renders an `<h1>` heading. It accepts two props:\n\n- `children`: The content to be displayed as the heading.\n- `id`: An optional HTML ID to be assigned to the heading element.\n\nThe component returns an `<h1>` element with a \"card-header\" class and the specified ID, containing the provided `children` content."}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "**Summary**\n\nThis is a React component named `CardLabel`. It renders a label with optional left and right content. The left content is always visible, while the right content (action button) is conditionally rendered based on the `rightAction` prop. The button's class is also conditionally applied based on the `isDisconnect` prop.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/CardLabel.tsx':\n\nThe `CardLabel` React component renders a label with optional left and right content. The right content, an action button, is conditionally rendered based on the `rightAction` prop and has a dynamically applied class based on the `isDisconnect` prop."}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "This code defines a reusable React component called \"Divider\". Its purpose is to render a basic HTML <div> element with a CSS class of \"divider\", which can be used to visually separate content in an application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This code defines a reusable React component called \"Divider\" used to visually separate content in an application by rendering a basic <div> element with a CSS class of \"divider\"."}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "**Purpose:** \nA reusable React component for displaying error messages.\n\n**Functionality:** \nDisplays provided content within a 'div' element with a 'error' class, indicating an error or alert message.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/ErrorText.tsx':\n\n**ErrorText.tsx**\nA reusable React component for displaying error messages with customizable content, wrapped in a 'div' with an 'error' class for visual indication."}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "**Summary:** \n\nThis code defines a reusable React functional component called `FormButton`. It accepts three properties: `children` (the button's text/content), `onClick` (a function to be executed when the button is clicked), and `disabled` (a boolean indicating whether the button is clickable or not). The component returns a standard HTML `button` element with the provided properties set accordingly.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `FormButton` component is a reusable React functional component that renders a standard HTML `button` element. It accepts three properties:\n\n- `children`: The button's text/content.\n- `onClick`: A function to be executed when the button is clicked.\n- `disabled`: A boolean indicating whether the button is clickable or not.\n\nThis component allows for standardized button rendering in a React application."}
{"code": "import React from 'react'\n\ninterface Props {\n\tvalue: string\n\tonChange: (e: any) => void\n\tplaceholder: string\n}\n\nconst FormInput = ({value, onChange, placeholder}: Props) => {\n  return (\n    <input\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "**Summary:**\n\nThe purpose of this block is to create a reusable React input form component.\n\n**Functionality:**\n\n- Accepts user input via an `<input>` element\n- Displays a predefined `placeholder` text when the input is empty\n- Allows user to change the input value, calling the `onChange` callback function with the updated value\n- Responds to changes with the updated `value`", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the `FormInput.tsx` file:\n\n\"This reusable React component, FormInput, provides a basic input form element with a placeholder text, allowing users to input a value and triggering an onchange callback function with the updated input value.\""}
{"code": "import React from 'react'\n\nconst Spacer = ({size}: {size: number}) => {\n\treturn <div style={{height: `${size}px`}} />\n}\n\nexport default Spacer\n", "explanation": "This code defines a reusable React component called \"Spacer.\" Its purpose is to create an empty <div> element with a specified height in pixels. The component takes one prop, \"size\", which determines the height of the spacer.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a brief summary of theSpaceItem component:\n\nThe \"Spacer\" component is a reusable React element that adds a variable height divider to a web page. Its sole input parameter, \"size\", determines the height of the spacer in pixels."}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "**Summary:**\n\nThis block defines a reusable JavaScript component named `Spinner`. It renders a loading animation in the form of a circular progress indicator using SVG. The animation is animated horizontally with a blue-gray color scheme and can be adapted to dark mode using the provided classes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spinner.tsx':\n\nThis component is a reusable Spinner represented as an SVG with a rotating arrow animation. It uses a customizable blue-gray color scheme that can adapt to dark mode. The spinner's color can be dynamically updated using a `currentFill` attribute, allowing it to seamlessly integrate with its parent component or application."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "**Summary:** \nThis block is an SVG representation of a rotating or animating arrow icon, specifically a Spinner, possibly part of a loading animation. \n\n**Functionality:** \n- The SVG is defined by a path (d) which creates the shape of the spinner.\n- The `fill` attribute is set to `currentFill`, implying that the color of the spinner will change based on the current fill color set in its parent component or application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/Spinner.tsx':\n\nThis component is a reusable Spinner represented as an SVG with a rotating arrow animation. It uses a customizable blue-gray color scheme that can adapt to dark mode. The spinner's color can be dynamically updated using a `currentFill` attribute, allowing it to seamlessly integrate with its parent component or application."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "This block is a React component named `TransactionHistory`. Its purpose is to display a link to a transaction history page, which is determined by the user's public address stored in local storage. The link is an external link that opens in a new tab.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `TransactionHistory.tsx` file:\n\n`TransactionHistory.tsx`: A React component that displays a link to a transaction history page, routed by the user's public address stored in local storage, which opens in a new tab when clicked."}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "This block is a Next.js application entry point, serving as a basic wrapper for pages. It imports global CSS styles and wraps the actual page component, passing it the necessary props.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/_app.tsx':\n\nThis is the main entry point of a Next.js application, responsible for wrapping and rendering page components. It imports global CSS styles and passes necessary props to the page components."}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "This block is a custom implementation of the HTML document structure for a Next.js application. Its purpose is to serve as the basic HTML structure, typically found in every webpage. \n\nKey functionality: \n\n- Defines the basic HTML layout with <Html> and <body> tags.\n- Includes 'lang' attribute to specify the language of the document as English.\n- Calls child components for specific roles, such as <Head> for metadata and <NextScript> for any JavaScript scripts.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/_document.tsx':\n\nThis file is a custom implementation of the basic HTML structure for a Next.js application, serving as a foundation for every webpage. It includes essential components for metadata and JavaScript handling."}
{"code": "import MagicProvider from '../components/magic/MagicProvider'\nimport {useEffect, useState} from 'react'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Login from '@/components/magic/Login'\nimport Dashboard from '@/components/magic/Dashboard'\nimport MagicDashboardRedirect from '@/components/magic/MagicDashboardRedirect'\n\nexport default function Home() {\n\tconst [token, setToken] = useState('')\n\n\tuseEffect(() => {\n\t\tsetToken(localStorage.getItem('token') ?? '')\n\t}, [setToken])\n\n\treturn (\n\t\t<MagicProvider>\n\t\t\t<ToastContainer />\n\t\t\t{process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n\t\t\t\ttoken.length > 0 ? (\n\t\t\t\t\t<Dashboard token={token} setToken={setToken} />\n\t\t\t\t) : (\n\t\t\t\t\t<Login token={token} setToken={setToken} />\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<MagicDashboardRedirect />\n\t\t\t)}\n\t\t</MagicProvider>\n\t)\n}\n", "explanation": "This block is the code for the home page of a Next.js application. Its purpose is to:\n\n- Check for an existing token in local storage\n- Display a login page if no token is found or if the Magic API key is not set\n- Display a dashboard page with the Magic API if a valid token is found and the Magic API key is set\n\nFunctionalities include:\n\n- Token management using state and local storage\n- Conditional rendering of login and dashboard pages based on token presence and Magic API key status\n- Integration with MagicProvider and ToastContainer components for Magic API and notifications.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'index.tsx' file in 'scaffolds/nextjs-flow-dedicated-wallet/template/src/pages/':\n\nThe 'index.tsx' file handles the main page routing of a Next.js application, featuring a login-page that displays when no token is found in local storage or if the Magic API is not configured. If a valid token exists and the Magic API is set up, it displays a dashboard page, leveraging the Magic API for user authentication and interactions, and a ToastContainer for notifications, with token management handled through state and local storage."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "This block is a CSS stylesheet with the following purpose and functionality:\n\n- It imports a font from Google Fonts.\n- It imports Tailwind CSS configuration (base, components, and utilities).\n- It defines dark mode settings for the application.\n- It sets the global styles for the HTML document (background color, font family, and scrolling).\n- It sets styles for specific HTML elements, such as navigation bars, lists, and links, using Tailwind CSS utility classes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "This block appears to be CSS styles written in Tailwind CSS syntax. The purpose is to define various UI components and their styles for a web application, likely related to cryptocurrency or blockchain themes (indicated by the \"magic-logo\" and \"network-dropdown\" classes).\n\nThe styles outline the layout and design of elements such as containers, dropdown menus, nav bars, and other UI components, making them visually consistent across the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px];\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {\n  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {", "explanation": "This block is a set of CSS classes with various styles and layouts. The purpose is to create a consistent visual design for different UI elements on a web application, specifically for a login page.\n\nThe block contains classes for:\n\n- General styles (e.g., monospace font)\n- Page layouts (e.g., home page, login page)\n- Grid layouts (e.g., login method grid)\n- Button styles (e.g., login button)\n- Text styles (e.g., links)", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": "  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {", "explanation": "This block appears to be a collection of CSS (Cascading Style Sheets) styles written in Tailwind CSS syntax. It defines various classes and their corresponding styles for a web application's layout and design. The block includes styles for elements such as links, footers, wallet methods, and form inputs. \n\nHere is a concise summary:\n\n- Defines layout and design styles for website components\n- Sizes and positions elements\n- Specifies colors, fonts, and text styles\n- Handles interactions and hover effects for certain elements", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": "  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {", "explanation": "This block appears to be CSS code, specifically using Tailwind CSS. \n\nThe code defines styles for various HTML elements, including:\n\n1. A container element with flexbox layout, border, and background color.\n2. Placeholder text color for input fields.\n3. Form button styles, including hover and active states, as well as a disabled state.\n4. Styles for a loading container and spinner.\n\nIn summary, this block provides styling for web UI components, such as containers, buttons, and loading indicators.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": "    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];\n  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {", "explanation": "This block appears to be CSS styling code, which is used to control the layout and appearance of elements in a web application or user interface.\n\nThe code defines styles for various HTML elements, such as `.card`, `.card-header`, `.card-label-container`, `.label`, `.toast`, `.action-button`, `.disconnect-button`, and `.code`. Each element is given a set of CSS classes that apply specific styles, including colors, fonts, layouts, and animations.\n\nThese styles seem to be tailored for a UI with cards, buttons, and notifications, possibly for a web or mobile app.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": "  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {\n  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {", "explanation": "**Summary:**\n\nThis block appears to contain CSS styles and classes for styling a web application, specifically components such as a container, divider, and buttons. It includes styles for colors, typography, spacing, and layout, as well as classes for customizing the appearance of specific elements like a ripple effect on buttons.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": "  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "This block appears to be CSS styles. Here's a concise summary of its purpose and functionality:\n\n- It defines styles for various button states, including hover and active states.\n- It specifically styles two types of buttons: social login buttons and an API button.\n- The styles include visual effects such as hover and active states, gradient backgrounds, cursor changes, and opacity adjustments.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS stylesheet defines global styles and layout for a web application, particularly related to cryptocurrency or blockchain themes. It imports a font from Google Fonts, sets up dark mode settings, and defines global styles for the HTML document. The styles cover various UI components, including navigation bars, lists, and links, utilizing Tailwind CSS utility classes. It sets layout and design styles for website components, sizes and positions elements, specifies colors, fonts, and text styles, and handles interactions and hover effects for certain elements, providing a consistent visual design for different UI elements on the application."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveToken = (token: string, setToken: Dispatch<SetStateAction<string>>, loginMethod: LoginMethod) => {\n  localStorage.setItem('token', token);\n  setToken(token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n};\n", "explanation": "**Block Purpose:** Handles authentication functionality, specifically logging out and saving user tokens.\n\n**Key Functionality:**\n\n- **logout**: Logs the user out and clears local storage of credentials.\n- **saveToken**: Saves a user token to local storage and updates the token state.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/common.ts':\n\n**File Purpose:** Handles user authentication functionality, specifically logging out and storing user tokens locally. \n\n**Key Functions:**\n\n- `logout`: Clears local storage of user credentials and logs the user out.\n- `saveToken`: Saves a user token to local storage and updates the token state, enabling re-authentication."}
{"code": "export const convertAccountBalance = (amount: number) => {\n\treturn (amount / 10 ** 8).toString()\n}\n", "explanation": "This block, `convertAccountBalance`, is a function that takes a numerical `amount` and returns it as a string after dividing by `10^8`. \n\nIn essence, it converts the input amount to a readable format.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/flowUtils.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file, `flowUtils.ts`, appears to contain utility functions for interacting with Flow, a blockchain platform. The `convertAccountBalance` function specifically formats a numerical amount by dividing it by 10^8 (100,000,000) and returning the result as a formatted string, making it easier to understand the account balance."}
{"code": "export enum Network {\n  FLOW_MAINNET = 'flow-mainnet',\n  FLOW_TESTNET = 'flow-testnet',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return 'https://rest-mainnet.onflow.org';\n    case Network.FLOW_TESTNET:\n      return 'https://rest-testnet.onflow.org';\n    default:\n      throw new Error('Network not supported');\n  }\n};\n\nexport const getNetwork = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return 'mainnet';\n    case Network.FLOW_TESTNET:\n      return 'testnet';\n  }\n};\n\nexport const getFaucetUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_TESTNET:\n      return 'https://testnet-faucet.onflow.org/fund-account/';\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return 'Flow (Mainnet)';\n    case Network.FLOW_TESTNET:\n      return 'Flow (Testnet)';\n  }\n};\n", "explanation": "**Summary: Network Configuration Functions**\n\nThis block of code exports functions to handle network configuration for a Flow blockchain application. It provides functions to:\n\n- Determine the Flow network URL based on a specified environment variable `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`.\n- Determine the Flow network type (mainnet or testnet) based on the specified environment variable.\n- Get the faucet URL for testnet accounts.\n- Get the network name (Flow Mainnet or Flow Testnet) based on the specified environment variable.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/network.ts':\n\nThis file provides utility functions for configuring and interacting with Flow blockchain network environments, including determining the network URL, type, faucet URL, and block explorer URL based on environment variables."}
{"code": "export const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.FLOW_MAINNET:\n      return `https://flowscan.org/account/${address}`;\n    case Network.FLOW_TESTNET:\n      return `https://testnet.flowscan.org/account/${address}`;\n  }\n};\n", "explanation": "This block returns a URL to a block explorer for a given cryptocurrency address based on the blockchain network (mainnet or testnet) specified in the environment variable \"NEXT_PUBLIC_BLOCKCHAIN_NETWORK\".", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the file 'scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/network.ts':\n\nThis file provides utility functions for configuring and interacting with Flow blockchain network environments, including determining the network URL, type, faucet URL, and block explorer URL based on environment variables."}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "This block of code is a function called `showToast` that displays a toast notification (a non-intrusive popup message) based on a user-provided `type` and `message`. The type can be one of the following: 'success', 'error', 'info', 'default', or 'warning'.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'showToast' function in 'src/utils/showToast.ts':\n\nThe `showToast` function displays a customizable, non-intrusive toast notification to the user, featuring various display settings, interactive options, and theming capabilities. It accepts a `type` and `message` as inputs and provides a flexible way to present important information to the user in a React or JavaScript application."}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "This block of code defines a function called `showToast` with a switch statement to handle different types of toasts ('success', 'error', etc.). \n\nThe purpose is to display a message to the user as a toast notification on the screen.\n\nThe functionality includes:\n\n- Customizable display settings (position, auto-close time, priority)\n- Options to interact with the toast (hover, click, drag)\n- Theming with a 'light' theme\n- Ability to pause the toast on hover\n\nIt's likely part of a React or JavaScript application for building user interfaces.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'showToast' function in 'src/utils/showToast.ts':\n\nThe `showToast` function displays a customizable, non-intrusive toast notification to the user, featuring various display settings, interactive options, and theming capabilities. It accepts a `type` and `message` as inputs and provides a flexible way to present important information to the user in a React or JavaScript application."}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "This block exports two types:\n\n1. `LoginProps`: an object with two properties, `token` (a string) and `setToken` (a function that updates the `token` state).\n2. It also re-exports the `Magic` type from another module, likely a Magic Provider component for authentication.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary:\n\n`utils/types.ts`: A utility file that defines two custom types, `LoginProps` and `Magic`, used for authentication purposes in a Next.js application. \n\n`LoginProps` is an object with a token and a function to update it, and `Magic` is re-exported from another module for authentication operations."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "This block is a Tailwind CSS configuration file. Its purpose is to define how Tailwind CSS will be used in a project. \n\nThe functionality of this block includes:\n- Specifying the source files that Tailwind CSS will scan for class names to include in its configuration. \n- Defining custom background gradient styles.\n- Importing no additional plugins.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `tailwind.config.js` file in the provided Next.js template is a Tailwind CSS configuration file that:\n\n- Defines the source files for class names and configuration,\n- Does not import any plugins,\n- and includes custom background gradient styles."}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "This block is a configuration object for a TypeScript compiler, likely used in a project by a tool like tsc (TypeScript compiler) or a build process. It contains settings for:\n\n- Setting the compilation target (ES5)\n- Enabling certain libraries and features\n- Controlling the compilation output and behavior\n\nIn essence, it's a set of options that dictate how the TypeScript compiler will process and transform TypeScript code.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-flow-dedicated-wallet/template/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file is a configuration object for a TypeScript compiler, controlling the processing and transformation of TypeScript code and setting TypeScript compilation options."}
{"code": "import { Flags } from '../../core/flags';\nimport BaseScaffold, { ExecaCommand } from '../../core/types/BaseScaffold';\nimport { AuthTypePrompt, NpmClientPrompt, PublishableApiKeyPrompt } from '../prompts';\n\nexport type Data = NpmClientPrompt.Data & PublishableApiKeyPrompt.Data & AuthTypePrompt.Data;\n\nexport const flags: Flags<Partial<Data>> = {\n  ...NpmClientPrompt.flags,\n  ...PublishableApiKeyPrompt.flags,\n  ...AuthTypePrompt.flags,\n};\n\nexport const definition = {\n  shortDescription: 'A dedicated wallet scaffold for Next.js using Solana',\n  featured: true,\n};\n\nexport default class SolanaDedicatedScaffold extends BaseScaffold {\n  public templateName = 'nextjs-solana-dedicated-wallet';\n  private data: Data;\n  public installationCommand: ExecaCommand = { command: 'npm', args: ['install'] };\n  public startCommand: ExecaCommand = { command: 'npm', args: ['run', 'dev'] };\n  public source: string | string[] = [\n    './public/favicon.ico',\n    './public/logo.svg',\n    './public/info.svg',\n    './public/link.svg',", "explanation": "This block is a software scaffold definition for a Next.js Solana dedicated wallet application. It provides the necessary configuration for generating a scaffold, including:\n\n- Setting up prompts for user input (e.g., npm client, authentication type, publishable API key)\n- Defining the functionality of the scaffold (e.g., installation and start commands)\n- Specifying the template name and version (not shown in the provided code snippet)\n- Flag definitions for configuration options\n\nThe block appears to be written in JavaScript and utilizes a framework or library (e.g., Node.js, CLI tools) for building and managing the scaffold.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts':\n\nThis file defines a Next.js Solana dedicated wallet scaffold, which includes prompts for user input, scaffold functionality, and configuration options. It iterates over a list of login methods, transforming each into a specific format, and lists essential files required for project setup, including assets, code files, and documentation."}
{"code": "    './public/link_white.svg',\n    './public/redirect_bg.png',\n    './public/login_bg.png',\n    './.env.example',\n    './.eslintrc.json',\n    './.gitignore',\n    './package.json',\n    './postcss.config.js',\n    './tailwind.config.js',\n    './tsconfig.json',\n    './README.md',\n    './src/components/ui',\n    './src/components/magic/cards',\n    './src/components/magic/wallet-methods/Disconnect.tsx',\n    './src/components/magic/wallet-methods/GetIdToken.tsx',\n    './src/components/magic/wallet-methods/GetMetadata.tsx',\n    './src/components/magic/Dashboard.tsx',\n    './src/components/magic/DevLinks.tsx',\n    './src/components/magic/Header.tsx',\n    './src/components/magic/Login.tsx',\n    './src/components/magic/MagicProvider.tsx',\n    './src/components/magic/MagicDashboardRedirect.tsx',\n    './src/pages',\n    './src/styles',\n    './src/utils',\n  ];\n\n  constructor(data: Data) {\n    super();\n    this.data = data;\n\n    if (typeof this.source !== 'string') {", "explanation": "This appears to be a list of file paths in a file system. It represents the absolute paths to various files required for a project to function correctly. The files include:\n\n- Assets (images)\n- Configuration files (e.g., `.env.example`, `.eslintrc.json`, `package.json`)\n- Code files (e.g., TypeScript and JavaScript files)\n- Documentation (e.g., `README.md`)\n\nIt is likely used to initialize a project by listing the essential files needed for its proper setup and functionality.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts':\n\nThis file defines a Next.js Solana dedicated wallet scaffold, which includes prompts for user input, scaffold functionality, and configuration options. It iterates over a list of login methods, transforming each into a specific format, and lists essential files required for project setup, including assets, code files, and documentation."}
{"code": "      this.data.loginMethods = this.data.loginMethods.map((authType) =>\n        AuthTypePrompt.mapInputToLoginMethods(authType),\n      );\n      this.data.loginMethods.forEach((authType) => {\n        (this.source as string[]).push(`./src/components/magic/auth/${authType.replaceAll(' ', '')}.tsx`);\n        if (\n          authType === 'Discord' ||\n          authType === 'Facebook' ||\n          authType === 'Github' ||\n          authType === 'Google' ||\n          authType === 'Twitch' ||\n          authType === 'Twitter'\n        ) {\n          (this.source as string[]).push(`./public/social/${authType.replaceAll(' ', '')}.svg`);\n        }\n        if (authType.replaceAll(' ', '') === 'EmailOTP') {\n          (this.source as string[]).push('./src/components/magic/wallet-methods/UpdateEmail.tsx');\n        }\n      });\n    }\n  }\n}\n", "explanation": "**Summary:**\n\nThis block iterates over a list of login methods, transforms each one into a specific format using `AuthTypePrompt.mapInputToLoginMethods`, and updates a list of source files based on the login method type. It adds component files, possibly accompanied by an SVG file for social login providers, and a specific wallet method file if the login method is 'EmailOTP'.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/scaffold.ts':\n\nThis file defines a Next.js Solana dedicated wallet scaffold, which includes prompts for user input, scaffold functionality, and configuration options. It iterates over a list of login methods, transforming each into a specific format, and lists essential files required for project setup, including assets, code files, and documentation."}
{"code": "# Publishable API Key found in the Magic Dashboard\nNEXT_PUBLIC_MAGIC_API_KEY=<%= publishableApiKey %>\n\n# The blockchain network\nNEXT_PUBLIC_BLOCKCHAIN_NETWORK=<%= network %>", "explanation": "This block defines two environment variables for a Next.js or similar application:\n\n1. `NEXT_PUBLIC_MAGIC_API_KEY`: Holds an API key for the Magic dashboard, making it accessible to the frontend.\n2. `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`: Specifies the blockchain network to interact with.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/.env.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the .env.example file:\n\nThe .env.example file defines two environment variables for a Next.js application: `NEXT_PUBLIC_MAGIC_API_KEY` and `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`. The former stores a Magic dashboard API key, while the latter specifies the blockchain network to interact with."}
{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block appears to be a configuration file for ESLint, a JavaScript linter. \n\nIt extends the Next.js Web Vitals rules and enforces:\n\n1. Single quotes for string literals\n2. Indentation with 2 spaces.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/.eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file '.eslintrc.json':\n\nThe '.eslintrc.json' file is an ESLint configuration file for the Next.js project, enforcing consistent code style rules:\n\n- Extends Next.js Web Vitals rules\n- Mandates single quotes for string literals\n- Requires indentation with 2 spaces."}
{"code": "This scaffold is meant to help you bootstrap your own projects with Magic's [Dedicated Wallet](https://magic.link/docs/auth/overview). Magic is a developer SDK that integrates with your application to enable passwordless Web3 onboarding.\n\nThe folder structure of this scaffold is designed to encapsulate all things Magic into one place so you can easily add or remove components and functionality. For example, all Magic-specific components are in the `src/components/magic` directory while generic UI components are in the `src/components/ui` directory.\n\n## Next.js\n\nThis is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n### Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n", "explanation": "This is a project scaffold, specifically for Magic's passwordless Web3 onboarding, built with Next.js. Its purpose is to:\n\n- Encapsulate Magic-related components and functionality for easy management and customization.\n- Provide a starting point for creating Web3 applications with Magic's Dedicated Wallet.\n\nFunctionality includes:\n\n- A Next.js development environment for building and testing applications.\n- A built-in development server for local development.\n- Easy setup for passwordless Web3 onboarding with Magic.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/README.md", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise holistic summary of the 'scaffolds/nextjs-solana-dedicated-wallet/template/README.md' file:\n\nThis Next.js project scaffold enables easy creation of Web3 applications using Magic's Dedicated Wallet. It includes a development environment, local server, passwordless Web3 onboarding, and customizable components for Magic functionality."}
{"code": "You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n### Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n", "explanation": "This block describes the setup and functionality of a Next.js project, specifically:\n\n- Editing a page by modifying `pages/index.tsx`\n- Accessing API routes at `http://localhost:3000/api/hello`\n- Optimizing and loading custom Google Fonts using `next/font`\n- Providing resources for learning more about Next.js features and API.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/README.md", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise holistic summary of the 'scaffolds/nextjs-solana-dedicated-wallet/template/README.md' file:\n\nThis Next.js project scaffold enables easy creation of Web3 applications using Magic's Dedicated Wallet. It includes a development environment, local server, passwordless Web3 onboarding, and customizable components for Magic functionality."}
{"code": "You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n### Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n", "explanation": "Summary: This block provides a brief explanation of Next.js and offers a convenient deployment option using the Vercel Platform.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/README.md", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise holistic summary of the 'scaffolds/nextjs-solana-dedicated-wallet/template/README.md' file:\n\nThis Next.js project scaffold enables easy creation of Web3 applications using Magic's Dedicated Wallet. It includes a development environment, local server, passwordless Web3 onboarding, and customizable components for Magic functionality."}
{"code": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n}\n\nmodule.exports = nextConfig\n", "explanation": "**Summary:**\n\nThis block is a configuration file for Next.js, a popular React Framework. It enables React Strict Mode, which helps catch potential bugs in React code at runtime. It also exports this configuration as a module, allowing Next.js to use it.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/next.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'next.config.js' file:\n\nThis file is the Next.js configuration for the project, enabling React Strict Mode to catch potential runtime bugs."}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "This block is a configuration file for a Webpack plugin. It exports an object that specifies two plugins:\n\n1. **Tailwind CSS**: enables Tailwind CSS styling and configuration.\n2. **Autoprefixer**: enables the automatic prefixing of CSS rules for browser compatibility.\n\nThe configuration is minimal, enabling the two plugins with default settings.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'postcss.config.js' file:\n\nThe 'postcss.config.js' file configures two Webpack plugins for CSS processing: Tailwind CSS and Autoprefixer. It enables these plugins with their default settings to provide Web compatibility and styling functionality."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "This block is an SVG icon that represents a calendar.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/info.svg':\n\nThis is an SVG icon representing a calendar."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG (Scalable Vector Graphics) element used for rendering 2D vector graphics. It is essentially a container for vector graphics, in this case, an image or icon of size 24x24 pixels.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg':\n\nThe 'link.svg' file is an empty SVG placeholder, likely used to reserve space in a layout. Its purpose is not to display a shape, but rather to serve as a container for a graphical icon or button, which is defined by a complex polygon with an irregular shape and a specific fill color."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block appears to be a SVG path element, which is used to define a 2D shape. In this case, it represents a complex polygon with an irregular shape, likely being used for graphical purposes such as an icon or a button. \n\nThe path contains various 'M' (move to), 'C' (curve to), and 'L' (line to) commands that specify the coordinates of the shape's vertices. The 'fill' attribute set to '#6851FF' defines the color of the shape.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg':\n\nThe 'link.svg' file is an empty SVG placeholder, likely used to reserve space in a layout. Its purpose is not to display a shape, but rather to serve as a container for a graphical icon or button, which is defined by a complex polygon with an irregular shape and a specific fill color."}
{"code": "</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) placeholder with an empty tag. It is likely used to reserve space in a layout or to prevent other elements from shifting positions.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/link.svg':\n\nThe 'link.svg' file is an empty SVG placeholder, likely used to reserve space in a layout. Its purpose is not to display a shape, but rather to serve as a container for a graphical icon or button, which is defined by a complex polygon with an irregular shape and a specific fill color."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This code snippet defines a Scalable Vector Graphics (SVG) element, likely used to display an icon or graphic in a web application, with a width and height of 24x24 pixels.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG icon file titled 'link_white.svg' used to display a white star-shaped graphic, specifically a 5-pointed star with a rounded border. It is 24x24 pixels in size and is designed for use in a web application."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block is a SVG icon, specifically a white \"Star\" or \" Rating\" graphic, with a 5-pointed star shape and a rounded border.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG icon file titled 'link_white.svg' used to display a white star-shaped graphic, specifically a 5-pointed star with a rounded border. It is 24x24 pixels in size and is designed for use in a web application."}
{"code": "</svg>", "explanation": "The purpose and functionality of this block is a closing SVG tag, typically used to end an SVG (Scalable Vector Graphics) element in an HTML document.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG icon file titled 'link_white.svg' used to display a white star-shaped graphic, specifically a 5-pointed star with a rounded border. It is 24x24 pixels in size and is designed for use in a web application."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "This block of text is an SVG (Scalable Vector Graphics) code snippet that appears to represent a logo with two connected curves. It sets the visual properties of the logo, including:\n\n- Size: 32x32 pixels\n- Color: White fill and no border\n- Shape: Two interconnected curves created using <path> elements with specific coordinates (d attribute).\n\nThe logo consists of two interconnected curved shapes likely intended to form a single icon or logo.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG logo file representing a stylized, interconnected curved shape. The logo is 32x32 pixels, filled with white color, and has no border."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This block of code appears to be an SVG (Scalable Vector Graphics) path element used to draw a shape within an SVG image. The specific shape defined by the path is a white circle or arc with a complex curve.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG logo file representing a stylized, interconnected curved shape. The logo is 32x32 pixels, filled with white color, and has no border."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 127.14 96.36\"><defs><style>.cls-1{fill:#5865f2;}</style></defs><g id=\"\u56fe\u5c42_2\" data-name=\"\u56fe\u5c42 2\"><g id=\"Discord_Logos\" data-name=\"Discord Logos\"><g id=\"Discord_Logo_-_Large_-_White\" data-name=\"Discord Logo - Large - White\"><path class=\"cls-1\" d=\"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z\"/></g></g></g></svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) image of the Discord logo. It's likely used to represent the Discord brand in a graphical context, such as a website or application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Discord.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG representation of the Discord logo, used for graphical representation and branding purposes."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#039be5\" d=\"M24 5A19 19 0 1 0 24 43A19 19 0 1 0 24 5Z\"/><path fill=\"#fff\" d=\"M26.572,29.036h4.917l0.772-4.995h-5.69v-2.73c0-2.075,0.678-3.915,2.619-3.915h3.119v-4.359c-0.548-0.074-1.707-0.236-3.897-0.236c-4.573,0-7.254,2.415-7.254,7.917v3.323h-4.701v4.995h4.701v13.729C22.089,42.905,23.032,43,24,43c0.875,0,1.729-0.08,2.572-0.194V29.036z\"/></svg>", "explanation": "This block is an SVG icon representing a cloud. It consists of two paths: a blue cloud shape and a white interior part with a darker blue outline. The icon's dimensions are fixed at 48x48 pixels.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Facebook.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Facebook.svg':\n\n\"Facebook icon: A 48x48 pixel blue cloud shape with a white interior and darker blue outline.\""}
{"code": "<svg width=\"98\" height=\"96\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z\" fill=\"#24292f\"/></svg>", "explanation": "This block of code is an SVG (Scalable Vector Graphics) representation of a button. Its purpose is to render a visual button element on a webpage.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Github.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The file 'scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Github.svg' contains an SVG representation of a button designed to be rendered on a webpage, specifically a visual button element for a 'Github' social media platform icon."}
{"code": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"705.6\" height=\"720\" viewBox=\"0 0 186.69 190.5\" xmlns:v=\"https://vecta.io/nano\"><g transform=\"translate(1184.583 765.171)\"><path clip-path=\"none\" mask=\"none\" d=\"M-1089.333-687.239v36.888h51.262c-2.251 11.863-9.006 21.908-19.137 28.662l30.913 23.986c18.011-16.625 28.402-41.044 28.402-70.052 0-6.754-.606-13.249-1.732-19.483z\" fill=\"#4285f4\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1142.714-651.791l-6.972 5.337-24.679 19.223h0c15.673 31.086 47.796 52.561 85.03 52.561 25.717 0 47.278-8.486 63.038-23.033l-30.913-23.986c-8.486 5.715-19.31 9.179-32.125 9.179-24.765 0-45.806-16.712-53.34-39.226z\" fill=\"#34a853\"/><path clip-path=\"none\" mask=\"none\" d=\"M-1174.365-712.61c-6.494 12.815-10.217 27.276-10.217 42.689s3.723 29.874 10.217 42.689c0 .086 31.693-24.592 31.693-24.592-1.905-5.715-3.031-11.776-3.031-18.098s1.126-12.383 3.031-18.098z\" fill=\"#fbbc05\"/><path d=\"M-1089.333-727.244c14.028 0 26.497 4.849 36.455 14.201l27.276-27.276c-16.539-15.413-38.013-24.852-63.731-24.852-37.234 0-69.359 21.388-85.032 52.561l31.692 24.592c7.533-22.514 28.575-39.226 53.34-39.226z\" fill=\"#ea4335\" clip-path=\"none\" mask=\"none\"/></g></svg>", "explanation": "This block appears to be an SVG (Scalable Vector Graphics) image, likely a logo or icon, composed of four colored paths. The purpose and functionality of this block are:\n\n* To display a multi-colored iconatology.\n* Possibly used as a logo or icon in a web or mobile application.\n\nThe block uses SVG code to render the icon, which is composed of four overlapping paths with different colors. The exact functionality depends on the context in which it is used.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Google.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Google.svg' file:\n\nThe Google.svg file is an SVG image containing a multi-colored icon composed of four overlapping paths. It is likely used as a logo or icon in web or mobile applications, rendering via SVG code."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.6, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 2400 2800\" style=\"enable-background:new 0 0 2400 2800;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#FFFFFF;}\n\t.st1{fill:#9146FF;}\n</style>\n<title>Asset 2</title>\n<g>\n\t<polygon class=\"st0\" points=\"2200,1300 1800,1700 1400,1700 1050,2050 1050,1700 600,1700 600,200 2200,200 \t\"/>\n\t<g>\n\t\t<g id=\"Layer_1-2\">\n\t\t\t<path class=\"st1\" d=\"M500,0L0,500v1800h600v500l500-500h400l900-900V0H500z M2200,1300l-400,400h-400l-350,350v-350H600V200h1600\n\t\t\t\tV1300z\"/>\n\t\t\t<rect x=\"1700\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t\t<rect x=\"1150\" y=\"550\" class=\"st1\" width=\"200\" height=\"600\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) file, containing a design consisting of a polygon and multiple shapes ( paths and rectangles) with fill colors. It appears to be a vector graphic illustration, likely generated by Adobe Illustrator.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitch.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The 'Twitch.svg' file is a Scalable Vector Graphics (SVG) file containing a vector graphic illustration designed by a polygon and multiple shapes, likely generated by Adobe Illustrator."}
{"code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.2.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 248 204\" style=\"enable-background:new 0 0 248 204;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#1D9BF0;}\n</style>\n<g id=\"Logo_1_\">\n\t<path id=\"white_background\" class=\"st0\" d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26", "explanation": "This block is an SVG (Scalable Vector Graphics) image, specifically an icon or logo. Its purpose is to display a graphical design defined by the various shapes, paths, and colors, utilizing the SVG markup language.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG image that displays a graphical design defined by shapes, paths, and colors. It is a fragment of a Scalable Vector Graphics file that likely represents a polygon or path."}
{"code": "\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"/>\n</g>\n</svg>\n", "explanation": "This block is likely a fragment of an SVG (Scalable Vector Graphics) file. The text within the block appears to be a series of coordinate points that define a specific shape within the SVG, likely a polygon or path.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/public/social/Twitter.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is an SVG image that displays a graphical design defined by shapes, paths, and colors. It is a fragment of a Scalable Vector Graphics file that likely represents a polygon or path."}
{"code": "import React from 'react';\nimport WalletMethods from './cards/WalletMethodsCard';\nimport SendTransaction from './cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from './cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "This JavaScript code block defines a React functional component named `Dashboard`. \n\n**Purpose:** The `Dashboard` component serves as the main entry point for a user's account management page, displaying essential user information and transaction-related functionality.\n\n**Functionality:**\n\n- Displays a header bar (`<Header />`)\n- Displays user information (`<UserInfoCard>`)\n- Allows users to send transactions (`<SendTransactionCard>`)\n- Displays wallet methods (e.g., funding options) (`<WalletMethodsCard>`)\n- Supports development links (`<DevLinks>`)\n- Uses the provided `token` and `setToken` props for authentication and data access.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `Dashboard.tsx` file:\n\nThis file contains the `Dashboard` React component, a user account management page displaying essential user information, transaction functionality, and wallet methods. It includes sub-components for a header bar, user info card, send transaction card, wallet methods card, and development links, utilizing token and setToken props for authentication."}
{"code": "import classNames from 'classnames'\nimport Link from 'next/link'\n\nconst DevLinks = ({\n\tprimary = false,\n\tfooter = false,\n}: {\n\tprimary?: boolean\n\tfooter?: boolean\n}) => (\n\t<div className={`links ${footer ? 'footer-links' : ''}`}>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://magic.link/docs/home/welcome'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDev Docs\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://dashboard.magic.link/signup'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDashboard\n\t\t\t</a>\n\t\t</div>\n\t\t<div\n\t\t\tclassName={`link-divider ${\n\t\t\t\tprimary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'\n\t\t\t}`}\n\t\t/>\n\t\t<div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n\t\t\t<a\n\t\t\t\thref='https://discord.gg/magiclabs'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noreferrer'>\n\t\t\t\tDiscord\n\t\t\t</a>\n\t\t</div>\n\t</div>\n)\n\nexport default DevLinks\n", "explanation": "**Summary:**\n\nThis block of code defines a reusable React component named `DevLinks`. Its purpose is to display a collection of links (Dev Docs, Dashboard, and Discord) in a styled manner. The component accepts two props: `primary` and `footer`, which control the appearance and positioning of the links within the component. The links are rendered with a divider between each item, and the component can be styled differently based on whether it's used in a primary or footer context.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/DevLinks.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the provided code block:\n\n```\nThe 'DevLinks' component displays links (Dev Docs, Dashboard, and Discord) in a styled manner, accepting two props for primary or footer context styling.\n```\n\nAlternatively, here's a more detailed summary:\n\n```\nThis reusable React component 'DevLinks' displays a collection of links with a divider, allowing for tailored styling depending on whether it's used in a primary or footer context.\n```"}
{"code": "import Image from 'next/image';\nimport Logo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <div className=\"flex flex-col gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "**Summary:**\n\nThis is a React component named `Header` that represents the header section of an application. It displays a logo, two lines of text, and includes a separate component `DevLinks`. The component uses Next.js's `Image` component and includes styling with Tailwind CSS classes.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component (`Header`) represents the application's header, displaying a logo, two lines of text, and the `DevLinks` component, while utilizing Next.js's `Image` component and Tailwind CSS styling."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from './Header'\n<% loginMethods.forEach(authType => { %>\n<%-`import ${authType.replaceAll(' ', '')} from './auth/${authType.replaceAll(' ', '')}';`-%>\n<% }) %>\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-<%= Math.min(loginMethods.length, 3) %> grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      <% loginMethods.forEach(authType => { %>\n      <% if (authType !== \"Social Logins\") { %>\n        <%-`<${authType.replaceAll(' ', '')} token={token} setToken={setToken} />`-%>\n      <% } %>\n  \t\t<% }) %>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "**Purpose:**\nThe purpose of this block is to create a reusable login component that supports multiple authentication methods.\n\n**Functionality:**\n\n1. Dynamically imports authentication methods based on the `loginMethods` array.\n2. Displays a grid of authentication options.\n3. Each authentication option is a separate component (e.g., Email Login, Google Login, etc.).\n4. Passes the `token` and `setToken` props to each authentication option component.\n\nThis block appears to be using a templating engine (e.g., EJS) to generate the code dynamically based on the `loginMethods` array.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, to-the-point summary of the 'Login.tsx' file:\n\n\"This component dynamically generates a grid of authentication options based on the `loginMethods` array. It imports each authentication method separately and renders them as individual components, passing required props (`token` and `setToken`) to each.\""}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "**Summary:**\n\nThis block is a React component named `MagicDashboardRedirect`. Its purpose is to display a branded landing page (Magic logo and text) that redirects users to the Magic Dashboard sign-up page when clicked. The component uses the `window.open` function to open the link in a new tab.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'MagicDashboardRedirect.tsx' file:\n\nThe `MagicDashboardRedirect` component is a React UI element that displays a branded landing page with a Magic logo and text. When clicked, it redirects users to the Magic Dashboard sign-up page in a new tab."}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "**Purpose and Functionality:**\n\nThis block is a UI component in a React application that prompts the user to set a Magic API key environment variable and provides a button to retrieve the API key from the Magic Dashboard.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'MagicDashboardRedirect.tsx' file:\n\nThe `MagicDashboardRedirect` component is a React UI element that displays a branded landing page with a Magic logo and text. When clicked, it redirects users to the Magic Dashboard sign-up page in a new tab."}
{"code": "import { getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { SolanaExtension } from '@magic-ext/solana';\nimport { Connection } from '@solana/web3.js';\n\nexport type Magic = MagicBase<OAuthExtension[] & SolanaExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n  connection: Connection | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n  connection: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n  const [connection, setConnection] = useState<Connection | null>(null);\n\n  useEffect(() => {\n    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        extensions: [", "explanation": "**Purpose and Functionality:**\n\nThis block creates a Magic SDK context for a React application. It provides functionality to connect to the Magic API and interact with the Solana blockchain. The context manages the Magic SDK instance and a Solana connection, making them available throughout the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'MagicProvider.tsx':\n\nThe `MagicProvider` component wraps a React application with a context provider, making the Magic user object (`magic`) and Solana connection instance accessible to its child components. It initializes the Magic and Solana instances and provides them to its children through a memoized value, simplifying the sharing and reuse of these instances across the application."}
{"code": "          new OAuthExtension(),\n          new SolanaExtension({\n            rpcUrl: getNetworkUrl(),\n          }),\n        ],\n      });\n      const connection = new Connection(getNetworkUrl());\n      setMagic(magic);\n      setConnection(connection);\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n      connection,\n    };\n  }, [magic, connection]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;\n", "explanation": "**Summary:**\n\nThis code defines a React component named `MagicProvider`. Its purpose is to wrap the application with a context provider that makes the Magic user object (`magic`) and Solana connection instance accessible to its children components. \n\n**Key Functionality:**\n\n- Initializes the Magic user object and Solana connection instance.\n- Updates the `magic` and `connection` state variables using the `useState` hook.\n- Creates a `Connection` instance using the `getNetworkUrl` function.\n- Uses the `useMemo` hook to memoize a value object with `magic` and `connection` properties.\n- Provides the memoized value to its child components through the `MagicContext.Provider` context.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'MagicProvider.tsx':\n\nThe `MagicProvider` component wraps a React application with a context provider, making the Magic user object (`magic`) and Solana connection instance accessible to its child components. It initializes the Magic and Solana instances and provides them to its children through a memoized value, simplifying the sharing and reuse of these instances across the application."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '@/components/ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport discord from 'public/social/Discord.svg';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\n\nconst Discord = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Summary:**\n\nThis block is a React component responsible for handling Discord login authentication. It utilizes the Magic library to fetch user data after login, saves the token, and updates the state of the application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the code block 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx':\n\n**Discord Authentication Component**\n\nHandles Discord login authentication using Magic library, redirecting users to Discord OAuth authorization page, and updating application state with loading indicators."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'discord',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"discord\">Discord Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={discord} alt=\"Discord\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Functional Overview**\n\nThis block is a React component snippet that handles a Discord login functionality using the Magic OAuth library. Its primary purpose is to authenticate users through Discord and set loading flags when completing the process. \n\n**Key Functions:**\n\n1. `checkLogin`: Not shown in the snippet but likely checks for existing login credentials.\n2. `login`: Redirects the user to the Discord OAuth authorization page using the Magic OAuth library.\n3. `setLoadingFlag`: A helper function that updates a local storage item and a React state (`isAuthLoading`) to indicate login loading status.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the code block 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx':\n\n**Discord Authentication Component**\n\nHandles Discord login authentication using Magic library, redirecting users to Discord OAuth authorization page, and updating application state with loading indicators."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Discord</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Discord;\n", "explanation": "This block is a clickable button that, when clicked, redirects the user to complete the login process or authentication with Discord.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the code block 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Discord.tsx':\n\n**Discord Authentication Component**\n\nHandles Discord login authentication using Magic library, redirecting users to Discord OAuth authorization page, and updating application state with loading indicators."}
{"code": "import { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });\n        if (token) {", "explanation": "**Purpose:** \nThis block appears to be a React functional component responsible for handling email-based login functionality using the Magic SDK library.\n\n**Functionality:** \nThe component receives an email token, validates an email input, and uses it to login to a service using the Magic SDK's `auth.loginWithEmailOTP` method. It displays a spinning indicator while the login process is in progress and shows a toast notification using the `showToast` function if an error occurs.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\nThis React component handles email-based login functionality using the Magic SDK. It validates email inputs, displays a login progress indicator, and uses `auth.loginWithEmailOTP` to log in. The component also includes error handling, displaying toast notifications and console logging for any errors that occur."}
{"code": "          saveToken(token, setToken, 'EMAIL');\n          setEmail('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);", "explanation": "**Purpose:** Handles login functionality after submitting an email OTP, including error handling and reset of login in progress flag.\n\n**Functionality:**\n\n- Calls a function to save a token to storage.\n- Clears the email input field.\n- Traps any errors that may occur during the login process.\n- Logs the error to the console and displays an error message to the user depending on the error type.\n- Regardless of the outcome, resets the 'login in progress' flag.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\nThis React component handles email-based login functionality using the Magic SDK. It validates email inputs, displays a login progress indicator, and uses `auth.loginWithEmailOTP` to log in. The component also includes error handling, displaying toast notifications and console logging for any errors that occur."}
{"code": "            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "**Summary:**\n\nThis block is a login/sign-up form with an email input field and a submit button. It:\n\n1. Updates the email value when the user interacts with the input field.\n2. Displays an error message if the entered email is invalid.\n3. Enables the submit button when the user has entered a valid email and the login process is not in progress. \n4. Submits the form when the user clicks the button, calling the `handleLogin` function.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/EmailOTP.tsx':\n\nThis React component handles email-based login functionality using the Magic SDK. It validates email inputs, displays a login progress indicator, and uses `auth.loginWithEmailOTP` to log in. The component also includes error handling, displaying toast notifications and console logging for any errors that occur."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport facebook from 'public/social/Facebook.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Facebook = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Purpose and Functionality Summary:**\n\nThis block is a React component named `Facebook` that handles Facebook login functionality using the Magic authentication library. \n\nIt:\n\n1. Uses the `MagicProvider` context to obtain the `magic` object.\n2. Saves the user's Facebook token if a valid login result is obtained.\n3. Displays a loading indicator while authentication is in progress.\n4. Redirects the user after a successful Facebook login.\n\nIn essence, this component facilitates a seamless Facebook login experience for users.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file, `Facebook.tsx`, is a React component that enables a seamless Facebook login experience using the Magic authentication library. It handles Facebook login functionality by:\n\n- Triggering a Facebook login process if a token doesn't exist\n- Displaying a loading indicator during the process\n- Saving a valid Facebook token after a successful login\n- Redirecting the user after a successful login"}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'facebook',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"facebook\">Facebook Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={facebook} alt=\"Facebook\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Purpose:** This block is a Facebook login functionality.\n**Functionality:** \n\n1. It checks for an existing Facebook token every time the state variables \"magic\" or \"setToken\" change.\n2. If there's no token, it triggers the Facebook login process.\n3. During login, it displays a Spinner while the process is in progress.\n4. Once the login is complete or an error occurs, it updates a loading flag in the local storage and the component state.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file, `Facebook.tsx`, is a React component that enables a seamless Facebook login experience using the Magic authentication library. It handles Facebook login functionality by:\n\n- Triggering a Facebook login process if a token doesn't exist\n- Displaying a loading indicator during the process\n- Saving a valid Facebook token after a successful login\n- Redirecting the user after a successful login"}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Facebook</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Facebook;\n", "explanation": "The goal of this code block appears to be a button or element that, when clicked, will initiate a \"Continue with Facebook\" login or authentication process, potentially directing the user to the Facebook login page or integrating the Facebook sign-in functionality into the existing application or webpage.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Facebook.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file, `Facebook.tsx`, is a React component that enables a seamless Facebook login experience using the Magic authentication library. It handles Facebook login functionality by:\n\n- Triggering a Facebook login process if a token doesn't exist\n- Displaying a loading indicator during the process\n- Saving a valid Facebook token after a successful login\n- Redirecting the user after a successful login"}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport github from 'public/social/Github.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Github = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Purpose:** A functional React component for handling GitHub OAuth login.\n\n**Functionality:**\n\n- Handles login through GitHub using the Auth0 Magic Provider.\n- Checks for existing authentication loading state on mount.\n- Retrieves the user's profile data after a successful OAuth redirect.\n- Saves the obtained token and sets the login state accordingly.\n- Displays a spinner during loading.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Github Login Component Summary**\n\nThis component enables GitHub OAuth login using Auth0 Magic Provider. It provides a seamless login experience with functionality that includes:\n\n- Loading state management\n- Existing token checks\n- Login initiation\n- Error handling\n\nUpon successful login, it retrieves user profile data, saves the obtained token, and updates the login state. The component displays a spinner during the login process and logs errors upon failure."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'github',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"github\">Github Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={github} alt=\"Github\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThis block is responsible for handling social login functionality, specifically GitHub login. It includes:\n\n1. A loading state management system\n2. A check for existing login tokens\n3. A login button that initiates the login process with GitHub when clicked\n4. An error handling mechanism for login failures\n\n**Key Functionality:**\n\n- `login()`: Initiates GitHub login with redirect URI set to the current page's origin.\n- `setLoadingFlag()`: Updates the loading state in local storage and the component's state.\n- `checkLogin()`: Checks for existing login tokens when the component mounts.\n- Error handling: Logs errors and resets the loading flag upon login failure.\n\nThis block aims to provide a seamless social login experience for users.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Github Login Component Summary**\n\nThis component enables GitHub OAuth login using Auth0 Magic Provider. It provides a seamless login experience with functionality that includes:\n\n- Loading state management\n- Existing token checks\n- Login initiation\n- Error handling\n\nUpon successful login, it retrieves user profile data, saves the obtained token, and updates the login state. The component displays a spinner during the login process and logs errors upon failure."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Github</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Github;\n", "explanation": "**Block Summary:**\n\nThis block creates a button with a text label that prompts the user to \"Continue with Github\".", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Github.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Github Login Component Summary**\n\nThis component enables GitHub OAuth login using Auth0 Magic Provider. It provides a seamless login experience with functionality that includes:\n\n- Loading state management\n- Existing token checks\n- Login initiation\n- Error handling\n\nUpon successful login, it retrieves user profile data, saves the obtained token, and updates the login state. The component displays a spinner during the login process and logs errors upon failure."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport google from 'public/social/Google.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Google = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Block Purpose:**\nThis block is a reusable React component for Google login functionality.\n\n**Key Functionality:**\n\n- Uses the MagicProvider to handle OAuth with Google.\n- Allows the user to authenticate with Google and retrieve user profile data.\n- Saves the authentication token to local storage and updates the parent component using the `setToken` prop.\n- Displays a loading spinner while authentication is in progress.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component displays a \"Continue with Google\" button that, when clicked, redirects to Google for authentication using Magic OAuth. If already authenticated, the button is hidden, and a loading spinner is displayed, prompting the user to continue with their active Google session."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'google',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"google\">Google Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={google} alt=\"Google\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThis block displays a Google login button. When clicked, it redirects to Google for authentication using the Magic OAuth provider. If the user is already authenticated, the button is hidden and a spinner is displayed, indicating that the user is currently logging in.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component displays a \"Continue with Google\" button that, when clicked, redirects to Google for authentication using Magic OAuth. If already authenticated, the button is hidden, and a loading spinner is displayed, prompting the user to continue with their active Google session."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Google</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Google;\n", "explanation": "This block appears to be a ReactJS component (likely part of a login or authentication system). \n\nIts purpose is to display a visual button prompting the user to continue with their Google account.\n\nThe button renders a label with the text \"Continue with Google\" in a center-aligned, small font size.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Google.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component displays a \"Continue with Google\" button that, when clicked, redirects to Google for authentication using Magic OAuth. If already authenticated, the button is hidden, and a loading spinner is displayed, prompting the user to continue with their active Google session."}
{"code": "import { useState } from 'react';\nimport { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveToken } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport FormInput from '@/components/ui/FormInput';\n\nconst SMSOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [phone, setPhone] = useState('');\n  const [phoneError, setPhoneError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!phone.match(/^\\+?\\d{10,14}$/)) {\n      setPhoneError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setPhoneError(false);\n        const token = await magic?.auth.loginWithSMS({\n          phoneNumber: phone,\n        });\n        if (token) {", "explanation": "**Summary:**\n\nThis block is a React functional component named `SMSOTP` used for login via SMS One-Time Password (OTP). It:\n\n1. Retrieves user's phone number through a form input.\n2. Validates the phone number and shows an error if it's invalid.\n3. Starts a login process using the Magic SDK's `loginWithSMS` method.\n4. If login is successful, saves a token and proceeds with the login flow.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component, `SMSOTP`, handles SMS One-Time Password (OTP) login process. It:\n\n- Collects a user's phone number through a form input.\n- Validates the phone number and displays an error if it's invalid.\n- Initiates login using Magic SDK's `loginWithSMS` method.\n- If successful, saves the token and proceeds with the login flow.\n- Handles potential login errors, clearing the phone input field and displaying an error message."}
{"code": "          saveToken(token, setToken, 'SMS');\n          setPhone('');\n        }\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"sms\">SMS Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (phoneError) setPhoneError(false);", "explanation": "**Text Analysis Summary**\n\nThis block appears to be a JavaScript function handling an SMS login process. \n\nThe purpose of this block is to:\n\n1. Perform an action associated with a received token ('SMS' in this case) and update the token state accordingly.\n2. Clear a phone input field.\n3. Catch any login errors that occur and display an error message to the user.\n4. If an error occurs, check if it's an instance of RPCError and display a specific error message if it matches certain conditions.\n5. Finally, set the login progress to false regardless of whether an error occurred.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component, `SMSOTP`, handles SMS One-Time Password (OTP) login process. It:\n\n- Collects a user's phone number through a form input.\n- Validates the phone number and displays an error if it's invalid.\n- Initiates login using Magic SDK's `loginWithSMS` method.\n- If successful, saves the token and proceeds with the login flow.\n- Handles potential login errors, clearing the phone input field and displaying an error message."}
{"code": "            setPhone(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : '+11234567890'}\n          value={phone}\n        />\n        {phoneError && (\n          <span className=\"self-start text-xs font-semibold text-red-700 justify-self-start\">\n            Enter a valid phone number\n          </span>\n        )}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : phone.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default SMSOTP;\n", "explanation": "This block appears to be a React component for handling user login through SMS OTP. The purpose is to collect a user's phone number and provide a login or sign-up button. \n\nKey functionalities include:\n\n1. Phone number input\n2. Displaying an error message if the entered phone number is invalid\n3. Button to log in or sign up, which is enabled/disabled based on the current login status and phone number input", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/SMSOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component, `SMSOTP`, handles SMS One-Time Password (OTP) login process. It:\n\n- Collects a user's phone number through a form input.\n- Validates the phone number and displays an error if it's invalid.\n- Initiates login using Magic SDK's `loginWithSMS` method.\n- If successful, saves the token and proceeds with the login flow.\n- Handles potential login errors, clearing the phone input field and displaying an error message."}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitch from 'public/social/Twitch.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitch = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Block Purpose and Functionality**\n\nThis code block is a React component named `Twitch` that handles Twitch social login functionality using the Auth0 Magic SDK. \n\n**Primary Functionality:**\n\n1. Checks if the user has a valid login session using `localStorage`.\n2. If a valid session exists, it attempts to retrieve the user's profile data from the Magic SDK.\n3. If successful, it saves the token to local storage and updates the parent component with the new token.\n4. If not successful, it displays a spinner (not fully shown in the provided code).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Twitch.tsx' file:\n\n'This React component implements Twitch login functionality using the Auth0 Magic SDK. It checks for an existing login session, attempts to retrieve profile data, and handles successful and failed login attempts.'"}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitch',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitcg\">Twitch Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitch} alt=\"Twitch\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThis code block is a Twitch login functionality in a React application. It features:\n\n1. **Login Button**: A button that leads to the OAuth login process with Twitch when clicked.\n2. **Loading Indicator**: A spinner that is displayed while the login process is in progress.\n3. **Error Handling**: Console error messages are logged when the login process fails.\n4. **State Management**: The `login` function updates the authentication state by storing a loading flag in local storage and setting a Spinner component to display.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Twitch.tsx' file:\n\n'This React component implements Twitch login functionality using the Auth0 Magic SDK. It checks for an existing login session, attempts to retrieve profile data, and handles successful and failed login attempts.'"}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitch</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitch;\n", "explanation": "The purpose of this block is to display a button that allows users to continue or log in with their Twitch account. It appears within a Card component.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitch.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Twitch.tsx' file:\n\n'This React component implements Twitch login functionality using the Auth0 Magic SDK. It checks for an existing login session, attempts to retrieve profile data, and handles successful and failed login attempts.'"}
{"code": "import { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { saveToken } from '@/utils/common';\nimport Spinner from '../../ui/Spinner';\nimport classNames from 'classnames';\nimport Image from 'next/image';\nimport twitter from 'public/social/Twitter.svg';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\n\nconst Twitter = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [isAuthLoading, setIsAuthLoading] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsAuthLoading(localStorage.getItem('isAuthLoading'));\n  }, []);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        if (magic) {\n          const result = await magic?.oauth.getRedirectResult();\n          //do stuff with user profile data\n          saveToken(result.magic.idToken, setToken, 'SOCIAL');\n          setLoadingFlag('false');\n        }\n      } catch (e) {", "explanation": "**Functionality Summary**\n\nThis block is a React component responsible for authenticating a user on Twitter using the Authy Magic SDK. Its primary function is to:\n\n1. Check if the user is already authenticated using local storage.\n2. Obtain the user's profile data and authentication token from Twitter after a successful login.\n3. Save the authentication token to local storage using the `saveToken` function.\n4. Update the `setToken` state with the obtained authentication token.\n\nIt uses the `useMagic` hook from the `MagicProvider` to access the Authy Magic SDK and the `useState` and `useEffect` hooks from React for state management and side effect handling.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the code block 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis React component enables Twitter social login, checking for an existing authentication token. If found, it logs the user in via the Twitter login button. Otherwise, it redirects the user to Twitter's login page, updating the UI based on the authentication status. The component displays a \"Continue with Twitter\" button that triggers the login process when clicked."}
{"code": "        console.log('social login error: ' + e);\n        setLoadingFlag('false');\n      }\n    };\n\n    checkLogin();\n  }, [magic, setToken]);\n\n  const login = async () => {\n    setLoadingFlag('true');\n    await magic?.oauth.loginWithRedirect({\n      provider: 'twitter',\n      redirectURI: window.location.origin,\n    });\n  };\n\n  const setLoadingFlag = (loading: string) => {\n    localStorage.setItem('isAuthLoading', loading);\n    setIsAuthLoading(loading);\n  };\n\n  return (\n    <Card>\n      <CardHeader id=\"twitter\">Twitter Login</CardHeader>\n      {isAuthLoading && isAuthLoading !== 'false' ? (\n        <Spinner />\n      ) : (\n        <div className=\"login-method-grid-item-container\">\n          <button\n            className=\"social-login-button\"\n            onClick={() => {\n              if (token.length == 0) login();\n            }}\n            disabled={false}\n          >\n            <Image src={twitter} alt=\"Twitter\" height={24} width={24} className=\"mr-6\" />", "explanation": "**Summary:**\n\nThis block appears to be a React component that enables Twitter social login. It checks for an authentication token (`token` or `magic` object) and if it exists, it logs the user in with the Twitter login button. If not, it triggers a login process with the `login` function when the button is clicked, which redirects the user to a LinkedIn login page. \n\n**Functionality:**\n\n- Checks for authentication token\n- Display a loading Spinner if authentication is in progress\n- Redirects user to Twitter login with `login` function when button is clicked\n- Updates the UI based on the authentication status (loading flag)", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the code block 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis React component enables Twitter social login, checking for an existing authentication token. If found, it logs the user in via the Twitter login button. Otherwise, it redirects the user to Twitter's login page, updating the UI based on the authentication status. The component displays a \"Continue with Twitter\" button that triggers the login process when clicked."}
{"code": "            <div className=\"text-xs font-semibold text-center w-full\">Continue with Twitter</div>\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default Twitter;\n", "explanation": "This block appears to be a React component in JSX. \n\nIts purpose is to display a button linking to a Twitter login or sign-up process.\n\nFunctionality: \n- Displays a text label \"Continue with Twitter\" \n- Represents a clickable element (it's wrapped in a button tag, although only a part of it is shown)", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the code block 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/auth/Twitter.tsx':\n\nThis React component enables Twitter social login, checking for an existing authentication token. If found, it logs the user in via the Twitter login button. Otherwise, it redirects the user to Twitter's login page, updating the UI based on the authentication status. The component displays a \"Continue with Twitter\" button that triggers the login process when clicked."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { useMagic } from '../MagicProvider';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\n\nconst SendTransaction = () => {\n  const { magic, connection } = useMagic();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);\n  const [toAddressError, setToAddressError] = useState(false);", "explanation": "**Summary:**\n\nThis block is a React functional component called `SendTransaction`. Its purpose is to handle sending transactions to a specific Solana blockchain address. The component allows users to input a recipient address and transaction amount, validates the input, and disables the send button until the input is valid.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'SendTransactionCard.tsx' file:\n\nThe `SendTransactionCard` component is a React UI element that enables users to send Solana transactions to a specific address. It validates user input, displays a loading spinner, and updates the application state with a success message and transaction hash upon successful transaction submission. It also handles errors, logs and resets input fields as needed."}
{"code": "  const [amountError, setAmountError] = useState(false);\n  const [airdropLoading, setAirdropLoading] = useState(false);\n  const [hash, setHash] = useState('');\n  const [transactionLoading, setTransactionLoadingLoading] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const handleAirdrop = useCallback(async () => {\n    try {\n      setAirdropLoading(true);\n      await connection?.requestAirdrop(new PublicKey(publicAddress as string), 2 * LAMPORTS_PER_SOL);\n      setAirdropLoading(false);\n      showToast({ message: 'Airdropped 2 SOL!', type: 'success' });\n    } catch (e: any) {\n      setAirdropLoading(false);\n      if ((e.message as string).includes('429')) {\n        showToast({ message: 'Limit reaced', type: 'error' });\n      } else {\n        showToast({\n          message: 'Something went wrong. Check console for more details',", "explanation": "This block of code appears to be a React Hook managing various states and handling interactions with a Solana wallet connection. \n\nKey functionality includes:\n\n- Managing error and loading states for airdrop and transaction interactions\n- Retrieving a public address from local storage\n- Enabling the handling of airdrop and transaction loading states\n- Triggering a toast notification system for various actions and errors.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'SendTransactionCard.tsx' file:\n\nThe `SendTransactionCard` component is a React UI element that enables users to send Solana transactions to a specific address. It validates user input, displays a loading spinner, and updates the application state with a success message and transaction hash upon successful transaction submission. It also handles errors, logs and resets input fields as needed."}
{"code": "          type: 'error',\n        });\n      }\n      console.log(e);\n    }\n  }, [connection]);\n\n  const sendTransaction = useCallback(async () => {\n    const userPublicKey = new PublicKey(publicAddress as string);\n    const receiverPublicKey = new PublicKey(toAddress as string);\n    if (!PublicKey.isOnCurve(receiverPublicKey.toBuffer())) {\n      return setToAddressError(true);\n    }\n    if (isNaN(Number(amount))) {\n      return setAmountError(true);\n    }\n    setDisabled(true);\n\n    try {\n      setTransactionLoadingLoading(true);\n      const hash = await connection?.getLatestBlockhash();\n      if (!hash) return;\n\n      const transaction = new Transaction({\n        feePayer: userPublicKey,\n        ...hash,\n      });\n\n      const lamportsAmount = Number(amount) * LAMPORTS_PER_SOL;\n\n      console.log('amount: ' + lamportsAmount);\n\n      const transfer = SystemProgram.transfer({\n        fromPubkey: userPublicKey,\n        toPubkey: receiverPublicKey,\n        lamports: lamportsAmount,\n      });\n\n      transaction.add(transfer);\n", "explanation": "**Summary**\n\nThis is a React hook function that enables sending a transaction on the Solana blockchain. It:\n\n1. Validates user input (public key, address, and amount).\n2. Creates a transaction to transfer SOL from the sender to the receiver.\n3. Adds the transfer to the transaction.\n4. Uses the `connection` context to get the latest blockhash and execute the transaction.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'SendTransactionCard.tsx' file:\n\nThe `SendTransactionCard` component is a React UI element that enables users to send Solana transactions to a specific address. It validates user input, displays a loading spinner, and updates the application state with a success message and transaction hash upon successful transaction submission. It also handles errors, logs and resets input fields as needed."}
{"code": "      const signedTransaction = await magic?.solana.signTransaction(transaction, {\n        requireAllSignatures: false,\n        verifySignatures: true,\n      });\n\n      const signature = await connection?.sendRawTransaction(\n        Buffer.from(signedTransaction?.rawTransaction as string, 'base64'),\n      );\n\n      setHash(signature ?? '');\n      showToast({\n        message: `Transaction successful sig: ${signature}`,\n        type: 'success',\n      });\n      setTransactionLoadingLoading(false);\n      setDisabled(false);\n      setToAddress('');\n      setAmount('');\n    } catch (e: any) {\n      setTransactionLoadingLoading(false);\n      setDisabled(false);\n      setToAddress('');\n      setAmount('');\n      showToast({ message: 'Transaction failed', type: 'error' });\n      console.log(e);\n    }\n  }, [connection, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      <div>\n        <FormButton onClick={handleAirdrop} disabled={airdropLoading}>", "explanation": "The purpose and functionality of this block are:\n\n1. Send a signed transaction to the Solana blockchain using the `connection.sendRawTransaction` method.\n2. Update the application state with a success message, transaction hash, and cleared input fields.\n3. Handle errors by displaying a failure message, logging the error, and resetting input fields.\n\nIt appears to be part of a larger component for sending transactions on the Solana blockchain, possibly using the Solana Magic library.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'SendTransactionCard.tsx' file:\n\nThe `SendTransactionCard` component is a React UI element that enables users to send Solana transactions to a specific address. It validates user input, displays a loading spinner, and updates the application state with a success message and transaction hash upon successful transaction submission. It also handles errors, logs and resets input fields as needed."}
{"code": "          {airdropLoading ? (\n            <div className=\"w-full loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            'Airdrop 2 SOL'\n          )}\n        </FormButton>\n        <Divider />\n      </div>\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput value={amount} onChange={(e: any) => setAmount(e.target.value)} placeholder={`Amount (SOL)`} />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        {transactionLoading ? (\n          <div className=\"w-full loading-container\">\n            <Spinner />\n          </div>\n        ) : (\n          'Send Transaction'\n        )}\n      </FormButton>\n      {hash ? (\n        <>\n          <Spacer size={20} />", "explanation": "This block appears to be a UI component for a digital asset (SOL) sending form. It has the following functionality:\n\n1. Displays a loading spinner while data is being processed.\n2. Allows users to input a receiving address and amount.\n3. Validates user input (address and amount) and displays error messages if invalid.\n4. Submits a transaction when the button is clicked.\n5. Shows a confirmation message with a transaction hash once the transaction is sent.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'SendTransactionCard.tsx' file:\n\nThe `SendTransactionCard` component is a React UI element that enables users to send Solana transactions to a specific address. It validates user input, displays a loading spinner, and updates the application state with a success message and transaction hash upon successful transaction submission. It also handles errors, logs and resets input fields as needed."}
{"code": "          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "This block displays a \"Send Transaction\" component within a \"Card\" component, but only if a certain condition or state is met (as indicated by the ternary operator). The \"<TransactionHistory />\" component is likely responsible for displaying a history of transactions. \n\nThis functionality is represented by the code as a visible \"Send Transaction\" component within a card when a certain condition is true, and it is null (invisible) when this condition is not met.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'SendTransactionCard.tsx' file:\n\nThe `SendTransactionCard` component is a React UI element that enables users to send Solana transactions to a specific address. It validates user input, displays a loading spinner, and updates the application state with a success message and transaction hash upon successful transaction submission. It also handles errors, logs and resets input fields as needed."}
{"code": "import { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport { logout } from '@/utils/common';\nimport { useMagic } from '../MagicProvider';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getNetworkName } from '@/utils/network';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\n\nconst UserInfo = ({ token, setToken }: LoginProps) => {\n  const { magic, connection } = useMagic();\n\n  const [balance, setBalance] = useState('...');\n  const [copied, setCopied] = useState('Copy');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const [publicAddress, setPublicAddress] = useState(localStorage.getItem('user'));\n\n  useEffect(() => {\n    const checkLoginandGetBalance = async () => {\n      const isLoggedIn = await magic?.user.isLoggedIn();", "explanation": "This block is a React component named `UserInfo`. Its primary purpose is to display user information, including their public address and Solana balance. \n\nFunctionality includes:\n\n- Checking user login status and retrieving their balance from a magic library\n- Updating the UI with the user's balance in real-time\n- Displaying a spinner while retrieving balance information\n- Allowing users to copy their public address\n- Stores the user's public address in local storage", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThe UserInfoCard component displays user account information, including their public address and balance on the Solana blockchain. It checks the user's login status, retrieves their balance, and updates in real-time. The component includes features such as:\n\n- Displaying user's public address and balance\n- Copy-to-clipboard functionality for public address\n- Refresh button to update balance\n- Loading animation while data is being retrieved\n- Disconnect option when connected to a network\n\nThis component is part of a React application, likely a user profile or account information screen, and maintains the user's wallet balance and refreshes it periodically."}
{"code": "      if (isLoggedIn) {\n        try {\n          const metadata = await magic?.user.getInfo();\n          if (metadata) {\n            localStorage.setItem('user', metadata?.publicAddress!);\n            setPublicAddress(metadata?.publicAddress!);\n          }\n        } catch (e) {\n          console.log('error in fetching address: ' + e);\n        }\n      }\n    };\n    setTimeout(() => checkLoginandGetBalance(), 5000);\n  }, []);\n\n  const getBalance = useCallback(async () => {\n    if (publicAddress && connection) {\n      const balance = await connection.getBalance(new PublicKey(publicAddress));\n      if (balance == 0) {\n        setBalance('0');\n      } else {\n        setBalance((balance / LAMPORTS_PER_SOL).toString());\n      }\n      console.log('BALANCE: ', balance);\n    }\n  }, [connection, publicAddress]);\n\n  const refresh = useCallback(async () => {\n    setIsRefreshing(true);\n    await getBalance();\n    setTimeout(() => {\n      setIsRefreshing(false);\n    }, 500);\n  }, [getBalance]);\n\n  useEffect(() => {\n    if (connection) {", "explanation": "**Summary:**\n\nThis code block appears to be handling user authentication and wallet balance retrieval in a Solana blockchain-based application. It does the following:\n\n1. Checks if the user is logged in and retrieves their public address.\n2. Updates the local storage with the user's public address.\n3. Schedules a function to check the login status and retrieve the wallet balance every 5 seconds.\n4. Defines four functions:\n\t* `getBalance`: Retrieves the wallet balance based on the user's public address and updates the `balance` state.\n\t* `refresh`: Refreshes the wallet balance and displays a loading state for 500 milliseconds.\n\t* `checkLoginandGetBalance`: Checks the login status and calls `getBalance` if the user is logged in.\n\t* `useEffect` (partial): Sets up event handling for the `connection` variable, which is not fully shown in the code snippet.\n\nThe overall purpose is to maintain the user's wallet balance and refresh it periodically.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThe UserInfoCard component displays user account information, including their public address and balance on the Solana blockchain. It checks the user's login status, retrieves their balance, and updates in real-time. The component includes features such as:\n\n- Displaying user's public address and balance\n- Copy-to-clipboard functionality for public address\n- Refresh button to update balance\n- Loading animation while data is being retrieved\n- Disconnect option when connected to a network\n\nThis component is part of a React application, likely a user profile or account information screen, and maintains the user's wallet balance and refreshes it periodically."}
{"code": "      refresh();\n    }\n  }, [connection, refresh]);\n\n  useEffect(() => {\n    setBalance('...');\n  }, [magic]);\n\n  const disconnect = useCallback(async () => {\n    if (magic) {\n      await logout(setToken, magic);\n    }\n  }, [magic, setToken]);\n\n  const copy = useCallback(() => {\n    if (publicAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(publicAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, publicAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"Wallet\">Wallet</CardHeader>\n      <CardLabel leftHeader=\"Status\" rightAction={<div onClick={disconnect}>Disconnect</div>} isDisconnect />\n      <div className=\"flex-row\">\n        <div className=\"green-dot\" />\n        <div className=\"connected\">Connected to {getNetworkName()}</div>\n      </div>\n      <Divider />\n      <CardLabel leftHeader=\"Address\" rightAction={!publicAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>} />", "explanation": "**Summary:**\n\nThis block appears to be a React component responsible for displaying wallet connection status and functionality. It:\n\n1. Monitor connection state and refresh the component when the connection changes.\n2. Updates the balance when the magic parameter changes.\n3. Provides a \"Disconnect\" option when connected to a network.\n4. Includes a copy-to-clipboard feature for the public address.\n5. Displays a status indicator (dots or a spinner) to show the connection status and address availability.\n\n**Functionality:**\n\n- Displays wallet connection status (connected or disconnected)\n- Provides copy-to-clipboard functionality for public address\n- Allows user to disconnect from the network\n- Updates balance and status when necessary", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThe UserInfoCard component displays user account information, including their public address and balance on the Solana blockchain. It checks the user's login status, retrieves their balance, and updates in real-time. The component includes features such as:\n\n- Displaying user's public address and balance\n- Copy-to-clipboard functionality for public address\n- Refresh button to update balance\n- Loading animation while data is being retrieved\n- Disconnect option when connected to a network\n\nThis component is part of a React application, likely a user profile or account information screen, and maintains the user's wallet balance and refreshes it periodically."}
{"code": "      <div className=\"code\">{publicAddress?.length == 0 ? 'Fetching address..' : publicAddress}</div>\n      <Divider />\n      <CardLabel\n        leftHeader=\"Balance\"\n        rightAction={\n          isRefreshing ? (\n            <div className=\"loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            <div onClick={refresh}>Refresh</div>\n          )\n        }\n      />\n      <div className=\"code\">{balance} SOL</div>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n", "explanation": "This block appears to be part of a React component, likely a user profile or account information screen. \n\nThe block displays:\n\n1. A \"Fetching address..\" message or the actual public address if available.\n2. A divider separator.\n3. A card with a label \"Balance\" and a clickable \"Refresh\" button when data is not being refreshed, or a loading animation when data is being refreshed.\n4. The user's balance in SOL, displayed as a number.\n\nIn summary, this block displays user account information, including their public address and balance, with a refresh feature.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/UserInfoCard.tsx':\n\nThe UserInfoCard component displays user account information, including their public address and balance on the Solana blockchain. It checks the user's login status, retrieves their balance, and updates in real-time. The component includes features such as:\n\n- Displaying user's public address and balance\n- Copy-to-clipboard functionality for public address\n- Refresh button to update balance\n- Loading animation while data is being retrieved\n- Disconnect option when connected to a network\n\nThis component is part of a React application, likely a user profile or account information screen, and maintains the user's wallet balance and refreshes it periodically."}
{"code": "import React, {useState} from 'react'\nimport Disconnect from '../wallet-methods/Disconnect'\nimport Divider from '@/components/ui/Divider'\nimport {LoginProps} from '@/utils/types'\nimport Card from '@/components/ui/Card'\nimport CardHeader from '@/components/ui/CardHeader'\nimport {LoginMethod} from '@/utils/common'\nimport GetIdToken from '../wallet-methods/GetIdToken'\nimport GetMetadata from '../wallet-methods/GetMetadata'\n<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n<%-`import UpdateEmail from '../wallet-methods/UpdateEmail'`-%>\n<% }%>\n\nconst WalletMethods = ({token, setToken}: LoginProps) => {\n\tconst [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n\t\tlocalStorage.getItem('loginMethod') as LoginMethod\n\t)\n\treturn (\n\t\t<Card>\n\t\t\t<CardHeader id='methods'>Wallet Methods</CardHeader>\n\t\t\t<% if(loginMethods.map(authType => authType.replaceAll(\" \", \"\")).includes(\"EmailOTP\")){%>\n\t\t\t\t<%-`{loginMethod && loginMethod == 'EMAIL' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<UpdateEmail />", "explanation": "**Summary:**\n\nThis block is a functional React component named `WalletMethods`. Its purpose is to display wallet login methods, including a card with a header and potentially an `UpdateEmail` component if email OTP is enabled in the configuration. It maintains a state for the currently selected login method and provides a way to update the token and login method using the `setToken` prop.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the `WalletMethodsCard.tsx` file:\n\nThe `WalletMethodsCard` component is a functional React component that displays wallet login methods and wallet-related functions in a card format. Its primary functionalities include:\n\n- Displaying wallet login methods\n- Including an `UpdateEmail` component if email OTP is enabled in configuration\n- Offering methods for obtaining an identity token, retrieving metadata/user information, and disconnecting from the wallet.\n \nIt maintains a state for the current login method and updates it through the `setToken` prop while considering user configuration."}
{"code": "\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</>\n\t\t\t\t)}`-%>\n\t\t\t<% }%>\n\t\t\t<GetIdToken />\n\t\t\t<Divider />\n\t\t\t<GetMetadata />\n\t\t\t<Divider />\n\t\t\t<Disconnect token={token} setToken={setToken} />\n\t\t</Card>\n\t)\n}\n\nexport default WalletMethods\n", "explanation": "**Summary:**\n\nThis block of code appears to define a React component named \"WalletMethods\". Its purpose is to render a card containing various wallet-related functions:\n\n1. `GetIdToken`: Obtains an identity token.\n2. `GetMetadata`: Retrieves metadata or user information.\n3. `Disconnect`: Logs the user out, passing the current token and a function to update the token as arguments.\n\nThe code is wrapped around a `Card` component and separated by vertical dividers (`<Divider />`) for better readability.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the `WalletMethodsCard.tsx` file:\n\nThe `WalletMethodsCard` component is a functional React component that displays wallet login methods and wallet-related functions in a card format. Its primary functionalities include:\n\n- Displaying wallet login methods\n- Including an `UpdateEmail` component if email OTP is enabled in configuration\n- Offering methods for obtaining an identity token, retrieving metadata/user information, and disconnecting from the wallet.\n \nIt maintains a state for the current login method and updates it through the `setToken` prop while considering user configuration."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {logout} from '@/utils/common'\nimport {LoginProps} from '@/utils/types'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\n\nconst Disconnect = ({setToken}: LoginProps) => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst disconnect = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tawait logout(setToken, magic)\n\t\t\tsetDisabled(false)\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic, setToken])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={disconnect}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[115px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'disconnect()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tDisconnects user from dApp.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Disconnect\n", "explanation": "**Disconnect Button Purpose:**\n\nThe Disconnect button is a component that allows users to log out of a dApp by disconnecting their wallet.\n\n**Functionality:**\n\n- Imports the necessary dependencies and components.\n- Uses the `useMagic` hook to access the Magic wallet library.\n- Enables logging out when the button is clicked.\n- Displays a spinner when loading (i.e., performing the logout).\n- Displays a success message or error message if logout is successful or fails.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `Disconnect.tsx` file:\n\nThe Disconnect button is a component that logs out a user from a dApp by disconnecting their wallet, enabling logging out when clicked, displaying a spinner during loading, and displaying success or error messages upon completion."}
{"code": "import React, {useCallback, useState} from 'react'\nimport {useMagic} from '../MagicProvider'\nimport showToast from '@/utils/showToast'\nimport Spinner from '@/components/ui/Spinner'\n\nconst GetIdToken = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\n\tconst getWalletType = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tsetDisabled(true)\n\t\t\tconst idToken = await magic.user.getIdToken()\n\t\t\tsetDisabled(false)\n\t\t\tconsole.log('ID Token: ' + idToken)\n\t\t\tshowToast({\n\t\t\t\tmessage: 'Please check console for the ID Token Log',\n\t\t\t\ttype: 'success',\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t}\n\t}, [magic])\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={getWalletType}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[86px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'getIdToken()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>", "explanation": "**GetIdToken component purpose:**\n\nRetrieves an ID Token from a web wallet using the Magic API, displays it in the console, and shows a success toast message.\n\n**Functionality:**\n\n- Uses the `useMagic` hook to access the Magic API object.\n- Applies a loading state when fetching the ID token, disabling the button.\n- On success, logs the ID token to the console and displays a toast message with a success type.\n- Handles any errors that occur during the token retrieval process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'GetIdToken' component:\n\nThe 'GetIdToken' component uses the Magic API to retrieve an ID Token from a user's web wallet, logs it to the console, and displays a success toast message, with error handling and a loading state to prevent button interactions during the token fetching process."}
{"code": "\t\t\t\tGenerates a Decentralized Id Token which acts as a proof of\n\t\t\t\tauthentication to resource servers.\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GetIdToken\n", "explanation": "This block generates a Decentralized Identity (Decentralized Id) Token, which serves as proof of authentication for resource servers.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'GetIdToken' component:\n\nThe 'GetIdToken' component uses the Magic API to retrieve an ID Token from a user's web wallet, logs it to the console, and displays a success toast message, with error handling and a loading state to prevent button interactions during the token fetching process."}
{"code": "import React, { useCallback, useState } from 'react';\nimport showToast from '@/utils/showToast';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetMetadata = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getMetadata = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const userInfo = await magic.user.getInfo();\n      setDisabled(false);\n      showToast({\n        message: `Public Address: ${userInfo.publicAddress}`,\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getMetadata} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[220px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'getInfo()'\n        )}\n      </button>", "explanation": "**Block Purpose:** Retrieves user metadata from the Magic API and displays the public address.\n\n**Functionality:**\n\n1. Uses the Magic API to retrieve user information.\n2. Displays a loading spinner while the metadata is being fetched.\n3. Displays a success message with the user's public address after metadata is received.\n4. Handles errors and logs them to the console. \n\nThe functionality is wrapped in a button that is initially enabled and displays 'getInfo()'. When clicked, it becomes disabled and displays a loading spinner until the metadata is received.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**GetMetadata.tsx Summary**\n\nThis React component retrieves user metadata from the Magic API, displaying the user's public address upon successful metadata retrieval. It features an interactive button that changes state from 'disabled' with 'Get Info' text to 'loading' while fetching metadata. The component handles errors by logging them to the console and displaying a success message once metadata is received."}
{"code": "      <div className=\"wallet-method-desc\">Retrieves information for the authenticated user.</div>\n    </div>\n  );\n};\n\nexport default GetMetadata;\n", "explanation": "This block retrieves information for the authenticated user, displaying a description of a wallet method retrieval process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**GetMetadata.tsx Summary**\n\nThis React component retrieves user metadata from the Magic API, displaying the user's public address upon successful metadata retrieval. It features an interactive button that changes state from 'disabled' with 'Get Info' text to 'loading' while fetching metadata. The component handles errors by logging them to the console and displaying a success message once metadata is received."}
{"code": "import React, {useCallback, useState} from 'react'\nimport ErrorText from '@/components/ui/ErrorText'\nimport Spacer from '@/components/ui/Spacer'\nimport {useMagic} from '../MagicProvider'\nimport Spinner from '@/components/ui/Spinner'\nimport FormInput from '@/components/ui/FormInput'\nimport showToast from '@/utils/showToast'\nimport {RPCError} from 'magic-sdk'\n\nconst UpdateEmail = () => {\n\tconst {magic} = useMagic()\n\tconst [disabled, setDisabled] = useState(false)\n\tconst [email, setEmail] = useState('')\n\tconst [emailError, setEmailError] = useState(false)\n\n\tconst updateEmail = useCallback(async () => {\n\t\tif (!magic) return\n\t\ttry {\n\t\t\tif (\n\t\t\t\t!email.match(\n\t\t\t\t\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetEmailError(true)\n\t\t\t\tsetDisabled(false)\n\t\t\t} else {\n\t\t\t\tsetDisabled(true)\n\t\t\t\tawait magic.auth.updateEmailWithUI({email, showUI: true})\n\t\t\t\tshowToast({message: 'Email Updated!', type: 'success'})\n\t\t\t\tsetDisabled(false)\n\t\t\t\tsetEmail('')\n\t\t\t}\n\t\t} catch (error) {", "explanation": "**Purpose:** The `UpdateEmail` component is a React hook that updates a user's email address.\n\n**Functionality:**\n\n1. Retrieves the Magic provider instance using the `useMagic` hook.\n2. Stores the input email value and error state using `useState`.\n3. Checks if the input email is valid (in the correct format) on each change.\n4. Calls the `magic.auth.updateEmailWithUI` method to update the email address in a secure way.\n5. Displays a success toast notification after a successful update.\n6. Logs any errors that occur during the update process using a `try-catch` block.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a React component named `UpdateEmail` that updates a user's email address. \n\n**Purpose:**\nAllows users to update their email by typing in a new email and submitting a button.\n\n**Functionality:**\n\n- Validates user input for a secure email update\n- Updates email using Magic's `auth.updateEmailWithUI`\n- Displays success notification upon successful update\n- Handles errors during the update process"}
{"code": "\t\t\tsetDisabled(false)\n\t\t\tconsole.error(error)\n\t\t\tif (error instanceof RPCError) {\n\t\t\t\tshowToast({message: error.message, type: 'error'})\n\t\t\t} else {\n\t\t\t\tshowToast({message: 'Update email failed', type: 'error'})\n\t\t\t}\n\t\t}\n\t}, [magic, email])\n\n\tconst handleEmailChange = (e: any) => {\n\t\tsetEmailError(false)\n\t\tsetEmail(e.target.value)\n\t}\n\n\treturn (\n\t\t<div className='wallet-method-container'>\n\t\t\t<FormInput\n\t\t\t\tvalue={email}\n\t\t\t\tonChange={handleEmailChange}\n\t\t\t\tplaceholder='New Email'\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName='wallet-method'\n\t\t\t\tonClick={updateEmail}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\t{disabled ? (\n\t\t\t\t\t<div className='loading-container w-[76px]'>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t'updateEmail()'\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t<div className='wallet-method-desc'>\n\t\t\t\tInitiates the update email flow that allows a user to change\n\t\t\t\ttheir email address.\n\t\t\t</div>\n\t\t\t{emailError ? (\n\t\t\t\t<div className='mb-[-10px]'>\n\t\t\t\t\t<Spacer size={20} />\n\t\t\t\t\t<ErrorText>Enter a valid email!</ErrorText>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n", "explanation": "**Purpose:** \nThis block is a React component that allows a user to update their email address by typing in a new email and clicking an \"updateEmail\" button.\n\n**Functionality:**\n\n- Allows users to input a new email using a text input field.\n- Displays an error message if the input email is invalid (when `emailError` is true).\n- Updates the email using the `updateEmail` function when the \"updateEmail\" button is clicked.\n- Displays a loading animation (Spinner) when the `updateEmail` function is being executed.\n- Handles any errors that occur during the update email process, displaying an error message to the user.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a React component named `UpdateEmail` that updates a user's email address. \n\n**Purpose:**\nAllows users to update their email by typing in a new email and submitting a button.\n\n**Functionality:**\n\n- Validates user input for a secure email update\n- Updates email using Magic's `auth.updateEmailWithUI`\n- Displays success notification upon successful update\n- Handles errors during the update process"}
{"code": "export default UpdateEmail\n", "explanation": "This block is likely a JavaScript module exported as a default function named \"UpdateEmail\". The purpose and functionality of this function are not explicitly stated, but it could relate to updating email-related data or handling a user's email update process.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a React component named `UpdateEmail` that updates a user's email address. \n\n**Purpose:**\nAllows users to update their email by typing in a new email and submitting a button.\n\n**Functionality:**\n\n- Validates user input for a secure email update\n- Updates email using Magic's `auth.updateEmailWithUI`\n- Displays success notification upon successful update\n- Handles errors during the update process"}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "**Summary:**\n\nThis is a React functional component named \"Card\". It takes the \"children\" prop, which can be any React element, and wraps it in a HTML `div` element with a class of \"card\".", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This React component, named \"Card\", is a simple wrapper that accepts any React element (passed through the \"children\" prop) and renders it within a styled HTML `div` element with a class of \"card\"."}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "This is a React functional component named `CardHeader`. Its purpose is to render an `<h1>` element as a card header, containing custom text or components (`children`). It accepts two props:\n\n1. `children`: the text or components to be displayed\n2. `id`: a unique string identifier for the `<h1>` element.\n\nIn summary, it's a reusable card header component.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `CardHeader` component is a reusable React functional component that renders an `<h1>` element as a card header, displaying custom text or components (`children`) and accepting an `id` prop for unique identification."}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "**Purpose:** \nCardLabel is a reusable React component used to display a header label and optional action label on a card.\n\n**Functionality:** \n- Displays a header label (leftHeader) on the label.\n- Conditionally displays an action label (rightAction) on the right, with a class of either 'disconnect-button' or 'action-button' based on the 'isDisconnect' prop.\n- Accepts arbitrary props (using the {...rest} spread syntax) to be applied to the 'card-label-container' div.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'CardLabel' component:\n\n`CardLabel`: A reusable React component displaying a header label alongside an optional action label on a card, with customizable styling and layout."}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "This block creates a reusable React component called 'Divider'. \n\nFunctionality: \n- It renders a simple HTML div element.\n- Class 'divider' is applied to the div element for styling purposes.\n- The component can be easily imported and used elsewhere in the application for creating dividers or line breaks between elements.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Divider.tsx' file:\n\nThe Divider component is a reusable React component that renders a basic HTML div element classed as 'divider' for styling. It serves as a modular way to introduce line breaks between elements in the application."}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "Purpose: A reusable React component for displaying errors\n\nFunctionality: Renders a div with class 'error' and contains the provided error text or children.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/ErrorText.tsx':\n\n**ErrorText React Component**\nA reusable UI component for displaying errors in a Next.js application, rendering a 'div' with the 'error' class and containing error text or child components."}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "**Purpose:** The `FormButton` component is a reusable button element for a form.\n\n**Functionality:** It accepts a child element (text or another component) and an `onClick` event handler. The button's `disabled` state can be toggled.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/FormButton.tsx' file:\n\n**Summary:** \nThe `FormButton` component is a reusable button element for forms, allowing users to pass a child element and an `onClick` event handler. It also enables toggling the button's disabled state."}
{"code": "import React from 'react'\n\ninterface Props {\n\tvalue: string\n\tonChange: (e: any) => void\n\tplaceholder: string\n}\n\nconst FormInput = ({value, onChange, placeholder}: Props) => {\n  return (\n    <input\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "**Summary:** \n\nThis block is a reusable React component called `FormInput`. Its purpose is to render a form input field with customizable props: `value`, `onChange`, and `placeholder`. \n\n**Functionality:** \n- Accepts a value (string) to be displayed in the input field.\n- Triggers an onChange event when the input value changes.\n- Allows customization of the placeholder text.\n\nIn essence, it's a simple, customizable form input component.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the `FormInput.tsx` component:\n\nThe `FormInput` component is a reusable React form input field that accepts a customizable value, triggers an onChange event on input changes, and allows specifications for placeholder text."}
{"code": "import React from 'react'\n\nconst Spacer = ({size}: {size: number}) => {\n\treturn <div style={{height: `${size}px`}} />\n}\n\nexport default Spacer\n", "explanation": "**Summary:** \n\nThis is a React functional component named `Spacer`. Its purpose is to create a div element of a specified height to act as a spacer in a UI. It accepts a `size` prop, which determines the height of the div.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Spacer.tsx':\n\nThis React component (`Spacer`) creates a div spacer with a specified height (`size` prop) for UI purposes."}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "This block of code appears to define a reusable React component called `Spinner`. Its purpose is to render a loading animation represented by a spinning circular icon. \n\nFunctionality-wise, it:\n\n1. Displays an animated SVG circle icon.\n2. Responds to dark mode with a color change.\n3. Uses CSS animations for spinning effect.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Spinner.tsx' file:\n\nThe 'Spinner' component is a reusable React component that renders a loading animation as a spinning circular icon. It changes color to suit dark mode and utilizes CSS animations for a dynamic spinning effect."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "This block is a graphical SVG representation of a spinning top or a loading animation, also known as a \"spinner\".", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'Spinner.tsx' file:\n\nThe 'Spinner' component is a reusable React component that renders a loading animation as a spinning circular icon. It changes color to suit dark mode and utilizes CSS animations for a dynamic spinning effect."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "**Purpose:** Displays a link to a blockchain transaction history for a user's public address.\n\n**Functionality:** Scrolls to the user's transaction history on a blockchain explorer website when clicked.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'TransactionHistory.tsx' file:\n\n**Summary:** \nA UI component that displays a link to a user's blockchain transaction history, allowing users to scroll to their history on a blockchain explorer website when clicked."}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "This block is the entry point for a Next.js application. It:\n\n- Imports global CSS styles.\n- Receives AppProps from Next.js.\n- Simply renders the passed Component with its associated pageProps, thereby displaying the application pages.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is the entry point for a Next.js application, importing global CSS styles and rendering the application's pages by passing the received AppProps to the component."}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "This is a custom document component in Next.js, responsible for handling the HTML structure of a React application. \n\nIt provides a basic template with:\n\n- Html wrapper with specified language (in this case English)\n- Includes the Main component, which represents the main content area\n- Also includes the NextScript component, which loads the necessary scripts for the application\n- Separates the Head tags for meta data and other imports from the main application content", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/_document.tsx':\n\nThis is a custom `_document` component in a Next.js application, responsible for rendering the HTML structure. It includes basic template elements such as:\n- HTML wrapper with language attribute (English)\n- Main content area (Main component)\n- Script loading (NextScript component)\n- Separated Head tags for metadata."}
{"code": "import MagicProvider from '../components/magic/MagicProvider'\nimport {useEffect, useState} from 'react'\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Login from '@/components/magic/Login'\nimport Dashboard from '@/components/magic/Dashboard'\nimport MagicDashboardRedirect from '@/components/magic/MagicDashboardRedirect'\n\nexport default function Home() {\n\tconst [token, setToken] = useState('')\n\n\tuseEffect(() => {\n\t\tsetToken(localStorage.getItem('token') ?? '')\n\t}, [setToken])\n\n\treturn (\n\t\t<MagicProvider>\n\t\t\t<ToastContainer />\n\t\t\t{process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n\t\t\t\ttoken.length > 0 ? (\n\t\t\t\t\t<Dashboard token={token} setToken={setToken} />\n\t\t\t\t) : (\n\t\t\t\t\t<Login token={token} setToken={setToken} />\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<MagicDashboardRedirect />\n\t\t\t)}\n\t\t</MagicProvider>\n\t)\n}\n", "explanation": "**Summary:**\n\nThis block is a React function component, specifically the \"Home\" page, which handles user authentication using the Magic Provider library. It:\n\n- Checks for a valid Magic API key.\n- Renders a Login form if no token is found in local storage, or a Dashboard if a token is present.\n- Utilizes React Toastify for displaying notifications.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/pages/index.tsx':\n\nThis is the \"Home\" page of the Next.js application, handling user authentication through the Magic Provider library. It conditionsally renders a Login or Dashboard based on the presence of a valid Magic API token in local storage and uses Toastify for notifications."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "**CSS Preprocessor Configuration and Styling**\n\nThis block is a configuration and styling settings for a Tailwind CSS project. It:\n\n1. Imports a font from Google Fonts\n2. Includes Tailwind CSS base, components, and utilities\n3. Sets up CSS variables for foreground and background colors with dark mode support\n4. Defines basic styles for the HTML and body elements\n5. Applies styles to specific HTML elements, such as navigation, lists, and active states\n\nOverall, this block sets up a solid foundation for customizing the visual appearance of a web application using Tailwind CSS.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "This block appears to contain CSS styles, specifically Tailwind CSS classes, used to design a user interface. The purpose of this block is to define various styles for UI elements, such as a card container, dropdown options, and active network indicators, likely used in an application or website.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px] bg-no-repeat;\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 transition-[0.1s] text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {", "explanation": "**Summary:**\n\nThis block is a CSS code snippet that performs the following:\n\n1. Defines a global text style with a set font, size, and opacity.\n2. Specifies styles for three HTML classes:\n   - `.home-page`: sets a flexbox layout with a centered hero image.\n   - `.login-page`: sets a basic flexbox layout with a gray background.\n   - `.login-method-grid`: styles a grid container for login methods.\n   - `.login-button`: styles a call-to-action button with hover and active states.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": "  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {\n  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;", "explanation": "This block appears to be CSS code, likely for a website's style sheet. Its purpose is to define styles for various HTML elements on the webpage.\n\nSome key functionalities:\n\n- It sets up a menu structure, including links, footer links, and wallet methods.\n- It styles and animates buttons (wallet methods) when hovered and clicked.\n- It incorporates responsive design to adapt to different screen sizes.\n\nOverall, this block aims to create a visually appealing and interactive user interface for a website.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": "}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {\n  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n", "explanation": "This block appears to be a CSS code snippet that styles UI elements for a form. It outlines the styles for various elements such as:\n\n- Text and description: `.wallet-method-desc`\n- Input fields: `.form-input`\n- Input field placeholders: `::placeholder`\n- Form buttons: `.form-button` and its states (disabled, hover, active)\n- Loading indicators: `.loading-container` and `.loading`\n\nThe styles include color schemes, font sizes, borders, and animations for a visually consistent and interactive user interface.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": "@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];", "explanation": "**Summary:**\n\nThis block is a collection of CSS styles and animations for various UI elements. It defines:\n\n- A `rotation` animation for rotating an element 360 degrees.\n- Styles for a card component, including layout, font, and background colors.\n- Styles for specific card elements, such as the header, labels, and buttons.\n- A toast notification with specific design and layout.\n- Custom button styles for action and disconnect buttons.\n\n**Note:** These styles appear to be written in Tailwind CSS syntax, a utility-first CSS framework.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": "  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {\n  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {", "explanation": "This block appears to be a collection of CSS classes and styles, likely part of a CSS framework or a custom stylesheet. It defines various design elements such as font styles, colors, spacing, and layout for elements like headers, cards, and buttons in a web application.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": "  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {\n  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "This block defines CSS styles using the `@apply` directive, which appears to be part of a CSS preprocessor like Tailwind CSS. Here's a concise summary of its purpose and functionality:\n\n- **Defines button styles**: The block styles two types of buttons, \"social-login-button\" and \"api-button\", with various properties such as background color, text color, border, padding, and rounding.\n- **Dynamic styles based on state**: The block applies different styles based on the button's state (e.g., hover, active, disabled) and mouse interaction (e.g., cursor pointer).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise, holistic summary of the file 'scaffolds/nextjs-solana-dedicated-wallet/template/src/styles/globals.css':\n\nThis CSS file sets up a foundation for a custom visual appearance of a web application using Tailwind CSS. It includes configurations for a Google Font, and CSS variables for foreground and background colors with dark mode support. The file then defines various styles for UI elements, including button styles, layout, fonts, colors, spacing, and animation, to create a visually appealing and interactive user interface. Specifically, it styles elements such as navigation, lists, cards, input fields, form buttons, loading indicators, toast notifications, and custom buttons. The styles include dynamic states such as hover, active, and disabled, making it a versatile and responsive design solution."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveToken = (token: string, setToken: Dispatch<SetStateAction<string>>, loginMethod: LoginMethod) => {\n  localStorage.setItem('token', token);\n  setToken(token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n};\n", "explanation": "**Summary: Authentication Logic**\n\nThis block exports two functions for handling authentication:\n\n1. `logout`: Logs out the user by clearing local storage and updating the token in state.\n2. `saveToken`: Saves a new token in local storage and updates the token in state.\n\nThis functionality is likely used in a React application to manage user authentication.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise holistic summary of the file:\n\nThis file exports utility functions for handling authentication in a React application, containing 'saveToken' for storing a user's token and 'logout' for clearing the token and local storage upon user logout."}
{"code": "export enum Network {\n  SOLANA_DEVNET = 'solana-devnet',\n  SOLANA_MAINNET_BETA = 'solana-mainnet',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.SOLANA_DEVNET:\n      return 'https://solana-devnet.g.alchemy.com/v2/NUZZICdM-417xyZwDhka3615uai5GQFr';\n    case Network.SOLANA_MAINNET_BETA:\n      return 'https://solana-mainnet.g.alchemy.com/v2/9nCoa06gjvDwYyTdV5ruBp2Qe4_wZnaO';\n    default:\n      throw new Error('Network not supported');\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.SOLANA_DEVNET:\n      return 'Solana (Devnet)';\n    case Network.SOLANA_MAINNET_BETA:\n      return 'Solana (Mainnet Beta)';\n  }\n};\n\nexport const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.SOLANA_DEVNET:\n      return `https://explorer.solana.com/address/${address}?cluster=devnet`;\n    case Network.SOLANA_MAINNET_BETA:", "explanation": "**Summary**\n\nThis block defines a set of functions to interact with the Solana blockchain, based on the selected network. It provides three functions:\n\n1. `getNetworkUrl()`: Returns the URL of the Solana API endpoint based on the selected network (either devnet or mainnet beta).\n2. `getNetworkName()`: Returns the display name of the selected network.\n3. `getBlockExplorer(address)`: Returns the URL of the Solana block explorer for a given address, based on the selected network.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the 'network.ts' file:\n\nThis file provides utility functions to interact with the Solana blockchain based on the selected network (devnet or mainnet beta). It offers functions to retrieve the network URL, display name, and block explorer URL for a given Solana address."}
{"code": "      return `https://explorer.solana.com/address/${address}`;\n  }\n};\n", "explanation": "This block returns a URL that points to the Solana blockchain explorer for a given address.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/network.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise and to-the-point summary of the 'network.ts' file:\n\nThis file provides utility functions to interact with the Solana blockchain based on the selected network (devnet or mainnet beta). It offers functions to retrieve the network URL, display name, and block explorer URL for a given Solana address."}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "**summary**\n\nThis block is a reusable function (`showToast`) that displays a toast notification to the user with customizable message and type. The toast notification can be one of four types: success, error, info, warning, or default. The function uses the `react-toastify` library to generate the toast notification.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `showToast` function:\n\n`showToast` is a reusable function that displays a customizable toast notification with various themes and auto-closes in 3 seconds, utilizing the `react-toastify` library."}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "This block sets up a toast notification system with customizable options. The main purpose is to display a message to the user, with the following functionality:\n\n- Displaying a message at the top-center of the screen\n- Auto-closing in 3 seconds\n- Progress bar (if specified) and close button\n- Drag-and-drop capability\n- Adjustable theme (in this case, 'light')", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the `showToast` function:\n\n`showToast` is a reusable function that displays a customizable toast notification with various themes and auto-closes in 3 seconds, utilizing the `react-toastify` library."}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "This block is a React module that:\n\n- Defines a custom type 'LoginProps' which consists of a token string and a setToken function to update it.\n- Re-exports the 'Magic' type from another module.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here is a concise holistic summary of the file:\n\nThis file defines custom types for a React module: 'LoginProps', which encapsulates a token string and a setToken function, and re-exports the 'Magic' type from another module."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "This block is a Tailwind CSS configuration file. It:\n\n- Scans specific directories for HTML, JSX, TSX, MDX, and JS/TS files for dynamic styling.\n- Extends Tailwind's default themes by adding custom background gradient options.\n- Has no additional plugins enabled.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This file is a Tailwind CSS configuration (`tailwind.config.js`), specifically for a dedicated Solana wallet Next.js project. It configures dynamic styling by scanning for files in specific directories, extends the default Tailwind theme with custom gradient options, and has no additional plugins enabled."}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "**Summary:**\n\nThis block is a configuration for a TypeScript compiler. It sets options for compiling and building JavaScript projects, including:\n\n- Setting the target compiler version to ES5.\n- Including and excluding files and directories for compilation.\n- Configuring module and file resolution.\n- Specifying casing consistency and other optimizations.\n\n**Functional Overview:**\n\n- This configuration is likely used for a Next.js project with TypeScript support.\n- It compiles files with `.ts` and `.tsx` extensions, while excluding `node_modules`.\n- It sets up aliasing for imports prefixed with `@` to point to the `src` directory.\n- The configuration optimizes compilation and improves code consistency.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/nextjs-solana-dedicated-wallet/template/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "This is a `tsconfig.json` file used for a Next.js project with TypeScript, configuring the TypeScript compiler to target ES5, compile `.ts` and `.tsx` files, exclude `node_modules`, and optimize compilation and consistency with casing aliasing for prefixed imports."}
{"code": "/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport type { Flags } from 'core/flags';\nimport type { ValuesOf } from 'core/types/utility-types';\nimport { ExecaCommand } from 'core/types/BaseScaffold';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { Select, MultiSelect, Input } = require('enquirer');\n\nexport namespace ProjectNamePrompt {\n  export type Data = {\n    projectName: string;\n  };\n\n  export const askProjectName = async () =>\n    new Input({\n      name: 'projectName',\n      message: 'What is your project named?',\n      initial: 'awesome-magic-app',\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    projectName: {\n      type: String,\n      description: 'The name of your project.',\n    },\n  };\n}\n\nexport namespace ConfigurationPrompt {\n  export type Data = {\n    configuration: string;\n  };\n\n  export const askConfiguration = async () =>\n    new Select({\n      name: 'configuration',\n      message: 'Select a configuration to start with:',\n      choices: [", "explanation": "This block appears to be a TypeScript module that defines two prompt namespaces: `ProjectNamePrompt` and `ConfigurationPrompt`. \n\nBoth namespaces:\n\n- Define types for the data they collect.\n- Provide functions to ask for user input (project name and configuration selection).\n- Define flags for parsing command line arguments.\n\nThis appears to be part of a larger scaffold or CLI application, likely using enquirer for input prompts and execa for command execution.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "        { name: 'quickstart', message: 'Quickstart (Nextjs, Dedicated Wallet, Polygon Testnet, Email OTP)' },\n        { name: 'custom', message: 'Custom Setup (Choose product, network, etc.)' },\n      ],\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    configuration: {\n      type: String,\n      description: 'The configuration type of your project.',\n    },\n  };\n}\n\nexport namespace ProductPrompt {\n  export type Data = {\n    product: string;\n  };\n\n  export const flags: Flags<Partial<Data>> = {\n    product: {\n      type: String,\n      description: 'The product type of your project.',\n    },\n  };\n}\n\nexport namespace PublishableApiKeyPrompt {\n  export type Data = {\n    publishableApiKey: string;\n  };\n\n  const validate = (value: string) =>\n    value === '' || value.startsWith('pk')\n      ? true\n      : '--publishable-api-key should look like `pk_live_...` or `pk_test_...`';\n\n  export const publishableApiKeyPrompt = async () =>\n    new Input({", "explanation": "This block appears to be related to user interface or command-line interface (CLI) flag configurations. \n\nHere's a concise summary:\n\n**Purpose:** Define user input flags and prompts for a project setup process.\n\n**Functionality:** \n\n- Define flag configurations for a CLI application.\n- Provide description and data type for each flag.\n- Create prompts for user input, which guides the user to select options based on the defined flags.\n- Validate user input for custom flags. \n\nIn this context, flags are likely used to configure project settings, select product types, and enter API keys.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "      message: 'Enter Magic publishable API key from https://dashboard.magic.link:',\n      // @ts-ignore\n      hint: '(leave blank to skip for now)',\n      validate,\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    publishableApiKey: {\n      type: String,\n      description: 'The Magic publishable API key for your app.',\n    },\n  };\n}\n\nexport namespace NpmClientPrompt {\n  const clients = ['npm', 'yarn'];\n\n  export type Data = {\n    npmClient: ValuesOf<typeof clients>;\n  };\n\n  export const flags: Flags<Partial<Data>> = {\n    npmClient: {\n      type: String,\n      validate: (value: string) => (clients.includes(value) ? true : `\\`${value}\\` is not a valid NPM client.`),\n      description: 'The NPM client of your choice. (one of: npm, yarn)',\n    },\n  };\n\n  export function getInstallCommand(data: Data) {\n    return data.npmClient === 'yarn' ? ['yarn', 'install'] : ['npm', 'install'];\n  }\n\n  export function getStartCommand(packageJsonScript: string): ExecaCommand | ((data: Data) => ExecaCommand) {", "explanation": "**Purpose and Functionality:**\n\nThis block of code is used to prompt users for input (Magic publishable API key and NPM client) through a CLI interface. It validates user input and provides error messages for invalid input. Based on the user's selected NPM client, it returns an installation command.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "    return (data: Data) => {\n      return data.npmClient === 'npm'\n        ? { command: 'npm', args: ['run', packageJsonScript] }\n        : { command: 'yarn', args: [packageJsonScript] };\n    };\n  }\n}\n\nexport namespace BlockchainNetworkPrompt {\n  export type Data = {\n    network: string;\n  };\n\n  export const chainPrompt = async () =>\n    new Select({\n      name: 'chain',\n      message: 'Which blockchain do you want to use?',\n      choices: [\n        { name: 'evm', message: 'EVM (Ethereum, Etherlink, Polygon, etc.)' },\n        { name: 'solana', message: 'Solana' },\n        { name: 'flow', message: 'Flow' },\n      ],\n    }).run();\n\n  export const solanaNetworkPrompt = async () =>\n    new Select({\n      name: 'network',\n      message: 'Which network would you like to use?',\n      hint: 'We recommend starting with a test network',\n      choices: [\n        { name: 'solana-mainnet', message: 'Mainnet' },\n        { name: 'solana-devnet', message: 'Devnet' },\n      ],\n    }).run();\n", "explanation": "**Block Purpose:** Determine the package manager command based on data.\n\n**Functionality:** It checks if the `npmClient` in the input data is 'npm' and returns the corresponding `npm run` command if true, otherwise returns the corresponding `yarn` command.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "  export const flowNetworkPrompt = async () =>\n    new Select({\n      name: 'network',\n      message: 'Which network would you like to use?',\n      hint: 'We recommend starting with a test network',\n      choices: [\n        { name: 'flow-mainnet', message: 'Mainnet' },\n        { name: 'flow-testnet', message: 'Testnet' },\n      ],\n    }).run();\n\n  export const evmNetworkPrompt = async () =>\n    new Select({\n      name: 'network',\n      message: 'Which network would like to use?',\n      hint: 'We recommend starting with a test network',\n      choices: [\n        { name: 'ethereum', message: 'Ethereum (Mainnet)' },\n        { name: 'ethereum-sepolia', message: 'Ethereum (Sepolia Testnet)' },\n        { name: 'etherlink', message: 'Etherlink (Mainnet)' },\n        { name: 'etherlink-testnet', message: 'Etherlink (Testnet)' },\n        { name: 'polygon', message: 'Polygon (Mainnet)' },\n        { name: 'polygon-amoy', message: 'Polygon (Amoy Testnet)' },\n        { name: 'zksync', message: 'zkSync (Mainnet)' },", "explanation": "This block defines two asynchronous functions:\n\n1. `flowNetworkPrompt`: Enables the user to select a Flow network to use between Mainnet and Testnet.\n2. `evmNetworkPrompt`: Displays a menu enabling the user to select an Ethereum Virtual Machine (EVM) network from a list of multiple mainnets and testnets.\n\nIn both cases, it utilizes a \"Select\" function, likely from a library like Inquirer.js, to present a user interface for network selection.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "        { name: 'zksync-sepolia', message: 'zkSync (Sepolia Testnet)' },\n      ],\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    network: {\n      alias: 'n',\n      type: String,\n      description: 'The blockchain network to use',\n    },\n  };\n}\n\nexport namespace AuthTypePrompt {\n  const authMethods = [\n    { name: 'Email OTP' },\n    { name: 'SMS OTP', hint: '(Must toggle on at https://dashboard.magic.link)' },\n    {\n      name: 'Social Logins',\n      hint: '(Must configure at https://dashboard.magic.link)',\n      choices: ['Google', 'Github', 'Discord', 'Twitter', 'Twitch'],\n    },\n  ];\n\n  export type Data = {\n    loginMethods: string[];\n  };\n\n  export const loginMethodsPrompt = async () =>\n    new MultiSelect({\n      message:\n        'How do you want your users to log in to their wallet? See Magic docs for help (https://magic.link/docs/auth/overview)',\n      hint: '(<space> to select, <return> to submit)',\n      choices: authMethods,\n      validate: (value: string | any[]) => {", "explanation": "Here's a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Configure and prompt users for blockchain network settings and authentication methods using a command-line interface.\n\n**Functionality:**\n\n1. Configures a list of supported blockchain networks and prompts the user to select one.\n2. Provides a list of authentication methods (Email OTP, SMS OTP, and Social Logins with specific providers) and prompts the user to select them using a multi-select interface.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "        if (!value.length) {\n          return `Please use spacebar to select at least one login option.`;\n        }\n\n        return true;\n      },\n      result(names: string[]) {\n        return names.filter((x: string) => !x.includes('Social Logins'));\n      },\n    }).run();\n\n  export const flags: Flags<Partial<Data>> = {\n    loginMethods: {\n      type: [String],\n      description: `The auth method(s) of your choice. You can provide this flag multiple times to select multiple methods. (one of: ${authMethods\n        .map((method) => (method.choices ? method.choices.map((choice) => choice).join(', ') : method.name))\n        .join(', ')})`,\n      validate: (value) => {\n        const invalid: string[] = [];\n\n        if (invalid.length) {\n          return `Received unknown auth method(s): (${invalid.join(', ')})`;\n        }\n      },\n    },\n  };\n\n  export const mapInputToLoginMethods = (input: string) => {\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('emailotp')) {\n      return 'EmailOTP';\n    }\n", "explanation": "This block appears to be related to authentication methods in a CLI (Command Line Interface) application. It consists of two parts:\n\n1. **Validation**: It checks if a user has selected at least one login method when an empty input is provided. If no method is selected, it returns an error message.\n2. **Filtering**: It filters out login methods that include the term 'Social Logins' from a list of selected names.\n3. **Flag setup**: It defines a flag called `loginMethods` with a description and a validation function.\n4. **Flag validation function**: This function checks if the provided login methods are valid and returns an error message if any unknown methods are found.\n5. **Login method mapping**: It's a function that maps a specific input string to a corresponding login method ('EmailOTP'). \n\nThe purpose of this block is to provide a way to handle user input related to authentication methods in a CLI application and perform necessary validation and filtering.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('smsotp')) {\n      return 'SMSOTP';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('google')) {\n      return 'Google';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('github')) {\n      return 'Github';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('discord')) {\n      return 'Discord';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('twitter')) {\n      return 'Twitter';\n    }\n\n    if (input.replaceAll(' ', '').toLocaleLowerCase().includes('twitch')) {\n      return 'Twitch';\n    }\n\n    return input;\n  };\n}\n", "explanation": "**Functionality:** \nThis block is a function that checks the input string for specific keywords. If a match is found, it returns a corresponding platform identifier (e.g. 'SMSOTP', 'Google'). If none of the keywords are found, it returns the original input string.\n\n**Purpose:** \nIt appears to be a simple string matching function, possibly used for authorization or token validation, possibly in a multi-platform authentication system.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scaffolds/prompts.ts", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scaffolds/prompts.ts' file:\n\n**Purpose:** Define user input flags and prompts for a project setup process, configuring and prompting users for various settings, including project names, configuration selections, blockchain network settings, and authentication methods, through a command-line interface.\n\n**Functionality:**\n\n* Define flag configurations for a CLI application\n* Create prompts for user input, guiding users to select options based on defined flags\n* Validate user input for custom flags\n* Determine package manager commands based on user input\n* Prompt and validate users for blockchain network settings and authentication methods, including filtering and validation of selected options\n\n**Key Features:**\n\n* Support for project setup prompts (project name, configuration selection)\n* Network selection between Mainnet and Testnet\n* Authentication method selection (Email OTP, SMS OTP, Social Logins)\n* Validation of selected login methods and filtering of Social Logins\n* Flag setup and validation for login methods and network settings\n* Simple string matching function for authorization or token validation"}
{"code": "#!/usr/bin/env ts-node-script\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/prefer-regexp-exec */\n\nimport fs from 'fs';\nimport path from 'path';\nimport { promisify } from 'util';\nimport Terser from 'terser';\n\nconst readFilePromise = promisify(fs.readFile);\nconst writeFilePromise = promisify(fs.writeFile);\n\n/**\n * Gets all JavaScript file paths from `dir` recursively.\n */\nfunction getAllFiles(dir: string, recursionState: string[] = []) {\n  const files = fs.readdirSync(dir);\n\n  files.forEach((file) => {\n    if (fs.statSync(`${dir}/${file}`).isDirectory()) {\n      recursionState = getAllFiles(`${dir}/${file}`, recursionState);\n    } else {\n      recursionState.push(path.join(__dirname, '..', dir, '/', file));\n    }\n  });\n\n  return recursionState.filter((filePath) => filePath.match(/\\.js$/));\n}\n\n/**\n * Minify all the files given by `filePaths`.\n */\nasync function minifyFiles(filePaths: string[]) {\n  await Promise.all([\n    filePaths.map(async (filePath) => {", "explanation": "**Block Purpose:** \nMinify JavaScript files using the Terser library.\n\n**Functionality:**\n\n1. Recursively finds all JavaScript files in a directory and its subdirectories.\n2. Minifies these files using the Terser library.\n\n**Main Functions:**\n\n1. `getAllFiles(dir)`: Returns an array of JavaScript file paths in the specified `dir`.\n2. `minifyFiles(filePaths)`: Minifies the specified JavaScript files using Terser.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/minify.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary:**\nThis script, located in 'scripts/minify.ts', minifies JavaScript files in the './dist' directory using Terser. It recursively finds all JavaScript files in the directory and its subdirectories, reads and compresses them, then writes the minified code back to the original file location."}
{"code": "      const { code } = await Terser.minify(await readFilePromise(filePath, 'utf8'), { compress: true });\n      return writeFilePromise(filePath, code);\n    }),\n  ]);\n}\n\nconsole.log('Optimizing dist files...');\nconst files = getAllFiles('./dist');\nminifyFiles(files);\n", "explanation": "**Purpose:** Minify JavaScript files in a directory.\n\n**Functionality:** \n\n1. The code reads and minifies (compresses and optimizes) JavaScript files using Terser.\n2. It then writes the minified code back to the original file location.\n3. The process is applied to all files in a specified directory ('./dist').", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/minify.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**Summary:**\nThis script, located in 'scripts/minify.ts', minifies JavaScript files in the './dist' directory using Terser. It recursively finds all JavaScript files in the directory and its subdirectories, reads and compresses them, then writes the minified code back to the original file location."}
{"code": "#!/usr/bin/env ts-node-script\n\n/* eslint-disable no-await-in-loop */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\n\nimport path from 'path';\nimport fs from 'fs';\nimport ncc from '@vercel/ncc';\nimport parse from 'parse-package-name';\nimport bytes from 'bytes';\nimport JSON5 from 'json5';\nimport JSONstringifyCompact from 'json-stringify-pretty-compact';\n\nconsole.log();\nconsole.log(`Pre-compiling dependencies...`);\nconsole.log();\n\nconst baseDir = path.resolve(__dirname, '..', 'compiled');\n\n// Cleanup current state of `compiled/*` directory...\nconst cleanups = fs.readdirSync(baseDir).filter((i) => fs.statSync(path.join(baseDir, i)).isDirectory());\nfor (const dir of cleanups) {\n  fs.rmdirSync(path.join(baseDir, dir), { recursive: true });\n}\n\n// Pre-compile certain node_modules defined in `compiled/config.jsonc`\nconst pkgs = JSON5.parse(fs.readFileSync(path.join(baseDir, 'config.jsonc')).toString('utf-8'));\nPromise.all<number>(", "explanation": "**Block Purpose and Functionality:**\n\nThis block is a pre-compilation script written in TypeScript. Its primary function is to:\n\n1. Clean up an existing `compiled` directory by removing all its subdirectories.\n2. Read settings from a `config.jsonc` file that defines node modules to be pre-compiled.\n3. Pre-compile those node modules using `@vercel/ncc`.\n\nNote: This script appears to be part of a larger build process and may be used to optimize dependencies.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/ncc.ts", "chunk_number": 1, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scripts/ncc.ts':\n\n**File Summary:**\n\nThe 'scripts/ncc.ts' file is a pre-compilation script written in TypeScript that performs the following tasks:\n\n1. Clean up an existing 'compiled' directory by removing all its subdirectories.\n2. Read settings from a 'config.jsonc' file to define node modules to be pre-compiled.\n3. Pre-compile the defined node modules using `@vercel/ncc`.\n\nThe script maps over an array of packages, performing tasks such as calculating the total size of each package directory, logging sizes, and updating the `tsConfig` paths. It also handles errors and extracts minimal `package.json` files from dependencies."}
{"code": "  pkgs.map(async (pkg) => {\n    await precompileDependency(pkg);\n    const footprint = await getDirectorySize(path.join(baseDir, pkg));\n    console.log(`\u2713 ${pkg} (${bytes(footprint)})`);\n    return footprint;\n  }),\n)\n  .then((result) => {\n    console.log();\n    console.log(`Total footprint: ${bytes(result.reduce((acc, next) => acc + next, 0))}`);\n    console.log();\n\n    updateTSConfigPaths();\n  })\n  .catch(handleError);\n\n/**\n * Get the size of a directory's contents, recursively.\n */\nasync function getDirectorySize(dir: string): Promise<number> {\n  const listing = (await fs.promises.readdir(dir)).map((i) => path.join(dir, i));\n\n  return listing.reduce(async (acc, curr) => {\n    if (fs.statSync(curr).isDirectory()) {\n      return Promise.resolve((await acc) + (await getDirectorySize(curr)));\n    }\n\n    const { size } = fs.statSync(curr);\n    return Promise.resolve((await acc) + size);\n  }, Promise.resolve(0));\n}\n\n/**\n * Pre-compile a node_module dependnecy using `@vercel/ncc`.\n */", "explanation": "**Summary**\n\nThis block of code maps over an array of packages (`pkgs`), performing the following tasks:\n\n1. Pre-compiles each package dependency using `@vercel/ncc`.\n2. Calculates the total size of each package directory.\n3. Logs the size of each package and returns the size to be used in the `then` block.\n4. Once all packages are processed, calculates the total footprint of all packages and logs it.\n5. Finally, updates the `tsConfig` paths using `updateTSConfigPaths()` and logs any errors using `handleError()`.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/ncc.ts", "chunk_number": 2, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scripts/ncc.ts':\n\n**File Summary:**\n\nThe 'scripts/ncc.ts' file is a pre-compilation script written in TypeScript that performs the following tasks:\n\n1. Clean up an existing 'compiled' directory by removing all its subdirectories.\n2. Read settings from a 'config.jsonc' file to define node modules to be pre-compiled.\n3. Pre-compile the defined node modules using `@vercel/ncc`.\n\nThe script maps over an array of packages, performing tasks such as calculating the total size of each package directory, logging sizes, and updating the `tsConfig` paths. It also handles errors and extracts minimal `package.json` files from dependencies."}
{"code": "async function precompileDependency(input: string) {\n  // Parse the specified package information\n  // and resolve a destination path\n  const pkg = parse(input);\n  const destination = path.join(baseDir, pkg.name);\n\n  /**\n   * Write a file with the given data to `[root]/compiled/[pkg.name]`.\n   */\n  const write = (file: string, data: any) => {\n    if (file && data) {\n      fs.writeFileSync(file, data, { encoding: 'utf-8' });\n    }\n  };\n\n  /**\n   * Once the dependency is built using `@vercel/ncc`,\n   * write the output to `[root]/compiled/[pkg.name]`.\n   */\n  const postBuild = ({ code }) => {\n    if (!fs.existsSync(destination)) {\n      fs.mkdirSync(destination, { recursive: true });\n    }\n\n    write(path.join(destination, 'index.js'), code);\n    writeLicense();\n    writePackageJson();\n  };\n\n  /**\n   * Write a LICENSE file for the dependency currently being compiled.\n   */\n  const writeLicense = () => {\n    const pkgPath = path.join(__dirname, '../node_modules', pkg.name);\n    const licensePath = [", "explanation": "**Function Summary**\n\nThe `precompileDependency` function asynchronously preparses and compiles a dependency by writing it to a specified destination directory. \n\n**Key Functionality**\n\n1. Parses the input package information.\n2. Writes files to a destination directory ([`root`]/compiled/[`pkg.name`]) with NCC-compiled code, license, and package.json.\n3. Creates directories recursively if they do not exist during file writing.\n4. Utilizes environment-specific directories like node modules.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/ncc.ts", "chunk_number": 3, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scripts/ncc.ts':\n\n**File Summary:**\n\nThe 'scripts/ncc.ts' file is a pre-compilation script written in TypeScript that performs the following tasks:\n\n1. Clean up an existing 'compiled' directory by removing all its subdirectories.\n2. Read settings from a 'config.jsonc' file to define node modules to be pre-compiled.\n3. Pre-compile the defined node modules using `@vercel/ncc`.\n\nThe script maps over an array of packages, performing tasks such as calculating the total size of each package directory, logging sizes, and updating the `tsConfig` paths. It also handles errors and extracts minimal `package.json` files from dependencies."}
{"code": "      path.join(pkgPath, './LICENSE'),\n      path.join(pkgPath, './LICENSE.md'),\n      path.join(pkgPath, './LICENSE.txt'),\n      path.join(pkgPath, './license'),\n      path.join(pkgPath, './license.md'),\n      path.join(pkgPath, './license.txt'),\n    ].find((file) => fs.existsSync(file));\n\n    if (licensePath) {\n      write(path.join(destination, 'LICENSE'), fs.readFileSync(licensePath));\n    }\n  };\n\n  /**\n   * Get the `package.json` file for the dependency currently being compiled.\n   */\n  const getPackageJson = () => {\n    const pkgJsonPath = path.join(__dirname, '../node_modules', pkg.name, 'package.json');\n    return JSON.parse(fs.readFileSync(pkgJsonPath).toString('utf-8'));\n  };\n\n  /**\n   * Write a minimal `package.json` file for the dependency currently being compiled.\n   */\n  const writePackageJson = () => {\n    const { name, version, author, license } = getPackageJson();\n\n    const data = `${JSON.stringify({\n      name,\n      version,\n      main: 'index.js',\n      ...(author ? { author } : undefined),", "explanation": "**Block Summary:**\n\nThis block of code is used to:\n\n- Find the first existing LICENSE file (in various formats) in the package directory.\n- Copy the located LICENSE file to the destination directory.\n- Extract and write a minimal `package.json` file for the dependency being compiled.\n  The `package.json` includes name, version, author, and license information from the dependency's original package.json.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/ncc.ts", "chunk_number": 4, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scripts/ncc.ts':\n\n**File Summary:**\n\nThe 'scripts/ncc.ts' file is a pre-compilation script written in TypeScript that performs the following tasks:\n\n1. Clean up an existing 'compiled' directory by removing all its subdirectories.\n2. Read settings from a 'config.jsonc' file to define node modules to be pre-compiled.\n3. Pre-compile the defined node modules using `@vercel/ncc`.\n\nThe script maps over an array of packages, performing tasks such as calculating the total size of each package directory, logging sizes, and updating the `tsConfig` paths. It also handles errors and extracts minimal `package.json` files from dependencies."}
{"code": "      ...(license ? { license } : undefined),\n    })}\\n`;\n\n    write(path.join(destination, 'package.json'), data);\n  };\n\n  const externals = Object.keys(getPackageJson().peerDependencies ?? {});\n  return ncc(require.resolve(pkg.name), { cache: false, minify: true, quiet: true, target: 'es6', externals })\n    .then(postBuild)\n    .catch(handleError);\n}\n\nfunction updateTSConfigPaths() {\n  const pathToTSConfig = path.join(__dirname, '..', 'tsconfig.json');\n  // TSConfig depends on JSON5\n  const tsconfig = JSON5.parse(fs.readFileSync(pathToTSConfig).toString('utf-8'));\n\n  tsconfig.compilerOptions.paths = {\n    'core/*': ['core/*'],\n    'scaffolds/*': ['scaffolds/*'],\n    'compiled/*': ['compiled/*', 'node_modules/@types/*', 'node_modules/*'],\n  };\n\n  for (const pkg of pkgs) {\n    tsconfig.compilerOptions.paths[pkg] = [`compiled/${pkg}`, `node_modules/@types/${pkg}`, `node_modules/${pkg}`];\n  }\n\n  const data = JSONstringifyCompact(tsconfig, { maxLength: 120 });\n", "explanation": "**Summary: Code Block Functionality**\n\nThis block of code performs the following tasks:\n\n1. Creates or updates a `package.json` file by writing metadata to it.\n2. Builds a package using the `ncc` tool, post-processing the output, and catches any errors.\n3. Updates the `tsconfig.json` file by adding paths for TypeScript compiler options.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/ncc.ts", "chunk_number": 5, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scripts/ncc.ts':\n\n**File Summary:**\n\nThe 'scripts/ncc.ts' file is a pre-compilation script written in TypeScript that performs the following tasks:\n\n1. Clean up an existing 'compiled' directory by removing all its subdirectories.\n2. Read settings from a 'config.jsonc' file to define node modules to be pre-compiled.\n3. Pre-compile the defined node modules using `@vercel/ncc`.\n\nThe script maps over an array of packages, performing tasks such as calculating the total size of each package directory, logging sizes, and updating the `tsConfig` paths. It also handles errors and extracts minimal `package.json` files from dependencies."}
{"code": "  fs.writeFileSync(pathToTSConfig, `${data}\\n`, { encoding: 'utf-8' });\n}\n\n/**\n * Log the given `err` and exit the process with status code `1`.\n */\nfunction handleError<T extends Error>(err: T) {\n  console.error(err);\n  process.exit(1);\n}\n", "explanation": "**Summary:**\n\nThis block has two parts:\n\n1. `fs.writeFileSync`: Writes data to a file at a specified path, appending a newline character at the end. It uses UTF-8 encoding.\n2. `handleError` function: Logs an error to the console and exits the process with a status code of 1.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/ncc.ts", "chunk_number": 6, "total_chunks": 6}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and to-the-point holistic summary of the file 'scripts/ncc.ts':\n\n**File Summary:**\n\nThe 'scripts/ncc.ts' file is a pre-compilation script written in TypeScript that performs the following tasks:\n\n1. Clean up an existing 'compiled' directory by removing all its subdirectories.\n2. Read settings from a 'config.jsonc' file to define node modules to be pre-compiled.\n3. Pre-compile the defined node modules using `@vercel/ncc`.\n\nThe script maps over an array of packages, performing tasks such as calculating the total size of each package directory, logging sizes, and updating the `tsConfig` paths. It also handles errors and extracts minimal `package.json` files from dependencies."}
{"code": "const { execSync, exec } = require('child_process');\nconst watch = require('watch');\nlet fs = require('fs-extra');\nconst { setupTsconfig, convertCommandToString, readTemplateDirs } = require('./utils');\nconst path = require('path');\n\nsetupTsconfig();\nconst { templateDevData } = require('../../scaffolds/dev-data');\n\nlet nextProcess = null;\n\nconst template = process.argv[2];\n\nif (!template) {\n  console.log('Please specify a template to use');\n  process.exit(1);\n}\n\nconst ejsData = templateDevData[template];\n\nconst scaffoldInstance = new (require(`../../scaffolds/${template}/scaffold.ts`).default)(ejsData);\n\nconsole.log('Rebuilding template...');\nfs.rmSync('./.template-dev', { recursive: true, force: true });\nfs.mkdir('./.template-dev');\n\nscaffoldInstance.source.forEach((source) => {\n  fs.cpSync(`./scaffolds/${template}/template/${source}`, `./.template-dev/${source}`, { recursive: true });\n});\n\nprocess.chdir('./.template-dev');\n\nconsole.log('Building EJS files...');", "explanation": "**Block Purpose:** \nThis block is responsible for scaffolding a project by generating a template from a specified scaffold.\n\n**Functionality:**\n\n1. It sets up a TypeScript configuration.\n2. It specifies a template to use when scaffolding a project.\n3. It creates a new instance of the specified template's scaffolding class.\n4. It copies the template directory to a new location called `.template-dev`.\n5. It changes the current working directory to `.template-dev`.\n\nIn essence, this block prepares the environment for generating a new project using the specified template.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/template_dev/ejs_dev_script.js", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scripts/template_dev/ejs_dev_script.js' file:\n\nThis script prepares a development environment for generating a new project using a specified template. It sets up a TypeScript configuration, copies the template to a `.template-dev` directory, and installs dependencies. A file watcher monitors changes, copying them to the designated directory, and auto-stops the server upon user interruption or process termination."}
{"code": "readTemplateDirs(path.resolve(`./`), (err, filePaths) => {\n  if (err) {\n    console.log(err);\n  }\n\n  filePaths.forEach((filePath) => {\n    if (!filePath.includes('/public/') && !filePath.includes('/.next/')) {\n      const result = execSync(\n        `ejs .${filePath.replace(process.cwd(), '')} -i ${encodeURI(JSON.stringify(ejsData))} -o .${filePath.replace(\n          process.cwd(),\n          '',\n        )}`,\n      );\n    }\n  });\n\n  if (fs.existsSync('./.env.example')) {\n    fs.renameSync('./.env.example', './.env');\n  }\n\n  console.log('Installing dependencies...');\n  execSync(convertCommandToString(scaffoldInstance.installationCommand), { stdio: 'inherit' });\n\n  console.log('Running dev server...');\n  nextProcess = exec(convertCommandToString(scaffoldInstance.startCommand), { stdio: 'inherit' });\n  nextProcess.stdout.on('data', function (data) {\n    console.log(data);\n  });\n  console.log('Running dev server with process ID: ', nextProcess.pid);\n\n  watch.createMonitor(`../scaffolds/${template}`, function (monitor) {", "explanation": "**Summary**\n\nThis block is responsible for:\n\n1. Reading template directories and processing files not in `public/` or `/.next/`.\n2. Renaming `.env.example` to `.env`.\n3. Installing dependencies.\n4. Running a development server.\n5. Setting up a file watcher (not fully shown in this code snippet).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/template_dev/ejs_dev_script.js", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scripts/template_dev/ejs_dev_script.js' file:\n\nThis script prepares a development environment for generating a new project using a specified template. It sets up a TypeScript configuration, copies the template to a `.template-dev` directory, and installs dependencies. A file watcher monitors changes, copying them to the designated directory, and auto-stops the server upon user interruption or process termination."}
{"code": "    console.log('Watching for changes in template files...');\n    monitor.on('created', function (f, stat) {\n      console.log('Created:', f);\n      fs.copyFileSync(f, `./${f.split('template')[1]}`);\n    });\n    monitor.on('changed', function (f, curr, prev) {\n      console.log('Changed:', f);\n      fs.copyFileSync(f, `./${f.split('template')[1]}`);\n    });\n    monitor.on('removed', function (f, stat) {\n      console.log('Removed:', f);\n      fs.rmSync(`./${f.split('template')[1]}`, { recursive: true, force: true });\n    });\n  });\n\n  process.on('beforeExit', () => {\n    console.log('Killing dev server...');\n    nextProcess.kill();\n    process.exit();\n  });\n\n  process.on('SIGTERM', () => {\n    console.log('Killing dev server...');\n    nextProcess.kill();\n    process.exit();\n  });\n\n  process.on('SIGINT', () => {\n    console.log('Killing dev server...');\n    nextProcess.kill();\n    process.exit();\n  });\n});\n", "explanation": "**Summary:**\n\nThis block is a Dev Server Killer that monitors files, copies changes to a designated directory, and auto-stops the server upon user initiation (e.g., Ctrl+C) or process termination.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/template_dev/ejs_dev_script.js", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise and holistic summary of the 'scripts/template_dev/ejs_dev_script.js' file:\n\nThis script prepares a development environment for generating a new project using a specified template. It sets up a TypeScript configuration, copies the template to a `.template-dev` directory, and installs dependencies. A file watcher monitors changes, copying them to the designated directory, and auto-stops the server upon user interruption or process termination."}
{"code": "const tsNode = require('ts-node');\nlet json = require('json5');\nlet fs = require('fs-extra');\n\n//setting up tsconfig for ts-node to compile the scaffold.ts file of any scaffold\nconst setupTsconfig = () => {\n  let tsconfig = {\n    compilerOptions: {\n      ...json.parse(fs.readFileSync(`./tsconfig.json`)).compilerOptions,\n    },\n    transpileOnly: true,\n  };\n\n  tsNode.register(tsconfig);\n};\n\nconst convertCommandToString = (command) => {\n  return command.command.concat(' ', command.args.join(' '));\n};\n\nconst readTemplateDirs = (root, done) => {\n  let filePaths = [];\n  fs.readdir(root, (err, files) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    let pending = files.length;\n    if (!pending) return done(null, filePaths);\n    files.forEach((file) => {\n      const stats = fs.statSync(`${root}/${file}`);\n      if (stats && stats.isDirectory()) {\n        readTemplateDirs(`${root}/${file}`, async (error, res) => {\n          filePaths = filePaths.concat(res);\n          if (!--pending) done(null, filePaths);", "explanation": "**Block Purpose and Functionality Summary:**\n\nThis block of code is responsible for:\n\n1. Configuring TypeScript compilation settings using `ts-node`.\n2. Reading files in a directory recursively and collecting file paths.\n3. Converting command objects to string format.\n\n**Key Functions:**\n\n- `setupTsconfig`: Sets up TypeScript compilation configuration.\n- `convertCommandToString`: Converts command objects to strings.\n- `readTemplateDirs`: Reads files in a directory recursively, returning a list of file paths.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/template_dev/utils.js", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**utils.js Summary:**\n\nThis file provides utility functions for template development. It includes setup for TypeScript compilation, conversion of command objects to strings, and file reading/recursion functionality. The main functions are:\n\n1. `setupTsconfig`: Configures TypeScript compilation.\n2. `convertCommandToString`: Converts command objects to strings.\n3. `readTemplateDirs`: Recursively reads files in directories, returning file paths.\n\nThese functions aim to facilitate template development and automation."}
{"code": "        });\n      } else {\n        filePaths.push(`${root}/${file}`);\n        if (!--pending) done(null, filePaths);\n      }\n    });\n  });\n  return filePaths;\n};\n\nmodule.exports = {\n  setupTsconfig,\n  convertCommandToString,\n  readTemplateDirs,\n};\n", "explanation": "This block is a function that:\n\n- Iterates through a list of templates and potentially other directories.\n- Recursively copies files from these directories to a destination path.\n- Adds the final file paths to an array.\n- Calls a callback function (`done`) when the operation is complete (or returns a result if it's the exports object).", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/template_dev/utils.js", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "**utils.js Summary:**\n\nThis file provides utility functions for template development. It includes setup for TypeScript compilation, conversion of command objects to strings, and file reading/recursion functionality. The main functions are:\n\n1. `setupTsconfig`: Configures TypeScript compilation.\n2. `convertCommandToString`: Converts command objects to strings.\n3. `readTemplateDirs`: Recursively reads files in directories, returning file paths.\n\nThese functions aim to facilitate template development and automation."}
{"code": "{\n  \"extends\": \"../tsconfig.json\",\n\n  \"compilerOptions\": {\n    \"strict\": false,\n  },\n\n  \"include\": [\"**/*.ts\", \"**/*.tsx\"],\n}\n", "explanation": "This block is a configuration file for a TypeScript project, specifically a tsconfig.json file used by the TypeScript compiler. It:\n\n- Extends an existing configuration\n- Enables loose TypeScript strictness (i.e., non-strict)\n- Specifies that TypeScript should be compiled for files with .ts and .tsx extensions.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "scripts/tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "Here's a concise summary of the 'scripts/tsconfig.json' file:\n\nThe tsconfig.json file configures TypeScript compilation for a non-strict project, covering files with .ts and .tsx extensions."}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"module\": \"commonjs\",\n    \"lib\": [\"esnext\"],\n    \"outDir\": \"./dist\",\n    \"jsx\": \"react\",\n    \"declaration\": false,\n    \"sourceMap\": false,\n    \"downlevelIteration\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"allowJs\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"core/*\": [\"core/*\"],\n      \"scaffolds/*\": [\"scaffolds/*\"],\n      \"compiled/*\": [\"compiled/*\", \"node_modules/@types/*\", \"node_modules/*\"],\n      \"chalk\": [\"compiled/chalk\", \"node_modules/@types/chalk\", \"node_modules/chalk\"],\n      \"decamelize\": [\"compiled/decamelize\", \"node_modules/@types/decamelize\", \"node_modules/decamelize\"],\n      \"execa\": [\"compiled/execa\", \"node_modules/@types/execa\", \"node_modules/execa\"],\n      \"got\": [\"compiled/got\", \"node_modules/@types/got\", \"node_modules/got\"],\n      \"react\": [\"compiled/react\", \"node_modules/@types/react\", \"node_modules/react\"],", "explanation": "This block is a configuration file for a TypeScript compiler, specifically for the \"tsc\" (TypeScript Compiler) command. The main purpose is to set up the build and compile process for a TypeScript project.\n\nThe functionality of this block includes:\n\n- Specifying the compiler options, such as the target JavaScript version, module type, and library imports.\n- Setting the output directory for compiled JavaScript files.\n- Enabling or disabling certain features, such as source maps, type declaration files, and strict type checking.\n- Resolving module imports and TypeScript type definitions from specific directories and package locations.\n- Configuring paths for custom dependencies and type definitions.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "tsconfig.json", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `tsconfig.json` file is a configuration file for the TypeScript compiler. It sets up the build and compile process for a TypeScript project by specifying:\n\n* Compiler options (target JavaScript version, module type, library imports)\n* Output directory for compiled JavaScript files\n* Feature settings (source maps, type declaration files, strict type checking)\n* Path configurations for custom dependencies and type definitions\n\nIt also defines lists of dependencies, directories to include and exclude, and resolutions for module imports and TypeScript type definitions."}
{"code": "      \"react-is\": [\"compiled/react-is\", \"node_modules/@types/react-is\", \"node_modules/react-is\"],\n      \"tar\": [\"compiled/tar\", \"node_modules/@types/tar\", \"node_modules/tar\"],\n      \"wrap-ansi\": [\"compiled/wrap-ansi\", \"node_modules/@types/wrap-ansi\", \"node_modules/wrap-ansi\"],\n      \"yargs-parser\": [\"compiled/yargs-parser\", \"node_modules/@types/yargs-parser\", \"node_modules/yargs-parser\"]\n    }\n  },\n  \"include\": [\"core\", \"scaffolds\", \"compiled\"],\n  \"exclude\": [\"scaffolds/*/template\"]\n}\n", "explanation": "This block is a configuration object for bundling and management of dependencies in a project. \n\nIt defines:\n\n- A list of dependencies with their compiled and source versions. \n- A list of directories to include in the compilation. \n- A list of directories to exclude from the compilation. \n\nIt appears to be written in JSON or a similar configuration file format.", "metadata": {"repo": "magiclabs/create-magic-app", "file": "tsconfig.json", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "Based on the repository `magiclabs/create-magic-app`, here is a concise summary of its purpose and content:\n\n**Purpose:**\nThis repository provides a Next.js project template to help users quickly create a Magic App, a web-based application integrated with Magic APIs for authentication and other backend services.\n\n**Content:**\n\n- A `create-next-app` template\n- Magic.js (MAGIC SDK) integration\n- Pre-configured authentication flow using Magic API\n- Sample routing and components\n- Jest and E2E testing setup", "file_summary": "The `tsconfig.json` file is a configuration file for the TypeScript compiler. It sets up the build and compile process for a TypeScript project by specifying:\n\n* Compiler options (target JavaScript version, module type, library imports)\n* Output directory for compiled JavaScript files\n* Feature settings (source maps, type declaration files, strict type checking)\n* Path configurations for custom dependencies and type definitions\n\nIt also defines lists of dependencies, directories to include and exclude, and resolutions for module imports and TypeScript type definitions."}
