{"code": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\t<meta name=\"theme-color\" content=\"#000000\">\n\t<!--\n      manifest.json provides metadata used when your web app is added to the\n      homescreen on Android. See https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/\n    -->\n\t<link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\">\n\t<link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n\t<!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n\t<title>React App</title>\n</head>\n", "explanation": "This block defines the HTML structure of a web page, specifically:\n\n* Sets up metadata for mobile devices and search engines\n* Links to external files (manifest.json and favicon.ico) via a public URL\n* Specifies the title of the web page", "metadata": {"repo": "magiclabs/example-taquito", "file": "public/index.html", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here is a concise summary:\n\n`public/index.html`: An empty HTML template file for a web application, setting up metadata and linking external files, with a placeholder `#root` div for dynamic React content rendering."}
{"code": "<body>\n\t<noscript>\n\t\tYou need to enable JavaScript to run this app.\n\t</noscript>\n\t<div id=\"root\"></div>\n\t<!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n</body>\n\n</html>", "explanation": "**Summary:**\n\nThis HTML block is an empty template file for a web application, intended for use with a JavaScript framework (likely React). It contains a message for users without JavaScript enabled and a placeholder div element (#root) where dynamic content will be rendered.", "metadata": {"repo": "magiclabs/example-taquito", "file": "public/index.html", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here is a concise summary:\n\n`public/index.html`: An empty HTML template file for a web application, setting up metadata and linking external files, with a placeholder `#root` div for dynamic React content rendering."}
{"code": "import React, { useState, useEffect } from 'react';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Magic } from 'magic-sdk';\nimport { TaquitoExtension } from '@magic-ext/taquito';\nimport './styles.css';\n\nconst magic = new Magic('pk_live_C20A087BDF08A859', {\n  extensions: {\n    taquito: new TaquitoExtension({\n      rpcUrl: 'https://rpc.oxfordnet.teztnets.com',\n    }),\n  },\n});\n\nexport default function App() {\n  const [email, setEmail] = useState('');\n  const [publicAddress, setPublicAddress] = useState('');\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [sendXTZAmount, setSendXTZAmount] = useState(0);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userMetadata, setUserMetadata] = useState({});\n  const [sendingTransaction, setSendingTransaction] = useState(false);\n\n  useEffect(() => {\n    magic.user.isLoggedIn().then(async magicIsLoggedIn => {\n      setIsLoggedIn(magicIsLoggedIn);\n      if (magicIsLoggedIn) {", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** This block sets up a React application with Tezos and Magic SDK integration for user authentication, wallet management, and XTZ transaction sending.\n\n**Functionality:**\n\n* Initializes Magic SDK with Tezos extension\n* Manages state variables for email, public address, destination address, send amount, login status, user metadata, and sending transaction status\n* Checks if the user is logged in using Magic SDK's `isLoggedIn()` method on component mount (using `useEffect()`)\n* Updates app state accordingly", "metadata": {"repo": "magiclabs/example-taquito", "file": "src/App.js", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here's a concise summary of the file 'src/App.js':\n\n**Summary:** This React application integrates Magic SDK with Tezos, enabling user authentication and transactions on the Tezos blockchain. It manages states for login, email, public address, and sending transaction status, allowing users to log in, send XTZ transfers, and access wallet management features."}
{"code": "        const publicAddress = (await magic.taquito.getPublicKey()).pkh;\n        setPublicAddress(publicAddress);\n        setUserMetadata(await magic.user.getMetadata());\n      }\n    });\n  }, [isLoggedIn]);\n\n  const login = async () => {\n    await magic.auth.loginWithEmailOTP({ email });\n    setIsLoggedIn(true);\n  };\n\n  const logout = async () => {\n    await magic.user.logout();\n    setIsLoggedIn(false);\n  };\n\n  const handleMagicSign = async () => {\n    setSendingTransaction(true);\n    const Tezos = new TezosToolkit('https://rpc.oxfordnet.teztnets.com');\n    const magicSigner = await magic.taquito.createMagicSigner();\n\n    Tezos.setProvider({ signer: magicSigner });\n\n    const operation = await Tezos.contract.transfer({ to: destinationAddress, amount: sendXTZAmount });\n\n    setSendingTransaction(false);\n    console.log('result', operation);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isLoggedIn ? (\n        <div className=\"container\">\n          <h1>Please sign up or login</h1>\n          <input", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Manage user authentication and transactions on Tezos blockchain using Magic Authentication and Taquito library.\n\n**Functionality:**\n\n* Get public address and set it in state\n* Fetch user metadata from Magic API\n* Handle login and logout with Magic Authentication\n* Create a signer for Tezos transactions using Magic Signer\n* Send a transfer operation to the Tezos blockchain when \"MagicSign\" is clicked.", "metadata": {"repo": "magiclabs/example-taquito", "file": "src/App.js", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here's a concise summary of the file 'src/App.js':\n\n**Summary:** This React application integrates Magic SDK with Tezos, enabling user authentication and transactions on the Tezos blockchain. It manages states for login, email, public address, and sending transaction status, allowing users to log in, send XTZ transfers, and access wallet management features."}
{"code": "            type=\"email\"\n            name=\"email\"\n            required=\"required\"\n            placeholder=\"Enter your email\"\n            onChange={event => {\n              setEmail(event.target.value);\n            }}\n          />\n          <button onClick={login}>Send</button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"container\">\n            <h1>Current user: {userMetadata.email}</h1>\n            <button onClick={logout}>Logout</button>\n          </div>\n          <div className=\"container\">\n            <h1>Tezos address</h1>\n            <div className=\"info\">\n              <a href={`https://oxfordnet.tzkt.io/${publicAddress}`} target=\"_blank\" rel=\"noreferrer\">\n                {publicAddress}\n              </a>\n            </div>\n            <button>\n              <a href=\"https://faucet.oxfordnet.teztnets.com/\" target=\"_blank\" rel=\"noreferrer\">\n                Faucet\n              </a>\n            </button>\n          </div>\n          <div className=\"container\">", "explanation": "**Summary:**\n\nThis block is a login/authorization system with two main states:\n\n1. **Login**: A form to input email address, which triggers a `login` function when submitted.\n2. **Logged In**: Displays current user's email and Tezos address, along with buttons for logging out or accessing the Oxfordnet faucet.", "metadata": {"repo": "magiclabs/example-taquito", "file": "src/App.js", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here's a concise summary of the file 'src/App.js':\n\n**Summary:** This React application integrates Magic SDK with Tezos, enabling user authentication and transactions on the Tezos blockchain. It manages states for login, email, public address, and sending transaction status, allowing users to log in, send XTZ transfers, and access wallet management features."}
{"code": "            <h1>Send Transaction</h1>\n            {sendingTransaction ? (\n              <div>\n                <div>Sending transaction...</div>\n              </div>\n            ) : (\n              <div />\n            )}\n            <input\n              type=\"text\"\n              name=\"destination\"\n              className=\"full-width\"\n              required=\"required\"\n              placeholder=\"Destination address\"\n              onChange={event => {\n                setDestinationAddress(event.target.value);\n              }}\n            />\n            <input\n              type=\"text\"\n              name=\"amount\"\n              className=\"full-width\"\n              required=\"required\"\n              placeholder=\"Amount in XTZ\"\n              onChange={event => {\n                setSendXTZAmount(event.target.value);\n              }}\n            />\n            <button id=\"btn-send-txn\" onClick={handleMagicSign}>\n              Send Transaction\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n", "explanation": "This block is a form that allows users to send transactions, displaying a \"Sending transaction...\" message while processing and input fields for destination address and amount (in XTZ). A button initiates the transaction upon click.", "metadata": {"repo": "magiclabs/example-taquito", "file": "src/App.js", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here's a concise summary of the file 'src/App.js':\n\n**Summary:** This React application integrates Magic SDK with Tezos, enabling user authentication and transactions on the Tezos blockchain. It manages states for login, email, public address, and sending transaction status, allowing users to log in, send XTZ transfers, and access wallet management features."}
{"code": "import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n", "explanation": "Here is a concise summary:\n\nThis code sets up a React application by rendering the `<App>` component inside a `<StrictMode>` wrapper, targeting an HTML element with the ID \"root\".", "metadata": {"repo": "magiclabs/example-taquito", "file": "src/index.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here is a holistic summary of the file 'src/index.js' in 2-3 sentences:\n\nThis file initializes a React application by wrapping the `<App>` component within a `<StrictMode>` container and rendering it inside an HTML element with ID \"root\", serving as the entry point for the application."}
{"code": ".App {\n  align-self: center;\n  justify-self: center;\n}\n\n#root {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n  Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  height: 100vh;\n  display: grid;\n  font-size: 18px;\n}\n\n.container {\n  width: 300px;\n  background-color: #eee;\n  text-align: center;\n  padding: 27px 18px;\n  margin-bottom: 27px;\n}\n\nh1 {\n  margin: 0;\n  padding-bottom: 18px;\n  font-size: 18px;\n}\n\n.info {\n  max-width: 21ch;\n  margin: 0 auto;\n  margin-bottom: 18px;\n  background-color: #ddd;\n  padding: 12px 24px;\n  word-wrap: break-word;\n  font-family: \"Lucida Console\", Monaco, monospace;\n  font-size: 15px;\n}\n\n.info a {\n  color: black;\n}\n\ninput,\nbutton {\n  padding: 9px;\n  font-size: 18px;\n  margin-bottom: 9px;\n}\n\ninput.full-width {\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 9px;\n  text-align: center;\n}\n", "explanation": "Here is a concise summary:\n\nThis block defines CSS styles for a web application, including layout, typography, and UI components such as containers, headings, links, forms, and input fields.", "metadata": {"repo": "magiclabs/example-taquito", "file": "src/styles.css", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This repository is an example project for Taquito, a Tezos smart contract compiler. Its purpose is to demonstrate how to use Taquito in a real-world application. The content includes code examples, tests, and documentation for setting up and using Taquito.", "file_summary": "Here is a concise holistic summary of the file 'src/styles.css':\n\n**CSS Styles**\n\nDefines overall visual design for a web app, covering layout, typography, and UI components like containers, text elements, interactive features (e.g., links, forms, inputs)."}
