{"code": "# Publishable API Key found in the Magic Dashboard\nNEXT_PUBLIC_MAGIC_API_KEY=pk_live_1234567890\n\n# The RPC URL for the blockchain network\nNEXT_PUBLIC_BLOCKCHAIN_NETWORK=ethereum-sepolia\n\n# API Key found in the Pimlico Dashboard\nNEXT_PUBLIC_PIMLICO_API_KEY=<PIMLICO_API_KEY>", "explanation": "This block defines environment variables, specifically:\n\n* An API key for Magic (pk_live_1234567890)\n* The RPC URL for a blockchain network (ethereum-sepolia)\n* A Pimlico API key (with value to be filled in)", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": ".env.example", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the '.env.example' file:\n\n\"Example environment variables: Magic API key, Sepolia Ethereum RPC URL, and a placeholder Pimlico API key.\""}
{"code": "{\n  \"extends\": \"next/core-web-vitals\",\n  \"rules\": {\n    \"quotes\": [1, \"single\"],\n    \"indent\": [1, 2]\n  }\n}\n", "explanation": "This block is a configuration object for a code formatter or linter. It extends the Next.js Web Vitals plugin and specifies formatting rules: using single quotes and a 2-space indentation.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": ".eslintrc.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and holistic summary of the file '.eslintrc.json':\n\n\"A configuration file for code style and formatting, extending Next.js Web Vitals plugin with single quote usage and 2-space indentation.\""}
{"code": "This scaffold is meant to help you bootstrap your own projects with Magic's [Dedicated Wallet](https://magic.link/docs/auth/overview). Magic is a developer SDK that integrates with your application to enable passwordless Web3 onboarding.\n\nThe folder structure of this scaffold is designed to encapsulate all things Magic into one place so you can easily add or remove components and functionality. For example, all Magic-specific components are in the `src/components/magic` directory while generic UI components are in the `src/components/ui` directory.\n\n## Next.js\n\nThis is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n### Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n", "explanation": "**Purpose:** A Next.js project scaffold for passwordless Web3 onboarding using Magic's Dedicated Wallet.\n\n**Functionality:** A pre-configured project structure that encapsulates all things Magic, allowing easy addition or removal of components and functionality.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "README.md", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and to-the-point summary of the file 'README.md':\n\n**Project Overview**\n\nThis is a pre-configured Next.js project scaffold for passwordless Web3 onboarding using Magic's Dedicated Wallet, allowing easy addition or removal of components and functionality.\n\n**Key Features:**\n\n* Edit `pages/index.tsx` for page auto-updates\n* Access API routes at [http://localhost:3000/api/*]\n* Optimized Google Fonts with `next/font`\n\n**Getting Started:**\n\n* Contribute to the Next.js GitHub repository\n* Deploy easily on Vercel Platform (documentation linked)"}
{"code": "You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n### Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**Purpose:** Guide for editing pages in a Next.js project.\n\n**Functionality:**\n\n* Edit `pages/index.tsx` for page auto-updates.\n* Access API routes at [http://localhost:3000/api/*] with files in `pages/api`.\n* Project uses `next/font` to optimize Google Fonts.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "README.md", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and to-the-point summary of the file 'README.md':\n\n**Project Overview**\n\nThis is a pre-configured Next.js project scaffold for passwordless Web3 onboarding using Magic's Dedicated Wallet, allowing easy addition or removal of components and functionality.\n\n**Key Features:**\n\n* Edit `pages/index.tsx` for page auto-updates\n* Access API routes at [http://localhost:3000/api/*]\n* Optimized Google Fonts with `next/font`\n\n**Getting Started:**\n\n* Contribute to the Next.js GitHub repository\n* Deploy easily on Vercel Platform (documentation linked)"}
{"code": "You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n### Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n", "explanation": "This block:\n\n* Invites users to contribute to the Next.js GitHub repository\n* Suggests using Vercel Platform for easy app deployment\n* Links to Next.js deployment documentation.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "README.md", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and to-the-point summary of the file 'README.md':\n\n**Project Overview**\n\nThis is a pre-configured Next.js project scaffold for passwordless Web3 onboarding using Magic's Dedicated Wallet, allowing easy addition or removal of components and functionality.\n\n**Key Features:**\n\n* Edit `pages/index.tsx` for page auto-updates\n* Access API routes at [http://localhost:3000/api/*]\n* Optimized Google Fonts with `next/font`\n\n**Getting Started:**\n\n* Contribute to the Next.js GitHub repository\n* Deploy easily on Vercel Platform (documentation linked)"}
{"code": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n", "explanation": "**Summary:** This code exports a configuration for Tailwind CSS and Autoprefixer, two popular frontend build tools. It sets up their plugins with default configurations, making them available for use in the project.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "postcss.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\n**postcss.config.js**: Configures Tailwind CSS and Autoprefixer with default settings."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 2C6.47581 2 2 6.51613 2 12C2 17.5242 6.47581 22 12 22C17.4839 22 22 17.5242 22 12C22 6.51613 17.4839 2 12 2ZM11.9999 6.19352C11.2741 6.19352 10.7096 6.79835 10.7096 7.48384C10.7096 8.20964 11.2741 8.77416 11.9999 8.77416C12.6854 8.77416 13.2903 8.20964 13.2903 7.48384C13.2903 6.79835 12.6854 6.19352 11.9999 6.19352ZM10.5483 15.8709C10.2661 15.8709 10.0645 16.1129 10.0645 16.3548V16.6774C10.0645 16.9596 10.2661 17.1613 10.5483 17.1613H13.4515C13.6935 17.1613 13.9354 16.9596 13.9354 16.6774V16.3548C13.9354 16.1129 13.6935 15.8709 13.4515 15.8709H12.9677V10.2258C12.9677 9.98384 12.7257 9.7419 12.4838 9.7419H10.5483C10.2661 9.7419 10.0645 9.98384 10.0645 10.2258V10.5484C10.0645 10.8306 10.2661 11.0322 10.5483 11.0322H11.0322V15.8709H10.5483Z\" fill=\"#4E4D52\"/>\n</svg>", "explanation": "This block is an SVG icon, likely a \"star\" or \"favourite\" symbol, representing a button or indicator that can be clicked or hovered over.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/info.svg", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\n`public/info.svg`: A star-shaped SVG icon for a clickable or hoverable button/indicator."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block is an SVG image with a width and height of 24 pixels, containing an XML namespace declaration.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/link.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise and holistic summary:\n\nThe 'public/link.svg' file is a 24x24 pixel SVG image containing a complex icon shape for visual representation or design purposes."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#6851FF\"/>", "explanation": "This block appears to be a SVG path, specifically an icon, with a complex shape that is likely intended for visual representation or design purposes. The exact purpose and functionality cannot be determined without further context.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/link.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise and holistic summary:\n\nThe 'public/link.svg' file is a 24x24 pixel SVG image containing a complex icon shape for visual representation or design purposes."}
{"code": "</svg>\n", "explanation": "This block is an SVG (Scalable Vector Graphics) element, likely containing graphical content.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/link.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise and holistic summary:\n\nThe 'public/link.svg' file is a 24x24 pixel SVG image containing a complex icon shape for visual representation or design purposes."}
{"code": "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">", "explanation": "This block appears to be an SVG (Scalable Vector Graphics) code snippet that defines a visual icon, likely representing a symbol or image. The specific purpose of this particular icon is unclear without more context.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/link_white.svg", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'public/link_white.svg':\n\nThe \"link_white.svg\" file is an empty SVG tag with no visible content, serving as a placeholder or container for future graphical content."}
{"code": "<path d=\"M5.38889 6.33333C5.38889 6.08285 5.48839 5.84263 5.66551 5.66551C5.84263 5.48839 6.08285 5.38889 6.33333 5.38889H10.1111C10.3616 5.38889 10.6018 5.28938 10.7789 5.11227C10.9561 4.93515 11.0556 4.69493 11.0556 4.44444C11.0556 4.19396 10.9561 3.95374 10.7789 3.77662C10.6018 3.5995 10.3616 3.5 10.1111 3.5H6.33333C5.58189 3.5 4.86122 3.79851 4.32986 4.32986C3.79851 4.86122 3.5 5.58189 3.5 6.33333V17.6667C3.5 18.4181 3.79851 19.1388 4.32986 19.6701C4.86122 20.2015 5.58189 20.5 6.33333 20.5H17.6667C18.4181 20.5 19.1388 20.2015 19.6701 19.6701C20.2015 19.1388 20.5 18.4181 20.5 17.6667V13.8889C20.5 13.6384 20.4005 13.3982 20.2234 13.2211C20.0463 13.0439 19.806 12.9444 19.5556 12.9444C19.3051 12.9444 19.0648 13.0439 18.8877 13.2211C18.7106 13.3982 18.6111 13.6384 18.6111 13.8889V17.6667C18.6111 17.9171 18.5116 18.1574 18.3345 18.3345C18.1574 18.5116 17.9171 18.6111 17.6667 18.6111H6.33333C6.08285 18.6111 5.84263 18.5116 5.66551 18.3345C5.48839 18.1574 5.38889 17.9171 5.38889 17.6667V6.33333ZM14.8333 3.5C14.5829 3.5 14.3426 3.5995 14.1655 3.77662C13.9884 3.95374 13.8889 4.19396 13.8889 4.44444C13.8889 4.69493 13.9884 4.93515 14.1655 5.11227C14.3426 5.28938 14.5829 5.38889 14.8333 5.38889H17.2757L11.3323 11.3323C11.1602 11.5104 11.065 11.749 11.0672 11.9966C11.0693 12.2442 11.1687 12.4811 11.3438 12.6562C11.5189 12.8313 11.7558 12.9307 12.0034 12.9328C12.251 12.935 12.4896 12.8398 12.6677 12.6677L18.6111 6.72433V9.16667C18.6111 9.41715 18.7106 9.65737 18.8877 9.83449C19.0648 10.0116 19.3051 10.1111 19.5556 10.1111C19.806 10.1111 20.0463 10.0116 20.2234 9.83449C20.4005 9.65737 20.5 9.41715 20.5 9.16667V4.44444C20.5 4.19396 20.4005 3.95374 20.2234 3.77662C20.0463 3.5995 19.806 3.5 19.5556 3.5H14.8333Z\" fill=\"#FFFFFF\"/>", "explanation": "This block is a SVG path element that draws an icon or graphical shape, likely a map pin, with a white fill color.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/link_white.svg", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'public/link_white.svg':\n\nThe \"link_white.svg\" file is an empty SVG tag with no visible content, serving as a placeholder or container for future graphical content."}
{"code": "</svg>", "explanation": "This appears to be an empty SVG (Scalable Vector Graphics) tag. It has no visible content or functionality, suggesting it might be a placeholder or a container for future content.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/link_white.svg", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'public/link_white.svg':\n\nThe \"link_white.svg\" file is an empty SVG tag with no visible content, serving as a placeholder or container for future graphical content."}
{"code": "<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g id=\"Logo\">\n<g id=\"Favicon\">\n<path d=\"M16 0C17.461 1.69611 19.0723 3.27125 20.8148 4.70713C19.6537 8.27674 19.0287 12.0692 19.0287 16C19.0287 19.9308 19.6537 23.7233 20.8148 27.2929C19.0723 28.7288 17.461 30.3039 16 32C14.539 30.3039 12.9277 28.7287 11.1852 27.2929C12.3463 23.7233 12.9713 19.9308 12.9713 16C12.9713 12.0692 12.3463 8.27675 11.1852 4.70713C12.9277 3.27126 14.539 1.69612 16 0Z\" fill=\"white\"/>\n<path d=\"M7.85464 24.8249C6.01021 23.5995 4.05274 22.5166 2 21.5929C2.56942 19.8237 2.87573 17.9458 2.87573 16C2.87573 14.0542 2.56942 12.1763 2 10.4071C4.05273 9.48345 6.0102 8.40049 7.85464 7.17508C8.55991 10.0081 8.93309 12.9628 8.93309 16C8.93309 19.0372 8.55991 21.9919 7.85464 24.8249Z\" fill=\"white\"/>", "explanation": "This block is an SVG (Scalable Vector Graphics) image, specifically a logo or favicon with two paths that form a distinctive shape, likely a branding element for a website or application.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/logo.svg", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'public/logo.svg':\n\nThe `public/logo.svg` file is an SVG image containing two paths that form a distinctive shape, serving as a branding element for a website or application."}
{"code": "<path d=\"M23.0669 16C23.0669 19.0373 23.4401 21.9919 24.1454 24.8249C25.9898 23.5995 27.9473 22.5166 30 21.5929C29.4306 19.8237 29.1243 17.9458 29.1243 16C29.1243 14.0542 29.4306 12.1763 30 10.4071C27.9473 9.48345 25.9898 8.40049 24.1454 7.17507C23.4401 10.0081 23.0669 12.9628 23.0669 16Z\" fill=\"white\"/>\n</g>\n</g>\n</svg>", "explanation": "This block is an SVG (Scalable Vector Graphics) path that defines a geometric shape, likely a logo or icon. Its purpose is purely visual and does not contain any interactive functionality.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "public/logo.svg", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'public/logo.svg':\n\nThe `public/logo.svg` file is an SVG image containing two paths that form a distinctive shape, serving as a branding element for a website or application."}
{"code": "import React from 'react';\nimport WalletMethods from './cards/WalletMethodsCard';\nimport SendTransaction from './cards/SendTransactionCard';\nimport Spacer from '@/components/ui/Spacer';\nimport { LoginProps } from '@/utils/types';\nimport UserInfo from './cards/UserInfoCard';\nimport DevLinks from './DevLinks';\nimport Header from './Header';\nimport SendSafeTransaction from './cards/SendSafeTransactionCard';\n\nexport default function Dashboard({ token, setToken }: LoginProps) {\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"cards-container\">\n        <UserInfo token={token} setToken={setToken} />\n        <Spacer size={10} />\n        <SendTransaction />\n        <Spacer size={10} />\n        <SendSafeTransaction />\n        <Spacer size={10} />\n        <WalletMethods token={token} setToken={setToken} />\n        <Spacer size={15} />\n      </div>\n      <DevLinks primary />\n    </div>\n  );\n}\n", "explanation": "**Purpose:** Displays a dashboard with various user interface components.\n\n**Functionality:**\n\n* Renders a header\n* Shows cards for:\n\t+ User information\n\t+ Sending transactions (regular and safe)\n\t+ Wallet methods\n* Includes dev links in the footer", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/Dashboard.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/Dashboard.tsx':\n\nDisplays a comprehensive dashboard with user interface components, featuring a header, cards for user information, transaction sending, wallet methods, and a footer with developer links."}
{"code": "import classNames from 'classnames';\nimport Link from 'next/link';\n\nconst DevLinks = ({ primary = false, footer = false }: { primary?: boolean; footer?: boolean }) => (\n  <div className={`links ${footer ? 'footer-links' : ''}`}>\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://magic.link/docs/home/welcome\" target=\"_blank\" rel=\"noreferrer\">\n        Dev Docs\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://dashboard.magic.link/signup\" target=\"_blank\" rel=\"noreferrer\">\n        Dashboard\n      </a>\n    </div>\n    <div className={`link-divider ${primary ? 'bg-[#DDDBE0]' : 'bg-[#a270d3]'}`} />\n    <div className={`link ${primary ? 'text-[#6851ff]' : 'text-[#fff]'}`}>\n      <a href=\"https://discord.gg/magiclabs\" target=\"_blank\" rel=\"noreferrer\">\n        Discord\n      </a>\n    </div>\n  </div>\n);\n", "explanation": "**Summary:**\n\nThis block is a React component named \"DevLinks\". It renders a container with three links to external resources (docs, dashboard, and discord) in a customizable layout. The primary parameter allows for styling adjustments based on its value.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/DevLinks.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and to-the-point summary:\n\n`src/components/magic/DevLinks.tsx`: A customizable React component rendering links to external resources (docs, dashboard, Discord) with styling adjustments based on primary parameter value."}
{"code": "export default DevLinks;\n", "explanation": "This line exports a JavaScript module named \"DevLinks\" as the default export.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/DevLinks.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and to-the-point summary:\n\n`src/components/magic/DevLinks.tsx`: A customizable React component rendering links to external resources (docs, dashboard, Discord) with styling adjustments based on primary parameter value."}
{"code": "import Image from 'next/image';\nimport Logo from 'public/logo.svg';\nimport DevLinks from './DevLinks';\n\nconst Header = () => {\n  return (\n    <div className=\"app-header-container\">\n      <div className=\"flex flex-col gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default Header;\n", "explanation": "This block is a React component named `Header` that renders a header section with:\n\n* A logo image\n* The text \"Magic\"\n* A smaller, less prominent text \"Demo\"\n\nIt's likely used as a top-level navigation bar in an application.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/Header.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and to-the-point summary of the file 'src/components/magic/Header.tsx':\n\n**Summary:** The `Header` component is a React top-level navigation bar that displays a logo, \"Magic\" text, and a smaller \"Demo\" text."}
{"code": "import { LoginProps } from '@/utils/types'\nimport Header from './Header'\n\nimport EmailOTP from './auth/EmailOTP';\n\nconst Login = ({ token, setToken }: LoginProps) => {\n  return (\n    <div className=\"login-page\">\n      <Header />\n      <div className={`max-w-[100%] grid grid-cols-1 grid-flow-row auto-rows-fr gap-5 p-4 mt-8`}>\n      \n      \n        <EmailOTP token={token} setToken={setToken} />      \n  \t\t\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n", "explanation": "Here is a summary of the purpose and functionality:\n\n**Purpose:** A login page component.\n\n**Functionality:** Renders a header, and below it, an email OTP input field with token management (token retrieval and update).", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/Login.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/magic/Login.tsx':\n\n**Summary**: A login page component that renders a header and an email OTP input field with token management functionality."}
{"code": "import React, { useCallback } from 'react';\nimport DevLinks from './DevLinks';\nimport Image from 'next/image';\nimport Info from 'public/info.svg';\nimport Link from 'public/link_white.svg';\nimport Logo from 'public/logo.svg';\n\nconst MagicDashboardRedirect = () => {\n  const onClick = useCallback(() => {\n    window.open('https://dashboard.magic.link/signup', '_blank');\n  }, []);\n\n  return (\n    <div className=\"redirect-container\">\n      <div className=\"flex flex-col mt-10 gap-2.5 items-center\">\n        <Image src={Logo} alt=\"logo\" />\n        <div className=\"text-center text-white text-xl font-extrabold font-['Inter'] leading-[30px]\">Magic</div>\n        <div className=\"text-center text-white text-opacity-50 text-base font-normal font-['SF Mono'] leading-normal\">\n          Demo\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center flex-1\">\n        <div className=\"redirect-card\">\n          <div className=\"flex gap-2 mx-4 my-2 \">\n            <Image src={Info} alt=\"logo\" />", "explanation": "**Summary:**\n\nThis block is a React component named `MagicDashboardRedirect`. Its purpose is to redirect users to a Magic link dashboard sign-up page when clicked. The component displays a logo, text, and an image card with information icon, which seems to be a placeholder for future development.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise holistic summary of the file 'src/components/magic/MagicDashboardRedirect.tsx':\n\nThis component, `MagicDashboardRedirect`, redirects users to sign up for a Magic link dashboard, guiding them to set up their API key environment variable via a button-initiated process."}
{"code": "            <h3 className=\"max-w-[480px] text-[#4E4D52] text-base font-normal\">\n              Please set your <code>NEXT_PUBLIC_MAGIC_API_KEY</code> environment variable in <code>.env</code>. You can\n              get your Magic API key from the Magic Dashboard.\n            </h3>\n          </div>\n        </div>\n\n        <button className=\"api-button\" onClick={onClick} disabled={false}>\n          Get API keys\n          <Image src={Link} alt=\"link-icon\" className=\"ml-[6px] my-auto\" />\n        </button>\n      </div>\n      <DevLinks />\n    </div>\n  );\n};\n\nexport default MagicDashboardRedirect;\n", "explanation": "Here is a concise summary of the block:\n\n**Purpose:** Display an instruction to set up a Magic API key environment variable.\n\n**Functionality:** Prompts user to retrieve their API key from the Magic Dashboard, with a button to initiate the process.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/MagicDashboardRedirect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise holistic summary of the file 'src/components/magic/MagicDashboardRedirect.tsx':\n\nThis component, `MagicDashboardRedirect`, redirects users to sign up for a Magic link dashboard, guiding them to set up their API key environment variable via a button-initiated process."}
{"code": "import { getChainId, getNetworkUrl } from '@/utils/network';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic as MagicBase } from 'magic-sdk';\nimport { ReactNode, createContext, useContext, useEffect, useMemo, useState } from 'react';\nconst { Web3 } = require('web3');\nimport { createPublicClient, http, PublicClient } from 'viem';\nimport { sepolia } from 'viem/chains';\n\nexport type Magic = MagicBase<OAuthExtension[]>;\n\ntype MagicContextType = {\n  magic: Magic | null;\n  web3: typeof Web3 | null;\n  publicClient: PublicClient | null;\n};\n\nconst MagicContext = createContext<MagicContextType>({\n  magic: null,\n  web3: null,\n  publicClient: null,\n});\n\nexport const useMagic = () => useContext(MagicContext);\n\nconst MagicProvider = ({ children }: { children: ReactNode }) => {\n  const [magic, setMagic] = useState<Magic | null>(null);\n  const [web3, setWeb3] = useState<typeof Web3 | null>(null);\n  const [publicClient, setPublicClient] = useState<PublicClient | null>(null);\n\n  useEffect(() => {", "explanation": "**Summary**\n\nThis block is a React hook called `useMagic` that provides access to Magic (a web3 login protocol) and Web3 instance through a Context API.\n\n**Functionality**\n\n- Creates a Magic instance with OAuth extension\n- Provides access to Web3 and PublicClient instances through the `useMagic` hook\n- Sets up a Context API to store and share these instances across the application\n\nThe block is designed to be used as a provider in a React app, allowing components to easily access the Magic and Web3 instances.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/MagicProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/magic/MagicProvider.tsx':\n\n**Provides Magic authentication system**: The `MagicProvider` establishes an API key-based authentication system using the MagicBase library, allowing components to access Magic and Web3 instances through a Context API."}
{"code": "    if (process.env.NEXT_PUBLIC_MAGIC_API_KEY) {\n      const magic = new MagicBase(process.env.NEXT_PUBLIC_MAGIC_API_KEY as string, {\n        network: {\n          rpcUrl: getNetworkUrl(),\n          chainId: getChainId(),\n        },\n        extensions: [new OAuthExtension()],\n      });\n\n      setMagic(magic);\n      setWeb3(new Web3((magic as any).rpcProvider));\n      const publicClient = createPublicClient({\n        transport: http(getNetworkUrl()),\n        chain: sepolia,\n      });\n      setPublicClient(publicClient);\n    }\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      magic,\n      web3,\n      publicClient\n    };\n  }, [magic, web3, publicClient]);\n\n  return <MagicContext.Provider value={value}>{children}</MagicContext.Provider>;\n};\n\nexport default MagicProvider;\n", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Provides an API key-based authentication system using the MagicBase library.\n\n**Functionality:** Initializes MagicBase with an API key, sets up Web3 provider, and creates a public client instance for use within a React application.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/MagicProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/magic/MagicProvider.tsx':\n\n**Provides Magic authentication system**: The `MagicProvider` establishes an API key-based authentication system using the MagicBase library, allowing components to access Magic and Web3 instances through a Context API."}
{"code": "import { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '../../ui/Spinner';\nimport { RPCError, RPCErrorCode } from 'magic-sdk';\nimport { LoginProps } from '@/utils/types';\nimport { saveUserInfo } from '@/utils/common';\nimport Card from '../../ui/Card';\nimport CardHeader from '../../ui/CardHeader';\nimport { useState } from 'react';\nimport FormInput from '@/components/ui/FormInput';\n\nconst EmailOTP = ({ token, setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [isLoginInProgress, setLoginInProgress] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n      setEmailError(true);\n    } else {\n      try {\n        setLoginInProgress(true);\n        setEmailError(false);\n        const token = await magic?.auth.loginWithEmailOTP({ email });\n", "explanation": "**Purpose:** Login component for Magic authentication.\n\n**Functionality:** Handles login with email and OTP using the Magic SDK, displaying a loading indicator and error handling.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/auth/EmailOTP.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/magic/auth/EmailOTP.tsx':\n\n**This component handles Magic login flow via email and OTP input, displaying loading indicators and errors on success or failure.**"}
{"code": "        const metadata = await magic?.user.getMetadata();\n\n        if (!token || !metadata?.publicAddress) {\n          throw new Error('Magic login failed');\n        }\n\n        setToken(token);\n        saveUserInfo(token, 'EMAIL', metadata?.publicAddress);\n        setEmail('');\n      } catch (e) {\n        console.log('login error: ' + JSON.stringify(e));\n        if (e instanceof RPCError) {\n          switch (e.code) {\n            case RPCErrorCode.MagicLinkFailedVerification:\n            case RPCErrorCode.MagicLinkExpired:\n            case RPCErrorCode.MagicLinkRateLimited:\n            case RPCErrorCode.UserAlreadyLoggedIn:\n              showToast({ message: e.message, type: 'error' });\n              break;\n            default:\n              showToast({\n                message: 'Something went wrong. Please try again',\n                type: 'error',\n              });\n          }\n        }\n      } finally {\n        setLoginInProgress(false);\n      }\n    }\n  };\n\n  return (\n    <Card>", "explanation": "Here is a concise summary:\n\n**Functionality:** This block handles Magic login flow.\n\n**Purpose:** Verifies user's login through Magic, saves user info, and updates UI state on success or failure.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/auth/EmailOTP.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/magic/auth/EmailOTP.tsx':\n\n**This component handles Magic login flow via email and OTP input, displaying loading indicators and errors on success or failure.**"}
{"code": "      <CardHeader id=\"login\">Email OTP Login</CardHeader>\n      <div className=\"login-method-grid-item-container\">\n        <FormInput\n          onChange={(e) => {\n            if (emailError) setEmailError(false);\n            setEmail(e.target.value);\n          }}\n          placeholder={token.length > 0 ? 'Already logged in' : 'Email'}\n          value={email}\n        />\n        {emailError && <span className=\"error\">Enter a valid email</span>}\n        <button\n          className=\"login-button\"\n          disabled={isLoginInProgress || (token.length > 0 ? false : email.length == 0)}\n          onClick={() => handleLogin()}\n        >\n          {isLoginInProgress ? <Spinner /> : 'Log in / Sign up'}\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default EmailOTP;\n", "explanation": "**Summary:**\n\nThis block is an email-based login card, allowing users to input their email address and submit it for authentication. It features a form input field for entering the email, a \"Log in / Sign up\" button, and error messaging for invalid emails.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/auth/EmailOTP.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/magic/auth/EmailOTP.tsx':\n\n**This component handles Magic login flow via email and OTP input, displaying loading indicators and errors on success or failure.**"}
{"code": "import React, { useCallback, useEffect, useState } from \"react\";\nimport Divider from \"@/components/ui/Divider\";\nimport FormButton from \"@/components/ui/FormButton\";\nimport FormInput from \"@/components/ui/FormInput\";\nimport ErrorText from \"@/components/ui/ErrorText\";\nimport Card from \"@/components/ui/Card\";\nimport CardHeader from \"@/components/ui/CardHeader\";\nimport { getFaucetUrl, getNetworkToken } from \"@/utils/network\";\nimport Image from \"next/image\";\nimport Link from \"public/link.svg\";\nimport { useSafeProvider } from \"@/components/safe/useSafeProvider\";\nimport { isAddress, parseEther } from \"viem\";\nimport showToast from \"@/utils/showToast\";\n\nconst SendSafeTransaction = () => {\n  const { smartClient } = useSafeProvider();\n  const [toAddress, setToAddress] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [disabled, setDisabled] = useState(!toAddress || !amount);\n  const [hash, setHash] = useState<any>(\"\");\n  const [toAddressError, setToAddressError] = useState(false);", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component for sending Safe transactions.\n\n**Functionality:** Allows users to input a recipient address and amount, then sends the transaction with options to display the transaction hash and error handling.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendSafeTransactionCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/cards/SendSafeTransactionCard.tsx':\n\nThis component enables users to send Safe transactions by inputting a recipient address and amount, with features such as form validation, transaction sending, and UI updates for successful operations."}
{"code": "  const [amountError, setAmountError] = useState(false);\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const sendTransaction = useCallback(async () => {\n    if (!smartClient) return;\n\n    if (!isAddress(toAddress)) {\n      return setToAddressError(true);\n    }\n    if (isNaN(Number(amount))) {\n      return setAmountError(true);\n    }\n    setDisabled(true);\n\n    const transaction = {\n      to: toAddress,\n      value: parseEther(amount).toString(),\n      data: '0x'\n    };\n\n    const transactions = [transaction];\n\n    const safeOperation = await smartClient.createTransaction({ transactions })\n    const signedSafeOperation = await smartClient.signSafeOperation(safeOperation);\n    const userOperationHash = await smartClient.executeTransaction({\n      executable: signedSafeOperation\n    });\n\n    let userOperationReceipt = null;\n\n    while (!userOperationReceipt) {\n      await new Promise((resolve) => setTimeout(resolve, 2000));", "explanation": "Here is a concise summary:\n\n**Purpose:** Manage form validation and transaction sending functionality.\n\n**Functionality:**\n\n* Validate address and amount inputs\n* Disable/send button based on input validity\n* Send transactions using smart client API when inputs are valid.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendSafeTransactionCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/cards/SendSafeTransactionCard.tsx':\n\nThis component enables users to send Safe transactions by inputting a recipient address and amount, with features such as form validation, transaction sending, and UI updates for successful operations."}
{"code": "      userOperationReceipt = await smartClient.getUserOperationReceipt(userOperationHash);\n    }\n\n    console.log('Transaction successful:', userOperationReceipt);\n    if (userOperationReceipt) {\n      setToAddress(\"\");\n      setAmount(\"\");\n      console.log(\"Transaction hash:\", userOperationReceipt);\n      showToast({\n        message: \"Transaction Successful.\",\n        type: \"success\",\n      });\n      setHash(userOperationReceipt);\n      console.log(\"UserOp Transaction receipt:\", userOperationReceipt);\n    }\n    setDisabled(false);\n  }, [smartClient, amount, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Safe Transaction</CardHeader>\n      {getFaucetUrl() && (\n        <div>\n          <a href={getFaucetUrl()} target=\"_blank\" rel=\"noreferrer\">\n            <FormButton onClick={() => null} disabled={false}>\n              Get Test {getNetworkToken()}\n              <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n            </FormButton>\n          </a>\n          <Divider />", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Handle the execution of a user operation on a smart client.\n\n**Functionality:**\n\n* Retrieves the receipt of a successful user operation.\n* Updates UI state with the transaction hash and displays a success message.\n* Resets input fields (to address, amount).\n* Enables/disables related UI elements.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendSafeTransactionCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/cards/SendSafeTransactionCard.tsx':\n\nThis component enables users to send Safe transactions by inputting a recipient address and amount, with features such as form validation, transaction sending, and UI updates for successful operations."}
{"code": "        </div>\n      )}\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />\n      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput\n        value={amount}\n        onChange={(e: any) => setAmount(e.target.value)}\n        placeholder={`Amount (${getNetworkToken()})`}\n      />\n      {amountError ? (\n        <ErrorText className=\"error\">Invalid amount</ErrorText>\n      ) : null}\n      <FormButton\n        onClick={sendTransaction}\n        disabled={!toAddress || !amount || disabled}\n      >\n        Send Transaction\n      </FormButton>\n    </Card>\n  );\n};\n\nexport default SendSafeTransaction;\n", "explanation": "Here is a concise summary:\n\n**Purpose:** User input form for sending a transaction.\n\n**Functionality:** Form accepts recipient address, amount, and validates inputs before allowing submission via \"Send Transaction\" button.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendSafeTransactionCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/cards/SendSafeTransactionCard.tsx':\n\nThis component enables users to send Safe transactions by inputting a recipient address and amount, with features such as form validation, transaction sending, and UI updates for successful operations."}
{"code": "import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { useMagic } from '../MagicProvider';\nimport FormButton from '@/components/ui/FormButton';\nimport FormInput from '@/components/ui/FormInput';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { getFaucetUrl, getNetworkToken, isEip1559Supported } from '@/utils/network';\nimport showToast from '@/utils/showToast';\nimport Spacer from '@/components/ui/Spacer';\nimport TransactionHistory from '@/components/ui/TransactionHistory';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\n\nconst SendTransaction = () => {\n  const { web3 } = useMagic();\n  const [toAddress, setToAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [disabled, setDisabled] = useState(!toAddress || !amount);\n  const [hash, setHash] = useState('');", "explanation": "Here is a concise summary of the purpose and functionality of this block:\n\n**Purpose:** Send transaction form component.\n\n**Functionality:**\n\n* Collects user input for recipient address and amount.\n* Displays error messages if invalid inputs.\n* Shows a card with a header, input fields, buttons, and transaction history.\n* Allows users to send transactions using the MagicProvider (web3).\n* Updates UI state (disabled, hash) after sending transactions.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\nThis component renders a form for sending a transaction, collects user input for recipient address and amount, validates inputs, and updates UI state accordingly. It also handles successful or failed transactions by displaying toast messages, logging errors, and clearing/formating input fields as needed."}
{"code": "  const [toAddressError, setToAddressError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const publicAddress = localStorage.getItem('user');\n\n  useEffect(() => {\n    setDisabled(!toAddress || !amount);\n    setAmountError(false);\n    setToAddressError(false);\n  }, [amount, toAddress]);\n\n  const sendTransaction = useCallback(async () => {\n    if (!web3?.utils.isAddress(toAddress)) {\n      return setToAddressError(true);\n    }\n    if (isNaN(Number(amount))) {\n      return setAmountError(true);\n    }\n    setDisabled(true);\n    const txnParams = {\n      from: publicAddress,\n      to: toAddress,\n      value: web3.utils.toWei(amount, 'ether'),\n      // Specify `gasPrice` if network doesn't support EIP-1559\n      ...(!isEip1559Supported() && { gasPrice: await web3.eth.getGasPrice() }),\n    };\n    web3.eth\n      .sendTransaction(txnParams as any)\n      .on('transactionHash', (txHash) => {\n        setHash(txHash);\n        console.log('Transaction hash:', txHash);\n      })", "explanation": "**Summary:**\n\nThis block manages error states for a transaction form, sets a disabled state based on input values, and sends a Web3 transaction when the form is valid. It also logs the transaction hash upon successful send.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\nThis component renders a form for sending a transaction, collects user input for recipient address and amount, validates inputs, and updates UI state accordingly. It also handles successful or failed transactions by displaying toast messages, logging errors, and clearing/formating input fields as needed."}
{"code": "      .then((receipt) => {\n        showToast({\n          message: 'Transaction Successful',\n          type: 'success',\n        });\n        setToAddress('');\n        setAmount('');\n        console.log('Transaction receipt:', receipt);\n      })\n      .catch((error) => {\n        console.error(error);\n        setDisabled(false);\n      });\n  }, [web3, amount, publicAddress, toAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"send-transaction\">Send Transaction</CardHeader>\n      {getFaucetUrl() && (\n        <div>\n          <a href={getFaucetUrl()} target=\"_blank\" rel=\"noreferrer\">\n            <FormButton onClick={() => null} disabled={false}>\n              Get Test {getNetworkToken()}\n              <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n            </FormButton>\n          </a>\n          <Divider />\n        </div>\n      )}\n\n      <FormInput\n        value={toAddress}\n        onChange={(e: any) => setToAddress(e.target.value)}\n        placeholder=\"Receiving Address\"\n      />", "explanation": "Here is a summary of the block:\n\n**Purpose:** Handle the result of a transaction and update UI accordingly.\n\n**Functionality:**\n\n* If successful, show a success toast message and clear input fields.\n* If failed, log error and reset disabled state.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\nThis component renders a form for sending a transaction, collects user input for recipient address and amount, validates inputs, and updates UI state accordingly. It also handles successful or failed transactions by displaying toast messages, logging errors, and clearing/formating input fields as needed."}
{"code": "      {toAddressError ? <ErrorText>Invalid address</ErrorText> : null}\n      <FormInput\n        value={amount}\n        onChange={(e: any) => setAmount(e.target.value)}\n        placeholder={`Amount (${getNetworkToken()})`}\n      />\n      {amountError ? <ErrorText className=\"error\">Invalid amount</ErrorText> : null}\n      <FormButton onClick={sendTransaction} disabled={!toAddress || !amount || disabled}>\n        Send Transaction\n      </FormButton>\n\n      {hash ? (\n        <>\n          <Spacer size={20} />\n          <TransactionHistory />\n        </>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default SendTransaction;\n", "explanation": "**Summary:**\n\nThis block displays a form for sending a transaction, including:\n\n* An input field for entering an address (with error handling)\n* A form input field for specifying an amount (with error handling)\n* A button to send the transaction\n* A history of past transactions (if any)", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/SendTransactionCard.tsx", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/magic/cards/SendTransactionCard.tsx':\n\nThis component renders a form for sending a transaction, collects user input for recipient address and amount, validates inputs, and updates UI state accordingly. It also handles successful or failed transactions by displaying toast messages, logging errors, and clearing/formating input fields as needed."}
{"code": "import { useCallback, useEffect, useMemo, useState } from 'react';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport { logout } from '@/utils/common';\nimport { useMagic } from '../MagicProvider';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport CardLabel from '@/components/ui/CardLabel';\nimport Spinner from '@/components/ui/Spinner';\nimport { getNetworkName, getNetworkToken } from '@/utils/network';\nimport { useSafeProvider } from '@/components/safe/useSafeProvider';\nimport { formatEther } from 'viem';\n\nconst UserInfo = ({ token, setToken }: LoginProps) => {\n  const { magic, web3, publicClient } = useMagic();\n  const { smartClient } = useSafeProvider();\n  const [copied, setCopied] = useState('Copy');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [magicBalance, setMagicBalance] = useState<string>(\"...\");\n  const [safeBalance, setSafeBalance] = useState<string>(\"...\");", "explanation": "Here is a concise summary:\n\n**Purpose:** A React component displaying user information.\n**Functionality:** Displays user's Magic balance, Safe balance, network token, and allows copying of token. Also provides functionality for refreshing balances and logging out.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 1, "total_chunks": 5}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the 'src/components/magic/cards/UserInfoCard.tsx' file:\n\n**Summary:** A React component displaying user information, including network connection status, addresses, balances, and refresh/data copy options, fetching data from Magic and Safe clients with periodic updates."}
{"code": "  const [safeAddress, setSafeAddress] = useState<string | undefined>(\"\");\n  const [magicAddress] = useState(localStorage.getItem(\"user\"));\n\n  const getBalance = useCallback(async () => {\n    if (magicAddress && publicClient) {\n      const magicBalance = await publicClient?.getBalance({\n        address: magicAddress as `0x${string}`,\n      });\n      if (magicBalance == BigInt(0)) {\n        setMagicBalance(\"0\");\n      } else {\n        setMagicBalance(formatEther(magicBalance));\n      }\n    }\n    if (safeAddress && smartClient) {\n      const safeBalance = await smartClient?.protocolKit.getBalance();\n      if (safeBalance == BigInt(0)) {\n        setSafeBalance(\"0\");\n      } else {\n        setSafeBalance(formatEther(safeBalance));\n      }\n    }\n  }, [safeAddress, magicAddress, publicClient]);\n\n  const getSmartContractAccount = useCallback(async () => {\n    if (smartClient) {\n      const address = await smartClient.protocolKit.getAddress();\n      setSafeAddress(address);\n    }\n  }, [smartClient]);\n\n  useEffect(() => {", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Fetches balances from two separate blockchain clients, Magic and Smart Contract.\n\n**Functionality:**\n\n* Retrieves balance from Magic client using `publicClient` and updates state with the result.\n* Retrieves balance from Safe contract using `smartClient` and updates state with the result.\n* Optionally retrieves address from Safe contract and updates state if `smartClient` is present.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 2, "total_chunks": 5}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the 'src/components/magic/cards/UserInfoCard.tsx' file:\n\n**Summary:** A React component displaying user information, including network connection status, addresses, balances, and refresh/data copy options, fetching data from Magic and Safe clients with periodic updates."}
{"code": "    getSmartContractAccount();\n  }, [getSmartContractAccount]);\n\n  const refresh = useCallback(async () => {\n    setIsRefreshing(true);\n    await getBalance();\n    setTimeout(() => {\n      setIsRefreshing(false);\n    }, 500);\n  }, [getBalance]);\n\n  useEffect(() => {\n    if (web3) {\n      refresh();\n    }\n  }, [web3, refresh]);\n\n  useEffect(() => {\n    setMagicBalance(\"...\");\n    setSafeBalance(\"...\");\n  }, [magic]);\n\n  const disconnect = useCallback(async () => {\n    if (magic) {\n      await logout(setToken, magic);\n    }\n  }, [magic, setToken]);\n\n  const copy = useCallback(() => {\n    if (magicAddress && copied === 'Copy') {\n      setCopied('Copied!');\n      navigator.clipboard.writeText(magicAddress);\n      setTimeout(() => {\n        setCopied('Copy');\n      }, 1000);\n    }\n  }, [copied, magicAddress]);\n\n  return (\n    <Card>\n      <CardHeader id=\"Wallet\">Wallet</CardHeader>\n      <CardLabel\n        leftHeader=\"Status\"\n        rightAction={<div onClick={disconnect}>Disconnect</div>}\n        isDisconnect\n      />", "explanation": "Here is a concise summary of the purpose and functionality:\n\n**Purpose:** Manage wallet connection, data refresh, and account operations.\n\n**Functionality:**\n\n* Connects/disconnects wallet using Magic API\n* Refreshes balance data with periodic updates (every 500ms)\n* Copies magic address to clipboard with feedback display", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 3, "total_chunks": 5}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the 'src/components/magic/cards/UserInfoCard.tsx' file:\n\n**Summary:** A React component displaying user information, including network connection status, addresses, balances, and refresh/data copy options, fetching data from Magic and Safe clients with periodic updates."}
{"code": "      <div className=\"flex-row\">\n        <div className=\"green-dot\" />\n        <div className=\"connected\">Connected to {getNetworkName()}</div>\n      </div>\n      <Divider />\n      <CardLabel\n        leftHeader=\"Addresses\"\n        rightAction={\n          !magicAddress ? <Spinner /> : <div onClick={copy}>{copied}</div>\n        }\n      />\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"code\">\n          Magic Wallet:{\" \"}\n          {magicAddress?.length == 0 ? \"Fetching address..\" : magicAddress}\n        </div>\n        <div className=\"code\">\n          Safe Smart Account:{\" \"}\n          {safeAddress?.length == 0 ? \"Fetching address..\" : safeAddress}\n        </div>\n      </div>\n      <Divider />\n      <CardLabel\n        leftHeader=\"Balance\"\n        rightAction={\n          isRefreshing ? (\n            <div className=\"loading-container\">\n              <Spinner />\n            </div>\n          ) : (\n            <div onClick={refresh}>Refresh</div>\n          )\n        }\n      />", "explanation": "Here is a concise summary:\n\nThis block displays network connection status, addresses, and balance information. It consists of two sections: \n\n* The first section shows if the user is connected to a network.\n* The second section shows the user's Magic Wallet address and Safe Smart Account address, with options to copy or refresh the data.\n* The third section shows the user's current balance, with an option to refresh the data.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 4, "total_chunks": 5}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the 'src/components/magic/cards/UserInfoCard.tsx' file:\n\n**Summary:** A React component displaying user information, including network connection status, addresses, balances, and refresh/data copy options, fetching data from Magic and Safe clients with periodic updates."}
{"code": "      <div className=\"flex flex-col gap-2\">\n        <div className=\"code\">\n          Magic Balance: {magicBalance.substring(0, 7)} {getNetworkToken()}\n        </div>\n        <div className=\"code\">\n          Safe Smart Account Balance: {safeBalance.substring(0, 7)}{\" \"}\n          {getNetworkToken()}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n", "explanation": "This block displays two balances:\n\n* Magic Balance\n* Safe Smart Account Balance\n\nBoth are truncated to show only the first 7 digits, followed by the network token symbol.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/UserInfoCard.tsx", "chunk_number": 5, "total_chunks": 5}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the 'src/components/magic/cards/UserInfoCard.tsx' file:\n\n**Summary:** A React component displaying user information, including network connection status, addresses, balances, and refresh/data copy options, fetching data from Magic and Safe clients with periodic updates."}
{"code": "import React, { useState } from 'react';\nimport Disconnect from '../wallet-methods/Disconnect';\nimport GetIdToken from '../wallet-methods/GetIdToken';\nimport GetMetadata from '../wallet-methods/GetMetadata';\nimport Divider from '@/components/ui/Divider';\nimport { LoginProps } from '@/utils/types';\nimport Card from '@/components/ui/Card';\nimport CardHeader from '@/components/ui/CardHeader';\nimport { LoginMethod } from '@/utils/common';\n\nimport UpdateEmail from '../wallet-methods/UpdateEmail'\n\nconst WalletMethods = ({ token, setToken }: LoginProps) => {\n  const [loginMethod, setLoginMethod] = useState<LoginMethod | null>(\n    localStorage.getItem('loginMethod') as LoginMethod,\n  );\n  return (\n    <Card>\n      <CardHeader id=\"methods\">User Methods</CardHeader>\n\n      {loginMethod && loginMethod == 'EMAIL' && (\n        <>\n          <UpdateEmail />\n          <Divider />\n        </>\n      )}\n      <GetIdToken />\n      <Divider />\n      <GetMetadata />\n      <Divider />", "explanation": "**Summary:**\n\nThis block is a React component named `WalletMethods` that displays user methods for managing their wallet, including updating email, getting ID token, and getting metadata. It uses state to store the current login method and conditionally renders these components based on that method.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise holistic summary of the file 'src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Summary:** The WalletMethodsCard component displays wallet management options (update email, get ID token, get metadata) based on user login method and includes a disconnect feature for logging out."}
{"code": "      <Disconnect token={token} setToken={setToken} />\n    </Card>\n  );\n};\n\nexport default WalletMethods;\n", "explanation": "This block is a React component called `WalletMethods` that renders a `<Disconnect>` element, which likely handles user logout or disconnection functionality when triggered.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/cards/WalletMethodsCard.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise holistic summary of the file 'src/components/magic/cards/WalletMethodsCard.tsx':\n\n**Summary:** The WalletMethodsCard component displays wallet management options (update email, get ID token, get metadata) based on user login method and includes a disconnect feature for logging out."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { logout } from '@/utils/common';\nimport { LoginProps } from '@/utils/types';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst Disconnect = ({ setToken }: LoginProps) => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const disconnect = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      await logout(setToken, magic);\n      setDisabled(false);\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic, setToken]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={disconnect} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[115px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'disconnect()'\n        )}\n      </button>", "explanation": "**Summary**\n\nThis block is a React component that facilitates user disconnection from a Magic wallet. It uses the `logout` function to disconnect, displays a loading animation while processing, and disables the button during this time.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\n`Disconnect.tsx`: A React component facilitating disconnection from a Magic wallet via logout, displaying a loading animation during processing."}
{"code": "      <div className=\"wallet-method-desc\">Disconnects user from dApp.</div>\n    </div>\n  );\n};\n\nexport default Disconnect;\n", "explanation": "This block is a React component named \"Disconnect\" that displays a description of disconnecting a user from a decentralized application (dApp).", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/Disconnect.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\n`Disconnect.tsx`: A React component facilitating disconnection from a Magic wallet via logout, displaying a loading animation during processing."}
{"code": "import React, { useCallback, useState } from 'react';\nimport { useMagic } from '../MagicProvider';\nimport showToast from '@/utils/showToast';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetIdToken = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getWalletType = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const idToken = await magic.user.getIdToken();\n      setDisabled(false);\n      console.log('ID Token: ' + idToken);\n      showToast({\n        message: 'Please check console for the ID Token Log',\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getWalletType} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[86px]\">\n            <Spinner />\n          </div>\n        ) : (", "explanation": "**Summary:**\n\nThis React component, `GetIdToken`, retrieves an ID token from a user's wallet using the Magic provider. It displays a loading animation while fetching the token and shows a success message in the console upon completion. The button is disabled during the fetch process.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/wallet-methods/GetIdToken.tsx':\n\n\" Retrieves an ID token from user's wallet using Magic provider, displaying a loading animation and success message in console.\""}
{"code": "          'getIdToken()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Generates a Decentralized Id Token which acts as a proof of authentication to resource servers.\n      </div>\n    </div>\n  );\n};\n\nexport default GetIdToken;\n", "explanation": "Here is a concise summary:\n\nThis block generates an authentication token (`getIdToken()`) for proof of identity.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/GetIdToken.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'src/components/magic/wallet-methods/GetIdToken.tsx':\n\n\" Retrieves an ID token from user's wallet using Magic provider, displaying a loading animation and success message in console.\""}
{"code": "import React, { useCallback, useState } from 'react';\nimport showToast from '@/utils/showToast';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\n\nconst GetMetadata = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n\n  const getMetadata = useCallback(async () => {\n    if (!magic) return;\n    try {\n      setDisabled(true);\n      const userInfo = await magic.user.getInfo();\n      setDisabled(false);\n      showToast({\n        message: `Public Address: ${userInfo.publicAddress}`,\n        type: 'success',\n      });\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n    }\n  }, [magic]);\n\n  return (\n    <div className=\"wallet-method-container\">\n      <button className=\"wallet-method\" onClick={getMetadata} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[220px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'getInfo()'\n        )}\n      </button>", "explanation": "Here is a concise summary:\n\n**GetMetadata Block**\n\nFunctionality: Retrieves user metadata from Magic API, displaying public address in a toast notification.\n\nPurpose: Provides a button to fetch user information when clicked, with a spinner animation while loading.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/wallet-methods/GetMetadata.tsx':\n\n**GetMetadata Component**\n\nRetrieves user metadata from Magic API, displaying public address in a toast notification upon button click, with loading spinner animation."}
{"code": "      <div className=\"wallet-method-desc\">Retrieves information for the authenticated user.</div>\n    </div>\n  );\n};\n\nexport default GetMetadata;\n", "explanation": "This block retrieves metadata information for an authenticated user.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/GetMetadata.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise holistic summary of the file 'src/components/magic/wallet-methods/GetMetadata.tsx':\n\n**GetMetadata Component**\n\nRetrieves user metadata from Magic API, displaying public address in a toast notification upon button click, with loading spinner animation."}
{"code": "import React, { useCallback, useState } from 'react';\nimport ErrorText from '@/components/ui/ErrorText';\nimport Spacer from '@/components/ui/Spacer';\nimport { useMagic } from '../MagicProvider';\nimport Spinner from '@/components/ui/Spinner';\nimport FormInput from '@/components/ui/FormInput';\nimport showToast from '@/utils/showToast';\nimport { RPCError } from 'magic-sdk';\n\nconst UpdateEmail = () => {\n  const { magic } = useMagic();\n  const [disabled, setDisabled] = useState(false);\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n\n  const updateEmail = useCallback(async () => {\n    if (!magic) return;\n    try {\n      if (!email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\n        setEmailError(true);\n        setDisabled(false);\n      } else {\n        setDisabled(true);\n        await magic.auth.updateEmailWithUI({ email, showUI: true });\n        showToast({ message: 'Email Updated!', type: 'success' });", "explanation": "**Purpose:** Update user's email address using the Magic provider.\n\n**Functionality:**\n\n1. Collects new email input from user.\n2. Validates email format (checks for correct syntax).\n3. If valid, enables update button, sends request to update email with Magic provider, and displays success toast message upon completion.\n4. Displays error message if email is invalid.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 1, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\nThis component updates a user's email address by collecting a new email input, validating its format, and sending a request to update it via the Magic provider, with success or error messages displayed accordingly."}
{"code": "        setDisabled(false);\n        setEmail('');\n      }\n    } catch (error) {\n      setDisabled(false);\n      console.error(error);\n      if (error instanceof RPCError) {\n        showToast({ message: error.message, type: 'error' });\n      } else {\n        showToast({ message: 'Update email failed', type: 'error' });\n      }\n    }\n  }, [magic, email]);\n\n  const handleEmailChange = (e: any) => {\n    setEmailError(false);\n    setEmail(e.target.value);\n  };\n\n  return (\n    <div className=\"wallet-method-container\">\n      <FormInput value={email} onChange={handleEmailChange} placeholder=\"New Email\" />\n      <button className=\"wallet-method\" onClick={updateEmail} disabled={disabled}>\n        {disabled ? (\n          <div className=\"loading-container w-[76px]\">\n            <Spinner />\n          </div>\n        ) : (\n          'updateEmail()'\n        )}\n      </button>\n      <div className=\"wallet-method-desc\">\n        Initiates the update email flow that allows a user to change their email address.\n      </div>", "explanation": "Here is a concise summary:\n\nThis block updates a user's email address in two steps: \n\n1. A form input field is provided for users to enter a new email.\n2. A \"updateEmail\" button triggers an API call to change the email address, displaying a loading animation or a success/failure message accordingly.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 2, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\nThis component updates a user's email address by collecting a new email input, validating its format, and sending a request to update it via the Magic provider, with success or error messages displayed accordingly."}
{"code": "      {emailError ? (\n        <div className=\"mb-[-10px]\">\n          <Spacer size={20} />\n          <ErrorText>Enter a valid email!</ErrorText>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UpdateEmail;\n", "explanation": "This block is used to display an error message when a user enters an invalid email address, providing a prompt to enter a valid one.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/magic/wallet-methods/UpdateEmail.tsx", "chunk_number": 3, "total_chunks": 3}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\nThis component updates a user's email address by collecting a new email input, validating its format, and sending a request to update it via the Magic provider, with success or error messages displayed accordingly."}
{"code": "import { useEffect, useCallback, useState } from \"react\";\nimport { useMagic } from \"../magic/MagicProvider\";\nimport { providerToSmartAccountSigner } from \"permissionless\";\nimport { Safe4337Pack } from \"@safe-global/relay-kit\";\n\nexport const useSafeProvider = () => {\n  const { magic, publicClient } = useMagic();\n  const [smartClient, setSmartClient] =\n    useState<Safe4337Pack>();\n  const connectToSmartContractAccount = useCallback(async () => {\n    if (!magic || !publicClient) return;\n\n    const pimlicoKey = `https://api.pimlico.io/v2/sepolia/rpc?apikey=${process.env.NEXT_PUBLIC_PIMLICO_API_KEY}`\n    const magicProvider = await magic.wallet.getProvider();\n    const userInfo = await magic.user.getInfo();\n    const smartAccountSigner =\n      await providerToSmartAccountSigner(magicProvider);\n\n    const safe4337Pack = await Safe4337Pack.init({\n      provider: magicProvider,\n      signer: smartAccountSigner.publicKey,\n      bundlerUrl: pimlicoKey,\n      paymasterOptions: {\n        isSponsored: true,", "explanation": "Here's a concise summary:\n\n**Purpose:** `useSafeProvider` hook connects to Safe Smart Contract account on Pimlico blockchain.\n\n**Functionality:** It initializes Safe4337Pack with provider, signer, bundler URL, and paymaster options, allowing for wallet connectivity and smart contract interactions.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/safe/useSafeProvider.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/safe/useSafeProvider.tsx':\n\n**Purpose:** Establishes a connection to a user's Safe Smart Contract account on Pimlico blockchain.\n\n**Functionality:** Configures a Safe4337Pack object with provider, signer, and bundler settings, enabling wallet connectivity and smart contract interactions."}
{"code": "        paymasterUrl: pimlicoKey,\n        paymasterAddress: '0x0000000000325602a77416A16136FDafd04b299f', // Sepolia paymaster address\n        paymasterTokenAddress: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238' // Sepolia token address\n      },\n      options: {\n        owners: [userInfo.publicAddress ?? \"\"],\n        threshold: 1\n      },\n    })\n\n    setSmartClient(safe4337Pack);\n  }, [magic, publicClient]);\n\n  useEffect(() => {\n    if (magic?.user.isLoggedIn) {\n      connectToSmartContractAccount();\n    }\n  }, [magic?.user.isLoggedIn, connectToSmartContractAccount]);\n\n  return {\n    smartClient,\n  };\n};", "explanation": "Here is a concise summary:\n\nThis block sets up and configures a Smart Contract using a Safe4337Pack object, connecting it to a user's account if they are logged in.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/safe/useSafeProvider.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/components/safe/useSafeProvider.tsx':\n\n**Purpose:** Establishes a connection to a user's Safe Smart Contract account on Pimlico blockchain.\n\n**Functionality:** Configures a Safe4337Pack object with provider, signer, and bundler settings, enabling wallet connectivity and smart contract interactions."}
{"code": "import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Card = ({ children }: Props) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n", "explanation": "Here is a concise summary:\n\nThis block defines a reusable React component called \"Card\". It takes in child elements as a prop and renders them within a `<div>` with the class \"card\".", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/Card.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise and holistic summary of the file 'src/components/ui/Card.tsx':\n\n\"The Card component is a reusable UI element that wraps its child content within a <div> with the class 'card', allowing for flexible rendering of diverse content.\""}
{"code": "import React from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  id: string\n}\n\nconst CardHeader = ({ children, id }: Props) => {\n  return (\n    <h1 className=\"card-header\" id={id}>\n      {children}\n    </h1>\n  )\n}\n\nexport default CardHeader\n", "explanation": "**Summary:** A React component that renders a card header element with customizable ID and content.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/CardHeader.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\n`CardHeader.tsx`: A customizable React component rendering a card header element with an assignable ID and dynamic content."}
{"code": "import React from 'react';\n\ninterface Props {\n  leftHeader?: React.ReactNode;\n  rightAction?: React.ReactNode;\n  isDisconnect?: boolean;\n  [rest: string]: any;\n}\n\nconst CardLabel = ({ leftHeader, rightAction, isDisconnect, ...rest }: Props) => {\n  return (\n    <div className=\"card-label-container\" {...rest}>\n      <div className=\"card-label\">{leftHeader}</div>\n      {rightAction ? (\n        <div className={`card-label ${isDisconnect ? 'disconnect-button' : 'action-button'}`}>{rightAction}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardLabel;\n", "explanation": "**Summary:**\n\nA reusable React component, `CardLabel`, that displays a header on the left and an optional action/button on the right with a conditional class name for disconnection.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/CardLabel.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\n`CardLabel.tsx`: A reusable React component displaying a header (left) and optional action/button (right) with conditional styling for disconnection."}
{"code": "import React from 'react'\n\nconst Divider = () => {\n  return <div className='divider' />\n}\n\nexport default Divider\n", "explanation": "**Summary:**\n\nThis block is a reusable React component named \"Divider\". It returns a simple HTML `<div>` element with a class of \"divider\", likely used to create a visual separation or divider in an application's UI.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/Divider.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\n`src/components/ui/Divider.tsx`: A reusable React component that renders a basic `<div>` element with a \"divider\" class, used for visual separation in UI."}
{"code": "import React from 'react'\n\nconst ErrorText = ({children}: any) => {\n  return <div className='error'>{children}</div>\n}\n\nexport default ErrorText\n", "explanation": "**Purpose:** A reusable React component for displaying error text.\n\n**Functionality:** Wraps input text in a `<div>` with class 'error' for styling.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/ErrorText.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and holistic summary of the file 'src/components/ui/ErrorText.tsx':\n\n\"A reusable React component that displays error text by wrapping it in a styled div with class 'error'.\""}
{"code": "import React from 'react'\n\ninterface Props {\n\tchildren: React.ReactNode\n\tonClick: () => void\n\tdisabled: boolean\n}\n\nconst FormButton = ({children, onClick, disabled}: Props) => {\n  return (\n    <button className='form-button' disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n\nexport default FormButton\n", "explanation": "**Purpose:** A reusable React button component for forms.\n\n**Functionality:** Displays a customizable button with click event handler, disabled state, and children content.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/FormButton.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise and to-the-point summary:\n\n`FormButton.tsx`: A reusable React button component for forms that can be customized with a click event handler, disabled state, and child content."}
{"code": "import React from 'react'\n\ninterface Props {\n\tvalue: string\n\tonChange: (e: any) => void\n\tplaceholder: string\n}\n\nconst FormInput = ({value, onChange, placeholder}: Props) => {\n  return (\n    <input\n      className='form-input'\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default FormInput\n", "explanation": "**Summary:**\n\nThis is a React component named `FormInput` that renders an input field with customizable properties:\n\n* Value: Initial text content of the input (received as a prop)\n* onChange: Event handler for user input changes (received as a prop)\n* Placeholder: Text to display when the input is empty (received as a prop)", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/FormInput.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise summary:\n\n`FormInput`: A customizable React input field with props for value, on-change event handler, and placeholder text."}
{"code": "import React from 'react'\n\nconst Spacer = ({ size }: { size: number }) => {\n  return <div style={{ height: `${size}px` }} />\n}\n\nexport default Spacer\n", "explanation": "This block is a reusable React component called `Spacer`, which takes a `size` prop and returns a `div` element with that specified height, used for spacing purposes in an application.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/Spacer.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'src/components/ui/Spacer.tsx':\n\n\"Reusable Spacer component: A simple React component that creates a div element with customizable height, used for adding spacing in applications.\""}
{"code": "const Spinner = () => (\n  <div className='flex items-center justify-center'>\n    <svg\n      height='12'\n      width='12'\n      aria-hidden='true'\n      className='w-6 h-6 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600'\n      viewBox='0 0 100 101'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z'\n        fill='currentColor'\n      />\n      <path", "explanation": "**Summary:**\n\nThis block is a React functional component named \"Spinner\" that renders a loading animation in the form of a spinning circle icon.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/Spinner.tsx", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise summary:\n\nThe `Spinner` component is a React functional component that renders a spinning circle icon using SVG, indicating a loading or processing state."}
{"code": "        d='M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z'\n        fill='currentFill'\n      />\n    </svg>\n  </div>\n)\n\nexport default Spinner\n", "explanation": "This block is an SVG icon, specifically a loading/spinner animation, represented by the provided code snippet. Its purpose is to visually indicate that an application or feature is still processing or loading content.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/Spinner.tsx", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise summary:\n\nThe `Spinner` component is a React functional component that renders a spinning circle icon using SVG, indicating a loading or processing state."}
{"code": "import React from 'react';\nimport Image from 'next/image';\nimport Link from 'public/link.svg';\nimport { getBlockExplorer } from '@/utils/network';\n\nconst TransactionHistory = () => {\n  const publicAddress = localStorage.getItem('user');\n\n  return (\n    <a className=\"action-button\" href={getBlockExplorer(publicAddress as string)} target=\"_blank\" rel=\"noreferrer\">\n      <div className=\"flex items-center justify-center\">\n        Transaction History <Image src={Link} alt=\"link-icon\" className=\"ml-[3px]\" />\n      </div>\n    </a>\n  );\n};\n\nexport default TransactionHistory;\n", "explanation": "**Summary:**\n\nThis is a React component named `TransactionHistory`. It fetches the user's public address from local storage, generates a link to a block explorer using the `getBlockExplorer` utility function, and displays a button with an icon that links to this page when clicked.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/components/ui/TransactionHistory.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\nThe `TransactionHistory` component fetches the user's public address from local storage, generates a link to a block explorer, and displays a navigable button with an icon to access transaction history."}
{"code": "import '@/styles/globals.css'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n}\n", "explanation": "**Summary:**\n\nThis is a Next.js application entry point that renders the main component of the app with given props. It imports global CSS styles and passes page-specific data to the rendered component.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/pages/_app.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise holistic summary:\n\n\"The `src/pages/_app.tsx` file serves as the entry point for the Next.js application, rendering the main app component with passed props and imported global CSS styles.\""}
{"code": "import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n", "explanation": "**Purpose:** Defines the HTML document structure for a Next.js application.\n\n**Functionality:** A basic template that sets up an HTML document with a `Head` section, `Main` content, and a `NextScript` tag, allowing for correct rendering of pages within the app.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/pages/_document.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\nDefines the HTML structure for a Next.js application, including a basic template with Head and Main sections, along with a NextScript tag for correct page rendering."}
{"code": "import MagicProvider from '../components/magic/MagicProvider';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from '@/components/magic/Login';\nimport Dashboard from '@/components/magic/Dashboard';\nimport MagicDashboardRedirect from '@/components/magic/MagicDashboardRedirect';\n\nexport default function Home() {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    setToken(localStorage.getItem('token') ?? '');\n  }, [setToken]);\n\n  return (\n    <MagicProvider>\n      <ToastContainer />\n      {process.env.NEXT_PUBLIC_MAGIC_API_KEY ? (\n        token.length > 0 ? (\n          <Dashboard token={token} setToken={setToken} />\n        ) : (\n          <Login token={token} setToken={setToken} />\n        )\n      ) : (\n        <MagicDashboardRedirect />\n      )}\n    </MagicProvider>\n  );\n}\n", "explanation": "**Summary**\n\nThis block is a React component (`Home`) that conditionally renders either a login form or a dashboard, based on the presence of an authentication token in local storage and the availability of a Magic API key.\n\n**Key Functionality:**\n\n* Uses `useState` to store an authentication token\n* Retrieves token from local storage using `useEffect`\n* Conditionally renders:\n\t+ Login form if no token is present or Magic API key is not available\n\t+ Dashboard if token is present and Magic API key is available", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/pages/index.tsx", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a holistic summary of the file 'src/pages/index.tsx':\n\nThis React component (`Home`) conditionally renders either a login form or dashboard based on authentication token presence in local storage and Magic API key availability."}
{"code": "@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nhtml,\nbody {\n  @apply m-0 p-0 bg-[#f8f8fa] scroll-pt-12;\n  font-family: 'Inter', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nnav > ul > li {\n  @apply text-left list-none text-[#777679] cursor-pointer mb-[15px];\n}\n\nul {\n  @apply w-fit m-0 pl-[30px] pr-0 py-0;\n}\n\n.active {\n  @apply text-[#6851ff] font-semibold;\n}\n\n.active::before {\n  @apply content-['\\2022'] text-[#6851ff] font-[bold] inline-block w-[1em] ml-[-1em];\n}\n\n.nft {\n  @apply text-[#777679];\n}\n\n.nft-name {\n  @apply font-semibold text-black;\n  font-family: 'Inter';\n}\n\n.nft-list {\n  @apply overflow-auto max-h-[270px];\n}\n", "explanation": "Here is a concise summary of the block's purpose and functionality:\n\n**Purpose:** Configures global CSS settings for a web application.\n\n**Functionality:** Defines font styles, color scheme (light/dark), layout rules, and custom component styles using Tailwind CSS utility classes.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 1, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": ".nft:not(:last-child) {\n  @apply mb-2.5;\n}\n\n.cards-container {\n  @apply relative top-[30px] md:top-[-60px] lg:top-[-60px];\n}\n\n@media only screen and (max-width: 767px) {\n  .cards-container {\n    @apply mt-[-89px];\n  }\n}\n\n.network-dropdown {\n  @apply m-auto w-fit rounded-xl;\n}\n\n.active-network {\n  @apply border w-[264px] flex items-center cursor-pointer justify-between m-auto px-4 py-3 rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.active-network::selection {\n  @apply bg-transparent;\n}\n\n.rotate {\n  @apply rotate-180;\n}\n\n.network-options {\n  @apply overflow-hidden w-fit border mx-auto my-[5px] px-0 py-[5px] rounded-xl border-solid border-[#dddbe0] bg-[#fff];\n}\n\n.network-dropdown-option {\n  @apply w-[264px] flex items-center justify-start transition-[0.1s] m-auto px-4 py-3 bg-[#fff];\n}\n\n.network-dropdown-option:hover {\n  @apply text-white cursor-pointer bg-[#6851ff];\n}\n\n.network-dropdown-option:active {\n  @apply opacity-50;\n}\n.magic-logo {\n  @apply mb-[15px] mx-0 text-center;\n}\n.demo-sub-header {", "explanation": "Here is a summary of the block's purpose and functionality:\n\n**CSS Styles**\n\nThis block defines various CSS styles for different HTML elements, including:\n* Spacing and positioning for containers (.cards-container)\n* Layout and styling for dropdown menus (network-dropdown)\n* Active network button styles (active-network)\n* Network options container styles (network-options)\n* Dropdown option styles (network-dropdown-option)\n\nThese styles are applied to specific elements on a web page using classes, and are intended to control the layout and appearance of those elements.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 2, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": "  @apply text-[rgba(255,255,255,0.5)] text-xl font-normal m-0;\n  font-family: monospace;\n}\n\n.home-page {\n  @apply flex flex-col justify-center items-center min-h-screen relative bg-[length:100vw_320px] bg-no-repeat;\n}\n\n.login-page {\n  @apply flex flex-col items-center min-h-screen bg-gray-300;\n}\n.login-method-grid {\n  @apply max-w-[100%] grid-rows-3 gap-5 p-4 mt-8;\n}\n\n.login-method-grid-item-container {\n  @apply flex flex-col items-center justify-center;\n}\n\n.login-button {\n  @apply w-full h-12 text-white font-semibold text-base leading-6 transition-[0.1s] text-center transition-[0.1s] m-auto px-2 py-3 rounded-[300px] border-[none];\n  background: #8271f3;\n}\n\n.login-button:disabled {\n  background: #a799ff;\n}\n\n.login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #a799ff;\n}\n.login-button:active:enabled {\n  @apply opacity-50 cursor-pointer scale-[0.99];\n  background: #a799ff;\n}\n\n.links {", "explanation": "Here is a concise summary of the block:\n\n**CSS Code**\n\nThis code snippet defines various styles for UI components using Tailwind CSS syntax.\n\n**Key Functionality**\n\n* Styles are applied to specific classes (e.g., `.home-page`, `.login-button`) to define layout, typography, and visual properties.\n* Utilities like `@apply` and property shortcuts (e.g., `flex`, `text-white`) are used to simplify styling.\n* Specific effects are applied on hover, active state, or disabled states for elements like buttons.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 3, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": "  @apply flex justify-center mx-auto mt-5 text-sm mb-3 font-semibold text-white;\n}\n.link {\n  @apply transition-[0.1s] px-[30px] py-0;\n}\n\n@media only screen and (max-width: 420px) {\n  .link {\n    @apply px-[15px] py-0;\n  }\n}\n@media only screen and (max-width: 320px) {\n  .link {\n    @apply px-[5px] py-0;\n  }\n}\n\n.link > a {\n  @apply cursor-pointer;\n}\n.link-divider {\n  @apply w-px h-5;\n}\n\n.footer-links {\n  @apply flex items-center absolute w-full mt-[30px] mb-0 mx-auto bottom-10;\n}\n.wallet-method-container {\n  @apply text-left;\n}\n\n.wallet-method {\n  @apply w-fit text-[#522fd4] bg-[#edebff] text-base cursor-pointer font-medium transition-[0.1s] h-8 px-3 py-1.5 rounded-[32px] border-[none];\n  font-family: monospace;\n}\n\n.wallet-method:hover:enabled {\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n  background-blend-mode: color-burn, normal;\n}\n\n.wallet-method:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;", "explanation": "**Summary:** \n\nThis block is a collection of Tailwind CSS classes that define styles for various HTML elements, including:\n\n* A container with flex layout and centered text\n* Links with transition effects and responsive padding\n* A footer links section with absolute positioning and custom styling\n* Wallet method containers and buttons with hover and active states\n\nThe styles are defined using a combination of Tailwind CSS classes and custom values for specific properties.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 4, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": "}\n.wallet-method-desc {\n  @apply text-[#77767a] text-left text-sm mt-2.5;\n}\n\n.form-input {\n  @apply box-border flex flex-row items-center w-full h-12 border text-base leading-6 text-[#18171a] mb-[15px] px-4 py-3 rounded-[10px] border-solid border-[#dddbe0];\n  background: #ffffff;\n}\n\n.form-input::placeholder {\n  color: #77767a;\n}\n\n.form-button {\n  @apply flex flex-row justify-center items-center w-full h-12 text-[#522fd4] font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none] bg-[#edebff];\n}\n\n.form-button:disabled {\n  @apply opacity-50;\n}\n\n.form-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n.form-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #edebff;\n}\n\n.loading-container {\n  @apply w-[50px] text-center flex items-center justify-center cursor-default;\n}\n.loading {\n  @apply cursor-default animate-spin;\n}\n", "explanation": "Here is a concise summary:\n\nThis block defines a set of CSS styles for a payment form, including a description field, input fields, buttons, and loading indicators.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 5, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": "@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.card {\n  @apply w-[344px] flex flex-col shadow-[0px_4px_24px_rgba(49,49,49,0.1)] mt-0 mb-[27px] mx-auto px-6 py-8 rounded-2xl bg-[#ffffff];\n}\n\n.card-header {\n  @apply text-xl font-semibold text-left mt-0 mb-[25px];\n}\n.card-label-container {\n  @apply flex items-center justify-between mb-3;\n}\n\n.card-label {\n  @apply text-sm font-medium cursor-pointer;\n}\n.toast {\n  @apply fixed w-fit text-white font-medium shadow-[4px_8px_20px_rgba(0,0,0,0.15)] mx-auto my-0 px-4 py-2 rounded-[10px] top-[30px] inset-x-0 bg-[#00875f];\n}\n\n.action-button {\n  @apply font-semibold text-[#6851ff] cursor-pointer transition-[0.1s];\n}\n.disconnect-button {\n  @apply font-semibold text-[#d43100] cursor-pointer transition-[0.1s];\n}\n.action-button:hover,\n.disconnect-button:hover {\n  @apply opacity-70;\n}\n.action-button:active,\n.disconnect-button:active {\n  @apply scale-[0.98];\n}\n.code {\n  @apply text-base text-left p-2.5 rounded-[10px];", "explanation": "Here is a concise summary:\n\n**Purpose:** This block defines styles for UI components (cards, labels, buttons) using Tailwind CSS utility classes.\n\n**Functionality:** It sets up animations, layouts, typography, and interactions for various components such as cards, headers, labels, buttons, and toasts.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 6, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": "  font-family: monospace;\n  background: #f8f8fa;\n  word-wrap: break-word;\n}\n.error {\n  @apply self-start text-xs font-semibold text-red-700 justify-self-start;\n}\n.divider {\n  @apply mx-0 my-[15px] border-b-[#ededf3] border-b border-solid;\n}\n.flex-row {\n  @apply flex items-center;\n}\n.green-dot {\n  @apply h-1.5 w-1.5 bg-[#00cc8f] mr-2.5 rounded-[50%];\n}\n.connected {\n  @apply text-base mx-0 my-[5px];\n}\na {\n  all: unset;\n}\n\n.app-header-container {\n  @apply block w-full drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)] min-h-[40%] flex-col gap-2.5 p-8 items-center bg-[url('/login_bg.png')] bg-cover bg-no-repeat pb-20;\n  text-align: -webkit-center;\n}\n\n.redirect-container {\n  @apply flex flex-col items-center h-screen bg-center bg-cover bg-no-repeat bg-[url('/redirect_bg.png')];\n}\n\n.redirect-card {\n  @apply bg-[#F8F8FA] rounded-[10px] shadow-[0px_4px_24px_rgba(49,49,49,0.1)] p-2 m-12;\n}\n\n.social-login-button {", "explanation": "Here is a concise summary of the block:\n\n**Stylesheet**\n\nThis block defines a set of CSS styles for various HTML elements, including text formatting, colors, spacing, and layouts. It also applies specific styles to certain classes (e.g. `.error`, `.connected`) and customizes some HTML tags (e.g. `a`).", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 7, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": "  @apply flex flex-row min-w-[296px] h-12 text-[#3C4043] transition-[0.1s] px-6 py-3 rounded-[300px] bg-[#ffffff] border-2 border-[#DADCE0] relative top-16;\n}\n\n.social-login-button:disabled {\n  @apply opacity-50;\n}\n\n.social-login-button:hover:enabled {\n  @apply cursor-pointer;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n.social-login-button:active:enabled {\n  @apply opacity-50 scale-[0.99];\n  background: linear-gradient(0deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05)), #ffffff;\n}\n\n.api-button {\n  @apply bg-[#6844bc] text-[#FFFFFF] flex w-[280px] justify-center items-center h-12 font-semibold text-base leading-6 transition-[0.1s] px-6 py-3 rounded-[300px] border-[none];\n}\n", "explanation": "This block is a CSS code snippet that styles two types of buttons:\n\n* A \"social-login-button\" with interactive states (enabled, disabled, hover, active)\n* An \"api-button\" with a unique background color and styling.\n\nIt defines visual properties such as colors, typography, layout, and interactions for these button elements.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/styles/globals.css", "chunk_number": 8, "total_chunks": 8}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/styles/globals.css':\n\n**Global Styles**: This file configures global CSS settings using Tailwind CSS utility classes.\n**Purpose**: Defines font styles, color scheme (light/dark), layout rules, and custom component styles.\n**Functionality**: Styles various HTML elements with layouts, typography, colors, spacing, animations, and interactions for UI components."}
{"code": "import { Magic } from './types';\nimport { Dispatch, SetStateAction } from 'react';\n\nexport type LoginMethod = 'EMAIL' | 'SMS' | 'SOCIAL' | 'FORM';\n\nexport const logout = async (setToken: Dispatch<SetStateAction<string>>, magic: Magic | null) => {\n  if (await magic?.user.isLoggedIn()) {\n    await magic?.user.logout();\n  }\n  localStorage.setItem('token', '');\n  localStorage.setItem('user', '');\n  setToken('');\n};\n\nexport const saveUserInfo = (token: string, loginMethod: LoginMethod, userAddress: string) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('isAuthLoading', 'false');\n  localStorage.setItem('loginMethod', loginMethod);\n  localStorage.setItem('user', userAddress);\n};\n", "explanation": "Here is a concise summary:\n\nThis block provides two functions:\n\n1. `logout`: Logs out the current user, clearing local storage and token.\n2. `saveUserInfo`: Saves user information (token, login method, and user address) to local storage.\n\nNote: The functions rely on an external Magic library for authentication functionality.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/common.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/utils/common.ts':\n\nThis utility file provides two essential functions:\n\n1. `logout`: Clears current user's data from local storage.\n2. `saveUserInfo`: Stores user information in local storage.\n\n(Note: Dependent on Magic library for authentication functionality.)"}
{"code": "export enum Network {\n  POLYGON_AMOY = 'polygon-amoy',\n  POLYGON = 'polygon',\n  ETHEREUM_SEPOLIA = 'ethereum-sepolia',\n  ETHEREUM = 'ethereum',\n  ETHERLINK_TESTNET = 'etherlink-testnet',\n  ZKSYNC = 'zksync',\n  ZKSYNC_SEPOLIA = 'zksync-sepolia',\n}\n\nexport const getNetworkUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'https://polygon-rpc.com/';\n    case Network.POLYGON_AMOY:\n      return 'https://rpc-amoy.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'https://eth-sepolia.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    case Network.ETHEREUM:\n      return 'https://eth-mainnet.g.alchemy.com/v2/fYFybLQFR9Zr2GCRcgALmAktStFKr0i0';\n    case Network.ETHERLINK_TESTNET:\n      return 'https://node.ghostnet.etherlink.com';\n    case Network.ZKSYNC:\n      return 'https://mainnet.era.zksync.io';\n    case Network.ZKSYNC_SEPOLIA:\n      return 'https://sepolia.era.zksync.dev';\n    default:\n      throw new Error('Network not supported');", "explanation": "**Summary:**\n\nThis block defines an enumeration of blockchain networks (`Network`) and a function `getNetworkUrl` that returns the corresponding RPC URL for each network based on the environment variable `NEXT_PUBLIC_BLOCKCHAIN_NETWORK`.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/network.ts", "chunk_number": 1, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/utils/network.ts':\n\n**Summary:**\nThis block defines functions that retrieve information about the blockchain network being used, including chain ID, native token, faucet URL, block explorer URL, and EIP-1559 support status, all based on environment variables."}
{"code": "  }\n};\n\nexport const getChainId = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 137;\n    case Network.POLYGON_AMOY:\n      return 80002;\n    case Network.ETHEREUM_SEPOLIA:\n      return 11155111;\n    case Network.ZKSYNC:\n      return 324;\n    case Network.ZKSYNC_SEPOLIA:\n      return 300;\n    case Network.ETHEREUM:\n      return 1;\n    case Network.ETHERLINK_TESTNET:\n      return 128123;\n  }\n};\n\nexport const getNetworkToken = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n    case Network.POLYGON:\n      return 'MATIC';\n    case Network.ETHEREUM:\n    case Network.ETHEREUM_SEPOLIA:\n    case Network.ZKSYNC:\n    case Network.ZKSYNC_SEPOLIA:\n      return 'ETH';\n    case Network.ETHERLINK_TESTNET:\n      return 'XTZ';\n  }\n};\n\nexport const getFaucetUrl = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON_AMOY:\n      return 'https://faucet.polygon.technology/';\n    case Network.ETHEREUM_SEPOLIA:", "explanation": "Here is a concise summary:\n\nThis block defines three functions that retrieve information about the blockchain network being used:\n\n* `getChainId`: returns the chain ID based on the specified network (e.g., Ethereum, Polygon, etc.)\n* `getNetworkToken`: returns the native token of the blockchain network (e.g., ETH, MATIC, XTZ)\n* `getFaucetUrl`: returns the URL for a faucet (testnet) service specific to the blockchain network\n\nThese functions use environment variables to determine which values to return.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/network.ts", "chunk_number": 2, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/utils/network.ts':\n\n**Summary:**\nThis block defines functions that retrieve information about the blockchain network being used, including chain ID, native token, faucet URL, block explorer URL, and EIP-1559 support status, all based on environment variables."}
{"code": "      return 'https://sepoliafaucet.com/';\n    case Network.ETHERLINK_TESTNET:\n      return 'https://faucet.etherlink.com/';\n    case Network.ZKSYNC_SEPOLIA:\n      return 'https://faucet.quicknode.com/ethereum/sepolia';\n  }\n};\n\nexport const getNetworkName = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return 'Polygon (Mainnet)';\n    case Network.POLYGON_AMOY:\n      return 'Polygon (Amoy)';\n    case Network.ETHEREUM_SEPOLIA:\n      return 'Ethereum (Sepolia)';\n    case Network.ETHEREUM:\n      return 'Ethereum (Mainnet)';\n    case Network.ETHERLINK_TESTNET:\n      return 'Etherlink (Testnet)';\n    case Network.ZKSYNC:\n      return 'zkSync (Mainnet)';\n    case Network.ZKSYNC_SEPOLIA:\n      return 'zkSync (Sepolia)';\n  }\n};\n\nexport const getBlockExplorer = (address: string) => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n      return `https://polygonscan.com/address/${address}`;\n    case Network.POLYGON_AMOY:", "explanation": "Here is a summary of the purpose and functionality:\n\n**Purpose:** Returns network-related information (faucet URL, explorer URL) based on environment variable.\n\n**Functionality:** Two functions are exported:\n\n1. `getBlockExplorer`: Returns block explorer URL for a given address, depending on the blockchain network.\n2. `getNetworkName`: Returns human-readable name of the blockchain network, also based on environment variable.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/network.ts", "chunk_number": 3, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/utils/network.ts':\n\n**Summary:**\nThis block defines functions that retrieve information about the blockchain network being used, including chain ID, native token, faucet URL, block explorer URL, and EIP-1559 support status, all based on environment variables."}
{"code": "      return `https://www.oklink.com/amoy/address/${address}`;\n    case Network.ETHEREUM:\n      return `https://etherscan.io/address/${address}`;\n    case Network.ETHEREUM_SEPOLIA:\n      return `https://sepolia.etherscan.io/address/${address}`;\n    case Network.ETHERLINK_TESTNET:\n      return `https://testnet-explorer.etherlink.com//address/${address}`;\n    case Network.ZKSYNC:\n      return `https://explorer.zksync.io/address/${address}`;\n    case Network.ZKSYNC_SEPOLIA:\n      return `https://sepolia.explorer.zksync.io/address/${address}`;\n  }\n};\n\nexport const isEip1559Supported = () => {\n  switch (process.env.NEXT_PUBLIC_BLOCKCHAIN_NETWORK) {\n    case Network.POLYGON:\n    case Network.POLYGON_AMOY:\n    case Network.ETHEREUM_SEPOLIA:\n    case Network.ETHEREUM:\n    case Network.ZKSYNC:\n    case Network.ZKSYNC_SEPOLIA:\n      return true;\n    case Network.ETHERLINK_TESTNET:\n      return false;\n  }\n};\n", "explanation": "Here is a concise summary:\n\n**Block Purpose:** Returns a link to an explorer website for a given blockchain address.\n\n**Functionality:** A switch statement that generates links based on the specified blockchain network, returning the relevant explorer URL. \n\n**Additional Functionality:** Checks if EIP-1559 (a transaction standard) is supported on specific networks using another switch statement.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/network.ts", "chunk_number": 4, "total_chunks": 4}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/utils/network.ts':\n\n**Summary:**\nThis block defines functions that retrieve information about the blockchain network being used, including chain ID, native token, faucet URL, block explorer URL, and EIP-1559 support status, all based on environment variables."}
{"code": "import { toast } from 'react-toastify'\nconst showToast = ({\n  message,\n  type = 'default',\n}: {\n  message: string\n  type: 'success' | 'error' | 'info' | 'default' | 'warning'\n}) => {\n  switch (type) {\n  case 'default':\n    toast(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'info':\n    toast.info(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'success':\n    toast.success(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'warning':\n    toast.warn(message, {", "explanation": "Here is a concise summary:\n\n**Purpose:** Display a customizable toast notification.\n\n**Functionality:** The `showToast` function takes a message and type as input, then uses the `react-toastify` library to display a toast notification with a specified theme, duration, and behavior (e.g. close on click).", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/showToast.ts", "chunk_number": 1, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/utils/showToast.ts':\n\n**Displays a customizable toast notification with various themes, duration options, and close behavior.**"}
{"code": "      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  case 'error':\n    toast.error(message, {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    })\n    break\n  }\n}\n\nexport default showToast\n", "explanation": "This code defines a function called `showToast` that displays a toast notification with customizable options.\n\nFunctionality:\n\n* Displays a message at the top-center of the screen\n* Closes automatically after 3 seconds (or when clicked)\n* Allows closing on click, hovering, or dragging\n* Supports different themes and progress bars.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/showToast.ts", "chunk_number": 2, "total_chunks": 2}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the file 'src/utils/showToast.ts':\n\n**Displays a customizable toast notification with various themes, duration options, and close behavior.**"}
{"code": "import { Dispatch, SetStateAction } from 'react'\n\nexport type LoginProps = {\n  token: string\n  setToken: Dispatch<SetStateAction<string>>\n}\n\nexport type { Magic } from '../components/magic/MagicProvider'\n", "explanation": "Here is a concise summary:\n\nThis block defines two types: `LoginProps` and imports `Magic` from another file. `LoginProps` has two properties: `token` (a string) and `setToken` (a function that updates the token). The purpose appears to be related to handling login functionality, possibly with authentication tokens.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "src/utils/types.ts", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary:\n\nThe `src/utils/types.ts` file defines a single type, `LoginProps`, which consists of a string `token` and an updating function `setToken`. It also imports the `Magic` type from another file for authentication purposes."}
{"code": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      backgroundImage: {\n        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',\n        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',\n      },\n    },\n  },\n  plugins: [],\n};\n", "explanation": "This block is a configuration file for Tailwind CSS, specifying:\n\n* Where to scan for content (in this case, HTML files in specific directories)\n* Customized theme settings with additional background image gradients\n* No plugins are enabled", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "tailwind.config.js", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here is a concise summary of the `tailwind.config.js` file:\n\n\"Configures Tailwind CSS to scan specific directories for HTML content, defines custom theme settings with background image gradients, and disables all plugins.\""}
{"code": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\"],\n  \"exclude\": [\"node_modules\"]\n}\n", "explanation": "This block is a configuration object for a TypeScript compiler, specifying options such as target environment, module system, and file resolution rules. It defines how the compiler should process files in a project.", "metadata": {"repo": "magiclabs/example-safe-account-abstraction", "file": "tsconfig.json", "chunk_number": 1, "total_chunks": 1}, "repository_explanation": "This is a GitHub repository named \"magiclabs/example-safe-account-abstraction\". A brief summary would be:\n\n**Purpose:** Demonstrates safe account abstraction practices.\n\n**Content:** Example code showcasing secure account management principles.", "file_summary": "Here's a concise summary:\n\n**tsconfig.json**: A TypeScript configuration file that specifies compiler settings for a project, including target environment, module system, and file resolution rules."}
